//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 1/6/2021 5:57:49 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Reflection;
using System.Linq.Expressions;
using System.Data.EntityClient;
using System.Data.Metadata.Edm;
using System.Data.Objects;
using System.Data.Objects.DataClasses;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "WorkOrder_WorkOrderDetails", "WorkOrder", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.WorkOrder), "Details", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.WorkOrderDetails), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "Route_RouteDetails", "Route", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.Route), "Details", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.RouteDetail), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "Route_WorkOrder", "Route", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.Route), "WorkOrders", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.WorkOrder), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "RouteDetails_WorkOrderDetails", "RouteDetails", RelationshipMultiplicity.ZeroOrOne, typeof(Net4Sage.DataAccessModel.RouteDetail), "WorkOrderDetails", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.WorkOrderDetails), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "WorkOrder_WorkOrderProd", "WorkOrder", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.WorkOrder), "WorkOrderProds", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.WorkOrderProd), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "Warehouse_WhseBin", "Warehouse", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.Warehouse), "WhseBins", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.WhseBin), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "Warehouse_InvtTran", "Warehouse", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.Warehouse), "InvtTrans", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.InvtTran), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "InvtTran_InvtTranDist", "InvtTran", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.InvtTran), "InvtTranDists", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.InvtTranDist), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "InvtLot_InvtLotBin", "InvtLot", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.InvtLot), "InvtLotBins", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.InvtLotBin), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "InvtLotBin_InvtTranDist", "InvtLotBin", RelationshipMultiplicity.ZeroOrOne, typeof(Net4Sage.DataAccessModel.InvtLotBin), "InvtTranDists", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.InvtTranDist), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "WhseBin_InvtLotBin", "WhseBin", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.WhseBin), "InvtLotBins", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.InvtLotBin), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "WhseBin_InvtTranDist", "WhseBin", RelationshipMultiplicity.ZeroOrOne, typeof(Net4Sage.DataAccessModel.WhseBin), "InvtTranDists", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.InvtTranDist), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "Warehouse_InvtTranDist", "Warehouse", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.Warehouse), "InvtTranDists", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.InvtTranDist), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "Warehouse_Inventory", "Warehouse", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.Warehouse), "Inventories", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.Inventory), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "Item_Inventory", "Item", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.Item), "Inventories", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.Inventory), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "IMTranType_InvtTran", "IMTranType", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.IMTranType), "InvtTrans", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.InvtTran), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "BatchLog_GLBatch", "BatchLog", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.BatchLog), "GLBatch", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.GLBatch), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "GLBatch_JournalHdr", "GLBatch", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.GLBatch), "Journals", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.JournalHdr), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "JournalHdr_JournalDetl", "Journal", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.JournalHdr), "Details", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.JournalDetail), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "GLAccount_JournalHdr", "GLAccount", RelationshipMultiplicity.ZeroOrOne, typeof(Net4Sage.DataAccessModel.GLAccount), "JournalHdrs", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.JournalHdr), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "GLAccount_JournalDetl", "GLAccount", RelationshipMultiplicity.ZeroOrOne, typeof(Net4Sage.DataAccessModel.GLAccount), "JournalDetls", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.JournalDetail), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "Item_InvtTran", "Item", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.Item), "InvtTrans", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.InvtTran), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "Item_ItemDescription", "Item", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.Item), "Descriptions", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.ItemDescription), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "Currency_JournalHdr", "Currency", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.Currency), "JournalHdrs", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.JournalHdr), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "Journal_JournalHdr", "Journal", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.Journal), "JournalHdrs", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.JournalHdr), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "Journal_JournalLog", "Journal", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.Journal), "JournalLogs", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.JournalLog), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "Currency_Company", "HomeCurrency", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.Currency), "Companies", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.Company), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "Inventory_InvtTran", "Inventory", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.Inventory), "InvtTrans", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.InvtTran), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "GLAccount_Inventory", "InvtGLAccount", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.GLAccount), "Inventories", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.Inventory), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "CustomersClass_Customer", "CustomersClass", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.CustomersClass), "Customers", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.Customer), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "CustomerAddress_Customer", "CustomerAddress", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.CustomerAddress), "Customers", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.Customer), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "SalesTerritory_CustomerAddress", "SalesTerritory", RelationshipMultiplicity.ZeroOrOne, typeof(Net4Sage.DataAccessModel.SalesTerritory), "CustomerAddresses", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.CustomerAddress), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "UnitMeasure_Item", "StockUM", RelationshipMultiplicity.ZeroOrOne, typeof(Net4Sage.DataAccessModel.UnitMeasure), "Items", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.Item), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "Item_ItemUM", "Item", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.Item), "UMs", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.ItemUM), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "UnitMeasure_ItemUM", "UnitMeasure", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.UnitMeasure), "ItemUMs", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.ItemUM), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "FiscalYear_FiscalPeriod", "FiscalYear", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.FiscalYear), "FiscalPeriods", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.FiscalPeriod), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "SalesProductLine_Item", "SalesProductLine", RelationshipMultiplicity.ZeroOrOne, typeof(Net4Sage.DataAccessModel.SalesProductLine), "Items", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.Item), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "ProductCategory_ProductCategoryItem", "ProductCategory", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.ProductCategory), "ProductCategoryItems", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.ProductCategoryItem), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "Item_ProductCategoryItem", "Item", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.Item), "ProductCategoryItems", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.ProductCategoryItem), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "SOLine_SOLineDist", "Line", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.SOLine), "LineDist", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.SOLineDist), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "SalesOrder_SOLine", "SalesOrder", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.SalesOrder), "Lines", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.SOLine), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "SalesPerson_SalesOrder", "SalesPerson", RelationshipMultiplicity.ZeroOrOne, typeof(Net4Sage.DataAccessModel.SalesPerson), "SalesOrders", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.SalesOrder), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "CustomerAddress_Address", "CustomerAddress", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.CustomerAddress), "Address", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.Address), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "Address_Warehouse", "Address", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.Address), "Warehouses", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.Warehouse), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "NationalAccount_NationalAccountLevel", "NationalAccount", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.NationalAccount), "NationalAccountLevels", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.NationalAccountLevel), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "NationalAccountLevel_Customer", "NationalAccountLevel", RelationshipMultiplicity.ZeroOrOne, typeof(Net4Sage.DataAccessModel.NationalAccountLevel), "Customers", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.Customer), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "SalesPerson_CustomerAddress", "SalesPerson", RelationshipMultiplicity.ZeroOrOne, typeof(Net4Sage.DataAccessModel.SalesPerson), "CustomerAddresses", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.CustomerAddress), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "Segment_AcctSegment", "Segment", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.Segment), "AcctSegments", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.AcctSegment), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "GLAccount_AcctSegment", "GLAccount", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.GLAccount), "AcctSegments", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.AcctSegment), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "Segment_SegmentCode", "Segment", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.Segment), "SegmentCodes", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.SegmentCode), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "GLAccount_AcctHist", "GLAccount", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.GLAccount), "AcctHists", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.AcctHist), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "GLAccount_Budget", "GLAccount", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.GLAccount), "Budgets", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.Budget), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "CommodityCode_Item", "CommodityCode", RelationshipMultiplicity.ZeroOrOne, typeof(Net4Sage.DataAccessModel.CommodityCode), "Items", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.Item), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "RcvrLine_RcvrLineDist", "RcvrLine", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.RcvrLine), "RcvrLineDists", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.RcvrLineDist), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "Item_RcvrLine", "Item", RelationshipMultiplicity.ZeroOrOne, typeof(Net4Sage.DataAccessModel.Item), "RcvrLines", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.RcvrLine), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "InvtTran_RcvrLine", "InvtTran", RelationshipMultiplicity.ZeroOrOne, typeof(Net4Sage.DataAccessModel.InvtTran), "RcvrLines", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.RcvrLine), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "Voucher_VoucherAppl", "Voucher", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.Voucher), "VoucherAppls", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.VoucherAppl), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "Voucher_VoucherAppl1", "FromVoucher", RelationshipMultiplicity.ZeroOrOne, typeof(Net4Sage.DataAccessModel.Voucher), "VoucherAppls1", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.VoucherAppl), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "VendPmt_VoucherAppl", "FromVendPmt", RelationshipMultiplicity.ZeroOrOne, typeof(Net4Sage.DataAccessModel.VendPmt), "VoucherAppls", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.VoucherAppl), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "Vendor_Voucher", "Vendor", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.Vendor), "Vouchers", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.Voucher), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "VendorClass_Voucher", "VendorClass", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.VendorClass), "Vouchers", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.Voucher), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "VendorClass_VendPmt", "VendorClass", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.VendorClass), "VendPmts", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.VendPmt), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "GLAccount_VendorClass", "PayableAcct", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.GLAccount), "VendorClasses", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.VendorClass), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "CustomerPmt_InvoiceAppl", "FromCustomerPmt", RelationshipMultiplicity.ZeroOrOne, typeof(Net4Sage.DataAccessModel.CustomerPayment), "InvoiceAppls", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.InvoiceAppl), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "Customer_Invoice", "Customer", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.Customer), "Invoices", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.Invoice), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "Customer_CustomerPmt", "Customer", RelationshipMultiplicity.ZeroOrOne, typeof(Net4Sage.DataAccessModel.Customer), "CustomerPmts", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.CustomerPayment), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "CustomersClass_CustomerPmt", "CustomersClass", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.CustomersClass), "CustomerPmts", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.CustomerPayment), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "CustomersClass_Invoice", "CustomersClass", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.CustomersClass), "Invoices", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.Invoice), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "GLAccount_CustomersClass", "RecAcct", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.GLAccount), "CustomersClasses", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.CustomersClass), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "GLAccount_GLTransaction", "GLAccount", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.GLAccount), "GLTransactions", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.GLTransaction), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "CustomForm_CustomFormDetl", "CustomForm", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.CustomForm), "CustomFormDetls", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.CustomFormDetl), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "Task_CustomForm", "Task", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.Task), "CustomForms", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.CustomForm), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "Customer_SalesOrder", "Customer", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.Customer), "SalesOrders", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.SalesOrder), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "ShipLine_ShipLineDist", "ShipLine", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.ShipLine), "ShipLineDists", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.ShipLineDist), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "ShipmentLog_ShipLine", "ShipmentLog", RelationshipMultiplicity.ZeroOrOne, typeof(Net4Sage.DataAccessModel.ShipmentLog), "ShipLines", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.ShipLine), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "ShipmentLog_Shipment", "ShipmentLog", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.ShipmentLog), "Shipment", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.Shipment), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "ShipmentLog_PendShipment", "ShipmentLog", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.ShipmentLog), "PendShipment", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.PendShipment), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "SOLine_ShipLine", "SOLine", RelationshipMultiplicity.ZeroOrOne, typeof(Net4Sage.DataAccessModel.SOLine), "ShipLines", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.ShipLine), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "Item_SOLine", "Item", RelationshipMultiplicity.ZeroOrOne, typeof(Net4Sage.DataAccessModel.Item), "SOLines", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.SOLine), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "UnitMeasure_SOLine", "UnitMeasure", RelationshipMultiplicity.ZeroOrOne, typeof(Net4Sage.DataAccessModel.UnitMeasure), "SOLines", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.SOLine), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "InvoiceLog_InvoiceAppl", "FromInvoice", RelationshipMultiplicity.ZeroOrOne, typeof(Net4Sage.DataAccessModel.InvoiceLog), "InvoiceAppls", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.InvoiceAppl), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "InvoiceLog_InvoiceAppl1", "Invoice", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.InvoiceLog), "InvoiceAppls1", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.InvoiceAppl), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "InvoiceLog_Invoice", "InvoiceLog", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.InvoiceLog), "Invoice", RelationshipMultiplicity.ZeroOrOne, typeof(Net4Sage.DataAccessModel.Invoice), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "InvoiceLog_PendInvoice", "InvoiceLog", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.InvoiceLog), "PendInvoice", RelationshipMultiplicity.ZeroOrOne, typeof(Net4Sage.DataAccessModel.PendInvoice), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "InvoiceDetl_InvoiceLineDist", "InvoiceDetl", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.InvoiceDetl), "InvoiceLineDists", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.InvoiceLineDist), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "InvoiceLog_InvoiceDetl", "InvoiceLog", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.InvoiceLog), "InvoiceDetls", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.InvoiceDetl), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "Item_InvoiceDetl", "Item", RelationshipMultiplicity.ZeroOrOne, typeof(Net4Sage.DataAccessModel.Item), "InvoiceDetls", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.InvoiceDetl), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "BatchLog_GLTransaction", "BatchLog", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.BatchLog), "GLTransactions", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.GLTransaction), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "Vendor_VendPmt", "Vendor", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.Vendor), "VendPmts", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.VendPmt), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "Country_State", "Country", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.Country), "States", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.State), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "State_StateZone", "State", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.State), "StateZones", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.StateZone), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "Country_Company", "Country", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.Country), "Companies", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.Company), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "SalesOrderImport_SOLineImport", "SalesOrderImport", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.SalesOrderImport), "SOLineImports", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.SOLineImport), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "Item_Route", "Item", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.Item), "MFRoutes", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.Route), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "POLine_POLineDist", "POLine", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.POLine), "POLineDists", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.POLineDist), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "PurchOrderLog_PurchOrder", "PurchOrderLog", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.PurchOrderLog), "PurchOrder", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.PurchOrder), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "ReceiverLog_RcvrLine", "ReceiverLog", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.ReceiverLog), "RcvrLines", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.RcvrLine), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "ReceiverLog_Receiver", "ReceiverLog", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.ReceiverLog), "Receiver", RelationshipMultiplicity.ZeroOrOne, typeof(Net4Sage.DataAccessModel.Receiver), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "ReceiverLog_PendReceiver", "ReceiverLog", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.ReceiverLog), "PendReceiver", RelationshipMultiplicity.ZeroOrOne, typeof(Net4Sage.DataAccessModel.PendReceiver), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "PurchOrder_POLine", "PurchOrder", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.PurchOrder), "POLines", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.POLine), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "BatchLog_ARBatch", "BatchLog", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.BatchLog), "ARBatch", RelationshipMultiplicity.ZeroOrOne, typeof(Net4Sage.DataAccessModel.ARBatch), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "CustomerPaymentLog_PendingCustomerPayment", "CustomerPaymentLog", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.CustomerPaymentLog), "PendingCustomerPayment", RelationshipMultiplicity.ZeroOrOne, typeof(Net4Sage.DataAccessModel.PendingCustomerPayment), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "CustomerPaymentLog_CustomerPayment", "CustomerPaymentLog", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.CustomerPaymentLog), "CustomerPayment", RelationshipMultiplicity.ZeroOrOne, typeof(Net4Sage.DataAccessModel.CustomerPayment), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "CustomerPaymentLog_CustomerPaymentAppl", "CustomerPaymentLog", RelationshipMultiplicity.One, typeof(Net4Sage.DataAccessModel.CustomerPaymentLog), "CustomerPaymentAppls", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.CustomerPaymentAppl), true)]
[assembly: EdmRelationshipAttribute("Net4Sage.DataAccessModel", "ARBatch_CustomerPaymentAppl", "ARBatch", RelationshipMultiplicity.ZeroOrOne, typeof(Net4Sage.DataAccessModel.ARBatch), "CustomerPaymentAppls", RelationshipMultiplicity.Many, typeof(Net4Sage.DataAccessModel.CustomerPaymentAppl), true)]

#endregion

namespace Net4Sage.DataAccessModel
{

    #region Context

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Context : ObjectContext
    {
        #region Constructors

        /// <summary>
        /// Initialize a new Context object.
        /// </summary>
        public Context() :
                base(@"name=Net4Sage.DataAccessModelConnectionString", "Context")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initializes a new Context object using the connection string found in the 'Context' section of the application configuration file.
        /// </summary>
        public Context(string connectionString) :
                base(connectionString, "Context")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initialize a new Context object.
        /// </summary>
        public Context(EntityConnection connection) : base(connection, "Context")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }


        #endregion

        #region Partial Methods

        partial void OnContextCreated();

        #endregion

        #region ObjectSet Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TranTypeCompany> TranTypeCompanies
        {
            get
            {
                if ((_TranTypeCompanies == null))
                {
                    _TranTypeCompanies = base.CreateObjectSet<TranTypeCompany>("TranTypeCompanies");
                }
                return _TranTypeCompanies;
            }
        }
        private ObjectSet<TranTypeCompany> _TranTypeCompanies;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RouteDetail> RouteDetails
        {
            get
            {
                if ((_RouteDetails == null))
                {
                    _RouteDetails = base.CreateObjectSet<RouteDetail>("RouteDetails");
                }
                return _RouteDetails;
            }
        }
        private ObjectSet<RouteDetail> _RouteDetails;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Route> Routes
        {
            get
            {
                if ((_Routes == null))
                {
                    _Routes = base.CreateObjectSet<Route>("Routes");
                }
                return _Routes;
            }
        }
        private ObjectSet<Route> _Routes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WorkOrderDetails> WorkOrderDetails
        {
            get
            {
                if ((_WorkOrderDetails == null))
                {
                    _WorkOrderDetails = base.CreateObjectSet<WorkOrderDetails>("WorkOrderDetails");
                }
                return _WorkOrderDetails;
            }
        }
        private ObjectSet<WorkOrderDetails> _WorkOrderDetails;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WorkOrder> WorkOrders
        {
            get
            {
                if ((_WorkOrders == null))
                {
                    _WorkOrders = base.CreateObjectSet<WorkOrder>("WorkOrders");
                }
                return _WorkOrders;
            }
        }
        private ObjectSet<WorkOrder> _WorkOrders;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MFParameters> MFParameters
        {
            get
            {
                if ((_MFParameters == null))
                {
                    _MFParameters = base.CreateObjectSet<MFParameters>("MFParameters");
                }
                return _MFParameters;
            }
        }
        private ObjectSet<MFParameters> _MFParameters;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WorkOrderProd> WorkOrderProds
        {
            get
            {
                if ((_WorkOrderProds == null))
                {
                    _WorkOrderProds = base.CreateObjectSet<WorkOrderProd>("WorkOrderProds");
                }
                return _WorkOrderProds;
            }
        }
        private ObjectSet<WorkOrderProd> _WorkOrderProds;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvtLot> InvtLots
        {
            get
            {
                if ((_InvtLots == null))
                {
                    _InvtLots = base.CreateObjectSet<InvtLot>("InvtLots");
                }
                return _InvtLots;
            }
        }
        private ObjectSet<InvtLot> _InvtLots;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvtLotBin> InvtLotBins
        {
            get
            {
                if ((_InvtLotBins == null))
                {
                    _InvtLotBins = base.CreateObjectSet<InvtLotBin>("InvtLotBins");
                }
                return _InvtLotBins;
            }
        }
        private ObjectSet<InvtLotBin> _InvtLotBins;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvtSerialCorr> InvtSerialCorrs
        {
            get
            {
                if ((_InvtSerialCorrs == null))
                {
                    _InvtSerialCorrs = base.CreateObjectSet<InvtSerialCorr>("InvtSerialCorrs");
                }
                return _InvtSerialCorrs;
            }
        }
        private ObjectSet<InvtSerialCorr> _InvtSerialCorrs;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvtTran> InvtTrans
        {
            get
            {
                if ((_InvtTrans == null))
                {
                    _InvtTrans = base.CreateObjectSet<InvtTran>("InvtTrans");
                }
                return _InvtTrans;
            }
        }
        private ObjectSet<InvtTran> _InvtTrans;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvtTranDist> InvtTranDists
        {
            get
            {
                if ((_InvtTranDists == null))
                {
                    _InvtTranDists = base.CreateObjectSet<InvtTranDist>("InvtTranDists");
                }
                return _InvtTranDists;
            }
        }
        private ObjectSet<InvtTranDist> _InvtTranDists;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WorkCenter> WorkCenters
        {
            get
            {
                if ((_WorkCenters == null))
                {
                    _WorkCenters = base.CreateObjectSet<WorkCenter>("WorkCenters");
                }
                return _WorkCenters;
            }
        }
        private ObjectSet<WorkCenter> _WorkCenters;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Warehouse> Warehouses
        {
            get
            {
                if ((_Warehouses == null))
                {
                    _Warehouses = base.CreateObjectSet<Warehouse>("Warehouses");
                }
                return _Warehouses;
            }
        }
        private ObjectSet<Warehouse> _Warehouses;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WhseBin> WhseBins
        {
            get
            {
                if ((_WhseBins == null))
                {
                    _WhseBins = base.CreateObjectSet<WhseBin>("WhseBins");
                }
                return _WhseBins;
            }
        }
        private ObjectSet<WhseBin> _WhseBins;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Inventory> Inventories
        {
            get
            {
                if ((_Inventories == null))
                {
                    _Inventories = base.CreateObjectSet<Inventory>("Inventories");
                }
                return _Inventories;
            }
        }
        private ObjectSet<Inventory> _Inventories;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Item> Items
        {
            get
            {
                if ((_Items == null))
                {
                    _Items = base.CreateObjectSet<Item>("Items");
                }
                return _Items;
            }
        }
        private ObjectSet<Item> _Items;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IMTranType> IMTranTypes
        {
            get
            {
                if ((_IMTranTypes == null))
                {
                    _IMTranTypes = base.CreateObjectSet<IMTranType>("IMTranTypes");
                }
                return _IMTranTypes;
            }
        }
        private ObjectSet<IMTranType> _IMTranTypes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BatchLog> BatchLogs
        {
            get
            {
                if ((_BatchLogs == null))
                {
                    _BatchLogs = base.CreateObjectSet<BatchLog>("BatchLogs");
                }
                return _BatchLogs;
            }
        }
        private ObjectSet<BatchLog> _BatchLogs;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GLBatch> GLBatches
        {
            get
            {
                if ((_GLBatches == null))
                {
                    _GLBatches = base.CreateObjectSet<GLBatch>("GLBatches");
                }
                return _GLBatches;
            }
        }
        private ObjectSet<GLBatch> _GLBatches;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JournalDetail> JournalDetails
        {
            get
            {
                if ((_JournalDetails == null))
                {
                    _JournalDetails = base.CreateObjectSet<JournalDetail>("JournalDetails");
                }
                return _JournalDetails;
            }
        }
        private ObjectSet<JournalDetail> _JournalDetails;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JournalHdr> JournalHdrs
        {
            get
            {
                if ((_JournalHdrs == null))
                {
                    _JournalHdrs = base.CreateObjectSet<JournalHdr>("JournalHdrs");
                }
                return _JournalHdrs;
            }
        }
        private ObjectSet<JournalHdr> _JournalHdrs;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GLAccount> GLAccounts
        {
            get
            {
                if ((_GLAccounts == null))
                {
                    _GLAccounts = base.CreateObjectSet<GLAccount>("GLAccounts");
                }
                return _GLAccounts;
            }
        }
        private ObjectSet<GLAccount> _GLAccounts;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ItemDescription> ItemDescriptions
        {
            get
            {
                if ((_ItemDescriptions == null))
                {
                    _ItemDescriptions = base.CreateObjectSet<ItemDescription>("ItemDescriptions");
                }
                return _ItemDescriptions;
            }
        }
        private ObjectSet<ItemDescription> _ItemDescriptions;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Currency> Currencies
        {
            get
            {
                if ((_Currencies == null))
                {
                    _Currencies = base.CreateObjectSet<Currency>("Currencies");
                }
                return _Currencies;
            }
        }
        private ObjectSet<Currency> _Currencies;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Journal> Journals
        {
            get
            {
                if ((_Journals == null))
                {
                    _Journals = base.CreateObjectSet<Journal>("Journals");
                }
                return _Journals;
            }
        }
        private ObjectSet<Journal> _Journals;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JournalLog> JournalLogs
        {
            get
            {
                if ((_JournalLogs == null))
                {
                    _JournalLogs = base.CreateObjectSet<JournalLog>("JournalLogs");
                }
                return _JournalLogs;
            }
        }
        private ObjectSet<JournalLog> _JournalLogs;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Company> Companies
        {
            get
            {
                if ((_Companies == null))
                {
                    _Companies = base.CreateObjectSet<Company>("Companies");
                }
                return _Companies;
            }
        }
        private ObjectSet<Company> _Companies;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustomersClass> CustomersClasses
        {
            get
            {
                if ((_CustomersClasses == null))
                {
                    _CustomersClasses = base.CreateObjectSet<CustomersClass>("CustomersClasses");
                }
                return _CustomersClasses;
            }
        }
        private ObjectSet<CustomersClass> _CustomersClasses;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Customer> Customers
        {
            get
            {
                if ((_Customers == null))
                {
                    _Customers = base.CreateObjectSet<Customer>("Customers");
                }
                return _Customers;
            }
        }
        private ObjectSet<Customer> _Customers;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NationalAccount> NationalAccounts
        {
            get
            {
                if ((_NationalAccounts == null))
                {
                    _NationalAccounts = base.CreateObjectSet<NationalAccount>("NationalAccounts");
                }
                return _NationalAccounts;
            }
        }
        private ObjectSet<NationalAccount> _NationalAccounts;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NationalAccountLevel> NationalAccountLevels
        {
            get
            {
                if ((_NationalAccountLevels == null))
                {
                    _NationalAccountLevels = base.CreateObjectSet<NationalAccountLevel>("NationalAccountLevels");
                }
                return _NationalAccountLevels;
            }
        }
        private ObjectSet<NationalAccountLevel> _NationalAccountLevels;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesTerritory> SalesTerritories
        {
            get
            {
                if ((_SalesTerritories == null))
                {
                    _SalesTerritories = base.CreateObjectSet<SalesTerritory>("SalesTerritories");
                }
                return _SalesTerritories;
            }
        }
        private ObjectSet<SalesTerritory> _SalesTerritories;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustomerAddress> CustomerAddresses
        {
            get
            {
                if ((_CustomerAddresses == null))
                {
                    _CustomerAddresses = base.CreateObjectSet<CustomerAddress>("CustomerAddresses");
                }
                return _CustomerAddresses;
            }
        }
        private ObjectSet<CustomerAddress> _CustomerAddresses;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UnitMeasure> UnitMeasures
        {
            get
            {
                if ((_UnitMeasures == null))
                {
                    _UnitMeasures = base.CreateObjectSet<UnitMeasure>("UnitMeasures");
                }
                return _UnitMeasures;
            }
        }
        private ObjectSet<UnitMeasure> _UnitMeasures;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ItemUM> ItemUMs
        {
            get
            {
                if ((_ItemUMs == null))
                {
                    _ItemUMs = base.CreateObjectSet<ItemUM>("ItemUMs");
                }
                return _ItemUMs;
            }
        }
        private ObjectSet<ItemUM> _ItemUMs;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReasonCode> ReasonCodes
        {
            get
            {
                if ((_ReasonCodes == null))
                {
                    _ReasonCodes = base.CreateObjectSet<ReasonCode>("ReasonCodes");
                }
                return _ReasonCodes;
            }
        }
        private ObjectSet<ReasonCode> _ReasonCodes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FiscalPeriod> FiscalPeriods
        {
            get
            {
                if ((_FiscalPeriods == null))
                {
                    _FiscalPeriods = base.CreateObjectSet<FiscalPeriod>("FiscalPeriods");
                }
                return _FiscalPeriods;
            }
        }
        private ObjectSet<FiscalPeriod> _FiscalPeriods;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FiscalYear> FiscalYears
        {
            get
            {
                if ((_FiscalYears == null))
                {
                    _FiscalYears = base.CreateObjectSet<FiscalYear>("FiscalYears");
                }
                return _FiscalYears;
            }
        }
        private ObjectSet<FiscalYear> _FiscalYears;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesProductLine> SalesProductLines
        {
            get
            {
                if ((_SalesProductLines == null))
                {
                    _SalesProductLines = base.CreateObjectSet<SalesProductLine>("SalesProductLines");
                }
                return _SalesProductLines;
            }
        }
        private ObjectSet<SalesProductLine> _SalesProductLines;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductCategory> ProductCategories
        {
            get
            {
                if ((_ProductCategories == null))
                {
                    _ProductCategories = base.CreateObjectSet<ProductCategory>("ProductCategories");
                }
                return _ProductCategories;
            }
        }
        private ObjectSet<ProductCategory> _ProductCategories;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductCategoryItem> ProductCategoryItems
        {
            get
            {
                if ((_ProductCategoryItems == null))
                {
                    _ProductCategoryItems = base.CreateObjectSet<ProductCategoryItem>("ProductCategoryItems");
                }
                return _ProductCategoryItems;
            }
        }
        private ObjectSet<ProductCategoryItem> _ProductCategoryItems;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesPerson> SalesPeople
        {
            get
            {
                if ((_SalesPeople == null))
                {
                    _SalesPeople = base.CreateObjectSet<SalesPerson>("SalesPeople");
                }
                return _SalesPeople;
            }
        }
        private ObjectSet<SalesPerson> _SalesPeople;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesTeam> SalesTeams
        {
            get
            {
                if ((_SalesTeams == null))
                {
                    _SalesTeams = base.CreateObjectSet<SalesTeam>("SalesTeams");
                }
                return _SalesTeams;
            }
        }
        private ObjectSet<SalesTeam> _SalesTeams;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesOrder> SalesOrders
        {
            get
            {
                if ((_SalesOrders == null))
                {
                    _SalesOrders = base.CreateObjectSet<SalesOrder>("SalesOrders");
                }
                return _SalesOrders;
            }
        }
        private ObjectSet<SalesOrder> _SalesOrders;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SOLine> SOLines
        {
            get
            {
                if ((_SOLines == null))
                {
                    _SOLines = base.CreateObjectSet<SOLine>("SOLines");
                }
                return _SOLines;
            }
        }
        private ObjectSet<SOLine> _SOLines;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SOLineDist> SOLineDists
        {
            get
            {
                if ((_SOLineDists == null))
                {
                    _SOLineDists = base.CreateObjectSet<SOLineDist>("SOLineDists");
                }
                return _SOLineDists;
            }
        }
        private ObjectSet<SOLineDist> _SOLineDists;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Address> Addresses
        {
            get
            {
                if ((_Addresses == null))
                {
                    _Addresses = base.CreateObjectSet<Address>("Addresses");
                }
                return _Addresses;
            }
        }
        private ObjectSet<Address> _Addresses;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AcctSegment> AcctSegments
        {
            get
            {
                if ((_AcctSegments == null))
                {
                    _AcctSegments = base.CreateObjectSet<AcctSegment>("AcctSegments");
                }
                return _AcctSegments;
            }
        }
        private ObjectSet<AcctSegment> _AcctSegments;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Segment> Segments
        {
            get
            {
                if ((_Segments == null))
                {
                    _Segments = base.CreateObjectSet<Segment>("Segments");
                }
                return _Segments;
            }
        }
        private ObjectSet<Segment> _Segments;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SegmentCode> SegmentCodes
        {
            get
            {
                if ((_SegmentCodes == null))
                {
                    _SegmentCodes = base.CreateObjectSet<SegmentCode>("SegmentCodes");
                }
                return _SegmentCodes;
            }
        }
        private ObjectSet<SegmentCode> _SegmentCodes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AcctHist> AcctHists
        {
            get
            {
                if ((_AcctHists == null))
                {
                    _AcctHists = base.CreateObjectSet<AcctHist>("AcctHists");
                }
                return _AcctHists;
            }
        }
        private ObjectSet<AcctHist> _AcctHists;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Budget> Budgets
        {
            get
            {
                if ((_Budgets == null))
                {
                    _Budgets = base.CreateObjectSet<Budget>("Budgets");
                }
                return _Budgets;
            }
        }
        private ObjectSet<Budget> _Budgets;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CommodityCode> CommodityCodes
        {
            get
            {
                if ((_CommodityCodes == null))
                {
                    _CommodityCodes = base.CreateObjectSet<CommodityCode>("CommodityCodes");
                }
                return _CommodityCodes;
            }
        }
        private ObjectSet<CommodityCode> _CommodityCodes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RcvrLine> RcvrLines
        {
            get
            {
                if ((_RcvrLines == null))
                {
                    _RcvrLines = base.CreateObjectSet<RcvrLine>("RcvrLines");
                }
                return _RcvrLines;
            }
        }
        private ObjectSet<RcvrLine> _RcvrLines;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RcvrLineDist> RcvrLineDists
        {
            get
            {
                if ((_RcvrLineDists == null))
                {
                    _RcvrLineDists = base.CreateObjectSet<RcvrLineDist>("RcvrLineDists");
                }
                return _RcvrLineDists;
            }
        }
        private ObjectSet<RcvrLineDist> _RcvrLineDists;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Receiver> Receivers
        {
            get
            {
                if ((_Receivers == null))
                {
                    _Receivers = base.CreateObjectSet<Receiver>("Receivers");
                }
                return _Receivers;
            }
        }
        private ObjectSet<Receiver> _Receivers;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VendPmt> VendPmts
        {
            get
            {
                if ((_VendPmts == null))
                {
                    _VendPmts = base.CreateObjectSet<VendPmt>("VendPmts");
                }
                return _VendPmts;
            }
        }
        private ObjectSet<VendPmt> _VendPmts;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VendPmtAppl> VendPmtAppls
        {
            get
            {
                if ((_VendPmtAppls == null))
                {
                    _VendPmtAppls = base.CreateObjectSet<VendPmtAppl>("VendPmtAppls");
                }
                return _VendPmtAppls;
            }
        }
        private ObjectSet<VendPmtAppl> _VendPmtAppls;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Voucher> Vouchers
        {
            get
            {
                if ((_Vouchers == null))
                {
                    _Vouchers = base.CreateObjectSet<Voucher>("Vouchers");
                }
                return _Vouchers;
            }
        }
        private ObjectSet<Voucher> _Vouchers;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VoucherAppl> VoucherAppls
        {
            get
            {
                if ((_VoucherAppls == null))
                {
                    _VoucherAppls = base.CreateObjectSet<VoucherAppl>("VoucherAppls");
                }
                return _VoucherAppls;
            }
        }
        private ObjectSet<VoucherAppl> _VoucherAppls;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VendorClass> VendorClasses
        {
            get
            {
                if ((_VendorClasses == null))
                {
                    _VendorClasses = base.CreateObjectSet<VendorClass>("VendorClasses");
                }
                return _VendorClasses;
            }
        }
        private ObjectSet<VendorClass> _VendorClasses;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Vendor> Vendors
        {
            get
            {
                if ((_Vendors == null))
                {
                    _Vendors = base.CreateObjectSet<Vendor>("Vendors");
                }
                return _Vendors;
            }
        }
        private ObjectSet<Vendor> _Vendors;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustomerPayment> CustomerPayments
        {
            get
            {
                if ((_CustomerPayments == null))
                {
                    _CustomerPayments = base.CreateObjectSet<CustomerPayment>("CustomerPayments");
                }
                return _CustomerPayments;
            }
        }
        private ObjectSet<CustomerPayment> _CustomerPayments;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Invoice> Invoices
        {
            get
            {
                if ((_Invoices == null))
                {
                    _Invoices = base.CreateObjectSet<Invoice>("Invoices");
                }
                return _Invoices;
            }
        }
        private ObjectSet<Invoice> _Invoices;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvoiceAppl> InvoiceAppls
        {
            get
            {
                if ((_InvoiceAppls == null))
                {
                    _InvoiceAppls = base.CreateObjectSet<InvoiceAppl>("InvoiceAppls");
                }
                return _InvoiceAppls;
            }
        }
        private ObjectSet<InvoiceAppl> _InvoiceAppls;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GLTransaction> GLTransactions
        {
            get
            {
                if ((_GLTransactions == null))
                {
                    _GLTransactions = base.CreateObjectSet<GLTransaction>("GLTransactions");
                }
                return _GLTransactions;
            }
        }
        private ObjectSet<GLTransaction> _GLTransactions;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustomForm> CustomForms
        {
            get
            {
                if ((_CustomForms == null))
                {
                    _CustomForms = base.CreateObjectSet<CustomForm>("CustomForms");
                }
                return _CustomForms;
            }
        }
        private ObjectSet<CustomForm> _CustomForms;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustomFormDetl> CustomFormDetls
        {
            get
            {
                if ((_CustomFormDetls == null))
                {
                    _CustomFormDetls = base.CreateObjectSet<CustomFormDetl>("CustomFormDetls");
                }
                return _CustomFormDetls;
            }
        }
        private ObjectSet<CustomFormDetl> _CustomFormDetls;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Task> Tasks
        {
            get
            {
                if ((_Tasks == null))
                {
                    _Tasks = base.CreateObjectSet<Task>("Tasks");
                }
                return _Tasks;
            }
        }
        private ObjectSet<Task> _Tasks;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SOOption> SOOptions
        {
            get
            {
                if ((_SOOptions == null))
                {
                    _SOOptions = base.CreateObjectSet<SOOption>("SOOptions");
                }
                return _SOOptions;
            }
        }
        private ObjectSet<SOOption> _SOOptions;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PendShipment> PendShipments
        {
            get
            {
                if ((_PendShipments == null))
                {
                    _PendShipments = base.CreateObjectSet<PendShipment>("PendShipments");
                }
                return _PendShipments;
            }
        }
        private ObjectSet<PendShipment> _PendShipments;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PickList> PickLists
        {
            get
            {
                if ((_PickLists == null))
                {
                    _PickLists = base.CreateObjectSet<PickList>("PickLists");
                }
                return _PickLists;
            }
        }
        private ObjectSet<PickList> _PickLists;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ShipLine> ShipLines
        {
            get
            {
                if ((_ShipLines == null))
                {
                    _ShipLines = base.CreateObjectSet<ShipLine>("ShipLines");
                }
                return _ShipLines;
            }
        }
        private ObjectSet<ShipLine> _ShipLines;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ShipLineDist> ShipLineDists
        {
            get
            {
                if ((_ShipLineDists == null))
                {
                    _ShipLineDists = base.CreateObjectSet<ShipLineDist>("ShipLineDists");
                }
                return _ShipLineDists;
            }
        }
        private ObjectSet<ShipLineDist> _ShipLineDists;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Shipment> Shipments
        {
            get
            {
                if ((_Shipments == null))
                {
                    _Shipments = base.CreateObjectSet<Shipment>("Shipments");
                }
                return _Shipments;
            }
        }
        private ObjectSet<Shipment> _Shipments;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ShipmentLog> ShipmentLogs
        {
            get
            {
                if ((_ShipmentLogs == null))
                {
                    _ShipmentLogs = base.CreateObjectSet<ShipmentLog>("ShipmentLogs");
                }
                return _ShipmentLogs;
            }
        }
        private ObjectSet<ShipmentLog> _ShipmentLogs;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvoiceLog> InvoiceLogs
        {
            get
            {
                if ((_InvoiceLogs == null))
                {
                    _InvoiceLogs = base.CreateObjectSet<InvoiceLog>("InvoiceLogs");
                }
                return _InvoiceLogs;
            }
        }
        private ObjectSet<InvoiceLog> _InvoiceLogs;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PendInvoice> PendInvoices
        {
            get
            {
                if ((_PendInvoices == null))
                {
                    _PendInvoices = base.CreateObjectSet<PendInvoice>("PendInvoices");
                }
                return _PendInvoices;
            }
        }
        private ObjectSet<PendInvoice> _PendInvoices;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvoiceDetl> InvoiceDetls
        {
            get
            {
                if ((_InvoiceDetls == null))
                {
                    _InvoiceDetls = base.CreateObjectSet<InvoiceDetl>("InvoiceDetls");
                }
                return _InvoiceDetls;
            }
        }
        private ObjectSet<InvoiceDetl> _InvoiceDetls;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvoiceLineDist> InvoiceLineDists
        {
            get
            {
                if ((_InvoiceLineDists == null))
                {
                    _InvoiceLineDists = base.CreateObjectSet<InvoiceLineDist>("InvoiceLineDists");
                }
                return _InvoiceLineDists;
            }
        }
        private ObjectSet<InvoiceLineDist> _InvoiceLineDists;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Country> Countries
        {
            get
            {
                if ((_Countries == null))
                {
                    _Countries = base.CreateObjectSet<Country>("Countries");
                }
                return _Countries;
            }
        }
        private ObjectSet<Country> _Countries;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<State> States
        {
            get
            {
                if ((_States == null))
                {
                    _States = base.CreateObjectSet<State>("States");
                }
                return _States;
            }
        }
        private ObjectSet<State> _States;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StateZone> StateZones
        {
            get
            {
                if ((_StateZones == null))
                {
                    _StateZones = base.CreateObjectSet<StateZone>("StateZones");
                }
                return _StateZones;
            }
        }
        private ObjectSet<StateZone> _StateZones;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesOrderImport> SalesOrderImports
        {
            get
            {
                if ((_SalesOrderImports == null))
                {
                    _SalesOrderImports = base.CreateObjectSet<SalesOrderImport>("SalesOrderImports");
                }
                return _SalesOrderImports;
            }
        }
        private ObjectSet<SalesOrderImport> _SalesOrderImports;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SOLineImport> SOLineImports
        {
            get
            {
                if ((_SOLineImports == null))
                {
                    _SOLineImports = base.CreateObjectSet<SOLineImport>("SOLineImports");
                }
                return _SOLineImports;
            }
        }
        private ObjectSet<SOLineImport> _SOLineImports;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PendReceiver> PendReceivers
        {
            get
            {
                if ((_PendReceivers == null))
                {
                    _PendReceivers = base.CreateObjectSet<PendReceiver>("PendReceivers");
                }
                return _PendReceivers;
            }
        }
        private ObjectSet<PendReceiver> _PendReceivers;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<POLine> POLines
        {
            get
            {
                if ((_POLines == null))
                {
                    _POLines = base.CreateObjectSet<POLine>("POLines");
                }
                return _POLines;
            }
        }
        private ObjectSet<POLine> _POLines;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<POLineDist> POLineDists
        {
            get
            {
                if ((_POLineDists == null))
                {
                    _POLineDists = base.CreateObjectSet<POLineDist>("POLineDists");
                }
                return _POLineDists;
            }
        }
        private ObjectSet<POLineDist> _POLineDists;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PurchOrder> PurchOrders
        {
            get
            {
                if ((_PurchOrders == null))
                {
                    _PurchOrders = base.CreateObjectSet<PurchOrder>("PurchOrders");
                }
                return _PurchOrders;
            }
        }
        private ObjectSet<PurchOrder> _PurchOrders;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PurchOrderLog> PurchOrderLogs
        {
            get
            {
                if ((_PurchOrderLogs == null))
                {
                    _PurchOrderLogs = base.CreateObjectSet<PurchOrderLog>("PurchOrderLogs");
                }
                return _PurchOrderLogs;
            }
        }
        private ObjectSet<PurchOrderLog> _PurchOrderLogs;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReceiverLog> ReceiverLogs
        {
            get
            {
                if ((_ReceiverLogs == null))
                {
                    _ReceiverLogs = base.CreateObjectSet<ReceiverLog>("ReceiverLogs");
                }
                return _ReceiverLogs;
            }
        }
        private ObjectSet<ReceiverLog> _ReceiverLogs;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ARBatch> ARBatches
        {
            get
            {
                if ((_ARBatches == null))
                {
                    _ARBatches = base.CreateObjectSet<ARBatch>("ARBatches");
                }
                return _ARBatches;
            }
        }
        private ObjectSet<ARBatch> _ARBatches;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustomerPaymentAppl> CustomerPaymentAppls
        {
            get
            {
                if ((_CustomerPaymentAppls == null))
                {
                    _CustomerPaymentAppls = base.CreateObjectSet<CustomerPaymentAppl>("CustomerPaymentAppls");
                }
                return _CustomerPaymentAppls;
            }
        }
        private ObjectSet<CustomerPaymentAppl> _CustomerPaymentAppls;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustomerPaymentLog> CustomerPaymentLogs
        {
            get
            {
                if ((_CustomerPaymentLogs == null))
                {
                    _CustomerPaymentLogs = base.CreateObjectSet<CustomerPaymentLog>("CustomerPaymentLogs");
                }
                return _CustomerPaymentLogs;
            }
        }
        private ObjectSet<CustomerPaymentLog> _CustomerPaymentLogs;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PendingCustomerPayment> PendingCustomerPayments
        {
            get
            {
                if ((_PendingCustomerPayments == null))
                {
                    _PendingCustomerPayments = base.CreateObjectSet<PendingCustomerPayment>("PendingCustomerPayments");
                }
                return _PendingCustomerPayments;
            }
        }
        private ObjectSet<PendingCustomerPayment> _PendingCustomerPayments;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PendingCustomerPaymentAppl> PendingCustomerPaymentAppls
        {
            get
            {
                if ((_PendingCustomerPaymentAppls == null))
                {
                    _PendingCustomerPaymentAppls = base.CreateObjectSet<PendingCustomerPaymentAppl>("PendingCustomerPaymentAppls");
                }
                return _PendingCustomerPaymentAppls;
            }
        }
        private ObjectSet<PendingCustomerPaymentAppl> _PendingCustomerPaymentAppls;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AROption> AROptions
        {
            get
            {
                if ((_AROptions == null))
                {
                    _AROptions = base.CreateObjectSet<AROption>("AROptions");
                }
                return _AROptions;
            }
        }
        private ObjectSet<AROption> _AROptions;

        #endregion
        #region AddTo Methods

        /// <summary>
        /// Deprecated Method for adding a new object to the TranTypeCompanies EntitySet.
        /// </summary>
        public void AddToTranTypeCompanies(TranTypeCompany tranTypeCompany)
        {
            base.AddObject("TranTypeCompanies", tranTypeCompany);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the RouteDetails EntitySet.
        /// </summary>
        public void AddToRouteDetails(RouteDetail routeDetail)
        {
            base.AddObject("RouteDetails", routeDetail);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Routes EntitySet.
        /// </summary>
        public void AddToRoutes(Route route)
        {
            base.AddObject("Routes", route);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the WorkOrderDetails EntitySet.
        /// </summary>
        public void AddToWorkOrderDetails(WorkOrderDetails workOrderDetails)
        {
            base.AddObject("WorkOrderDetails", workOrderDetails);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the WorkOrders EntitySet.
        /// </summary>
        public void AddToWorkOrders(WorkOrder workOrder)
        {
            base.AddObject("WorkOrders", workOrder);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the MFParameters EntitySet.
        /// </summary>
        public void AddToMFParameters(MFParameters mFParameters)
        {
            base.AddObject("MFParameters", mFParameters);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the WorkOrderProds EntitySet.
        /// </summary>
        public void AddToWorkOrderProds(WorkOrderProd workOrderProd)
        {
            base.AddObject("WorkOrderProds", workOrderProd);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvtLots EntitySet.
        /// </summary>
        public void AddToInvtLots(InvtLot invtLot)
        {
            base.AddObject("InvtLots", invtLot);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvtLotBins EntitySet.
        /// </summary>
        public void AddToInvtLotBins(InvtLotBin invtLotBin)
        {
            base.AddObject("InvtLotBins", invtLotBin);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvtSerialCorrs EntitySet.
        /// </summary>
        public void AddToInvtSerialCorrs(InvtSerialCorr invtSerialCorr)
        {
            base.AddObject("InvtSerialCorrs", invtSerialCorr);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvtTrans EntitySet.
        /// </summary>
        public void AddToInvtTrans(InvtTran invtTran)
        {
            base.AddObject("InvtTrans", invtTran);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvtTranDists EntitySet.
        /// </summary>
        public void AddToInvtTranDists(InvtTranDist invtTranDist)
        {
            base.AddObject("InvtTranDists", invtTranDist);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the WorkCenters EntitySet.
        /// </summary>
        public void AddToWorkCenters(WorkCenter workCenter)
        {
            base.AddObject("WorkCenters", workCenter);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Warehouses EntitySet.
        /// </summary>
        public void AddToWarehouses(Warehouse warehouse)
        {
            base.AddObject("Warehouses", warehouse);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the WhseBins EntitySet.
        /// </summary>
        public void AddToWhseBins(WhseBin whseBin)
        {
            base.AddObject("WhseBins", whseBin);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Inventories EntitySet.
        /// </summary>
        public void AddToInventories(Inventory inventory)
        {
            base.AddObject("Inventories", inventory);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Items EntitySet.
        /// </summary>
        public void AddToItems(Item item)
        {
            base.AddObject("Items", item);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the IMTranTypes EntitySet.
        /// </summary>
        public void AddToIMTranTypes(IMTranType iMTranType)
        {
            base.AddObject("IMTranTypes", iMTranType);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the BatchLogs EntitySet.
        /// </summary>
        public void AddToBatchLogs(BatchLog batchLog)
        {
            base.AddObject("BatchLogs", batchLog);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the GLBatches EntitySet.
        /// </summary>
        public void AddToGLBatches(GLBatch gLBatch)
        {
            base.AddObject("GLBatches", gLBatch);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the JournalDetails EntitySet.
        /// </summary>
        public void AddToJournalDetails(JournalDetail journalDetail)
        {
            base.AddObject("JournalDetails", journalDetail);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the JournalHdrs EntitySet.
        /// </summary>
        public void AddToJournalHdrs(JournalHdr journalHdr)
        {
            base.AddObject("JournalHdrs", journalHdr);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the GLAccounts EntitySet.
        /// </summary>
        public void AddToGLAccounts(GLAccount gLAccount)
        {
            base.AddObject("GLAccounts", gLAccount);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ItemDescriptions EntitySet.
        /// </summary>
        public void AddToItemDescriptions(ItemDescription itemDescription)
        {
            base.AddObject("ItemDescriptions", itemDescription);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Currencies EntitySet.
        /// </summary>
        public void AddToCurrencies(Currency currency)
        {
            base.AddObject("Currencies", currency);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Journals EntitySet.
        /// </summary>
        public void AddToJournals(Journal journal)
        {
            base.AddObject("Journals", journal);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the JournalLogs EntitySet.
        /// </summary>
        public void AddToJournalLogs(JournalLog journalLog)
        {
            base.AddObject("JournalLogs", journalLog);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Companies EntitySet.
        /// </summary>
        public void AddToCompanies(Company company)
        {
            base.AddObject("Companies", company);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CustomersClasses EntitySet.
        /// </summary>
        public void AddToCustomersClasses(CustomersClass customersClass)
        {
            base.AddObject("CustomersClasses", customersClass);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Customers EntitySet.
        /// </summary>
        public void AddToCustomers(Customer customer)
        {
            base.AddObject("Customers", customer);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the NationalAccounts EntitySet.
        /// </summary>
        public void AddToNationalAccounts(NationalAccount nationalAccount)
        {
            base.AddObject("NationalAccounts", nationalAccount);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the NationalAccountLevels EntitySet.
        /// </summary>
        public void AddToNationalAccountLevels(NationalAccountLevel nationalAccountLevel)
        {
            base.AddObject("NationalAccountLevels", nationalAccountLevel);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SalesTerritories EntitySet.
        /// </summary>
        public void AddToSalesTerritories(SalesTerritory salesTerritory)
        {
            base.AddObject("SalesTerritories", salesTerritory);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CustomerAddresses EntitySet.
        /// </summary>
        public void AddToCustomerAddresses(CustomerAddress customerAddress)
        {
            base.AddObject("CustomerAddresses", customerAddress);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the UnitMeasures EntitySet.
        /// </summary>
        public void AddToUnitMeasures(UnitMeasure unitMeasure)
        {
            base.AddObject("UnitMeasures", unitMeasure);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ItemUMs EntitySet.
        /// </summary>
        public void AddToItemUMs(ItemUM itemUM)
        {
            base.AddObject("ItemUMs", itemUM);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ReasonCodes EntitySet.
        /// </summary>
        public void AddToReasonCodes(ReasonCode reasonCode)
        {
            base.AddObject("ReasonCodes", reasonCode);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the FiscalPeriods EntitySet.
        /// </summary>
        public void AddToFiscalPeriods(FiscalPeriod fiscalPeriod)
        {
            base.AddObject("FiscalPeriods", fiscalPeriod);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the FiscalYears EntitySet.
        /// </summary>
        public void AddToFiscalYears(FiscalYear fiscalYear)
        {
            base.AddObject("FiscalYears", fiscalYear);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SalesProductLines EntitySet.
        /// </summary>
        public void AddToSalesProductLines(SalesProductLine salesProductLine)
        {
            base.AddObject("SalesProductLines", salesProductLine);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ProductCategories EntitySet.
        /// </summary>
        public void AddToProductCategories(ProductCategory productCategory)
        {
            base.AddObject("ProductCategories", productCategory);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ProductCategoryItems EntitySet.
        /// </summary>
        public void AddToProductCategoryItems(ProductCategoryItem productCategoryItem)
        {
            base.AddObject("ProductCategoryItems", productCategoryItem);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SalesPeople EntitySet.
        /// </summary>
        public void AddToSalesPeople(SalesPerson salesPerson)
        {
            base.AddObject("SalesPeople", salesPerson);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SalesTeams EntitySet.
        /// </summary>
        public void AddToSalesTeams(SalesTeam salesTeam)
        {
            base.AddObject("SalesTeams", salesTeam);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SalesOrders EntitySet.
        /// </summary>
        public void AddToSalesOrders(SalesOrder salesOrder)
        {
            base.AddObject("SalesOrders", salesOrder);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SOLines EntitySet.
        /// </summary>
        public void AddToSOLines(SOLine sOLine)
        {
            base.AddObject("SOLines", sOLine);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SOLineDists EntitySet.
        /// </summary>
        public void AddToSOLineDists(SOLineDist sOLineDist)
        {
            base.AddObject("SOLineDists", sOLineDist);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Addresses EntitySet.
        /// </summary>
        public void AddToAddresses(Address address)
        {
            base.AddObject("Addresses", address);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the AcctSegments EntitySet.
        /// </summary>
        public void AddToAcctSegments(AcctSegment acctSegment)
        {
            base.AddObject("AcctSegments", acctSegment);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Segments EntitySet.
        /// </summary>
        public void AddToSegments(Segment segment)
        {
            base.AddObject("Segments", segment);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SegmentCodes EntitySet.
        /// </summary>
        public void AddToSegmentCodes(SegmentCode segmentCode)
        {
            base.AddObject("SegmentCodes", segmentCode);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the AcctHists EntitySet.
        /// </summary>
        public void AddToAcctHists(AcctHist acctHist)
        {
            base.AddObject("AcctHists", acctHist);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Budgets EntitySet.
        /// </summary>
        public void AddToBudgets(Budget budget)
        {
            base.AddObject("Budgets", budget);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CommodityCodes EntitySet.
        /// </summary>
        public void AddToCommodityCodes(CommodityCode commodityCode)
        {
            base.AddObject("CommodityCodes", commodityCode);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the RcvrLines EntitySet.
        /// </summary>
        public void AddToRcvrLines(RcvrLine rcvrLine)
        {
            base.AddObject("RcvrLines", rcvrLine);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the RcvrLineDists EntitySet.
        /// </summary>
        public void AddToRcvrLineDists(RcvrLineDist rcvrLineDist)
        {
            base.AddObject("RcvrLineDists", rcvrLineDist);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Receivers EntitySet.
        /// </summary>
        public void AddToReceivers(Receiver receiver)
        {
            base.AddObject("Receivers", receiver);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the VendPmts EntitySet.
        /// </summary>
        public void AddToVendPmts(VendPmt vendPmt)
        {
            base.AddObject("VendPmts", vendPmt);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the VendPmtAppls EntitySet.
        /// </summary>
        public void AddToVendPmtAppls(VendPmtAppl vendPmtAppl)
        {
            base.AddObject("VendPmtAppls", vendPmtAppl);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Vouchers EntitySet.
        /// </summary>
        public void AddToVouchers(Voucher voucher)
        {
            base.AddObject("Vouchers", voucher);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the VoucherAppls EntitySet.
        /// </summary>
        public void AddToVoucherAppls(VoucherAppl voucherAppl)
        {
            base.AddObject("VoucherAppls", voucherAppl);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the VendorClasses EntitySet.
        /// </summary>
        public void AddToVendorClasses(VendorClass vendorClass)
        {
            base.AddObject("VendorClasses", vendorClass);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Vendors EntitySet.
        /// </summary>
        public void AddToVendors(Vendor vendor)
        {
            base.AddObject("Vendors", vendor);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CustomerPayments EntitySet.
        /// </summary>
        public void AddToCustomerPayments(CustomerPayment customerPayment)
        {
            base.AddObject("CustomerPayments", customerPayment);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Invoices EntitySet.
        /// </summary>
        public void AddToInvoices(Invoice invoice)
        {
            base.AddObject("Invoices", invoice);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvoiceAppls EntitySet.
        /// </summary>
        public void AddToInvoiceAppls(InvoiceAppl invoiceAppl)
        {
            base.AddObject("InvoiceAppls", invoiceAppl);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the GLTransactions EntitySet.
        /// </summary>
        public void AddToGLTransactions(GLTransaction gLTransaction)
        {
            base.AddObject("GLTransactions", gLTransaction);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CustomForms EntitySet.
        /// </summary>
        public void AddToCustomForms(CustomForm customForm)
        {
            base.AddObject("CustomForms", customForm);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CustomFormDetls EntitySet.
        /// </summary>
        public void AddToCustomFormDetls(CustomFormDetl customFormDetl)
        {
            base.AddObject("CustomFormDetls", customFormDetl);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Tasks EntitySet.
        /// </summary>
        public void AddToTasks(Task task)
        {
            base.AddObject("Tasks", task);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SOOptions EntitySet.
        /// </summary>
        public void AddToSOOptions(SOOption sOOption)
        {
            base.AddObject("SOOptions", sOOption);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PendShipments EntitySet.
        /// </summary>
        public void AddToPendShipments(PendShipment pendShipment)
        {
            base.AddObject("PendShipments", pendShipment);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PickLists EntitySet.
        /// </summary>
        public void AddToPickLists(PickList pickList)
        {
            base.AddObject("PickLists", pickList);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ShipLines EntitySet.
        /// </summary>
        public void AddToShipLines(ShipLine shipLine)
        {
            base.AddObject("ShipLines", shipLine);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ShipLineDists EntitySet.
        /// </summary>
        public void AddToShipLineDists(ShipLineDist shipLineDist)
        {
            base.AddObject("ShipLineDists", shipLineDist);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Shipments EntitySet.
        /// </summary>
        public void AddToShipments(Shipment shipment)
        {
            base.AddObject("Shipments", shipment);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ShipmentLogs EntitySet.
        /// </summary>
        public void AddToShipmentLogs(ShipmentLog shipmentLog)
        {
            base.AddObject("ShipmentLogs", shipmentLog);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvoiceLogs EntitySet.
        /// </summary>
        public void AddToInvoiceLogs(InvoiceLog invoiceLog)
        {
            base.AddObject("InvoiceLogs", invoiceLog);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PendInvoices EntitySet.
        /// </summary>
        public void AddToPendInvoices(PendInvoice pendInvoice)
        {
            base.AddObject("PendInvoices", pendInvoice);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvoiceDetls EntitySet.
        /// </summary>
        public void AddToInvoiceDetls(InvoiceDetl invoiceDetl)
        {
            base.AddObject("InvoiceDetls", invoiceDetl);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InvoiceLineDists EntitySet.
        /// </summary>
        public void AddToInvoiceLineDists(InvoiceLineDist invoiceLineDist)
        {
            base.AddObject("InvoiceLineDists", invoiceLineDist);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Countries EntitySet.
        /// </summary>
        public void AddToCountries(Country country)
        {
            base.AddObject("Countries", country);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the States EntitySet.
        /// </summary>
        public void AddToStates(State state)
        {
            base.AddObject("States", state);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the StateZones EntitySet.
        /// </summary>
        public void AddToStateZones(StateZone stateZone)
        {
            base.AddObject("StateZones", stateZone);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SalesOrderImports EntitySet.
        /// </summary>
        public void AddToSalesOrderImports(SalesOrderImport salesOrderImport)
        {
            base.AddObject("SalesOrderImports", salesOrderImport);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SOLineImports EntitySet.
        /// </summary>
        public void AddToSOLineImports(SOLineImport sOLineImport)
        {
            base.AddObject("SOLineImports", sOLineImport);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PendReceivers EntitySet.
        /// </summary>
        public void AddToPendReceivers(PendReceiver pendReceiver)
        {
            base.AddObject("PendReceivers", pendReceiver);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the POLines EntitySet.
        /// </summary>
        public void AddToPOLines(POLine pOLine)
        {
            base.AddObject("POLines", pOLine);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the POLineDists EntitySet.
        /// </summary>
        public void AddToPOLineDists(POLineDist pOLineDist)
        {
            base.AddObject("POLineDists", pOLineDist);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PurchOrders EntitySet.
        /// </summary>
        public void AddToPurchOrders(PurchOrder purchOrder)
        {
            base.AddObject("PurchOrders", purchOrder);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PurchOrderLogs EntitySet.
        /// </summary>
        public void AddToPurchOrderLogs(PurchOrderLog purchOrderLog)
        {
            base.AddObject("PurchOrderLogs", purchOrderLog);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ReceiverLogs EntitySet.
        /// </summary>
        public void AddToReceiverLogs(ReceiverLog receiverLog)
        {
            base.AddObject("ReceiverLogs", receiverLog);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ARBatches EntitySet.
        /// </summary>
        public void AddToARBatches(ARBatch aRBatch)
        {
            base.AddObject("ARBatches", aRBatch);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CustomerPaymentAppls EntitySet.
        /// </summary>
        public void AddToCustomerPaymentAppls(CustomerPaymentAppl customerPaymentAppl)
        {
            base.AddObject("CustomerPaymentAppls", customerPaymentAppl);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CustomerPaymentLogs EntitySet.
        /// </summary>
        public void AddToCustomerPaymentLogs(CustomerPaymentLog customerPaymentLog)
        {
            base.AddObject("CustomerPaymentLogs", customerPaymentLog);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PendingCustomerPayments EntitySet.
        /// </summary>
        public void AddToPendingCustomerPayments(PendingCustomerPayment pendingCustomerPayment)
        {
            base.AddObject("PendingCustomerPayments", pendingCustomerPayment);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PendingCustomerPaymentAppls EntitySet.
        /// </summary>
        public void AddToPendingCustomerPaymentAppls(PendingCustomerPaymentAppl pendingCustomerPaymentAppl)
        {
            base.AddObject("PendingCustomerPaymentAppls", pendingCustomerPaymentAppl);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the AROptions EntitySet.
        /// </summary>
        public void AddToAROptions(AROption aROption)
        {
            base.AddObject("AROptions", aROption);
        }

        #endregion

        #region Methods

    
        /// <summary>
        /// There are no comments for GetNextSurrogateKey in the schema.
        /// </summary>
        public virtual void GetNextSurrogateKey (string iTableName, ref int? oNewKey)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"Context.GetNextSurrogateKey";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter iTableNameParameter = new EntityParameter("iTableName", System.Data.DbType.String);
                iTableNameParameter.Direction = ParameterDirection.Input;
                if (iTableName != null)
                  iTableNameParameter.Value = iTableName;
                command.Parameters.Add(iTableNameParameter);
                EntityParameter oNewKeyParameter = new EntityParameter("oNewKey", System.Data.DbType.Int32);
                oNewKeyParameter.Direction = ParameterDirection.InputOutput;
                if (oNewKey.HasValue)
                  oNewKeyParameter.Value = oNewKey;
                command.Parameters.Add(oNewKeyParameter);
                command.ExecuteNonQuery();
                if (oNewKeyParameter.Value != null && !(oNewKeyParameter.Value is System.DBNull))
                  oNewKey = (int?)oNewKeyParameter.Value;
                else
                  oNewKey = default(int?);
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for CreateWorkOrderSteps in the schema.
        /// </summary>
        public virtual void CreateWorkOrderSteps (string iCompanyId, int? iWorkOrderKey, int? iRoutingKey, decimal? iLevel, short? iPhantomAsSubAssm, string iBackFlush, decimal? iPhantomMaterReqPer, int? iPhantomItemKey, ref int? oRowKey, short? optInclCommentOnlyMatItem)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"Context.CreateWorkOrderSteps";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter iCompanyIdParameter = new EntityParameter("iCompanyId", System.Data.DbType.String);
                iCompanyIdParameter.Direction = ParameterDirection.Input;
                if (iCompanyId != null)
                  iCompanyIdParameter.Value = iCompanyId;
                command.Parameters.Add(iCompanyIdParameter);
                EntityParameter iWorkOrderKeyParameter = new EntityParameter("iWorkOrderKey", System.Data.DbType.Int32);
                iWorkOrderKeyParameter.Direction = ParameterDirection.Input;
                if (iWorkOrderKey.HasValue)
                  iWorkOrderKeyParameter.Value = iWorkOrderKey;
                command.Parameters.Add(iWorkOrderKeyParameter);
                EntityParameter iRoutingKeyParameter = new EntityParameter("iRoutingKey", System.Data.DbType.Int32);
                iRoutingKeyParameter.Direction = ParameterDirection.Input;
                if (iRoutingKey.HasValue)
                  iRoutingKeyParameter.Value = iRoutingKey;
                command.Parameters.Add(iRoutingKeyParameter);
                EntityParameter iLevelParameter = new EntityParameter("iLevel", System.Data.DbType.Decimal);
                iLevelParameter.Direction = ParameterDirection.Input;
                if (iLevel.HasValue)
                  iLevelParameter.Value = iLevel;
                command.Parameters.Add(iLevelParameter);
                EntityParameter iPhantomAsSubAssmParameter = new EntityParameter("iPhantomAsSubAssm", System.Data.DbType.Int16);
                iPhantomAsSubAssmParameter.Direction = ParameterDirection.Input;
                if (iPhantomAsSubAssm.HasValue)
                  iPhantomAsSubAssmParameter.Value = iPhantomAsSubAssm;
                command.Parameters.Add(iPhantomAsSubAssmParameter);
                EntityParameter iBackFlushParameter = new EntityParameter("iBackFlush", System.Data.DbType.String);
                iBackFlushParameter.Direction = ParameterDirection.Input;
                if (iBackFlush != null)
                  iBackFlushParameter.Value = iBackFlush;
                command.Parameters.Add(iBackFlushParameter);
                EntityParameter iPhantomMaterReqPerParameter = new EntityParameter("iPhantomMaterReqPer", System.Data.DbType.Decimal);
                iPhantomMaterReqPerParameter.Direction = ParameterDirection.Input;
                if (iPhantomMaterReqPer.HasValue)
                  iPhantomMaterReqPerParameter.Value = iPhantomMaterReqPer;
                command.Parameters.Add(iPhantomMaterReqPerParameter);
                EntityParameter iPhantomItemKeyParameter = new EntityParameter("iPhantomItemKey", System.Data.DbType.Int32);
                iPhantomItemKeyParameter.Direction = ParameterDirection.Input;
                if (iPhantomItemKey.HasValue)
                  iPhantomItemKeyParameter.Value = iPhantomItemKey;
                command.Parameters.Add(iPhantomItemKeyParameter);
                EntityParameter oRowKeyParameter = new EntityParameter("oRowKey", System.Data.DbType.Int32);
                oRowKeyParameter.Direction = ParameterDirection.InputOutput;
                if (oRowKey.HasValue)
                  oRowKeyParameter.Value = oRowKey;
                command.Parameters.Add(oRowKeyParameter);
                EntityParameter optInclCommentOnlyMatItemParameter = new EntityParameter("optInclCommentOnlyMatItem", System.Data.DbType.Int16);
                optInclCommentOnlyMatItemParameter.Direction = ParameterDirection.Input;
                if (optInclCommentOnlyMatItem.HasValue)
                  optInclCommentOnlyMatItemParameter.Value = optInclCommentOnlyMatItem;
                command.Parameters.Add(optInclCommentOnlyMatItemParameter);
                command.ExecuteNonQuery();
                if (oRowKeyParameter.Value != null && !(oRowKeyParameter.Value is System.DBNull))
                  oRowKey = (int?)oRowKeyParameter.Value;
                else
                  oRowKey = default(int?);
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for GiveNextJrnlNo in the schema.
        /// </summary>
        public virtual void GiveNextJrnlNo (string iCompanyID, int? iJrnlKey, int? iCommitFlag, ref int? oJrnlNo, ref int? oRetVal)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"Context.GiveNextJrnlNo";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter iCompanyIDParameter = new EntityParameter("iCompanyID", System.Data.DbType.String);
                iCompanyIDParameter.Direction = ParameterDirection.Input;
                if (iCompanyID != null)
                  iCompanyIDParameter.Value = iCompanyID;
                command.Parameters.Add(iCompanyIDParameter);
                EntityParameter iJrnlKeyParameter = new EntityParameter("iJrnlKey", System.Data.DbType.Int32);
                iJrnlKeyParameter.Direction = ParameterDirection.Input;
                if (iJrnlKey.HasValue)
                  iJrnlKeyParameter.Value = iJrnlKey;
                command.Parameters.Add(iJrnlKeyParameter);
                EntityParameter iCommitFlagParameter = new EntityParameter("iCommitFlag", System.Data.DbType.Int32);
                iCommitFlagParameter.Direction = ParameterDirection.Input;
                if (iCommitFlag.HasValue)
                  iCommitFlagParameter.Value = iCommitFlag;
                command.Parameters.Add(iCommitFlagParameter);
                EntityParameter oJrnlNoParameter = new EntityParameter("oJrnlNo", System.Data.DbType.Int32);
                oJrnlNoParameter.Direction = ParameterDirection.InputOutput;
                if (oJrnlNo.HasValue)
                  oJrnlNoParameter.Value = oJrnlNo;
                command.Parameters.Add(oJrnlNoParameter);
                EntityParameter oRetValParameter = new EntityParameter("oRetVal", System.Data.DbType.Int32);
                oRetValParameter.Direction = ParameterDirection.InputOutput;
                if (oRetVal.HasValue)
                  oRetValParameter.Value = oRetVal;
                command.Parameters.Add(oRetValParameter);
                command.ExecuteNonQuery();
                if (oJrnlNoParameter.Value != null && !(oJrnlNoParameter.Value is System.DBNull))
                  oJrnlNo = (int?)oJrnlNoParameter.Value;
                else
                  oJrnlNo = default(int?);
                if (oRetValParameter.Value != null && !(oRetValParameter.Value is System.DBNull))
                  oRetVal = (int?)oRetValParameter.Value;
                else
                  oRetVal = default(int?);
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for IMSaveBinTransferTrnx in the schema.
        /// </summary>
        public virtual void IMSaveBinTransferTrnx (string iCompanyID, global::System.DateTime? iBusinessDate, ref int? oRetVal)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"Context.IMSaveBinTransferTrnx";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter iCompanyIDParameter = new EntityParameter("iCompanyID", System.Data.DbType.String);
                iCompanyIDParameter.Direction = ParameterDirection.Input;
                if (iCompanyID != null)
                  iCompanyIDParameter.Value = iCompanyID;
                command.Parameters.Add(iCompanyIDParameter);
                EntityParameter iBusinessDateParameter = new EntityParameter("iBusinessDate", System.Data.DbType.DateTime);
                iBusinessDateParameter.Direction = ParameterDirection.Input;
                if (iBusinessDate.HasValue)
                  iBusinessDateParameter.Value = iBusinessDate;
                command.Parameters.Add(iBusinessDateParameter);
                EntityParameter oRetValParameter = new EntityParameter("oRetVal", System.Data.DbType.Int32);
                oRetValParameter.Direction = ParameterDirection.InputOutput;
                if (oRetVal.HasValue)
                  oRetValParameter.Value = oRetVal;
                command.Parameters.Add(oRetValParameter);
                command.ExecuteNonQuery();
                if (oRetValParameter.Value != null && !(oRetValParameter.Value is System.DBNull))
                  oRetVal = (int?)oRetValParameter.Value;
                else
                  oRetVal = default(int?);
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for SOImportSalesOrder in the schema.
        /// </summary>
        public virtual void SOImportSalesOrder (string iCompanyID, string iUserID, int? iSOKeyIn, ref short? oRetVal, ref int? oSpid, ref int? oSOKey)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"Context.SOImportSalesOrder";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter iCompanyIDParameter = new EntityParameter("iCompanyID", System.Data.DbType.String);
                iCompanyIDParameter.Direction = ParameterDirection.Input;
                if (iCompanyID != null)
                  iCompanyIDParameter.Value = iCompanyID;
                command.Parameters.Add(iCompanyIDParameter);
                EntityParameter iUserIDParameter = new EntityParameter("iUserID", System.Data.DbType.String);
                iUserIDParameter.Direction = ParameterDirection.Input;
                if (iUserID != null)
                  iUserIDParameter.Value = iUserID;
                command.Parameters.Add(iUserIDParameter);
                EntityParameter iSOKeyInParameter = new EntityParameter("iSOKeyIn", System.Data.DbType.Int32);
                iSOKeyInParameter.Direction = ParameterDirection.Input;
                if (iSOKeyIn.HasValue)
                  iSOKeyInParameter.Value = iSOKeyIn;
                command.Parameters.Add(iSOKeyInParameter);
                EntityParameter oRetValParameter = new EntityParameter("oRetVal", System.Data.DbType.Int16);
                oRetValParameter.Direction = ParameterDirection.InputOutput;
                if (oRetVal.HasValue)
                  oRetValParameter.Value = oRetVal;
                command.Parameters.Add(oRetValParameter);
                EntityParameter oSpidParameter = new EntityParameter("oSpid", System.Data.DbType.Int32);
                oSpidParameter.Direction = ParameterDirection.InputOutput;
                if (oSpid.HasValue)
                  oSpidParameter.Value = oSpid;
                command.Parameters.Add(oSpidParameter);
                EntityParameter oSOKeyParameter = new EntityParameter("oSOKey", System.Data.DbType.Int32);
                oSOKeyParameter.Direction = ParameterDirection.InputOutput;
                if (oSOKey.HasValue)
                  oSOKeyParameter.Value = oSOKey;
                command.Parameters.Add(oSOKeyParameter);
                command.ExecuteNonQuery();
                if (oRetValParameter.Value != null && !(oRetValParameter.Value is System.DBNull))
                  oRetVal = (short?)oRetValParameter.Value;
                else
                  oRetVal = default(short?);
                if (oSpidParameter.Value != null && !(oSpidParameter.Value is System.DBNull))
                  oSpid = (int?)oSpidParameter.Value;
                else
                  oSpid = default(int?);
                if (oSOKeyParameter.Value != null && !(oSOKeyParameter.Value is System.DBNull))
                  oSOKey = (int?)oSOKeyParameter.Value;
                else
                  oSOKey = default(int?);
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

        #endregion
    }

    #endregion
}

namespace Net4Sage.DataAccessModel
{

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.TranTypeCompany in the schema.
    /// </summary>
    /// <KeyProperties>
    /// CompanyID
    /// TranType
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="TranTypeCompany")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TranTypeCompany : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new TranTypeCompany object.
        /// </summary>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="tranType">Initial value of TranType.</param>
        /// <param name="nextTranNo">Initial value of NextTranNo.</param>
        /// <param name="tranTypeID">Initial value of TranTypeID.</param>
        public static TranTypeCompany CreateTranTypeCompany(string companyID, int tranType, int nextTranNo, string tranTypeID)
        {
            TranTypeCompany tranTypeCompany = new TranTypeCompany();
            tranTypeCompany.CompanyID = companyID;
            tranTypeCompany.TranType = tranType;
            tranTypeCompany.NextTranNo = nextTranNo;
            tranTypeCompany.TranTypeID = tranTypeID;
            return tranTypeCompany;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for TranType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int TranType
        {
            get
            {
                int value = _TranType;
                OnGetTranType(ref value);
                return value;
            }
            set
            {
                if (_TranType != value)
                {
                  OnTranTypeChanging(ref value);
                  ReportPropertyChanging("TranType");
                  _TranType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranType");
                  OnTranTypeChanged();
              }
            }
        }
        private int _TranType;
        partial void OnGetTranType(ref int value);
        partial void OnTranTypeChanging(ref int value);
        partial void OnTranTypeChanged();
    
        /// <summary>
        /// There are no comments for JrnlKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? JrnlKey
        {
            get
            {
                int? value = _JrnlKey;
                OnGetJrnlKey(ref value);
                return value;
            }
            set
            {
                if (_JrnlKey != value)
                {
                  OnJrnlKeyChanging(ref value);
                  ReportPropertyChanging("JrnlKey");
                  _JrnlKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("JrnlKey");
                  OnJrnlKeyChanged();
              }
            }
        }
        private int? _JrnlKey;
        partial void OnGetJrnlKey(ref int? value);
        partial void OnJrnlKeyChanging(ref int? value);
        partial void OnJrnlKeyChanged();
    
        /// <summary>
        /// There are no comments for NextTranNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int NextTranNo
        {
            get
            {
                int value = _NextTranNo;
                OnGetNextTranNo(ref value);
                return value;
            }
            set
            {
                if (_NextTranNo != value)
                {
                  OnNextTranNoChanging(ref value);
                  ReportPropertyChanging("NextTranNo");
                  _NextTranNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NextTranNo");
                  OnNextTranNoChanged();
              }
            }
        }
        private int _NextTranNo = 1;
        partial void OnGetNextTranNo(ref int value);
        partial void OnNextTranNoChanging(ref int value);
        partial void OnNextTranNoChanged();
    
        /// <summary>
        /// There are no comments for TranTypeID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string TranTypeID
        {
            get
            {
                string value = _TranTypeID;
                OnGetTranTypeID(ref value);
                return value;
            }
            set
            {
                if (_TranTypeID != value)
                {
                  OnTranTypeIDChanging(ref value);
                  ReportPropertyChanging("TranTypeID");
                  _TranTypeID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TranTypeID");
                  OnTranTypeIDChanged();
              }
            }
        }
        private string _TranTypeID;
        partial void OnGetTranTypeID(ref string value);
        partial void OnTranTypeIDChanging(ref string value);
        partial void OnTranTypeIDChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.RouteDetail in the schema.
    /// </summary>
    /// <KeyProperties>
    /// RoutingStepKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="RouteDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RouteDetail : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new RouteDetail object.
        /// </summary>
        /// <param name="routingStepKey">Initial value of RoutingStepKey.</param>
        /// <param name="backFlush">Initial value of BackFlush.</param>
        /// <param name="backFlushFromPrefBin">Initial value of BackFlushFromPrefBin.</param>
        /// <param name="backFlushResetHours">Initial value of BackFlushResetHours.</param>
        /// <param name="backFlushSetupHours">Initial value of BackFlushSetupHours.</param>
        /// <param name="effectPcsHr">Initial value of EffectPcsHr.</param>
        /// <param name="effectPercent">Initial value of EffectPercent.</param>
        /// <param name="materReqPer">Initial value of MaterReqPer.</param>
        /// <param name="matNonInvtUnitCost">Initial value of MatNonInvtUnitCost.</param>
        /// <param name="matReqPc">Initial value of MatReqPc.</param>
        /// <param name="moveHrs">Initial value of MoveHrs.</param>
        /// <param name="operationKey">Initial value of OperationKey.</param>
        /// <param name="operationType">Initial value of OperationType.</param>
        /// <param name="operCostToWip">Initial value of OperCostToWip.</param>
        /// <param name="ovrdMatNonInvtUnitCost">Initial value of OvrdMatNonInvtUnitCost.</param>
        /// <param name="pcsB4Reset">Initial value of PcsB4Reset.</param>
        /// <param name="pcsHr">Initial value of PcsHr.</param>
        /// <param name="phantomPart">Initial value of PhantomPart.</param>
        /// <param name="progressStep">Initial value of ProgressStep.</param>
        /// <param name="qTYCycle">Initial value of QTYCycle.</param>
        /// <param name="queueHrs">Initial value of QueueHrs.</param>
        /// <param name="resetUpHr">Initial value of ResetUpHr.</param>
        /// <param name="routingKey">Initial value of RoutingKey.</param>
        /// <param name="scrapPcs">Initial value of ScrapPcs.</param>
        /// <param name="scrapPercent">Initial value of ScrapPercent.</param>
        /// <param name="setUpHr">Initial value of SetUpHr.</param>
        /// <param name="stepID">Initial value of StepID.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        /// <param name="useMostRecentECO">Initial value of UseMostRecentECO.</param>
        /// <param name="wrkCntrOperFactor">Initial value of WrkCntrOperFactor.</param>
        public static RouteDetail CreateRouteDetail(int routingStepKey, string backFlush, short backFlushFromPrefBin, short backFlushResetHours, short backFlushSetupHours, decimal effectPcsHr, decimal effectPercent, decimal materReqPer, decimal matNonInvtUnitCost, decimal matReqPc, decimal moveHrs, int operationKey, string operationType, string operCostToWip, short ovrdMatNonInvtUnitCost, decimal pcsB4Reset, decimal pcsHr, short phantomPart, string progressStep, decimal qTYCycle, decimal queueHrs, decimal resetUpHr, int routingKey, decimal scrapPcs, decimal scrapPercent, decimal setUpHr, string stepID, int updateCounter, short useMostRecentECO, decimal wrkCntrOperFactor)
        {
            RouteDetail routeDetail = new RouteDetail();
            routeDetail.RoutingStepKey = routingStepKey;
            routeDetail.BackFlush = backFlush;
            routeDetail.BackFlushFromPrefBin = backFlushFromPrefBin;
            routeDetail.BackFlushResetHours = backFlushResetHours;
            routeDetail.BackFlushSetupHours = backFlushSetupHours;
            routeDetail.EffectPcsHr = effectPcsHr;
            routeDetail.EffectPercent = effectPercent;
            routeDetail.MaterReqPer = materReqPer;
            routeDetail.MatNonInvtUnitCost = matNonInvtUnitCost;
            routeDetail.MatReqPc = matReqPc;
            routeDetail.MoveHrs = moveHrs;
            routeDetail.OperationKey = operationKey;
            routeDetail.OperationType = operationType;
            routeDetail.OperCostToWip = operCostToWip;
            routeDetail.OvrdMatNonInvtUnitCost = ovrdMatNonInvtUnitCost;
            routeDetail.PcsB4Reset = pcsB4Reset;
            routeDetail.PcsHr = pcsHr;
            routeDetail.PhantomPart = phantomPart;
            routeDetail.ProgressStep = progressStep;
            routeDetail.QTYCycle = qTYCycle;
            routeDetail.QueueHrs = queueHrs;
            routeDetail.ResetUpHr = resetUpHr;
            routeDetail.RoutingKey = routingKey;
            routeDetail.ScrapPcs = scrapPcs;
            routeDetail.ScrapPercent = scrapPercent;
            routeDetail.SetUpHr = setUpHr;
            routeDetail.StepID = stepID;
            routeDetail.UpdateCounter = updateCounter;
            routeDetail.UseMostRecentECO = useMostRecentECO;
            routeDetail.WrkCntrOperFactor = wrkCntrOperFactor;
            return routeDetail;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for RoutingStepKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int RoutingStepKey
        {
            get
            {
                int value = _RoutingStepKey;
                OnGetRoutingStepKey(ref value);
                return value;
            }
            set
            {
                if (_RoutingStepKey != value)
                {
                  OnRoutingStepKeyChanging(ref value);
                  ReportPropertyChanging("RoutingStepKey");
                  _RoutingStepKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RoutingStepKey");
                  OnRoutingStepKeyChanged();
              }
            }
        }
        private int _RoutingStepKey;
        partial void OnGetRoutingStepKey(ref int value);
        partial void OnRoutingStepKeyChanging(ref int value);
        partial void OnRoutingStepKeyChanged();
    
        /// <summary>
        /// There are no comments for BackFlush in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string BackFlush
        {
            get
            {
                string value = _BackFlush;
                OnGetBackFlush(ref value);
                return value;
            }
            set
            {
                if (_BackFlush != value)
                {
                  OnBackFlushChanging(ref value);
                  ReportPropertyChanging("BackFlush");
                  _BackFlush = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("BackFlush");
                  OnBackFlushChanged();
              }
            }
        }
        private string _BackFlush;
        partial void OnGetBackFlush(ref string value);
        partial void OnBackFlushChanging(ref string value);
        partial void OnBackFlushChanged();
    
        /// <summary>
        /// There are no comments for BackFlushFromPrefBin in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short BackFlushFromPrefBin
        {
            get
            {
                short value = _BackFlushFromPrefBin;
                OnGetBackFlushFromPrefBin(ref value);
                return value;
            }
            set
            {
                if (_BackFlushFromPrefBin != value)
                {
                  OnBackFlushFromPrefBinChanging(ref value);
                  ReportPropertyChanging("BackFlushFromPrefBin");
                  _BackFlushFromPrefBin = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BackFlushFromPrefBin");
                  OnBackFlushFromPrefBinChanged();
              }
            }
        }
        private short _BackFlushFromPrefBin = 0;
        partial void OnGetBackFlushFromPrefBin(ref short value);
        partial void OnBackFlushFromPrefBinChanging(ref short value);
        partial void OnBackFlushFromPrefBinChanged();
    
        /// <summary>
        /// There are no comments for BackFlushResetHours in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short BackFlushResetHours
        {
            get
            {
                short value = _BackFlushResetHours;
                OnGetBackFlushResetHours(ref value);
                return value;
            }
            set
            {
                if (_BackFlushResetHours != value)
                {
                  OnBackFlushResetHoursChanging(ref value);
                  ReportPropertyChanging("BackFlushResetHours");
                  _BackFlushResetHours = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BackFlushResetHours");
                  OnBackFlushResetHoursChanged();
              }
            }
        }
        private short _BackFlushResetHours = 0;
        partial void OnGetBackFlushResetHours(ref short value);
        partial void OnBackFlushResetHoursChanging(ref short value);
        partial void OnBackFlushResetHoursChanged();
    
        /// <summary>
        /// There are no comments for BackFlushSetupHours in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short BackFlushSetupHours
        {
            get
            {
                short value = _BackFlushSetupHours;
                OnGetBackFlushSetupHours(ref value);
                return value;
            }
            set
            {
                if (_BackFlushSetupHours != value)
                {
                  OnBackFlushSetupHoursChanging(ref value);
                  ReportPropertyChanging("BackFlushSetupHours");
                  _BackFlushSetupHours = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BackFlushSetupHours");
                  OnBackFlushSetupHoursChanged();
              }
            }
        }
        private short _BackFlushSetupHours = 0;
        partial void OnGetBackFlushSetupHours(ref short value);
        partial void OnBackFlushSetupHoursChanging(ref short value);
        partial void OnBackFlushSetupHoursChanged();
    
        /// <summary>
        /// There are no comments for BackFlushWhseBinKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? BackFlushWhseBinKey
        {
            get
            {
                int? value = _BackFlushWhseBinKey;
                OnGetBackFlushWhseBinKey(ref value);
                return value;
            }
            set
            {
                if (_BackFlushWhseBinKey != value)
                {
                  OnBackFlushWhseBinKeyChanging(ref value);
                  ReportPropertyChanging("BackFlushWhseBinKey");
                  _BackFlushWhseBinKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BackFlushWhseBinKey");
                  OnBackFlushWhseBinKeyChanged();
              }
            }
        }
        private int? _BackFlushWhseBinKey;
        partial void OnGetBackFlushWhseBinKey(ref int? value);
        partial void OnBackFlushWhseBinKeyChanging(ref int? value);
        partial void OnBackFlushWhseBinKeyChanged();
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for EffectPcsHr in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal EffectPcsHr
        {
            get
            {
                decimal value = _EffectPcsHr;
                OnGetEffectPcsHr(ref value);
                return value;
            }
            set
            {
                if (_EffectPcsHr != value)
                {
                  OnEffectPcsHrChanging(ref value);
                  ReportPropertyChanging("EffectPcsHr");
                  _EffectPcsHr = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EffectPcsHr");
                  OnEffectPcsHrChanged();
              }
            }
        }
        private decimal _EffectPcsHr = 0m;
        partial void OnGetEffectPcsHr(ref decimal value);
        partial void OnEffectPcsHrChanging(ref decimal value);
        partial void OnEffectPcsHrChanged();
    
        /// <summary>
        /// There are no comments for EffectPercent in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal EffectPercent
        {
            get
            {
                decimal value = _EffectPercent;
                OnGetEffectPercent(ref value);
                return value;
            }
            set
            {
                if (_EffectPercent != value)
                {
                  OnEffectPercentChanging(ref value);
                  ReportPropertyChanging("EffectPercent");
                  _EffectPercent = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EffectPercent");
                  OnEffectPercentChanged();
              }
            }
        }
        private decimal _EffectPercent = 0m;
        partial void OnGetEffectPercent(ref decimal value);
        partial void OnEffectPercentChanging(ref decimal value);
        partial void OnEffectPercentChanged();
    
        /// <summary>
        /// There are no comments for MachineKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? MachineKey
        {
            get
            {
                int? value = _MachineKey;
                OnGetMachineKey(ref value);
                return value;
            }
            set
            {
                if (_MachineKey != value)
                {
                  OnMachineKeyChanging(ref value);
                  ReportPropertyChanging("MachineKey");
                  _MachineKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MachineKey");
                  OnMachineKeyChanged();
              }
            }
        }
        private int? _MachineKey;
        partial void OnGetMachineKey(ref int? value);
        partial void OnMachineKeyChanging(ref int? value);
        partial void OnMachineKeyChanged();
    
        /// <summary>
        /// There are no comments for MaterReqPer in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal MaterReqPer
        {
            get
            {
                decimal value = _MaterReqPer;
                OnGetMaterReqPer(ref value);
                return value;
            }
            set
            {
                if (_MaterReqPer != value)
                {
                  OnMaterReqPerChanging(ref value);
                  ReportPropertyChanging("MaterReqPer");
                  _MaterReqPer = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MaterReqPer");
                  OnMaterReqPerChanged();
              }
            }
        }
        private decimal _MaterReqPer = 0m;
        partial void OnGetMaterReqPer(ref decimal value);
        partial void OnMaterReqPerChanging(ref decimal value);
        partial void OnMaterReqPerChanged();
    
        /// <summary>
        /// There are no comments for MaterValUOMKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? MaterValUOMKey
        {
            get
            {
                int? value = _MaterValUOMKey;
                OnGetMaterValUOMKey(ref value);
                return value;
            }
            set
            {
                if (_MaterValUOMKey != value)
                {
                  OnMaterValUOMKeyChanging(ref value);
                  ReportPropertyChanging("MaterValUOMKey");
                  _MaterValUOMKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MaterValUOMKey");
                  OnMaterValUOMKeyChanged();
              }
            }
        }
        private int? _MaterValUOMKey;
        partial void OnGetMaterValUOMKey(ref int? value);
        partial void OnMaterValUOMKeyChanging(ref int? value);
        partial void OnMaterValUOMKeyChanged();
    
        /// <summary>
        /// There are no comments for MatItemKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? MatItemKey
        {
            get
            {
                int? value = _MatItemKey;
                OnGetMatItemKey(ref value);
                return value;
            }
            set
            {
                if (_MatItemKey != value)
                {
                  OnMatItemKeyChanging(ref value);
                  ReportPropertyChanging("MatItemKey");
                  _MatItemKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MatItemKey");
                  OnMatItemKeyChanged();
              }
            }
        }
        private int? _MatItemKey;
        partial void OnGetMatItemKey(ref int? value);
        partial void OnMatItemKeyChanging(ref int? value);
        partial void OnMatItemKeyChanged();
    
        /// <summary>
        /// There are no comments for MatNonInvtUnitCost in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal MatNonInvtUnitCost
        {
            get
            {
                decimal value = _MatNonInvtUnitCost;
                OnGetMatNonInvtUnitCost(ref value);
                return value;
            }
            set
            {
                if (_MatNonInvtUnitCost != value)
                {
                  OnMatNonInvtUnitCostChanging(ref value);
                  ReportPropertyChanging("MatNonInvtUnitCost");
                  _MatNonInvtUnitCost = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MatNonInvtUnitCost");
                  OnMatNonInvtUnitCostChanged();
              }
            }
        }
        private decimal _MatNonInvtUnitCost = 0m;
        partial void OnGetMatNonInvtUnitCost(ref decimal value);
        partial void OnMatNonInvtUnitCostChanging(ref decimal value);
        partial void OnMatNonInvtUnitCostChanged();
    
        /// <summary>
        /// There are no comments for MatReqPc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal MatReqPc
        {
            get
            {
                decimal value = _MatReqPc;
                OnGetMatReqPc(ref value);
                return value;
            }
            set
            {
                if (_MatReqPc != value)
                {
                  OnMatReqPcChanging(ref value);
                  ReportPropertyChanging("MatReqPc");
                  _MatReqPc = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MatReqPc");
                  OnMatReqPcChanged();
              }
            }
        }
        private decimal _MatReqPc = 0m;
        partial void OnGetMatReqPc(ref decimal value);
        partial void OnMatReqPcChanging(ref decimal value);
        partial void OnMatReqPcChanged();
    
        /// <summary>
        /// There are no comments for MatRoutKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? MatRoutKey
        {
            get
            {
                int? value = _MatRoutKey;
                OnGetMatRoutKey(ref value);
                return value;
            }
            set
            {
                if (_MatRoutKey != value)
                {
                  OnMatRoutKeyChanging(ref value);
                  ReportPropertyChanging("MatRoutKey");
                  _MatRoutKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MatRoutKey");
                  OnMatRoutKeyChanged();
              }
            }
        }
        private int? _MatRoutKey;
        partial void OnGetMatRoutKey(ref int? value);
        partial void OnMatRoutKeyChanging(ref int? value);
        partial void OnMatRoutKeyChanged();
    
        /// <summary>
        /// There are no comments for MoveHrs in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal MoveHrs
        {
            get
            {
                decimal value = _MoveHrs;
                OnGetMoveHrs(ref value);
                return value;
            }
            set
            {
                if (_MoveHrs != value)
                {
                  OnMoveHrsChanging(ref value);
                  ReportPropertyChanging("MoveHrs");
                  _MoveHrs = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MoveHrs");
                  OnMoveHrsChanged();
              }
            }
        }
        private decimal _MoveHrs = 0m;
        partial void OnGetMoveHrs(ref decimal value);
        partial void OnMoveHrsChanging(ref decimal value);
        partial void OnMoveHrsChanged();
    
        /// <summary>
        /// There are no comments for NotesKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? NotesKey
        {
            get
            {
                int? value = _NotesKey;
                OnGetNotesKey(ref value);
                return value;
            }
            set
            {
                if (_NotesKey != value)
                {
                  OnNotesKeyChanging(ref value);
                  ReportPropertyChanging("NotesKey");
                  _NotesKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NotesKey");
                  OnNotesKeyChanged();
              }
            }
        }
        private int? _NotesKey;
        partial void OnGetNotesKey(ref int? value);
        partial void OnNotesKeyChanging(ref int? value);
        partial void OnNotesKeyChanged();
    
        /// <summary>
        /// There are no comments for OperationDesc1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string OperationDesc1
        {
            get
            {
                string value = _OperationDesc1;
                OnGetOperationDesc1(ref value);
                return value;
            }
            set
            {
                if (_OperationDesc1 != value)
                {
                  OnOperationDesc1Changing(ref value);
                  ReportPropertyChanging("OperationDesc1");
                  _OperationDesc1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("OperationDesc1");
                  OnOperationDesc1Changed();
              }
            }
        }
        private string _OperationDesc1;
        partial void OnGetOperationDesc1(ref string value);
        partial void OnOperationDesc1Changing(ref string value);
        partial void OnOperationDesc1Changed();
    
        /// <summary>
        /// There are no comments for OperationDesc2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string OperationDesc2
        {
            get
            {
                string value = _OperationDesc2;
                OnGetOperationDesc2(ref value);
                return value;
            }
            set
            {
                if (_OperationDesc2 != value)
                {
                  OnOperationDesc2Changing(ref value);
                  ReportPropertyChanging("OperationDesc2");
                  _OperationDesc2 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("OperationDesc2");
                  OnOperationDesc2Changed();
              }
            }
        }
        private string _OperationDesc2;
        partial void OnGetOperationDesc2(ref string value);
        partial void OnOperationDesc2Changing(ref string value);
        partial void OnOperationDesc2Changed();
    
        /// <summary>
        /// There are no comments for OperationKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int OperationKey
        {
            get
            {
                int value = _OperationKey;
                OnGetOperationKey(ref value);
                return value;
            }
            set
            {
                if (_OperationKey != value)
                {
                  OnOperationKeyChanging(ref value);
                  ReportPropertyChanging("OperationKey");
                  _OperationKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OperationKey");
                  OnOperationKeyChanged();
              }
            }
        }
        private int _OperationKey;
        partial void OnGetOperationKey(ref int value);
        partial void OnOperationKeyChanging(ref int value);
        partial void OnOperationKeyChanged();
    
        /// <summary>
        /// There are no comments for OperationType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string OperationType
        {
            get
            {
                string value = _OperationType;
                OnGetOperationType(ref value);
                return value;
            }
            set
            {
                if (_OperationType != value)
                {
                  OnOperationTypeChanging(ref value);
                  ReportPropertyChanging("OperationType");
                  _OperationType = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("OperationType");
                  OnOperationTypeChanged();
              }
            }
        }
        private string _OperationType;
        partial void OnGetOperationType(ref string value);
        partial void OnOperationTypeChanging(ref string value);
        partial void OnOperationTypeChanged();
    
        /// <summary>
        /// There are no comments for OperCostToWip in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string OperCostToWip
        {
            get
            {
                string value = _OperCostToWip;
                OnGetOperCostToWip(ref value);
                return value;
            }
            set
            {
                if (_OperCostToWip != value)
                {
                  OnOperCostToWipChanging(ref value);
                  ReportPropertyChanging("OperCostToWip");
                  _OperCostToWip = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("OperCostToWip");
                  OnOperCostToWipChanged();
              }
            }
        }
        private string _OperCostToWip;
        partial void OnGetOperCostToWip(ref string value);
        partial void OnOperCostToWipChanging(ref string value);
        partial void OnOperCostToWipChanged();
    
        /// <summary>
        /// There are no comments for OvrdMatNonInvtUnitCost in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short OvrdMatNonInvtUnitCost
        {
            get
            {
                short value = _OvrdMatNonInvtUnitCost;
                OnGetOvrdMatNonInvtUnitCost(ref value);
                return value;
            }
            set
            {
                if (_OvrdMatNonInvtUnitCost != value)
                {
                  OnOvrdMatNonInvtUnitCostChanging(ref value);
                  ReportPropertyChanging("OvrdMatNonInvtUnitCost");
                  _OvrdMatNonInvtUnitCost = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OvrdMatNonInvtUnitCost");
                  OnOvrdMatNonInvtUnitCostChanged();
              }
            }
        }
        private short _OvrdMatNonInvtUnitCost = 0;
        partial void OnGetOvrdMatNonInvtUnitCost(ref short value);
        partial void OnOvrdMatNonInvtUnitCostChanging(ref short value);
        partial void OnOvrdMatNonInvtUnitCostChanged();
    
        /// <summary>
        /// There are no comments for PcHrHrPc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PcHrHrPc
        {
            get
            {
                string value = _PcHrHrPc;
                OnGetPcHrHrPc(ref value);
                return value;
            }
            set
            {
                if (_PcHrHrPc != value)
                {
                  OnPcHrHrPcChanging(ref value);
                  ReportPropertyChanging("PcHrHrPc");
                  _PcHrHrPc = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PcHrHrPc");
                  OnPcHrHrPcChanged();
              }
            }
        }
        private string _PcHrHrPc;
        partial void OnGetPcHrHrPc(ref string value);
        partial void OnPcHrHrPcChanging(ref string value);
        partial void OnPcHrHrPcChanged();
    
        /// <summary>
        /// There are no comments for PcsB4Reset in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal PcsB4Reset
        {
            get
            {
                decimal value = _PcsB4Reset;
                OnGetPcsB4Reset(ref value);
                return value;
            }
            set
            {
                if (_PcsB4Reset != value)
                {
                  OnPcsB4ResetChanging(ref value);
                  ReportPropertyChanging("PcsB4Reset");
                  _PcsB4Reset = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PcsB4Reset");
                  OnPcsB4ResetChanged();
              }
            }
        }
        private decimal _PcsB4Reset = 0m;
        partial void OnGetPcsB4Reset(ref decimal value);
        partial void OnPcsB4ResetChanging(ref decimal value);
        partial void OnPcsB4ResetChanged();
    
        /// <summary>
        /// There are no comments for PcsHr in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal PcsHr
        {
            get
            {
                decimal value = _PcsHr;
                OnGetPcsHr(ref value);
                return value;
            }
            set
            {
                if (_PcsHr != value)
                {
                  OnPcsHrChanging(ref value);
                  ReportPropertyChanging("PcsHr");
                  _PcsHr = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PcsHr");
                  OnPcsHrChanged();
              }
            }
        }
        private decimal _PcsHr = 0m;
        partial void OnGetPcsHr(ref decimal value);
        partial void OnPcsHrChanging(ref decimal value);
        partial void OnPcsHrChanged();
    
        /// <summary>
        /// There are no comments for PhantomPart in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PhantomPart
        {
            get
            {
                short value = _PhantomPart;
                OnGetPhantomPart(ref value);
                return value;
            }
            set
            {
                if (_PhantomPart != value)
                {
                  OnPhantomPartChanging(ref value);
                  ReportPropertyChanging("PhantomPart");
                  _PhantomPart = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PhantomPart");
                  OnPhantomPartChanged();
              }
            }
        }
        private short _PhantomPart = 0;
        partial void OnGetPhantomPart(ref short value);
        partial void OnPhantomPartChanging(ref short value);
        partial void OnPhantomPartChanged();
    
        /// <summary>
        /// There are no comments for ProduceItemKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ProduceItemKey
        {
            get
            {
                int? value = _ProduceItemKey;
                OnGetProduceItemKey(ref value);
                return value;
            }
            set
            {
                if (_ProduceItemKey != value)
                {
                  OnProduceItemKeyChanging(ref value);
                  ReportPropertyChanging("ProduceItemKey");
                  _ProduceItemKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ProduceItemKey");
                  OnProduceItemKeyChanged();
              }
            }
        }
        private int? _ProduceItemKey;
        partial void OnGetProduceItemKey(ref int? value);
        partial void OnProduceItemKeyChanging(ref int? value);
        partial void OnProduceItemKeyChanged();
    
        /// <summary>
        /// There are no comments for ProgressStep in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string ProgressStep
        {
            get
            {
                string value = _ProgressStep;
                OnGetProgressStep(ref value);
                return value;
            }
            set
            {
                if (_ProgressStep != value)
                {
                  OnProgressStepChanging(ref value);
                  ReportPropertyChanging("ProgressStep");
                  _ProgressStep = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ProgressStep");
                  OnProgressStepChanged();
              }
            }
        }
        private string _ProgressStep;
        partial void OnGetProgressStep(ref string value);
        partial void OnProgressStepChanging(ref string value);
        partial void OnProgressStepChanged();
    
        /// <summary>
        /// There are no comments for QTYCycle in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal QTYCycle
        {
            get
            {
                decimal value = _QTYCycle;
                OnGetQTYCycle(ref value);
                return value;
            }
            set
            {
                if (_QTYCycle != value)
                {
                  OnQTYCycleChanging(ref value);
                  ReportPropertyChanging("QTYCycle");
                  _QTYCycle = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QTYCycle");
                  OnQTYCycleChanged();
              }
            }
        }
        private decimal _QTYCycle = 0m;
        partial void OnGetQTYCycle(ref decimal value);
        partial void OnQTYCycleChanging(ref decimal value);
        partial void OnQTYCycleChanged();
    
        /// <summary>
        /// There are no comments for QTYPerDesc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string QTYPerDesc
        {
            get
            {
                string value = _QTYPerDesc;
                OnGetQTYPerDesc(ref value);
                return value;
            }
            set
            {
                if (_QTYPerDesc != value)
                {
                  OnQTYPerDescChanging(ref value);
                  ReportPropertyChanging("QTYPerDesc");
                  _QTYPerDesc = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("QTYPerDesc");
                  OnQTYPerDescChanged();
              }
            }
        }
        private string _QTYPerDesc;
        partial void OnGetQTYPerDesc(ref string value);
        partial void OnQTYPerDescChanging(ref string value);
        partial void OnQTYPerDescChanged();
    
        /// <summary>
        /// There are no comments for QueueHrs in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal QueueHrs
        {
            get
            {
                decimal value = _QueueHrs;
                OnGetQueueHrs(ref value);
                return value;
            }
            set
            {
                if (_QueueHrs != value)
                {
                  OnQueueHrsChanging(ref value);
                  ReportPropertyChanging("QueueHrs");
                  _QueueHrs = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QueueHrs");
                  OnQueueHrsChanged();
              }
            }
        }
        private decimal _QueueHrs = 0m;
        partial void OnGetQueueHrs(ref decimal value);
        partial void OnQueueHrsChanging(ref decimal value);
        partial void OnQueueHrsChanged();
    
        /// <summary>
        /// There are no comments for ResetUpHr in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal ResetUpHr
        {
            get
            {
                decimal value = _ResetUpHr;
                OnGetResetUpHr(ref value);
                return value;
            }
            set
            {
                if (_ResetUpHr != value)
                {
                  OnResetUpHrChanging(ref value);
                  ReportPropertyChanging("ResetUpHr");
                  _ResetUpHr = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ResetUpHr");
                  OnResetUpHrChanged();
              }
            }
        }
        private decimal _ResetUpHr = 0m;
        partial void OnGetResetUpHr(ref decimal value);
        partial void OnResetUpHrChanging(ref decimal value);
        partial void OnResetUpHrChanged();
    
        /// <summary>
        /// There are no comments for RoutingKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int RoutingKey
        {
            get
            {
                int value = _RoutingKey;
                OnGetRoutingKey(ref value);
                return value;
            }
            set
            {
                if (_RoutingKey != value)
                {
                  OnRoutingKeyChanging(ref value);
                  ReportPropertyChanging("RoutingKey");
                  _RoutingKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RoutingKey");
                  OnRoutingKeyChanged();
              }
            }
        }
        private int _RoutingKey;
        partial void OnGetRoutingKey(ref int value);
        partial void OnRoutingKeyChanging(ref int value);
        partial void OnRoutingKeyChanged();
    
        /// <summary>
        /// There are no comments for ScrapPcs in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal ScrapPcs
        {
            get
            {
                decimal value = _ScrapPcs;
                OnGetScrapPcs(ref value);
                return value;
            }
            set
            {
                if (_ScrapPcs != value)
                {
                  OnScrapPcsChanging(ref value);
                  ReportPropertyChanging("ScrapPcs");
                  _ScrapPcs = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ScrapPcs");
                  OnScrapPcsChanged();
              }
            }
        }
        private decimal _ScrapPcs = 0m;
        partial void OnGetScrapPcs(ref decimal value);
        partial void OnScrapPcsChanging(ref decimal value);
        partial void OnScrapPcsChanged();
    
        /// <summary>
        /// There are no comments for ScrapPercent in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal ScrapPercent
        {
            get
            {
                decimal value = _ScrapPercent;
                OnGetScrapPercent(ref value);
                return value;
            }
            set
            {
                if (_ScrapPercent != value)
                {
                  OnScrapPercentChanging(ref value);
                  ReportPropertyChanging("ScrapPercent");
                  _ScrapPercent = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ScrapPercent");
                  OnScrapPercentChanged();
              }
            }
        }
        private decimal _ScrapPercent = 0m;
        partial void OnGetScrapPercent(ref decimal value);
        partial void OnScrapPercentChanging(ref decimal value);
        partial void OnScrapPercentChanged();
    
        /// <summary>
        /// There are no comments for SetUpHr in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal SetUpHr
        {
            get
            {
                decimal value = _SetUpHr;
                OnGetSetUpHr(ref value);
                return value;
            }
            set
            {
                if (_SetUpHr != value)
                {
                  OnSetUpHrChanging(ref value);
                  ReportPropertyChanging("SetUpHr");
                  _SetUpHr = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SetUpHr");
                  OnSetUpHrChanged();
              }
            }
        }
        private decimal _SetUpHr = 0m;
        partial void OnGetSetUpHr(ref decimal value);
        partial void OnSetUpHrChanging(ref decimal value);
        partial void OnSetUpHrChanged();
    
        /// <summary>
        /// There are no comments for StepID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string StepID
        {
            get
            {
                string value = _StepID;
                OnGetStepID(ref value);
                return value;
            }
            set
            {
                if (_StepID != value)
                {
                  OnStepIDChanging(ref value);
                  ReportPropertyChanging("StepID");
                  _StepID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("StepID");
                  OnStepIDChanged();
              }
            }
        }
        private string _StepID;
        partial void OnGetStepID(ref string value);
        partial void OnStepIDChanging(ref string value);
        partial void OnStepIDChanged();
    
        /// <summary>
        /// There are no comments for ToolKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ToolKey
        {
            get
            {
                int? value = _ToolKey;
                OnGetToolKey(ref value);
                return value;
            }
            set
            {
                if (_ToolKey != value)
                {
                  OnToolKeyChanging(ref value);
                  ReportPropertyChanging("ToolKey");
                  _ToolKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ToolKey");
                  OnToolKeyChanged();
              }
            }
        }
        private int? _ToolKey;
        partial void OnGetToolKey(ref int? value);
        partial void OnToolKeyChanging(ref int? value);
        partial void OnToolKeyChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();
    
        /// <summary>
        /// There are no comments for UseMostRecentECO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short UseMostRecentECO
        {
            get
            {
                short value = _UseMostRecentECO;
                OnGetUseMostRecentECO(ref value);
                return value;
            }
            set
            {
                if (_UseMostRecentECO != value)
                {
                  OnUseMostRecentECOChanging(ref value);
                  ReportPropertyChanging("UseMostRecentECO");
                  _UseMostRecentECO = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UseMostRecentECO");
                  OnUseMostRecentECOChanged();
              }
            }
        }
        private short _UseMostRecentECO = 1;
        partial void OnGetUseMostRecentECO(ref short value);
        partial void OnUseMostRecentECOChanging(ref short value);
        partial void OnUseMostRecentECOChanged();
    
        /// <summary>
        /// There are no comments for WhseKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? WhseKey
        {
            get
            {
                int? value = _WhseKey;
                OnGetWhseKey(ref value);
                return value;
            }
            set
            {
                if (_WhseKey != value)
                {
                  OnWhseKeyChanging(ref value);
                  ReportPropertyChanging("WhseKey");
                  _WhseKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WhseKey");
                  OnWhseKeyChanged();
              }
            }
        }
        private int? _WhseKey;
        partial void OnGetWhseKey(ref int? value);
        partial void OnWhseKeyChanging(ref int? value);
        partial void OnWhseKeyChanged();
    
        /// <summary>
        /// There are no comments for WorkCenterKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? WorkCenterKey
        {
            get
            {
                int? value = _WorkCenterKey;
                OnGetWorkCenterKey(ref value);
                return value;
            }
            set
            {
                if (_WorkCenterKey != value)
                {
                  OnWorkCenterKeyChanging(ref value);
                  ReportPropertyChanging("WorkCenterKey");
                  _WorkCenterKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WorkCenterKey");
                  OnWorkCenterKeyChanged();
              }
            }
        }
        private int? _WorkCenterKey;
        partial void OnGetWorkCenterKey(ref int? value);
        partial void OnWorkCenterKeyChanging(ref int? value);
        partial void OnWorkCenterKeyChanged();
    
        /// <summary>
        /// There are no comments for WrkCntrOperFactor in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal WrkCntrOperFactor
        {
            get
            {
                decimal value = _WrkCntrOperFactor;
                OnGetWrkCntrOperFactor(ref value);
                return value;
            }
            set
            {
                if (_WrkCntrOperFactor != value)
                {
                  OnWrkCntrOperFactorChanging(ref value);
                  ReportPropertyChanging("WrkCntrOperFactor");
                  _WrkCntrOperFactor = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WrkCntrOperFactor");
                  OnWrkCntrOperFactorChanged();
              }
            }
        }
        private decimal _WrkCntrOperFactor = 0m;
        partial void OnGetWrkCntrOperFactor(ref decimal value);
        partial void OnWrkCntrOperFactorChanging(ref decimal value);
        partial void OnWrkCntrOperFactorChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Route in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Route_RouteDetails", "Route")]
        public virtual Route Route
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Route>("Net4Sage.DataAccessModel.Route_RouteDetails", "Route").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Route>("Net4Sage.DataAccessModel.Route_RouteDetails", "Route").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Route in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Route> RouteReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Route>("Net4Sage.DataAccessModel.Route_RouteDetails", "Route");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Route>("Net4Sage.DataAccessModel.Route_RouteDetails", "Route", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Route>("Net4Sage.DataAccessModel.Route_RouteDetails", "Route").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for WorkOrderDetails in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "RouteDetails_WorkOrderDetails", "WorkOrderDetails")]
        public virtual EntityCollection<WorkOrderDetails> WorkOrderDetails
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<WorkOrderDetails>("Net4Sage.DataAccessModel.RouteDetails_WorkOrderDetails", "WorkOrderDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<WorkOrderDetails>("Net4Sage.DataAccessModel.RouteDetails_WorkOrderDetails", "WorkOrderDetails", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.Route in the schema.
    /// </summary>
    /// <KeyProperties>
    /// RoutingKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="Route")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Route : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Route object.
        /// </summary>
        /// <param name="routingKey">Initial value of RoutingKey.</param>
        /// <param name="active">Initial value of Active.</param>
        /// <param name="batchSize">Initial value of BatchSize.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="createType">Initial value of CreateType.</param>
        /// <param name="econCycleQty">Initial value of EconCycleQty.</param>
        /// <param name="eCOTrackFlag">Initial value of ECOTrackFlag.</param>
        /// <param name="itemClassKey">Initial value of ItemClassKey.</param>
        /// <param name="itemKey">Initial value of ItemKey.</param>
        /// <param name="maxWOQty">Initial value of MaxWOQty.</param>
        /// <param name="minWOQty">Initial value of MinWOQty.</param>
        /// <param name="netWeightPerPart">Initial value of NetWeightPerPart.</param>
        /// <param name="parentBackFlush">Initial value of ParentBackFlush.</param>
        /// <param name="parentSource">Initial value of ParentSource.</param>
        /// <param name="phantIncLabor">Initial value of PhantIncLabor.</param>
        /// <param name="phantIncMat">Initial value of PhantIncMat.</param>
        /// <param name="phantIncOther">Initial value of PhantIncOther.</param>
        /// <param name="phantIncOut">Initial value of PhantIncOut.</param>
        /// <param name="phantIncProg">Initial value of PhantIncProg.</param>
        /// <param name="planOverPercent">Initial value of PlanOverPercent.</param>
        /// <param name="planWOWindow">Initial value of PlanWOWindow.</param>
        /// <param name="qTYCycle">Initial value of QTYCycle.</param>
        /// <param name="rollUpFlag">Initial value of RollUpFlag.</param>
        /// <param name="routingId">Initial value of RoutingId.</param>
        /// <param name="routType">Initial value of RoutType.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        /// <param name="versionId">Initial value of VersionId.</param>
        public static Route CreateRoute(int routingKey, short active, int batchSize, string companyID, short createType, decimal econCycleQty, short eCOTrackFlag, int itemClassKey, int itemKey, decimal maxWOQty, decimal minWOQty, decimal netWeightPerPart, short parentBackFlush, short parentSource, short phantIncLabor, short phantIncMat, short phantIncOther, short phantIncOut, short phantIncProg, decimal planOverPercent, int planWOWindow, decimal qTYCycle, short rollUpFlag, string routingId, short routType, int updateCounter, string versionId)
        {
            Route route = new Route();
            route.RoutingKey = routingKey;
            route.Active = active;
            route.BatchSize = batchSize;
            route.CompanyID = companyID;
            route.CreateType = createType;
            route.EconCycleQty = econCycleQty;
            route.ECOTrackFlag = eCOTrackFlag;
            route.ItemClassKey = itemClassKey;
            route.ItemKey = itemKey;
            route.MaxWOQty = maxWOQty;
            route.MinWOQty = minWOQty;
            route.NetWeightPerPart = netWeightPerPart;
            route.ParentBackFlush = parentBackFlush;
            route.ParentSource = parentSource;
            route.PhantIncLabor = phantIncLabor;
            route.PhantIncMat = phantIncMat;
            route.PhantIncOther = phantIncOther;
            route.PhantIncOut = phantIncOut;
            route.PhantIncProg = phantIncProg;
            route.PlanOverPercent = planOverPercent;
            route.PlanWOWindow = planWOWindow;
            route.QTYCycle = qTYCycle;
            route.RollUpFlag = rollUpFlag;
            route.RoutingId = routingId;
            route.RoutType = routType;
            route.UpdateCounter = updateCounter;
            route.VersionId = versionId;
            return route;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for RoutingKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int RoutingKey
        {
            get
            {
                int value = _RoutingKey;
                OnGetRoutingKey(ref value);
                return value;
            }
            set
            {
                if (_RoutingKey != value)
                {
                  OnRoutingKeyChanging(ref value);
                  ReportPropertyChanging("RoutingKey");
                  _RoutingKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RoutingKey");
                  OnRoutingKeyChanged();
              }
            }
        }
        private int _RoutingKey;
        partial void OnGetRoutingKey(ref int value);
        partial void OnRoutingKeyChanging(ref int value);
        partial void OnRoutingKeyChanged();
    
        /// <summary>
        /// There are no comments for Active in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Active
        {
            get
            {
                short value = _Active;
                OnGetActive(ref value);
                return value;
            }
            set
            {
                if (_Active != value)
                {
                  OnActiveChanging(ref value);
                  ReportPropertyChanging("Active");
                  _Active = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Active");
                  OnActiveChanged();
              }
            }
        }
        private short _Active = 0;
        partial void OnGetActive(ref short value);
        partial void OnActiveChanging(ref short value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// There are no comments for ApprovalKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ApprovalKey
        {
            get
            {
                int? value = _ApprovalKey;
                OnGetApprovalKey(ref value);
                return value;
            }
            set
            {
                if (_ApprovalKey != value)
                {
                  OnApprovalKeyChanging(ref value);
                  ReportPropertyChanging("ApprovalKey");
                  _ApprovalKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ApprovalKey");
                  OnApprovalKeyChanged();
              }
            }
        }
        private int? _ApprovalKey;
        partial void OnGetApprovalKey(ref int? value);
        partial void OnApprovalKeyChanging(ref int? value);
        partial void OnApprovalKeyChanged();
    
        /// <summary>
        /// There are no comments for BatchSize in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int BatchSize
        {
            get
            {
                int value = _BatchSize;
                OnGetBatchSize(ref value);
                return value;
            }
            set
            {
                if (_BatchSize != value)
                {
                  OnBatchSizeChanging(ref value);
                  ReportPropertyChanging("BatchSize");
                  _BatchSize = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BatchSize");
                  OnBatchSizeChanged();
              }
            }
        }
        private int _BatchSize = 0;
        partial void OnGetBatchSize(ref int value);
        partial void OnBatchSizeChanging(ref int value);
        partial void OnBatchSizeChanged();
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for CreateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CreateDate
        {
            get
            {
                global::System.DateTime? value = _CreateDate;
                OnGetCreateDate(ref value);
                return value;
            }
            set
            {
                if (_CreateDate != value)
                {
                  OnCreateDateChanging(ref value);
                  ReportPropertyChanging("CreateDate");
                  _CreateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateDate");
                  OnCreateDateChanged();
              }
            }
        }
        private global::System.DateTime? _CreateDate;
        partial void OnGetCreateDate(ref global::System.DateTime? value);
        partial void OnCreateDateChanging(ref global::System.DateTime? value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// There are no comments for CreateType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CreateType
        {
            get
            {
                short value = _CreateType;
                OnGetCreateType(ref value);
                return value;
            }
            set
            {
                if (_CreateType != value)
                {
                  OnCreateTypeChanging(ref value);
                  ReportPropertyChanging("CreateType");
                  _CreateType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateType");
                  OnCreateTypeChanged();
              }
            }
        }
        private short _CreateType = 0;
        partial void OnGetCreateType(ref short value);
        partial void OnCreateTypeChanging(ref short value);
        partial void OnCreateTypeChanged();
    
        /// <summary>
        /// There are no comments for CreateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CreateUserID
        {
            get
            {
                string value = _CreateUserID;
                OnGetCreateUserID(ref value);
                return value;
            }
            set
            {
                if (_CreateUserID != value)
                {
                  OnCreateUserIDChanging(ref value);
                  ReportPropertyChanging("CreateUserID");
                  _CreateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CreateUserID");
                  OnCreateUserIDChanged();
              }
            }
        }
        private string _CreateUserID;
        partial void OnGetCreateUserID(ref string value);
        partial void OnCreateUserIDChanging(ref string value);
        partial void OnCreateUserIDChanged();
    
        /// <summary>
        /// There are no comments for CustKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CustKey
        {
            get
            {
                int? value = _CustKey;
                OnGetCustKey(ref value);
                return value;
            }
            set
            {
                if (_CustKey != value)
                {
                  OnCustKeyChanging(ref value);
                  ReportPropertyChanging("CustKey");
                  _CustKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustKey");
                  OnCustKeyChanged();
              }
            }
        }
        private int? _CustKey;
        partial void OnGetCustKey(ref int? value);
        partial void OnCustKeyChanging(ref int? value);
        partial void OnCustKeyChanged();
    
        /// <summary>
        /// There are no comments for EconCycleQty in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal EconCycleQty
        {
            get
            {
                decimal value = _EconCycleQty;
                OnGetEconCycleQty(ref value);
                return value;
            }
            set
            {
                if (_EconCycleQty != value)
                {
                  OnEconCycleQtyChanging(ref value);
                  ReportPropertyChanging("EconCycleQty");
                  _EconCycleQty = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EconCycleQty");
                  OnEconCycleQtyChanged();
              }
            }
        }
        private decimal _EconCycleQty = 0m;
        partial void OnGetEconCycleQty(ref decimal value);
        partial void OnEconCycleQtyChanging(ref decimal value);
        partial void OnEconCycleQtyChanged();
    
        /// <summary>
        /// There are no comments for ECOTrackFlag in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ECOTrackFlag
        {
            get
            {
                short value = _ECOTrackFlag;
                OnGetECOTrackFlag(ref value);
                return value;
            }
            set
            {
                if (_ECOTrackFlag != value)
                {
                  OnECOTrackFlagChanging(ref value);
                  ReportPropertyChanging("ECOTrackFlag");
                  _ECOTrackFlag = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ECOTrackFlag");
                  OnECOTrackFlagChanged();
              }
            }
        }
        private short _ECOTrackFlag = 0;
        partial void OnGetECOTrackFlag(ref short value);
        partial void OnECOTrackFlagChanging(ref short value);
        partial void OnECOTrackFlagChanged();
    
        /// <summary>
        /// There are no comments for ItemClassKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ItemClassKey
        {
            get
            {
                int value = _ItemClassKey;
                OnGetItemClassKey(ref value);
                return value;
            }
            set
            {
                if (_ItemClassKey != value)
                {
                  OnItemClassKeyChanging(ref value);
                  ReportPropertyChanging("ItemClassKey");
                  _ItemClassKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ItemClassKey");
                  OnItemClassKeyChanged();
              }
            }
        }
        private int _ItemClassKey;
        partial void OnGetItemClassKey(ref int value);
        partial void OnItemClassKeyChanging(ref int value);
        partial void OnItemClassKeyChanged();
    
        /// <summary>
        /// There are no comments for ItemKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ItemKey
        {
            get
            {
                int value = _ItemKey;
                OnGetItemKey(ref value);
                return value;
            }
            set
            {
                if (_ItemKey != value)
                {
                  OnItemKeyChanging(ref value);
                  ReportPropertyChanging("ItemKey");
                  _ItemKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ItemKey");
                  OnItemKeyChanged();
              }
            }
        }
        private int _ItemKey;
        partial void OnGetItemKey(ref int value);
        partial void OnItemKeyChanging(ref int value);
        partial void OnItemKeyChanged();
    
        /// <summary>
        /// There are no comments for MaxWOQty in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal MaxWOQty
        {
            get
            {
                decimal value = _MaxWOQty;
                OnGetMaxWOQty(ref value);
                return value;
            }
            set
            {
                if (_MaxWOQty != value)
                {
                  OnMaxWOQtyChanging(ref value);
                  ReportPropertyChanging("MaxWOQty");
                  _MaxWOQty = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MaxWOQty");
                  OnMaxWOQtyChanged();
              }
            }
        }
        private decimal _MaxWOQty = 0m;
        partial void OnGetMaxWOQty(ref decimal value);
        partial void OnMaxWOQtyChanging(ref decimal value);
        partial void OnMaxWOQtyChanged();
    
        /// <summary>
        /// There are no comments for MinWOQty in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal MinWOQty
        {
            get
            {
                decimal value = _MinWOQty;
                OnGetMinWOQty(ref value);
                return value;
            }
            set
            {
                if (_MinWOQty != value)
                {
                  OnMinWOQtyChanging(ref value);
                  ReportPropertyChanging("MinWOQty");
                  _MinWOQty = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MinWOQty");
                  OnMinWOQtyChanged();
              }
            }
        }
        private decimal _MinWOQty = 0m;
        partial void OnGetMinWOQty(ref decimal value);
        partial void OnMinWOQtyChanging(ref decimal value);
        partial void OnMinWOQtyChanged();
    
        /// <summary>
        /// There are no comments for NetWeightPerPart in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal NetWeightPerPart
        {
            get
            {
                decimal value = _NetWeightPerPart;
                OnGetNetWeightPerPart(ref value);
                return value;
            }
            set
            {
                if (_NetWeightPerPart != value)
                {
                  OnNetWeightPerPartChanging(ref value);
                  ReportPropertyChanging("NetWeightPerPart");
                  _NetWeightPerPart = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NetWeightPerPart");
                  OnNetWeightPerPartChanged();
              }
            }
        }
        private decimal _NetWeightPerPart = 0m;
        partial void OnGetNetWeightPerPart(ref decimal value);
        partial void OnNetWeightPerPartChanging(ref decimal value);
        partial void OnNetWeightPerPartChanged();
    
        /// <summary>
        /// There are no comments for NotesKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? NotesKey
        {
            get
            {
                int? value = _NotesKey;
                OnGetNotesKey(ref value);
                return value;
            }
            set
            {
                if (_NotesKey != value)
                {
                  OnNotesKeyChanging(ref value);
                  ReportPropertyChanging("NotesKey");
                  _NotesKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NotesKey");
                  OnNotesKeyChanged();
              }
            }
        }
        private int? _NotesKey;
        partial void OnGetNotesKey(ref int? value);
        partial void OnNotesKeyChanging(ref int? value);
        partial void OnNotesKeyChanged();
    
        /// <summary>
        /// There are no comments for ParentBackFlush in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ParentBackFlush
        {
            get
            {
                short value = _ParentBackFlush;
                OnGetParentBackFlush(ref value);
                return value;
            }
            set
            {
                if (_ParentBackFlush != value)
                {
                  OnParentBackFlushChanging(ref value);
                  ReportPropertyChanging("ParentBackFlush");
                  _ParentBackFlush = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ParentBackFlush");
                  OnParentBackFlushChanged();
              }
            }
        }
        private short _ParentBackFlush = 0;
        partial void OnGetParentBackFlush(ref short value);
        partial void OnParentBackFlushChanging(ref short value);
        partial void OnParentBackFlushChanged();
    
        /// <summary>
        /// There are no comments for ParentRoutingKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ParentRoutingKey
        {
            get
            {
                int? value = _ParentRoutingKey;
                OnGetParentRoutingKey(ref value);
                return value;
            }
            set
            {
                if (_ParentRoutingKey != value)
                {
                  OnParentRoutingKeyChanging(ref value);
                  ReportPropertyChanging("ParentRoutingKey");
                  _ParentRoutingKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ParentRoutingKey");
                  OnParentRoutingKeyChanged();
              }
            }
        }
        private int? _ParentRoutingKey;
        partial void OnGetParentRoutingKey(ref int? value);
        partial void OnParentRoutingKeyChanging(ref int? value);
        partial void OnParentRoutingKeyChanged();
    
        /// <summary>
        /// There are no comments for ParentSource in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ParentSource
        {
            get
            {
                short value = _ParentSource;
                OnGetParentSource(ref value);
                return value;
            }
            set
            {
                if (_ParentSource != value)
                {
                  OnParentSourceChanging(ref value);
                  ReportPropertyChanging("ParentSource");
                  _ParentSource = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ParentSource");
                  OnParentSourceChanged();
              }
            }
        }
        private short _ParentSource = -1;
        partial void OnGetParentSource(ref short value);
        partial void OnParentSourceChanging(ref short value);
        partial void OnParentSourceChanged();
    
        /// <summary>
        /// There are no comments for PhantIncLabor in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PhantIncLabor
        {
            get
            {
                short value = _PhantIncLabor;
                OnGetPhantIncLabor(ref value);
                return value;
            }
            set
            {
                if (_PhantIncLabor != value)
                {
                  OnPhantIncLaborChanging(ref value);
                  ReportPropertyChanging("PhantIncLabor");
                  _PhantIncLabor = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PhantIncLabor");
                  OnPhantIncLaborChanged();
              }
            }
        }
        private short _PhantIncLabor = 0;
        partial void OnGetPhantIncLabor(ref short value);
        partial void OnPhantIncLaborChanging(ref short value);
        partial void OnPhantIncLaborChanged();
    
        /// <summary>
        /// There are no comments for PhantIncMat in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PhantIncMat
        {
            get
            {
                short value = _PhantIncMat;
                OnGetPhantIncMat(ref value);
                return value;
            }
            set
            {
                if (_PhantIncMat != value)
                {
                  OnPhantIncMatChanging(ref value);
                  ReportPropertyChanging("PhantIncMat");
                  _PhantIncMat = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PhantIncMat");
                  OnPhantIncMatChanged();
              }
            }
        }
        private short _PhantIncMat = 0;
        partial void OnGetPhantIncMat(ref short value);
        partial void OnPhantIncMatChanging(ref short value);
        partial void OnPhantIncMatChanged();
    
        /// <summary>
        /// There are no comments for PhantIncOther in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PhantIncOther
        {
            get
            {
                short value = _PhantIncOther;
                OnGetPhantIncOther(ref value);
                return value;
            }
            set
            {
                if (_PhantIncOther != value)
                {
                  OnPhantIncOtherChanging(ref value);
                  ReportPropertyChanging("PhantIncOther");
                  _PhantIncOther = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PhantIncOther");
                  OnPhantIncOtherChanged();
              }
            }
        }
        private short _PhantIncOther = 0;
        partial void OnGetPhantIncOther(ref short value);
        partial void OnPhantIncOtherChanging(ref short value);
        partial void OnPhantIncOtherChanged();
    
        /// <summary>
        /// There are no comments for PhantIncOut in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PhantIncOut
        {
            get
            {
                short value = _PhantIncOut;
                OnGetPhantIncOut(ref value);
                return value;
            }
            set
            {
                if (_PhantIncOut != value)
                {
                  OnPhantIncOutChanging(ref value);
                  ReportPropertyChanging("PhantIncOut");
                  _PhantIncOut = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PhantIncOut");
                  OnPhantIncOutChanged();
              }
            }
        }
        private short _PhantIncOut = 0;
        partial void OnGetPhantIncOut(ref short value);
        partial void OnPhantIncOutChanging(ref short value);
        partial void OnPhantIncOutChanged();
    
        /// <summary>
        /// There are no comments for PhantIncProg in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PhantIncProg
        {
            get
            {
                short value = _PhantIncProg;
                OnGetPhantIncProg(ref value);
                return value;
            }
            set
            {
                if (_PhantIncProg != value)
                {
                  OnPhantIncProgChanging(ref value);
                  ReportPropertyChanging("PhantIncProg");
                  _PhantIncProg = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PhantIncProg");
                  OnPhantIncProgChanged();
              }
            }
        }
        private short _PhantIncProg = 0;
        partial void OnGetPhantIncProg(ref short value);
        partial void OnPhantIncProgChanging(ref short value);
        partial void OnPhantIncProgChanged();
    
        /// <summary>
        /// There are no comments for PlanOverPercent in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal PlanOverPercent
        {
            get
            {
                decimal value = _PlanOverPercent;
                OnGetPlanOverPercent(ref value);
                return value;
            }
            set
            {
                if (_PlanOverPercent != value)
                {
                  OnPlanOverPercentChanging(ref value);
                  ReportPropertyChanging("PlanOverPercent");
                  _PlanOverPercent = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PlanOverPercent");
                  OnPlanOverPercentChanged();
              }
            }
        }
        private decimal _PlanOverPercent = 0m;
        partial void OnGetPlanOverPercent(ref decimal value);
        partial void OnPlanOverPercentChanging(ref decimal value);
        partial void OnPlanOverPercentChanged();
    
        /// <summary>
        /// There are no comments for PlanWOWindow in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int PlanWOWindow
        {
            get
            {
                int value = _PlanWOWindow;
                OnGetPlanWOWindow(ref value);
                return value;
            }
            set
            {
                if (_PlanWOWindow != value)
                {
                  OnPlanWOWindowChanging(ref value);
                  ReportPropertyChanging("PlanWOWindow");
                  _PlanWOWindow = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PlanWOWindow");
                  OnPlanWOWindowChanged();
              }
            }
        }
        private int _PlanWOWindow = 0;
        partial void OnGetPlanWOWindow(ref int value);
        partial void OnPlanWOWindowChanging(ref int value);
        partial void OnPlanWOWindowChanged();
    
        /// <summary>
        /// There are no comments for QTYCycle in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal QTYCycle
        {
            get
            {
                decimal value = _QTYCycle;
                OnGetQTYCycle(ref value);
                return value;
            }
            set
            {
                if (_QTYCycle != value)
                {
                  OnQTYCycleChanging(ref value);
                  ReportPropertyChanging("QTYCycle");
                  _QTYCycle = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QTYCycle");
                  OnQTYCycleChanged();
              }
            }
        }
        private decimal _QTYCycle = 0m;
        partial void OnGetQTYCycle(ref decimal value);
        partial void OnQTYCycleChanging(ref decimal value);
        partial void OnQTYCycleChanged();
    
        /// <summary>
        /// There are no comments for Reference in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Reference
        {
            get
            {
                string value = _Reference;
                OnGetReference(ref value);
                return value;
            }
            set
            {
                if (_Reference != value)
                {
                  OnReferenceChanging(ref value);
                  ReportPropertyChanging("Reference");
                  _Reference = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Reference");
                  OnReferenceChanged();
              }
            }
        }
        private string _Reference;
        partial void OnGetReference(ref string value);
        partial void OnReferenceChanging(ref string value);
        partial void OnReferenceChanged();
    
        /// <summary>
        /// There are no comments for Revision in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Revision
        {
            get
            {
                string value = _Revision;
                OnGetRevision(ref value);
                return value;
            }
            set
            {
                if (_Revision != value)
                {
                  OnRevisionChanging(ref value);
                  ReportPropertyChanging("Revision");
                  _Revision = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Revision");
                  OnRevisionChanged();
              }
            }
        }
        private string _Revision;
        partial void OnGetRevision(ref string value);
        partial void OnRevisionChanging(ref string value);
        partial void OnRevisionChanged();
    
        /// <summary>
        /// There are no comments for RevisionDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? RevisionDate
        {
            get
            {
                global::System.DateTime? value = _RevisionDate;
                OnGetRevisionDate(ref value);
                return value;
            }
            set
            {
                if (_RevisionDate != value)
                {
                  OnRevisionDateChanging(ref value);
                  ReportPropertyChanging("RevisionDate");
                  _RevisionDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RevisionDate");
                  OnRevisionDateChanged();
              }
            }
        }
        private global::System.DateTime? _RevisionDate;
        partial void OnGetRevisionDate(ref global::System.DateTime? value);
        partial void OnRevisionDateChanging(ref global::System.DateTime? value);
        partial void OnRevisionDateChanged();
    
        /// <summary>
        /// There are no comments for RollUpFlag in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short RollUpFlag
        {
            get
            {
                short value = _RollUpFlag;
                OnGetRollUpFlag(ref value);
                return value;
            }
            set
            {
                if (_RollUpFlag != value)
                {
                  OnRollUpFlagChanging(ref value);
                  ReportPropertyChanging("RollUpFlag");
                  _RollUpFlag = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RollUpFlag");
                  OnRollUpFlagChanged();
              }
            }
        }
        private short _RollUpFlag = 0;
        partial void OnGetRollUpFlag(ref short value);
        partial void OnRollUpFlagChanging(ref short value);
        partial void OnRollUpFlagChanged();
    
        /// <summary>
        /// There are no comments for RoutingId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string RoutingId
        {
            get
            {
                string value = _RoutingId;
                OnGetRoutingId(ref value);
                return value;
            }
            set
            {
                if (_RoutingId != value)
                {
                  OnRoutingIdChanging(ref value);
                  ReportPropertyChanging("RoutingId");
                  _RoutingId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("RoutingId");
                  OnRoutingIdChanged();
              }
            }
        }
        private string _RoutingId;
        partial void OnGetRoutingId(ref string value);
        partial void OnRoutingIdChanging(ref string value);
        partial void OnRoutingIdChanged();
    
        /// <summary>
        /// There are no comments for RoutType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short RoutType
        {
            get
            {
                short value = _RoutType;
                OnGetRoutType(ref value);
                return value;
            }
            set
            {
                if (_RoutType != value)
                {
                  OnRoutTypeChanging(ref value);
                  ReportPropertyChanging("RoutType");
                  _RoutType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RoutType");
                  OnRoutTypeChanged();
              }
            }
        }
        private short _RoutType = 0;
        partial void OnGetRoutType(ref short value);
        partial void OnRoutTypeChanging(ref short value);
        partial void OnRoutTypeChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();
    
        /// <summary>
        /// There are no comments for UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? UpdateDate
        {
            get
            {
                global::System.DateTime? value = _UpdateDate;
                OnGetUpdateDate(ref value);
                return value;
            }
            set
            {
                if (_UpdateDate != value)
                {
                  OnUpdateDateChanging(ref value);
                  ReportPropertyChanging("UpdateDate");
                  _UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateDate");
                  OnUpdateDateChanged();
              }
            }
        }
        private global::System.DateTime? _UpdateDate;
        partial void OnGetUpdateDate(ref global::System.DateTime? value);
        partial void OnUpdateDateChanging(ref global::System.DateTime? value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// There are no comments for UpdateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UpdateUserID
        {
            get
            {
                string value = _UpdateUserID;
                OnGetUpdateUserID(ref value);
                return value;
            }
            set
            {
                if (_UpdateUserID != value)
                {
                  OnUpdateUserIDChanging(ref value);
                  ReportPropertyChanging("UpdateUserID");
                  _UpdateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UpdateUserID");
                  OnUpdateUserIDChanged();
              }
            }
        }
        private string _UpdateUserID;
        partial void OnGetUpdateUserID(ref string value);
        partial void OnUpdateUserIDChanging(ref string value);
        partial void OnUpdateUserIDChanged();
    
        /// <summary>
        /// There are no comments for VersionId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string VersionId
        {
            get
            {
                string value = _VersionId;
                OnGetVersionId(ref value);
                return value;
            }
            set
            {
                if (_VersionId != value)
                {
                  OnVersionIdChanging(ref value);
                  ReportPropertyChanging("VersionId");
                  _VersionId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("VersionId");
                  OnVersionIdChanged();
              }
            }
        }
        private string _VersionId;
        partial void OnGetVersionId(ref string value);
        partial void OnVersionIdChanging(ref string value);
        partial void OnVersionIdChanged();
    
        /// <summary>
        /// There are no comments for WhseKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? WhseKey
        {
            get
            {
                int? value = _WhseKey;
                OnGetWhseKey(ref value);
                return value;
            }
            set
            {
                if (_WhseKey != value)
                {
                  OnWhseKeyChanging(ref value);
                  ReportPropertyChanging("WhseKey");
                  _WhseKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WhseKey");
                  OnWhseKeyChanged();
              }
            }
        }
        private int? _WhseKey;
        partial void OnGetWhseKey(ref int? value);
        partial void OnWhseKeyChanging(ref int? value);
        partial void OnWhseKeyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Details in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Route_RouteDetails", "Details")]
        public virtual EntityCollection<RouteDetail> Details
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<RouteDetail>("Net4Sage.DataAccessModel.Route_RouteDetails", "Details");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<RouteDetail>("Net4Sage.DataAccessModel.Route_RouteDetails", "Details", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for WorkOrders in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Route_WorkOrder", "WorkOrders")]
        public virtual EntityCollection<WorkOrder> WorkOrders
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<WorkOrder>("Net4Sage.DataAccessModel.Route_WorkOrder", "WorkOrders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<WorkOrder>("Net4Sage.DataAccessModel.Route_WorkOrder", "WorkOrders", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Item in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Item_Route", "Item")]
        public virtual Item Item
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Item>("Net4Sage.DataAccessModel.Item_Route", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Item>("Net4Sage.DataAccessModel.Item_Route", "Item").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Item in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Item>("Net4Sage.DataAccessModel.Item_Route", "Item");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Item>("Net4Sage.DataAccessModel.Item_Route", "Item", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Item>("Net4Sage.DataAccessModel.Item_Route", "Item").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.WorkOrderDetails in the schema.
    /// </summary>
    /// <KeyProperties>
    /// WorkOrderStepKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="WorkOrderDetails")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WorkOrderDetails : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new WorkOrderDetails object.
        /// </summary>
        /// <param name="workOrderStepKey">Initial value of WorkOrderStepKey.</param>
        /// <param name="backFlush">Initial value of BackFlush.</param>
        /// <param name="backFlushFromPrefBin">Initial value of BackFlushFromPrefBin.</param>
        /// <param name="backFlushResetHours">Initial value of BackFlushResetHours.</param>
        /// <param name="backFlushSetupHours">Initial value of BackFlushSetupHours.</param>
        /// <param name="downHrsSTD">Initial value of DownHrsSTD.</param>
        /// <param name="downHrsTD">Initial value of DownHrsTD.</param>
        /// <param name="effectPcsHr">Initial value of EffectPcsHr.</param>
        /// <param name="effectPercent">Initial value of EffectPercent.</param>
        /// <param name="matCostSTD">Initial value of MatCostSTD.</param>
        /// <param name="matCostTD">Initial value of MatCostTD.</param>
        /// <param name="materReqPer">Initial value of MaterReqPer.</param>
        /// <param name="matNonInvtUnitCost">Initial value of MatNonInvtUnitCost.</param>
        /// <param name="matReqPc">Initial value of MatReqPc.</param>
        /// <param name="matTOT">Initial value of MatTOT.</param>
        /// <param name="matUPD">Initial value of MatUPD.</param>
        /// <param name="moveHrs">Initial value of MoveHrs.</param>
        /// <param name="operationType">Initial value of OperationType.</param>
        /// <param name="operCostToWip">Initial value of OperCostToWip.</param>
        /// <param name="otherTOT">Initial value of OtherTOT.</param>
        /// <param name="otherUPD">Initial value of OtherUPD.</param>
        /// <param name="outTOT">Initial value of OutTOT.</param>
        /// <param name="outUPD">Initial value of OutUPD.</param>
        /// <param name="ovrdMatNonInvtUnitCost">Initial value of OvrdMatNonInvtUnitCost.</param>
        /// <param name="pcsB4Reset">Initial value of PcsB4Reset.</param>
        /// <param name="pcsHr">Initial value of PcsHr.</param>
        /// <param name="phantomPart">Initial value of PhantomPart.</param>
        /// <param name="progressStep">Initial value of ProgressStep.</param>
        /// <param name="qTYCycle">Initial value of QTYCycle.</param>
        /// <param name="qTYReqEST">Initial value of QTYReqEST.</param>
        /// <param name="qTYReqSTD">Initial value of QTYReqSTD.</param>
        /// <param name="qTYShipTD">Initial value of QTYShipTD.</param>
        /// <param name="qTYTD">Initial value of QTYTD.</param>
        /// <param name="queueHrs">Initial value of QueueHrs.</param>
        /// <param name="resetUpHr">Initial value of ResetUpHr.</param>
        /// <param name="runCostSTD">Initial value of RunCostSTD.</param>
        /// <param name="runCostTD">Initial value of RunCostTD.</param>
        /// <param name="runFixTOT">Initial value of RunFixTOT.</param>
        /// <param name="runFixUPD">Initial value of RunFixUPD.</param>
        /// <param name="runHrsSTD">Initial value of RunHrsSTD.</param>
        /// <param name="runHrsTD">Initial value of RunHrsTD.</param>
        /// <param name="runVarTOT">Initial value of RunVarTOT.</param>
        /// <param name="runVarUPD">Initial value of RunVarUPD.</param>
        /// <param name="scrapPcs">Initial value of ScrapPcs.</param>
        /// <param name="scrapPcsSTD">Initial value of ScrapPcsSTD.</param>
        /// <param name="scrapPcsTD">Initial value of ScrapPcsTD.</param>
        /// <param name="scrapPercent">Initial value of ScrapPercent.</param>
        /// <param name="setCostSTD">Initial value of SetCostSTD.</param>
        /// <param name="setCostTD">Initial value of SetCostTD.</param>
        /// <param name="setFixTOT">Initial value of SetFixTOT.</param>
        /// <param name="setFixUPD">Initial value of SetFixUPD.</param>
        /// <param name="setHrsEST">Initial value of SetHrsEST.</param>
        /// <param name="setHrsSTD">Initial value of SetHrsSTD.</param>
        /// <param name="setHrsTD">Initial value of SetHrsTD.</param>
        /// <param name="setupComplete">Initial value of SetupComplete.</param>
        /// <param name="setUpHr">Initial value of SetUpHr.</param>
        /// <param name="setVarTOT">Initial value of SetVarTOT.</param>
        /// <param name="setVarUPD">Initial value of SetVarUPD.</param>
        /// <param name="stepComplete">Initial value of StepComplete.</param>
        /// <param name="stepID">Initial value of StepID.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        /// <param name="workOrderKey">Initial value of WorkOrderKey.</param>
        public static WorkOrderDetails CreateWorkOrderDetails(int workOrderStepKey, string backFlush, short backFlushFromPrefBin, short backFlushResetHours, short backFlushSetupHours, decimal downHrsSTD, decimal downHrsTD, decimal effectPcsHr, decimal effectPercent, decimal matCostSTD, decimal matCostTD, decimal materReqPer, decimal matNonInvtUnitCost, decimal matReqPc, decimal matTOT, decimal matUPD, decimal moveHrs, string operationType, string operCostToWip, decimal otherTOT, decimal otherUPD, decimal outTOT, decimal outUPD, short ovrdMatNonInvtUnitCost, decimal pcsB4Reset, decimal pcsHr, short phantomPart, string progressStep, decimal qTYCycle, decimal qTYReqEST, decimal qTYReqSTD, decimal qTYShipTD, decimal qTYTD, decimal queueHrs, decimal resetUpHr, decimal runCostSTD, decimal runCostTD, decimal runFixTOT, decimal runFixUPD, decimal runHrsSTD, decimal runHrsTD, decimal runVarTOT, decimal runVarUPD, decimal scrapPcs, decimal scrapPcsSTD, decimal scrapPcsTD, decimal scrapPercent, decimal setCostSTD, decimal setCostTD, decimal setFixTOT, decimal setFixUPD, decimal setHrsEST, decimal setHrsSTD, decimal setHrsTD, string setupComplete, decimal setUpHr, decimal setVarTOT, decimal setVarUPD, short stepComplete, string stepID, int updateCounter, int workOrderKey)
        {
            WorkOrderDetails workOrderDetails = new WorkOrderDetails();
            workOrderDetails.WorkOrderStepKey = workOrderStepKey;
            workOrderDetails.BackFlush = backFlush;
            workOrderDetails.BackFlushFromPrefBin = backFlushFromPrefBin;
            workOrderDetails.BackFlushResetHours = backFlushResetHours;
            workOrderDetails.BackFlushSetupHours = backFlushSetupHours;
            workOrderDetails.DownHrsSTD = downHrsSTD;
            workOrderDetails.DownHrsTD = downHrsTD;
            workOrderDetails.EffectPcsHr = effectPcsHr;
            workOrderDetails.EffectPercent = effectPercent;
            workOrderDetails.MatCostSTD = matCostSTD;
            workOrderDetails.MatCostTD = matCostTD;
            workOrderDetails.MaterReqPer = materReqPer;
            workOrderDetails.MatNonInvtUnitCost = matNonInvtUnitCost;
            workOrderDetails.MatReqPc = matReqPc;
            workOrderDetails.MatTOT = matTOT;
            workOrderDetails.MatUPD = matUPD;
            workOrderDetails.MoveHrs = moveHrs;
            workOrderDetails.OperationType = operationType;
            workOrderDetails.OperCostToWip = operCostToWip;
            workOrderDetails.OtherTOT = otherTOT;
            workOrderDetails.OtherUPD = otherUPD;
            workOrderDetails.OutTOT = outTOT;
            workOrderDetails.OutUPD = outUPD;
            workOrderDetails.OvrdMatNonInvtUnitCost = ovrdMatNonInvtUnitCost;
            workOrderDetails.PcsB4Reset = pcsB4Reset;
            workOrderDetails.PcsHr = pcsHr;
            workOrderDetails.PhantomPart = phantomPart;
            workOrderDetails.ProgressStep = progressStep;
            workOrderDetails.QTYCycle = qTYCycle;
            workOrderDetails.QTYReqEST = qTYReqEST;
            workOrderDetails.QTYReqSTD = qTYReqSTD;
            workOrderDetails.QTYShipTD = qTYShipTD;
            workOrderDetails.QTYTD = qTYTD;
            workOrderDetails.QueueHrs = queueHrs;
            workOrderDetails.ResetUpHr = resetUpHr;
            workOrderDetails.RunCostSTD = runCostSTD;
            workOrderDetails.RunCostTD = runCostTD;
            workOrderDetails.RunFixTOT = runFixTOT;
            workOrderDetails.RunFixUPD = runFixUPD;
            workOrderDetails.RunHrsSTD = runHrsSTD;
            workOrderDetails.RunHrsTD = runHrsTD;
            workOrderDetails.RunVarTOT = runVarTOT;
            workOrderDetails.RunVarUPD = runVarUPD;
            workOrderDetails.ScrapPcs = scrapPcs;
            workOrderDetails.ScrapPcsSTD = scrapPcsSTD;
            workOrderDetails.ScrapPcsTD = scrapPcsTD;
            workOrderDetails.ScrapPercent = scrapPercent;
            workOrderDetails.SetCostSTD = setCostSTD;
            workOrderDetails.SetCostTD = setCostTD;
            workOrderDetails.SetFixTOT = setFixTOT;
            workOrderDetails.SetFixUPD = setFixUPD;
            workOrderDetails.SetHrsEST = setHrsEST;
            workOrderDetails.SetHrsSTD = setHrsSTD;
            workOrderDetails.SetHrsTD = setHrsTD;
            workOrderDetails.SetupComplete = setupComplete;
            workOrderDetails.SetUpHr = setUpHr;
            workOrderDetails.SetVarTOT = setVarTOT;
            workOrderDetails.SetVarUPD = setVarUPD;
            workOrderDetails.StepComplete = stepComplete;
            workOrderDetails.StepID = stepID;
            workOrderDetails.UpdateCounter = updateCounter;
            workOrderDetails.WorkOrderKey = workOrderKey;
            return workOrderDetails;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for WorkOrderStepKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int WorkOrderStepKey
        {
            get
            {
                int value = _WorkOrderStepKey;
                OnGetWorkOrderStepKey(ref value);
                return value;
            }
            set
            {
                if (_WorkOrderStepKey != value)
                {
                  OnWorkOrderStepKeyChanging(ref value);
                  ReportPropertyChanging("WorkOrderStepKey");
                  _WorkOrderStepKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WorkOrderStepKey");
                  OnWorkOrderStepKeyChanged();
              }
            }
        }
        private int _WorkOrderStepKey;
        partial void OnGetWorkOrderStepKey(ref int value);
        partial void OnWorkOrderStepKeyChanging(ref int value);
        partial void OnWorkOrderStepKeyChanged();
    
        /// <summary>
        /// There are no comments for BackFlush in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string BackFlush
        {
            get
            {
                string value = _BackFlush;
                OnGetBackFlush(ref value);
                return value;
            }
            set
            {
                if (_BackFlush != value)
                {
                  OnBackFlushChanging(ref value);
                  ReportPropertyChanging("BackFlush");
                  _BackFlush = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("BackFlush");
                  OnBackFlushChanged();
              }
            }
        }
        private string _BackFlush = @"N";
        partial void OnGetBackFlush(ref string value);
        partial void OnBackFlushChanging(ref string value);
        partial void OnBackFlushChanged();
    
        /// <summary>
        /// There are no comments for BackFlushFromPrefBin in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short BackFlushFromPrefBin
        {
            get
            {
                short value = _BackFlushFromPrefBin;
                OnGetBackFlushFromPrefBin(ref value);
                return value;
            }
            set
            {
                if (_BackFlushFromPrefBin != value)
                {
                  OnBackFlushFromPrefBinChanging(ref value);
                  ReportPropertyChanging("BackFlushFromPrefBin");
                  _BackFlushFromPrefBin = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BackFlushFromPrefBin");
                  OnBackFlushFromPrefBinChanged();
              }
            }
        }
        private short _BackFlushFromPrefBin = 0;
        partial void OnGetBackFlushFromPrefBin(ref short value);
        partial void OnBackFlushFromPrefBinChanging(ref short value);
        partial void OnBackFlushFromPrefBinChanged();
    
        /// <summary>
        /// There are no comments for BackFlushResetHours in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short BackFlushResetHours
        {
            get
            {
                short value = _BackFlushResetHours;
                OnGetBackFlushResetHours(ref value);
                return value;
            }
            set
            {
                if (_BackFlushResetHours != value)
                {
                  OnBackFlushResetHoursChanging(ref value);
                  ReportPropertyChanging("BackFlushResetHours");
                  _BackFlushResetHours = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BackFlushResetHours");
                  OnBackFlushResetHoursChanged();
              }
            }
        }
        private short _BackFlushResetHours = 0;
        partial void OnGetBackFlushResetHours(ref short value);
        partial void OnBackFlushResetHoursChanging(ref short value);
        partial void OnBackFlushResetHoursChanged();
    
        /// <summary>
        /// There are no comments for BackFlushSetupHours in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short BackFlushSetupHours
        {
            get
            {
                short value = _BackFlushSetupHours;
                OnGetBackFlushSetupHours(ref value);
                return value;
            }
            set
            {
                if (_BackFlushSetupHours != value)
                {
                  OnBackFlushSetupHoursChanging(ref value);
                  ReportPropertyChanging("BackFlushSetupHours");
                  _BackFlushSetupHours = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BackFlushSetupHours");
                  OnBackFlushSetupHoursChanged();
              }
            }
        }
        private short _BackFlushSetupHours = 0;
        partial void OnGetBackFlushSetupHours(ref short value);
        partial void OnBackFlushSetupHoursChanging(ref short value);
        partial void OnBackFlushSetupHoursChanged();
    
        /// <summary>
        /// There are no comments for BackFlushWhseBinKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? BackFlushWhseBinKey
        {
            get
            {
                int? value = _BackFlushWhseBinKey;
                OnGetBackFlushWhseBinKey(ref value);
                return value;
            }
            set
            {
                if (_BackFlushWhseBinKey != value)
                {
                  OnBackFlushWhseBinKeyChanging(ref value);
                  ReportPropertyChanging("BackFlushWhseBinKey");
                  _BackFlushWhseBinKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BackFlushWhseBinKey");
                  OnBackFlushWhseBinKeyChanged();
              }
            }
        }
        private int? _BackFlushWhseBinKey;
        partial void OnGetBackFlushWhseBinKey(ref int? value);
        partial void OnBackFlushWhseBinKeyChanging(ref int? value);
        partial void OnBackFlushWhseBinKeyChanged();
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for DownHrsSTD in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal DownHrsSTD
        {
            get
            {
                decimal value = _DownHrsSTD;
                OnGetDownHrsSTD(ref value);
                return value;
            }
            set
            {
                if (_DownHrsSTD != value)
                {
                  OnDownHrsSTDChanging(ref value);
                  ReportPropertyChanging("DownHrsSTD");
                  _DownHrsSTD = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DownHrsSTD");
                  OnDownHrsSTDChanged();
              }
            }
        }
        private decimal _DownHrsSTD = 0m;
        partial void OnGetDownHrsSTD(ref decimal value);
        partial void OnDownHrsSTDChanging(ref decimal value);
        partial void OnDownHrsSTDChanged();
    
        /// <summary>
        /// There are no comments for DownHrsTD in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal DownHrsTD
        {
            get
            {
                decimal value = _DownHrsTD;
                OnGetDownHrsTD(ref value);
                return value;
            }
            set
            {
                if (_DownHrsTD != value)
                {
                  OnDownHrsTDChanging(ref value);
                  ReportPropertyChanging("DownHrsTD");
                  _DownHrsTD = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DownHrsTD");
                  OnDownHrsTDChanged();
              }
            }
        }
        private decimal _DownHrsTD = 0m;
        partial void OnGetDownHrsTD(ref decimal value);
        partial void OnDownHrsTDChanging(ref decimal value);
        partial void OnDownHrsTDChanged();
    
        /// <summary>
        /// There are no comments for EffectPcsHr in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal EffectPcsHr
        {
            get
            {
                decimal value = _EffectPcsHr;
                OnGetEffectPcsHr(ref value);
                return value;
            }
            set
            {
                if (_EffectPcsHr != value)
                {
                  OnEffectPcsHrChanging(ref value);
                  ReportPropertyChanging("EffectPcsHr");
                  _EffectPcsHr = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EffectPcsHr");
                  OnEffectPcsHrChanged();
              }
            }
        }
        private decimal _EffectPcsHr = 0m;
        partial void OnGetEffectPcsHr(ref decimal value);
        partial void OnEffectPcsHrChanging(ref decimal value);
        partial void OnEffectPcsHrChanged();
    
        /// <summary>
        /// There are no comments for EffectPercent in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal EffectPercent
        {
            get
            {
                decimal value = _EffectPercent;
                OnGetEffectPercent(ref value);
                return value;
            }
            set
            {
                if (_EffectPercent != value)
                {
                  OnEffectPercentChanging(ref value);
                  ReportPropertyChanging("EffectPercent");
                  _EffectPercent = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EffectPercent");
                  OnEffectPercentChanged();
              }
            }
        }
        private decimal _EffectPercent = 0m;
        partial void OnGetEffectPercent(ref decimal value);
        partial void OnEffectPercentChanging(ref decimal value);
        partial void OnEffectPercentChanged();
    
        /// <summary>
        /// There are no comments for MachineKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? MachineKey
        {
            get
            {
                int? value = _MachineKey;
                OnGetMachineKey(ref value);
                return value;
            }
            set
            {
                if (_MachineKey != value)
                {
                  OnMachineKeyChanging(ref value);
                  ReportPropertyChanging("MachineKey");
                  _MachineKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MachineKey");
                  OnMachineKeyChanged();
              }
            }
        }
        private int? _MachineKey;
        partial void OnGetMachineKey(ref int? value);
        partial void OnMachineKeyChanging(ref int? value);
        partial void OnMachineKeyChanged();
    
        /// <summary>
        /// There are no comments for MatCostSTD in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal MatCostSTD
        {
            get
            {
                decimal value = _MatCostSTD;
                OnGetMatCostSTD(ref value);
                return value;
            }
            set
            {
                if (_MatCostSTD != value)
                {
                  OnMatCostSTDChanging(ref value);
                  ReportPropertyChanging("MatCostSTD");
                  _MatCostSTD = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MatCostSTD");
                  OnMatCostSTDChanged();
              }
            }
        }
        private decimal _MatCostSTD = 0m;
        partial void OnGetMatCostSTD(ref decimal value);
        partial void OnMatCostSTDChanging(ref decimal value);
        partial void OnMatCostSTDChanged();
    
        /// <summary>
        /// There are no comments for MatCostTD in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal MatCostTD
        {
            get
            {
                decimal value = _MatCostTD;
                OnGetMatCostTD(ref value);
                return value;
            }
            set
            {
                if (_MatCostTD != value)
                {
                  OnMatCostTDChanging(ref value);
                  ReportPropertyChanging("MatCostTD");
                  _MatCostTD = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MatCostTD");
                  OnMatCostTDChanged();
              }
            }
        }
        private decimal _MatCostTD = 0m;
        partial void OnGetMatCostTD(ref decimal value);
        partial void OnMatCostTDChanging(ref decimal value);
        partial void OnMatCostTDChanged();
    
        /// <summary>
        /// There are no comments for MaterReqPer in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal MaterReqPer
        {
            get
            {
                decimal value = _MaterReqPer;
                OnGetMaterReqPer(ref value);
                return value;
            }
            set
            {
                if (_MaterReqPer != value)
                {
                  OnMaterReqPerChanging(ref value);
                  ReportPropertyChanging("MaterReqPer");
                  _MaterReqPer = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MaterReqPer");
                  OnMaterReqPerChanged();
              }
            }
        }
        private decimal _MaterReqPer = 0m;
        partial void OnGetMaterReqPer(ref decimal value);
        partial void OnMaterReqPerChanging(ref decimal value);
        partial void OnMaterReqPerChanged();
    
        /// <summary>
        /// There are no comments for MaterValUOMKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? MaterValUOMKey
        {
            get
            {
                int? value = _MaterValUOMKey;
                OnGetMaterValUOMKey(ref value);
                return value;
            }
            set
            {
                if (_MaterValUOMKey != value)
                {
                  OnMaterValUOMKeyChanging(ref value);
                  ReportPropertyChanging("MaterValUOMKey");
                  _MaterValUOMKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MaterValUOMKey");
                  OnMaterValUOMKeyChanged();
              }
            }
        }
        private int? _MaterValUOMKey;
        partial void OnGetMaterValUOMKey(ref int? value);
        partial void OnMaterValUOMKeyChanging(ref int? value);
        partial void OnMaterValUOMKeyChanged();
    
        /// <summary>
        /// There are no comments for MatItemKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? MatItemKey
        {
            get
            {
                int? value = _MatItemKey;
                OnGetMatItemKey(ref value);
                return value;
            }
            set
            {
                if (_MatItemKey != value)
                {
                  OnMatItemKeyChanging(ref value);
                  ReportPropertyChanging("MatItemKey");
                  _MatItemKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MatItemKey");
                  OnMatItemKeyChanged();
              }
            }
        }
        private int? _MatItemKey;
        partial void OnGetMatItemKey(ref int? value);
        partial void OnMatItemKeyChanging(ref int? value);
        partial void OnMatItemKeyChanged();
    
        /// <summary>
        /// There are no comments for MatNonInvtUnitCost in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal MatNonInvtUnitCost
        {
            get
            {
                decimal value = _MatNonInvtUnitCost;
                OnGetMatNonInvtUnitCost(ref value);
                return value;
            }
            set
            {
                if (_MatNonInvtUnitCost != value)
                {
                  OnMatNonInvtUnitCostChanging(ref value);
                  ReportPropertyChanging("MatNonInvtUnitCost");
                  _MatNonInvtUnitCost = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MatNonInvtUnitCost");
                  OnMatNonInvtUnitCostChanged();
              }
            }
        }
        private decimal _MatNonInvtUnitCost = 0m;
        partial void OnGetMatNonInvtUnitCost(ref decimal value);
        partial void OnMatNonInvtUnitCostChanging(ref decimal value);
        partial void OnMatNonInvtUnitCostChanged();
    
        /// <summary>
        /// There are no comments for MatReqPc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal MatReqPc
        {
            get
            {
                decimal value = _MatReqPc;
                OnGetMatReqPc(ref value);
                return value;
            }
            set
            {
                if (_MatReqPc != value)
                {
                  OnMatReqPcChanging(ref value);
                  ReportPropertyChanging("MatReqPc");
                  _MatReqPc = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MatReqPc");
                  OnMatReqPcChanged();
              }
            }
        }
        private decimal _MatReqPc = 0m;
        partial void OnGetMatReqPc(ref decimal value);
        partial void OnMatReqPcChanging(ref decimal value);
        partial void OnMatReqPcChanged();
    
        /// <summary>
        /// There are no comments for MatRoutKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? MatRoutKey
        {
            get
            {
                int? value = _MatRoutKey;
                OnGetMatRoutKey(ref value);
                return value;
            }
            set
            {
                if (_MatRoutKey != value)
                {
                  OnMatRoutKeyChanging(ref value);
                  ReportPropertyChanging("MatRoutKey");
                  _MatRoutKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MatRoutKey");
                  OnMatRoutKeyChanged();
              }
            }
        }
        private int? _MatRoutKey;
        partial void OnGetMatRoutKey(ref int? value);
        partial void OnMatRoutKeyChanging(ref int? value);
        partial void OnMatRoutKeyChanged();
    
        /// <summary>
        /// There are no comments for MatTOT in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal MatTOT
        {
            get
            {
                decimal value = _MatTOT;
                OnGetMatTOT(ref value);
                return value;
            }
            set
            {
                if (_MatTOT != value)
                {
                  OnMatTOTChanging(ref value);
                  ReportPropertyChanging("MatTOT");
                  _MatTOT = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MatTOT");
                  OnMatTOTChanged();
              }
            }
        }
        private decimal _MatTOT = 0m;
        partial void OnGetMatTOT(ref decimal value);
        partial void OnMatTOTChanging(ref decimal value);
        partial void OnMatTOTChanged();
    
        /// <summary>
        /// There are no comments for MatUPD in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal MatUPD
        {
            get
            {
                decimal value = _MatUPD;
                OnGetMatUPD(ref value);
                return value;
            }
            set
            {
                if (_MatUPD != value)
                {
                  OnMatUPDChanging(ref value);
                  ReportPropertyChanging("MatUPD");
                  _MatUPD = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MatUPD");
                  OnMatUPDChanged();
              }
            }
        }
        private decimal _MatUPD = 0m;
        partial void OnGetMatUPD(ref decimal value);
        partial void OnMatUPDChanging(ref decimal value);
        partial void OnMatUPDChanged();
    
        /// <summary>
        /// There are no comments for MoveHrs in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal MoveHrs
        {
            get
            {
                decimal value = _MoveHrs;
                OnGetMoveHrs(ref value);
                return value;
            }
            set
            {
                if (_MoveHrs != value)
                {
                  OnMoveHrsChanging(ref value);
                  ReportPropertyChanging("MoveHrs");
                  _MoveHrs = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MoveHrs");
                  OnMoveHrsChanged();
              }
            }
        }
        private decimal _MoveHrs = 0m;
        partial void OnGetMoveHrs(ref decimal value);
        partial void OnMoveHrsChanging(ref decimal value);
        partial void OnMoveHrsChanged();
    
        /// <summary>
        /// There are no comments for NotesKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? NotesKey
        {
            get
            {
                int? value = _NotesKey;
                OnGetNotesKey(ref value);
                return value;
            }
            set
            {
                if (_NotesKey != value)
                {
                  OnNotesKeyChanging(ref value);
                  ReportPropertyChanging("NotesKey");
                  _NotesKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NotesKey");
                  OnNotesKeyChanged();
              }
            }
        }
        private int? _NotesKey;
        partial void OnGetNotesKey(ref int? value);
        partial void OnNotesKeyChanging(ref int? value);
        partial void OnNotesKeyChanged();
    
        /// <summary>
        /// There are no comments for OperationDesc1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string OperationDesc1
        {
            get
            {
                string value = _OperationDesc1;
                OnGetOperationDesc1(ref value);
                return value;
            }
            set
            {
                if (_OperationDesc1 != value)
                {
                  OnOperationDesc1Changing(ref value);
                  ReportPropertyChanging("OperationDesc1");
                  _OperationDesc1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("OperationDesc1");
                  OnOperationDesc1Changed();
              }
            }
        }
        private string _OperationDesc1;
        partial void OnGetOperationDesc1(ref string value);
        partial void OnOperationDesc1Changing(ref string value);
        partial void OnOperationDesc1Changed();
    
        /// <summary>
        /// There are no comments for OperationDesc2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string OperationDesc2
        {
            get
            {
                string value = _OperationDesc2;
                OnGetOperationDesc2(ref value);
                return value;
            }
            set
            {
                if (_OperationDesc2 != value)
                {
                  OnOperationDesc2Changing(ref value);
                  ReportPropertyChanging("OperationDesc2");
                  _OperationDesc2 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("OperationDesc2");
                  OnOperationDesc2Changed();
              }
            }
        }
        private string _OperationDesc2;
        partial void OnGetOperationDesc2(ref string value);
        partial void OnOperationDesc2Changing(ref string value);
        partial void OnOperationDesc2Changed();
    
        /// <summary>
        /// There are no comments for OperationKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? OperationKey
        {
            get
            {
                int? value = _OperationKey;
                OnGetOperationKey(ref value);
                return value;
            }
            set
            {
                if (_OperationKey != value)
                {
                  OnOperationKeyChanging(ref value);
                  ReportPropertyChanging("OperationKey");
                  _OperationKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OperationKey");
                  OnOperationKeyChanged();
              }
            }
        }
        private int? _OperationKey;
        partial void OnGetOperationKey(ref int? value);
        partial void OnOperationKeyChanging(ref int? value);
        partial void OnOperationKeyChanged();
    
        /// <summary>
        /// There are no comments for OperationType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string OperationType
        {
            get
            {
                string value = _OperationType;
                OnGetOperationType(ref value);
                return value;
            }
            set
            {
                if (_OperationType != value)
                {
                  OnOperationTypeChanging(ref value);
                  ReportPropertyChanging("OperationType");
                  _OperationType = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("OperationType");
                  OnOperationTypeChanged();
              }
            }
        }
        private string _OperationType;
        partial void OnGetOperationType(ref string value);
        partial void OnOperationTypeChanging(ref string value);
        partial void OnOperationTypeChanged();
    
        /// <summary>
        /// There are no comments for OperCostToWip in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string OperCostToWip
        {
            get
            {
                string value = _OperCostToWip;
                OnGetOperCostToWip(ref value);
                return value;
            }
            set
            {
                if (_OperCostToWip != value)
                {
                  OnOperCostToWipChanging(ref value);
                  ReportPropertyChanging("OperCostToWip");
                  _OperCostToWip = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("OperCostToWip");
                  OnOperCostToWipChanged();
              }
            }
        }
        private string _OperCostToWip = @"N";
        partial void OnGetOperCostToWip(ref string value);
        partial void OnOperCostToWipChanging(ref string value);
        partial void OnOperCostToWipChanged();
    
        /// <summary>
        /// There are no comments for OrigRoutingStepKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? OrigRoutingStepKey
        {
            get
            {
                int? value = _OrigRoutingStepKey;
                OnGetOrigRoutingStepKey(ref value);
                return value;
            }
            set
            {
                if (_OrigRoutingStepKey != value)
                {
                  OnOrigRoutingStepKeyChanging(ref value);
                  ReportPropertyChanging("OrigRoutingStepKey");
                  _OrigRoutingStepKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OrigRoutingStepKey");
                  OnOrigRoutingStepKeyChanged();
              }
            }
        }
        private int? _OrigRoutingStepKey;
        partial void OnGetOrigRoutingStepKey(ref int? value);
        partial void OnOrigRoutingStepKeyChanging(ref int? value);
        partial void OnOrigRoutingStepKeyChanged();
    
        /// <summary>
        /// There are no comments for OtherTOT in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal OtherTOT
        {
            get
            {
                decimal value = _OtherTOT;
                OnGetOtherTOT(ref value);
                return value;
            }
            set
            {
                if (_OtherTOT != value)
                {
                  OnOtherTOTChanging(ref value);
                  ReportPropertyChanging("OtherTOT");
                  _OtherTOT = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OtherTOT");
                  OnOtherTOTChanged();
              }
            }
        }
        private decimal _OtherTOT = 0m;
        partial void OnGetOtherTOT(ref decimal value);
        partial void OnOtherTOTChanging(ref decimal value);
        partial void OnOtherTOTChanged();
    
        /// <summary>
        /// There are no comments for OtherUPD in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal OtherUPD
        {
            get
            {
                decimal value = _OtherUPD;
                OnGetOtherUPD(ref value);
                return value;
            }
            set
            {
                if (_OtherUPD != value)
                {
                  OnOtherUPDChanging(ref value);
                  ReportPropertyChanging("OtherUPD");
                  _OtherUPD = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OtherUPD");
                  OnOtherUPDChanged();
              }
            }
        }
        private decimal _OtherUPD = 0m;
        partial void OnGetOtherUPD(ref decimal value);
        partial void OnOtherUPDChanging(ref decimal value);
        partial void OnOtherUPDChanged();
    
        /// <summary>
        /// There are no comments for OutTOT in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal OutTOT
        {
            get
            {
                decimal value = _OutTOT;
                OnGetOutTOT(ref value);
                return value;
            }
            set
            {
                if (_OutTOT != value)
                {
                  OnOutTOTChanging(ref value);
                  ReportPropertyChanging("OutTOT");
                  _OutTOT = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OutTOT");
                  OnOutTOTChanged();
              }
            }
        }
        private decimal _OutTOT = 0m;
        partial void OnGetOutTOT(ref decimal value);
        partial void OnOutTOTChanging(ref decimal value);
        partial void OnOutTOTChanged();
    
        /// <summary>
        /// There are no comments for OutUPD in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal OutUPD
        {
            get
            {
                decimal value = _OutUPD;
                OnGetOutUPD(ref value);
                return value;
            }
            set
            {
                if (_OutUPD != value)
                {
                  OnOutUPDChanging(ref value);
                  ReportPropertyChanging("OutUPD");
                  _OutUPD = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OutUPD");
                  OnOutUPDChanged();
              }
            }
        }
        private decimal _OutUPD = 0m;
        partial void OnGetOutUPD(ref decimal value);
        partial void OnOutUPDChanging(ref decimal value);
        partial void OnOutUPDChanged();
    
        /// <summary>
        /// There are no comments for OvrdMatNonInvtUnitCost in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short OvrdMatNonInvtUnitCost
        {
            get
            {
                short value = _OvrdMatNonInvtUnitCost;
                OnGetOvrdMatNonInvtUnitCost(ref value);
                return value;
            }
            set
            {
                if (_OvrdMatNonInvtUnitCost != value)
                {
                  OnOvrdMatNonInvtUnitCostChanging(ref value);
                  ReportPropertyChanging("OvrdMatNonInvtUnitCost");
                  _OvrdMatNonInvtUnitCost = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OvrdMatNonInvtUnitCost");
                  OnOvrdMatNonInvtUnitCostChanged();
              }
            }
        }
        private short _OvrdMatNonInvtUnitCost = 0;
        partial void OnGetOvrdMatNonInvtUnitCost(ref short value);
        partial void OnOvrdMatNonInvtUnitCostChanging(ref short value);
        partial void OnOvrdMatNonInvtUnitCostChanged();
    
        /// <summary>
        /// There are no comments for PcHrHrPc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PcHrHrPc
        {
            get
            {
                string value = _PcHrHrPc;
                OnGetPcHrHrPc(ref value);
                return value;
            }
            set
            {
                if (_PcHrHrPc != value)
                {
                  OnPcHrHrPcChanging(ref value);
                  ReportPropertyChanging("PcHrHrPc");
                  _PcHrHrPc = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PcHrHrPc");
                  OnPcHrHrPcChanged();
              }
            }
        }
        private string _PcHrHrPc;
        partial void OnGetPcHrHrPc(ref string value);
        partial void OnPcHrHrPcChanging(ref string value);
        partial void OnPcHrHrPcChanged();
    
        /// <summary>
        /// There are no comments for PcsB4Reset in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal PcsB4Reset
        {
            get
            {
                decimal value = _PcsB4Reset;
                OnGetPcsB4Reset(ref value);
                return value;
            }
            set
            {
                if (_PcsB4Reset != value)
                {
                  OnPcsB4ResetChanging(ref value);
                  ReportPropertyChanging("PcsB4Reset");
                  _PcsB4Reset = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PcsB4Reset");
                  OnPcsB4ResetChanged();
              }
            }
        }
        private decimal _PcsB4Reset = 0m;
        partial void OnGetPcsB4Reset(ref decimal value);
        partial void OnPcsB4ResetChanging(ref decimal value);
        partial void OnPcsB4ResetChanged();
    
        /// <summary>
        /// There are no comments for PcsHr in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal PcsHr
        {
            get
            {
                decimal value = _PcsHr;
                OnGetPcsHr(ref value);
                return value;
            }
            set
            {
                if (_PcsHr != value)
                {
                  OnPcsHrChanging(ref value);
                  ReportPropertyChanging("PcsHr");
                  _PcsHr = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PcsHr");
                  OnPcsHrChanged();
              }
            }
        }
        private decimal _PcsHr = 0m;
        partial void OnGetPcsHr(ref decimal value);
        partial void OnPcsHrChanging(ref decimal value);
        partial void OnPcsHrChanged();
    
        /// <summary>
        /// There are no comments for PhantomPart in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PhantomPart
        {
            get
            {
                short value = _PhantomPart;
                OnGetPhantomPart(ref value);
                return value;
            }
            set
            {
                if (_PhantomPart != value)
                {
                  OnPhantomPartChanging(ref value);
                  ReportPropertyChanging("PhantomPart");
                  _PhantomPart = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PhantomPart");
                  OnPhantomPartChanged();
              }
            }
        }
        private short _PhantomPart = 0;
        partial void OnGetPhantomPart(ref short value);
        partial void OnPhantomPartChanging(ref short value);
        partial void OnPhantomPartChanged();
    
        /// <summary>
        /// There are no comments for ProduceItemKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ProduceItemKey
        {
            get
            {
                int? value = _ProduceItemKey;
                OnGetProduceItemKey(ref value);
                return value;
            }
            set
            {
                if (_ProduceItemKey != value)
                {
                  OnProduceItemKeyChanging(ref value);
                  ReportPropertyChanging("ProduceItemKey");
                  _ProduceItemKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ProduceItemKey");
                  OnProduceItemKeyChanged();
              }
            }
        }
        private int? _ProduceItemKey;
        partial void OnGetProduceItemKey(ref int? value);
        partial void OnProduceItemKeyChanging(ref int? value);
        partial void OnProduceItemKeyChanged();
    
        /// <summary>
        /// There are no comments for ProgressStep in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string ProgressStep
        {
            get
            {
                string value = _ProgressStep;
                OnGetProgressStep(ref value);
                return value;
            }
            set
            {
                if (_ProgressStep != value)
                {
                  OnProgressStepChanging(ref value);
                  ReportPropertyChanging("ProgressStep");
                  _ProgressStep = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ProgressStep");
                  OnProgressStepChanged();
              }
            }
        }
        private string _ProgressStep = @"N";
        partial void OnGetProgressStep(ref string value);
        partial void OnProgressStepChanging(ref string value);
        partial void OnProgressStepChanged();
    
        /// <summary>
        /// There are no comments for QTYCycle in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal QTYCycle
        {
            get
            {
                decimal value = _QTYCycle;
                OnGetQTYCycle(ref value);
                return value;
            }
            set
            {
                if (_QTYCycle != value)
                {
                  OnQTYCycleChanging(ref value);
                  ReportPropertyChanging("QTYCycle");
                  _QTYCycle = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QTYCycle");
                  OnQTYCycleChanged();
              }
            }
        }
        private decimal _QTYCycle = 0m;
        partial void OnGetQTYCycle(ref decimal value);
        partial void OnQTYCycleChanging(ref decimal value);
        partial void OnQTYCycleChanged();
    
        /// <summary>
        /// There are no comments for QTYPerDesc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string QTYPerDesc
        {
            get
            {
                string value = _QTYPerDesc;
                OnGetQTYPerDesc(ref value);
                return value;
            }
            set
            {
                if (_QTYPerDesc != value)
                {
                  OnQTYPerDescChanging(ref value);
                  ReportPropertyChanging("QTYPerDesc");
                  _QTYPerDesc = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("QTYPerDesc");
                  OnQTYPerDescChanged();
              }
            }
        }
        private string _QTYPerDesc;
        partial void OnGetQTYPerDesc(ref string value);
        partial void OnQTYPerDescChanging(ref string value);
        partial void OnQTYPerDescChanged();
    
        /// <summary>
        /// There are no comments for QTYReqEST in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal QTYReqEST
        {
            get
            {
                decimal value = _QTYReqEST;
                OnGetQTYReqEST(ref value);
                return value;
            }
            set
            {
                if (_QTYReqEST != value)
                {
                  OnQTYReqESTChanging(ref value);
                  ReportPropertyChanging("QTYReqEST");
                  _QTYReqEST = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QTYReqEST");
                  OnQTYReqESTChanged();
              }
            }
        }
        private decimal _QTYReqEST = 0m;
        partial void OnGetQTYReqEST(ref decimal value);
        partial void OnQTYReqESTChanging(ref decimal value);
        partial void OnQTYReqESTChanged();
    
        /// <summary>
        /// There are no comments for QTYReqSTD in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal QTYReqSTD
        {
            get
            {
                decimal value = _QTYReqSTD;
                OnGetQTYReqSTD(ref value);
                return value;
            }
            set
            {
                if (_QTYReqSTD != value)
                {
                  OnQTYReqSTDChanging(ref value);
                  ReportPropertyChanging("QTYReqSTD");
                  _QTYReqSTD = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QTYReqSTD");
                  OnQTYReqSTDChanged();
              }
            }
        }
        private decimal _QTYReqSTD = 0m;
        partial void OnGetQTYReqSTD(ref decimal value);
        partial void OnQTYReqSTDChanging(ref decimal value);
        partial void OnQTYReqSTDChanged();
    
        /// <summary>
        /// There are no comments for QTYShipTD in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal QTYShipTD
        {
            get
            {
                decimal value = _QTYShipTD;
                OnGetQTYShipTD(ref value);
                return value;
            }
            set
            {
                if (_QTYShipTD != value)
                {
                  OnQTYShipTDChanging(ref value);
                  ReportPropertyChanging("QTYShipTD");
                  _QTYShipTD = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QTYShipTD");
                  OnQTYShipTDChanged();
              }
            }
        }
        private decimal _QTYShipTD = 0m;
        partial void OnGetQTYShipTD(ref decimal value);
        partial void OnQTYShipTDChanging(ref decimal value);
        partial void OnQTYShipTDChanged();
    
        /// <summary>
        /// There are no comments for QTYTD in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal QTYTD
        {
            get
            {
                decimal value = _QTYTD;
                OnGetQTYTD(ref value);
                return value;
            }
            set
            {
                if (_QTYTD != value)
                {
                  OnQTYTDChanging(ref value);
                  ReportPropertyChanging("QTYTD");
                  _QTYTD = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QTYTD");
                  OnQTYTDChanged();
              }
            }
        }
        private decimal _QTYTD = 0m;
        partial void OnGetQTYTD(ref decimal value);
        partial void OnQTYTDChanging(ref decimal value);
        partial void OnQTYTDChanged();
    
        /// <summary>
        /// There are no comments for QueueHrs in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal QueueHrs
        {
            get
            {
                decimal value = _QueueHrs;
                OnGetQueueHrs(ref value);
                return value;
            }
            set
            {
                if (_QueueHrs != value)
                {
                  OnQueueHrsChanging(ref value);
                  ReportPropertyChanging("QueueHrs");
                  _QueueHrs = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QueueHrs");
                  OnQueueHrsChanged();
              }
            }
        }
        private decimal _QueueHrs = 0m;
        partial void OnGetQueueHrs(ref decimal value);
        partial void OnQueueHrsChanging(ref decimal value);
        partial void OnQueueHrsChanged();
    
        /// <summary>
        /// There are no comments for ResetUpHr in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal ResetUpHr
        {
            get
            {
                decimal value = _ResetUpHr;
                OnGetResetUpHr(ref value);
                return value;
            }
            set
            {
                if (_ResetUpHr != value)
                {
                  OnResetUpHrChanging(ref value);
                  ReportPropertyChanging("ResetUpHr");
                  _ResetUpHr = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ResetUpHr");
                  OnResetUpHrChanged();
              }
            }
        }
        private decimal _ResetUpHr = 0m;
        partial void OnGetResetUpHr(ref decimal value);
        partial void OnResetUpHrChanging(ref decimal value);
        partial void OnResetUpHrChanged();
    
        /// <summary>
        /// There are no comments for RoutingStepKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? RoutingStepKey
        {
            get
            {
                int? value = _RoutingStepKey;
                OnGetRoutingStepKey(ref value);
                return value;
            }
            set
            {
                if (_RoutingStepKey != value)
                {
                  OnRoutingStepKeyChanging(ref value);
                  ReportPropertyChanging("RoutingStepKey");
                  _RoutingStepKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RoutingStepKey");
                  OnRoutingStepKeyChanged();
              }
            }
        }
        private int? _RoutingStepKey;
        partial void OnGetRoutingStepKey(ref int? value);
        partial void OnRoutingStepKeyChanging(ref int? value);
        partial void OnRoutingStepKeyChanged();
    
        /// <summary>
        /// There are no comments for RunCostSTD in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal RunCostSTD
        {
            get
            {
                decimal value = _RunCostSTD;
                OnGetRunCostSTD(ref value);
                return value;
            }
            set
            {
                if (_RunCostSTD != value)
                {
                  OnRunCostSTDChanging(ref value);
                  ReportPropertyChanging("RunCostSTD");
                  _RunCostSTD = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RunCostSTD");
                  OnRunCostSTDChanged();
              }
            }
        }
        private decimal _RunCostSTD = 0m;
        partial void OnGetRunCostSTD(ref decimal value);
        partial void OnRunCostSTDChanging(ref decimal value);
        partial void OnRunCostSTDChanged();
    
        /// <summary>
        /// There are no comments for RunCostTD in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal RunCostTD
        {
            get
            {
                decimal value = _RunCostTD;
                OnGetRunCostTD(ref value);
                return value;
            }
            set
            {
                if (_RunCostTD != value)
                {
                  OnRunCostTDChanging(ref value);
                  ReportPropertyChanging("RunCostTD");
                  _RunCostTD = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RunCostTD");
                  OnRunCostTDChanged();
              }
            }
        }
        private decimal _RunCostTD = 0m;
        partial void OnGetRunCostTD(ref decimal value);
        partial void OnRunCostTDChanging(ref decimal value);
        partial void OnRunCostTDChanged();
    
        /// <summary>
        /// There are no comments for RunFixTOT in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal RunFixTOT
        {
            get
            {
                decimal value = _RunFixTOT;
                OnGetRunFixTOT(ref value);
                return value;
            }
            set
            {
                if (_RunFixTOT != value)
                {
                  OnRunFixTOTChanging(ref value);
                  ReportPropertyChanging("RunFixTOT");
                  _RunFixTOT = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RunFixTOT");
                  OnRunFixTOTChanged();
              }
            }
        }
        private decimal _RunFixTOT = 0m;
        partial void OnGetRunFixTOT(ref decimal value);
        partial void OnRunFixTOTChanging(ref decimal value);
        partial void OnRunFixTOTChanged();
    
        /// <summary>
        /// There are no comments for RunFixUPD in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal RunFixUPD
        {
            get
            {
                decimal value = _RunFixUPD;
                OnGetRunFixUPD(ref value);
                return value;
            }
            set
            {
                if (_RunFixUPD != value)
                {
                  OnRunFixUPDChanging(ref value);
                  ReportPropertyChanging("RunFixUPD");
                  _RunFixUPD = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RunFixUPD");
                  OnRunFixUPDChanged();
              }
            }
        }
        private decimal _RunFixUPD = 0m;
        partial void OnGetRunFixUPD(ref decimal value);
        partial void OnRunFixUPDChanging(ref decimal value);
        partial void OnRunFixUPDChanged();
    
        /// <summary>
        /// There are no comments for RunHrsSTD in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal RunHrsSTD
        {
            get
            {
                decimal value = _RunHrsSTD;
                OnGetRunHrsSTD(ref value);
                return value;
            }
            set
            {
                if (_RunHrsSTD != value)
                {
                  OnRunHrsSTDChanging(ref value);
                  ReportPropertyChanging("RunHrsSTD");
                  _RunHrsSTD = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RunHrsSTD");
                  OnRunHrsSTDChanged();
              }
            }
        }
        private decimal _RunHrsSTD = 0m;
        partial void OnGetRunHrsSTD(ref decimal value);
        partial void OnRunHrsSTDChanging(ref decimal value);
        partial void OnRunHrsSTDChanged();
    
        /// <summary>
        /// There are no comments for RunHrsTD in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal RunHrsTD
        {
            get
            {
                decimal value = _RunHrsTD;
                OnGetRunHrsTD(ref value);
                return value;
            }
            set
            {
                if (_RunHrsTD != value)
                {
                  OnRunHrsTDChanging(ref value);
                  ReportPropertyChanging("RunHrsTD");
                  _RunHrsTD = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RunHrsTD");
                  OnRunHrsTDChanged();
              }
            }
        }
        private decimal _RunHrsTD = 0m;
        partial void OnGetRunHrsTD(ref decimal value);
        partial void OnRunHrsTDChanging(ref decimal value);
        partial void OnRunHrsTDChanged();
    
        /// <summary>
        /// There are no comments for RunVarTOT in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal RunVarTOT
        {
            get
            {
                decimal value = _RunVarTOT;
                OnGetRunVarTOT(ref value);
                return value;
            }
            set
            {
                if (_RunVarTOT != value)
                {
                  OnRunVarTOTChanging(ref value);
                  ReportPropertyChanging("RunVarTOT");
                  _RunVarTOT = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RunVarTOT");
                  OnRunVarTOTChanged();
              }
            }
        }
        private decimal _RunVarTOT = 0m;
        partial void OnGetRunVarTOT(ref decimal value);
        partial void OnRunVarTOTChanging(ref decimal value);
        partial void OnRunVarTOTChanged();
    
        /// <summary>
        /// There are no comments for RunVarUPD in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal RunVarUPD
        {
            get
            {
                decimal value = _RunVarUPD;
                OnGetRunVarUPD(ref value);
                return value;
            }
            set
            {
                if (_RunVarUPD != value)
                {
                  OnRunVarUPDChanging(ref value);
                  ReportPropertyChanging("RunVarUPD");
                  _RunVarUPD = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RunVarUPD");
                  OnRunVarUPDChanged();
              }
            }
        }
        private decimal _RunVarUPD = 0m;
        partial void OnGetRunVarUPD(ref decimal value);
        partial void OnRunVarUPDChanging(ref decimal value);
        partial void OnRunVarUPDChanged();
    
        /// <summary>
        /// There are no comments for SchStepFinishDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? SchStepFinishDate
        {
            get
            {
                global::System.DateTime? value = _SchStepFinishDate;
                OnGetSchStepFinishDate(ref value);
                return value;
            }
            set
            {
                if (_SchStepFinishDate != value)
                {
                  OnSchStepFinishDateChanging(ref value);
                  ReportPropertyChanging("SchStepFinishDate");
                  _SchStepFinishDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SchStepFinishDate");
                  OnSchStepFinishDateChanged();
              }
            }
        }
        private global::System.DateTime? _SchStepFinishDate;
        partial void OnGetSchStepFinishDate(ref global::System.DateTime? value);
        partial void OnSchStepFinishDateChanging(ref global::System.DateTime? value);
        partial void OnSchStepFinishDateChanged();
    
        /// <summary>
        /// There are no comments for SchStepStartDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? SchStepStartDate
        {
            get
            {
                global::System.DateTime? value = _SchStepStartDate;
                OnGetSchStepStartDate(ref value);
                return value;
            }
            set
            {
                if (_SchStepStartDate != value)
                {
                  OnSchStepStartDateChanging(ref value);
                  ReportPropertyChanging("SchStepStartDate");
                  _SchStepStartDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SchStepStartDate");
                  OnSchStepStartDateChanged();
              }
            }
        }
        private global::System.DateTime? _SchStepStartDate;
        partial void OnGetSchStepStartDate(ref global::System.DateTime? value);
        partial void OnSchStepStartDateChanging(ref global::System.DateTime? value);
        partial void OnSchStepStartDateChanged();
    
        /// <summary>
        /// There are no comments for ScrapPcs in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal ScrapPcs
        {
            get
            {
                decimal value = _ScrapPcs;
                OnGetScrapPcs(ref value);
                return value;
            }
            set
            {
                if (_ScrapPcs != value)
                {
                  OnScrapPcsChanging(ref value);
                  ReportPropertyChanging("ScrapPcs");
                  _ScrapPcs = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ScrapPcs");
                  OnScrapPcsChanged();
              }
            }
        }
        private decimal _ScrapPcs = 0m;
        partial void OnGetScrapPcs(ref decimal value);
        partial void OnScrapPcsChanging(ref decimal value);
        partial void OnScrapPcsChanged();
    
        /// <summary>
        /// There are no comments for ScrapPcsSTD in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal ScrapPcsSTD
        {
            get
            {
                decimal value = _ScrapPcsSTD;
                OnGetScrapPcsSTD(ref value);
                return value;
            }
            set
            {
                if (_ScrapPcsSTD != value)
                {
                  OnScrapPcsSTDChanging(ref value);
                  ReportPropertyChanging("ScrapPcsSTD");
                  _ScrapPcsSTD = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ScrapPcsSTD");
                  OnScrapPcsSTDChanged();
              }
            }
        }
        private decimal _ScrapPcsSTD = 0m;
        partial void OnGetScrapPcsSTD(ref decimal value);
        partial void OnScrapPcsSTDChanging(ref decimal value);
        partial void OnScrapPcsSTDChanged();
    
        /// <summary>
        /// There are no comments for ScrapPcsTD in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal ScrapPcsTD
        {
            get
            {
                decimal value = _ScrapPcsTD;
                OnGetScrapPcsTD(ref value);
                return value;
            }
            set
            {
                if (_ScrapPcsTD != value)
                {
                  OnScrapPcsTDChanging(ref value);
                  ReportPropertyChanging("ScrapPcsTD");
                  _ScrapPcsTD = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ScrapPcsTD");
                  OnScrapPcsTDChanged();
              }
            }
        }
        private decimal _ScrapPcsTD = 0m;
        partial void OnGetScrapPcsTD(ref decimal value);
        partial void OnScrapPcsTDChanging(ref decimal value);
        partial void OnScrapPcsTDChanged();
    
        /// <summary>
        /// There are no comments for ScrapPercent in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal ScrapPercent
        {
            get
            {
                decimal value = _ScrapPercent;
                OnGetScrapPercent(ref value);
                return value;
            }
            set
            {
                if (_ScrapPercent != value)
                {
                  OnScrapPercentChanging(ref value);
                  ReportPropertyChanging("ScrapPercent");
                  _ScrapPercent = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ScrapPercent");
                  OnScrapPercentChanged();
              }
            }
        }
        private decimal _ScrapPercent = 0m;
        partial void OnGetScrapPercent(ref decimal value);
        partial void OnScrapPercentChanging(ref decimal value);
        partial void OnScrapPercentChanged();
    
        /// <summary>
        /// There are no comments for SetCostSTD in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal SetCostSTD
        {
            get
            {
                decimal value = _SetCostSTD;
                OnGetSetCostSTD(ref value);
                return value;
            }
            set
            {
                if (_SetCostSTD != value)
                {
                  OnSetCostSTDChanging(ref value);
                  ReportPropertyChanging("SetCostSTD");
                  _SetCostSTD = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SetCostSTD");
                  OnSetCostSTDChanged();
              }
            }
        }
        private decimal _SetCostSTD = 0m;
        partial void OnGetSetCostSTD(ref decimal value);
        partial void OnSetCostSTDChanging(ref decimal value);
        partial void OnSetCostSTDChanged();
    
        /// <summary>
        /// There are no comments for SetCostTD in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal SetCostTD
        {
            get
            {
                decimal value = _SetCostTD;
                OnGetSetCostTD(ref value);
                return value;
            }
            set
            {
                if (_SetCostTD != value)
                {
                  OnSetCostTDChanging(ref value);
                  ReportPropertyChanging("SetCostTD");
                  _SetCostTD = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SetCostTD");
                  OnSetCostTDChanged();
              }
            }
        }
        private decimal _SetCostTD = 0m;
        partial void OnGetSetCostTD(ref decimal value);
        partial void OnSetCostTDChanging(ref decimal value);
        partial void OnSetCostTDChanged();
    
        /// <summary>
        /// There are no comments for SetFixTOT in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal SetFixTOT
        {
            get
            {
                decimal value = _SetFixTOT;
                OnGetSetFixTOT(ref value);
                return value;
            }
            set
            {
                if (_SetFixTOT != value)
                {
                  OnSetFixTOTChanging(ref value);
                  ReportPropertyChanging("SetFixTOT");
                  _SetFixTOT = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SetFixTOT");
                  OnSetFixTOTChanged();
              }
            }
        }
        private decimal _SetFixTOT = 0m;
        partial void OnGetSetFixTOT(ref decimal value);
        partial void OnSetFixTOTChanging(ref decimal value);
        partial void OnSetFixTOTChanged();
    
        /// <summary>
        /// There are no comments for SetFixUPD in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal SetFixUPD
        {
            get
            {
                decimal value = _SetFixUPD;
                OnGetSetFixUPD(ref value);
                return value;
            }
            set
            {
                if (_SetFixUPD != value)
                {
                  OnSetFixUPDChanging(ref value);
                  ReportPropertyChanging("SetFixUPD");
                  _SetFixUPD = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SetFixUPD");
                  OnSetFixUPDChanged();
              }
            }
        }
        private decimal _SetFixUPD = 0m;
        partial void OnGetSetFixUPD(ref decimal value);
        partial void OnSetFixUPDChanging(ref decimal value);
        partial void OnSetFixUPDChanged();
    
        /// <summary>
        /// There are no comments for SetHrsEST in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal SetHrsEST
        {
            get
            {
                decimal value = _SetHrsEST;
                OnGetSetHrsEST(ref value);
                return value;
            }
            set
            {
                if (_SetHrsEST != value)
                {
                  OnSetHrsESTChanging(ref value);
                  ReportPropertyChanging("SetHrsEST");
                  _SetHrsEST = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SetHrsEST");
                  OnSetHrsESTChanged();
              }
            }
        }
        private decimal _SetHrsEST = 0m;
        partial void OnGetSetHrsEST(ref decimal value);
        partial void OnSetHrsESTChanging(ref decimal value);
        partial void OnSetHrsESTChanged();
    
        /// <summary>
        /// There are no comments for SetHrsSTD in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal SetHrsSTD
        {
            get
            {
                decimal value = _SetHrsSTD;
                OnGetSetHrsSTD(ref value);
                return value;
            }
            set
            {
                if (_SetHrsSTD != value)
                {
                  OnSetHrsSTDChanging(ref value);
                  ReportPropertyChanging("SetHrsSTD");
                  _SetHrsSTD = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SetHrsSTD");
                  OnSetHrsSTDChanged();
              }
            }
        }
        private decimal _SetHrsSTD = 0m;
        partial void OnGetSetHrsSTD(ref decimal value);
        partial void OnSetHrsSTDChanging(ref decimal value);
        partial void OnSetHrsSTDChanged();
    
        /// <summary>
        /// There are no comments for SetHrsTD in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal SetHrsTD
        {
            get
            {
                decimal value = _SetHrsTD;
                OnGetSetHrsTD(ref value);
                return value;
            }
            set
            {
                if (_SetHrsTD != value)
                {
                  OnSetHrsTDChanging(ref value);
                  ReportPropertyChanging("SetHrsTD");
                  _SetHrsTD = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SetHrsTD");
                  OnSetHrsTDChanged();
              }
            }
        }
        private decimal _SetHrsTD = 0m;
        partial void OnGetSetHrsTD(ref decimal value);
        partial void OnSetHrsTDChanging(ref decimal value);
        partial void OnSetHrsTDChanged();
    
        /// <summary>
        /// There are no comments for SetupComplete in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string SetupComplete
        {
            get
            {
                string value = _SetupComplete;
                OnGetSetupComplete(ref value);
                return value;
            }
            set
            {
                if (_SetupComplete != value)
                {
                  OnSetupCompleteChanging(ref value);
                  ReportPropertyChanging("SetupComplete");
                  _SetupComplete = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("SetupComplete");
                  OnSetupCompleteChanged();
              }
            }
        }
        private string _SetupComplete = @"N";
        partial void OnGetSetupComplete(ref string value);
        partial void OnSetupCompleteChanging(ref string value);
        partial void OnSetupCompleteChanged();
    
        /// <summary>
        /// There are no comments for SetUpHr in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal SetUpHr
        {
            get
            {
                decimal value = _SetUpHr;
                OnGetSetUpHr(ref value);
                return value;
            }
            set
            {
                if (_SetUpHr != value)
                {
                  OnSetUpHrChanging(ref value);
                  ReportPropertyChanging("SetUpHr");
                  _SetUpHr = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SetUpHr");
                  OnSetUpHrChanged();
              }
            }
        }
        private decimal _SetUpHr = 0m;
        partial void OnGetSetUpHr(ref decimal value);
        partial void OnSetUpHrChanging(ref decimal value);
        partial void OnSetUpHrChanged();
    
        /// <summary>
        /// There are no comments for SetVarTOT in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal SetVarTOT
        {
            get
            {
                decimal value = _SetVarTOT;
                OnGetSetVarTOT(ref value);
                return value;
            }
            set
            {
                if (_SetVarTOT != value)
                {
                  OnSetVarTOTChanging(ref value);
                  ReportPropertyChanging("SetVarTOT");
                  _SetVarTOT = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SetVarTOT");
                  OnSetVarTOTChanged();
              }
            }
        }
        private decimal _SetVarTOT = 0m;
        partial void OnGetSetVarTOT(ref decimal value);
        partial void OnSetVarTOTChanging(ref decimal value);
        partial void OnSetVarTOTChanged();
    
        /// <summary>
        /// There are no comments for SetVarUPD in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal SetVarUPD
        {
            get
            {
                decimal value = _SetVarUPD;
                OnGetSetVarUPD(ref value);
                return value;
            }
            set
            {
                if (_SetVarUPD != value)
                {
                  OnSetVarUPDChanging(ref value);
                  ReportPropertyChanging("SetVarUPD");
                  _SetVarUPD = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SetVarUPD");
                  OnSetVarUPDChanged();
              }
            }
        }
        private decimal _SetVarUPD = 0m;
        partial void OnGetSetVarUPD(ref decimal value);
        partial void OnSetVarUPDChanging(ref decimal value);
        partial void OnSetVarUPDChanged();
    
        /// <summary>
        /// There are no comments for StepComplete in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short StepComplete
        {
            get
            {
                short value = _StepComplete;
                OnGetStepComplete(ref value);
                return value;
            }
            set
            {
                if (_StepComplete != value)
                {
                  OnStepCompleteChanging(ref value);
                  ReportPropertyChanging("StepComplete");
                  _StepComplete = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("StepComplete");
                  OnStepCompleteChanged();
              }
            }
        }
        private short _StepComplete = 0;
        partial void OnGetStepComplete(ref short value);
        partial void OnStepCompleteChanging(ref short value);
        partial void OnStepCompleteChanged();
    
        /// <summary>
        /// There are no comments for StepID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string StepID
        {
            get
            {
                string value = _StepID;
                OnGetStepID(ref value);
                return value;
            }
            set
            {
                if (_StepID != value)
                {
                  OnStepIDChanging(ref value);
                  ReportPropertyChanging("StepID");
                  _StepID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("StepID");
                  OnStepIDChanged();
              }
            }
        }
        private string _StepID;
        partial void OnGetStepID(ref string value);
        partial void OnStepIDChanging(ref string value);
        partial void OnStepIDChanged();
    
        /// <summary>
        /// There are no comments for StepStartDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? StepStartDate
        {
            get
            {
                global::System.DateTime? value = _StepStartDate;
                OnGetStepStartDate(ref value);
                return value;
            }
            set
            {
                if (_StepStartDate != value)
                {
                  OnStepStartDateChanging(ref value);
                  ReportPropertyChanging("StepStartDate");
                  _StepStartDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("StepStartDate");
                  OnStepStartDateChanged();
              }
            }
        }
        private global::System.DateTime? _StepStartDate;
        partial void OnGetStepStartDate(ref global::System.DateTime? value);
        partial void OnStepStartDateChanging(ref global::System.DateTime? value);
        partial void OnStepStartDateChanged();
    
        /// <summary>
        /// There are no comments for ToolKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ToolKey
        {
            get
            {
                int? value = _ToolKey;
                OnGetToolKey(ref value);
                return value;
            }
            set
            {
                if (_ToolKey != value)
                {
                  OnToolKeyChanging(ref value);
                  ReportPropertyChanging("ToolKey");
                  _ToolKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ToolKey");
                  OnToolKeyChanged();
              }
            }
        }
        private int? _ToolKey;
        partial void OnGetToolKey(ref int? value);
        partial void OnToolKeyChanging(ref int? value);
        partial void OnToolKeyChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();
    
        /// <summary>
        /// There are no comments for WhseKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? WhseKey
        {
            get
            {
                int? value = _WhseKey;
                OnGetWhseKey(ref value);
                return value;
            }
            set
            {
                if (_WhseKey != value)
                {
                  OnWhseKeyChanging(ref value);
                  ReportPropertyChanging("WhseKey");
                  _WhseKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WhseKey");
                  OnWhseKeyChanged();
              }
            }
        }
        private int? _WhseKey;
        partial void OnGetWhseKey(ref int? value);
        partial void OnWhseKeyChanging(ref int? value);
        partial void OnWhseKeyChanged();
    
        /// <summary>
        /// There are no comments for WorkCenterKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? WorkCenterKey
        {
            get
            {
                int? value = _WorkCenterKey;
                OnGetWorkCenterKey(ref value);
                return value;
            }
            set
            {
                if (_WorkCenterKey != value)
                {
                  OnWorkCenterKeyChanging(ref value);
                  ReportPropertyChanging("WorkCenterKey");
                  _WorkCenterKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WorkCenterKey");
                  OnWorkCenterKeyChanged();
              }
            }
        }
        private int? _WorkCenterKey;
        partial void OnGetWorkCenterKey(ref int? value);
        partial void OnWorkCenterKeyChanging(ref int? value);
        partial void OnWorkCenterKeyChanged();
    
        /// <summary>
        /// There are no comments for WorkOrderKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int WorkOrderKey
        {
            get
            {
                int value = _WorkOrderKey;
                OnGetWorkOrderKey(ref value);
                return value;
            }
            set
            {
                if (_WorkOrderKey != value)
                {
                  OnWorkOrderKeyChanging(ref value);
                  ReportPropertyChanging("WorkOrderKey");
                  _WorkOrderKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WorkOrderKey");
                  OnWorkOrderKeyChanged();
              }
            }
        }
        private int _WorkOrderKey;
        partial void OnGetWorkOrderKey(ref int value);
        partial void OnWorkOrderKeyChanging(ref int value);
        partial void OnWorkOrderKeyChanged();
    
        /// <summary>
        /// There are no comments for WrkCntrOperFactor in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? WrkCntrOperFactor
        {
            get
            {
                decimal? value = _WrkCntrOperFactor;
                OnGetWrkCntrOperFactor(ref value);
                return value;
            }
            set
            {
                if (_WrkCntrOperFactor != value)
                {
                  OnWrkCntrOperFactorChanging(ref value);
                  ReportPropertyChanging("WrkCntrOperFactor");
                  _WrkCntrOperFactor = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WrkCntrOperFactor");
                  OnWrkCntrOperFactorChanged();
              }
            }
        }
        private decimal? _WrkCntrOperFactor = 0m;
        partial void OnGetWrkCntrOperFactor(ref decimal? value);
        partial void OnWrkCntrOperFactorChanging(ref decimal? value);
        partial void OnWrkCntrOperFactorChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for WorkOrder in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "WorkOrder_WorkOrderDetails", "WorkOrder")]
        public virtual WorkOrder WorkOrder
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<WorkOrder>("Net4Sage.DataAccessModel.WorkOrder_WorkOrderDetails", "WorkOrder").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<WorkOrder>("Net4Sage.DataAccessModel.WorkOrder_WorkOrderDetails", "WorkOrder").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for WorkOrder in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkOrder> WorkOrderReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<WorkOrder>("Net4Sage.DataAccessModel.WorkOrder_WorkOrderDetails", "WorkOrder");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<WorkOrder>("Net4Sage.DataAccessModel.WorkOrder_WorkOrderDetails", "WorkOrder", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<WorkOrder>("Net4Sage.DataAccessModel.WorkOrder_WorkOrderDetails", "WorkOrder").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for RouteDetails in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "RouteDetails_WorkOrderDetails", "RouteDetails")]
        public virtual RouteDetail RouteDetails
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<RouteDetail>("Net4Sage.DataAccessModel.RouteDetails_WorkOrderDetails", "RouteDetails").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<RouteDetail>("Net4Sage.DataAccessModel.RouteDetails_WorkOrderDetails", "RouteDetails").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for RouteDetails in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RouteDetail> RouteDetailsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<RouteDetail>("Net4Sage.DataAccessModel.RouteDetails_WorkOrderDetails", "RouteDetails");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<RouteDetail>("Net4Sage.DataAccessModel.RouteDetails_WorkOrderDetails", "RouteDetails", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<RouteDetail>("Net4Sage.DataAccessModel.RouteDetails_WorkOrderDetails", "RouteDetails").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.WorkOrder in the schema.
    /// </summary>
    /// <KeyProperties>
    /// WorkOrderKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="WorkOrder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WorkOrder : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new WorkOrder object.
        /// </summary>
        /// <param name="workOrderKey">Initial value of WorkOrderKey.</param>
        /// <param name="appTrackFlag">Initial value of AppTrackFlag.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="complete">Initial value of Complete.</param>
        /// <param name="createType">Initial value of CreateType.</param>
        /// <param name="itemClassKey">Initial value of ItemClassKey.</param>
        /// <param name="printed">Initial value of Printed.</param>
        /// <param name="priority">Initial value of Priority.</param>
        /// <param name="priorityCode">Initial value of PriorityCode.</param>
        /// <param name="quantity">Initial value of Quantity.</param>
        /// <param name="quantityToDate">Initial value of QuantityToDate.</param>
        /// <param name="qTYCycle">Initial value of QTYCycle.</param>
        /// <param name="routingKey">Initial value of RoutingKey.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        /// <param name="whseKey">Initial value of WhseKey.</param>
        /// <param name="workOrderNo">Initial value of WorkOrderNo.</param>
        /// <param name="workOrderType">Initial value of WorkOrderType.</param>
        public static WorkOrder CreateWorkOrder(int workOrderKey, short appTrackFlag, string companyID, short complete, short createType, int itemClassKey, short printed, short priority, int priorityCode, decimal quantity, decimal quantityToDate, decimal qTYCycle, int routingKey, int updateCounter, int whseKey, string workOrderNo, short workOrderType)
        {
            WorkOrder workOrder = new WorkOrder();
            workOrder.WorkOrderKey = workOrderKey;
            workOrder.AppTrackFlag = appTrackFlag;
            workOrder.CompanyID = companyID;
            workOrder.Complete = complete;
            workOrder.CreateType = createType;
            workOrder.ItemClassKey = itemClassKey;
            workOrder.Printed = printed;
            workOrder.Priority = priority;
            workOrder.PriorityCode = priorityCode;
            workOrder.Quantity = quantity;
            workOrder.QuantityToDate = quantityToDate;
            workOrder.QTYCycle = qTYCycle;
            workOrder.RoutingKey = routingKey;
            workOrder.UpdateCounter = updateCounter;
            workOrder.WhseKey = whseKey;
            workOrder.WorkOrderNo = workOrderNo;
            workOrder.WorkOrderType = workOrderType;
            return workOrder;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for WorkOrderKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int WorkOrderKey
        {
            get
            {
                int value = _WorkOrderKey;
                OnGetWorkOrderKey(ref value);
                return value;
            }
            set
            {
                if (_WorkOrderKey != value)
                {
                  OnWorkOrderKeyChanging(ref value);
                  ReportPropertyChanging("WorkOrderKey");
                  _WorkOrderKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WorkOrderKey");
                  OnWorkOrderKeyChanged();
              }
            }
        }
        private int _WorkOrderKey;
        partial void OnGetWorkOrderKey(ref int value);
        partial void OnWorkOrderKeyChanging(ref int value);
        partial void OnWorkOrderKeyChanged();
    
        /// <summary>
        /// There are no comments for ActualStartDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? ActualStartDate
        {
            get
            {
                global::System.DateTime? value = _ActualStartDate;
                OnGetActualStartDate(ref value);
                return value;
            }
            set
            {
                if (_ActualStartDate != value)
                {
                  OnActualStartDateChanging(ref value);
                  ReportPropertyChanging("ActualStartDate");
                  _ActualStartDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ActualStartDate");
                  OnActualStartDateChanged();
              }
            }
        }
        private global::System.DateTime? _ActualStartDate;
        partial void OnGetActualStartDate(ref global::System.DateTime? value);
        partial void OnActualStartDateChanging(ref global::System.DateTime? value);
        partial void OnActualStartDateChanged();
    
        /// <summary>
        /// There are no comments for ApprovalKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ApprovalKey
        {
            get
            {
                int? value = _ApprovalKey;
                OnGetApprovalKey(ref value);
                return value;
            }
            set
            {
                if (_ApprovalKey != value)
                {
                  OnApprovalKeyChanging(ref value);
                  ReportPropertyChanging("ApprovalKey");
                  _ApprovalKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ApprovalKey");
                  OnApprovalKeyChanged();
              }
            }
        }
        private int? _ApprovalKey;
        partial void OnGetApprovalKey(ref int? value);
        partial void OnApprovalKeyChanging(ref int? value);
        partial void OnApprovalKeyChanged();
    
        /// <summary>
        /// There are no comments for AppTrackFlag in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short AppTrackFlag
        {
            get
            {
                short value = _AppTrackFlag;
                OnGetAppTrackFlag(ref value);
                return value;
            }
            set
            {
                if (_AppTrackFlag != value)
                {
                  OnAppTrackFlagChanging(ref value);
                  ReportPropertyChanging("AppTrackFlag");
                  _AppTrackFlag = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AppTrackFlag");
                  OnAppTrackFlagChanged();
              }
            }
        }
        private short _AppTrackFlag = 0;
        partial void OnGetAppTrackFlag(ref short value);
        partial void OnAppTrackFlagChanging(ref short value);
        partial void OnAppTrackFlagChanged();
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for Complete in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Complete
        {
            get
            {
                short value = _Complete;
                OnGetComplete(ref value);
                return value;
            }
            set
            {
                if (_Complete != value)
                {
                  OnCompleteChanging(ref value);
                  ReportPropertyChanging("Complete");
                  _Complete = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Complete");
                  OnCompleteChanged();
              }
            }
        }
        private short _Complete = 0;
        partial void OnGetComplete(ref short value);
        partial void OnCompleteChanging(ref short value);
        partial void OnCompleteChanged();
    
        /// <summary>
        /// There are no comments for CompleteDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CompleteDate
        {
            get
            {
                global::System.DateTime? value = _CompleteDate;
                OnGetCompleteDate(ref value);
                return value;
            }
            set
            {
                if (_CompleteDate != value)
                {
                  OnCompleteDateChanging(ref value);
                  ReportPropertyChanging("CompleteDate");
                  _CompleteDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CompleteDate");
                  OnCompleteDateChanged();
              }
            }
        }
        private global::System.DateTime? _CompleteDate;
        partial void OnGetCompleteDate(ref global::System.DateTime? value);
        partial void OnCompleteDateChanging(ref global::System.DateTime? value);
        partial void OnCompleteDateChanged();
    
        /// <summary>
        /// There are no comments for CreateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CreateDate
        {
            get
            {
                global::System.DateTime? value = _CreateDate;
                OnGetCreateDate(ref value);
                return value;
            }
            set
            {
                if (_CreateDate != value)
                {
                  OnCreateDateChanging(ref value);
                  ReportPropertyChanging("CreateDate");
                  _CreateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateDate");
                  OnCreateDateChanged();
              }
            }
        }
        private global::System.DateTime? _CreateDate;
        partial void OnGetCreateDate(ref global::System.DateTime? value);
        partial void OnCreateDateChanging(ref global::System.DateTime? value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// There are no comments for CreateType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CreateType
        {
            get
            {
                short value = _CreateType;
                OnGetCreateType(ref value);
                return value;
            }
            set
            {
                if (_CreateType != value)
                {
                  OnCreateTypeChanging(ref value);
                  ReportPropertyChanging("CreateType");
                  _CreateType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateType");
                  OnCreateTypeChanged();
              }
            }
        }
        private short _CreateType = 0;
        partial void OnGetCreateType(ref short value);
        partial void OnCreateTypeChanging(ref short value);
        partial void OnCreateTypeChanged();
    
        /// <summary>
        /// There are no comments for CreateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CreateUserID
        {
            get
            {
                string value = _CreateUserID;
                OnGetCreateUserID(ref value);
                return value;
            }
            set
            {
                if (_CreateUserID != value)
                {
                  OnCreateUserIDChanging(ref value);
                  ReportPropertyChanging("CreateUserID");
                  _CreateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CreateUserID");
                  OnCreateUserIDChanged();
              }
            }
        }
        private string _CreateUserID;
        partial void OnGetCreateUserID(ref string value);
        partial void OnCreateUserIDChanging(ref string value);
        partial void OnCreateUserIDChanged();
    
        /// <summary>
        /// There are no comments for CustKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CustKey
        {
            get
            {
                int? value = _CustKey;
                OnGetCustKey(ref value);
                return value;
            }
            set
            {
                if (_CustKey != value)
                {
                  OnCustKeyChanging(ref value);
                  ReportPropertyChanging("CustKey");
                  _CustKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustKey");
                  OnCustKeyChanged();
              }
            }
        }
        private int? _CustKey;
        partial void OnGetCustKey(ref int? value);
        partial void OnCustKeyChanging(ref int? value);
        partial void OnCustKeyChanged();
    
        /// <summary>
        /// There are no comments for CustPONo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CustPONo
        {
            get
            {
                string value = _CustPONo;
                OnGetCustPONo(ref value);
                return value;
            }
            set
            {
                if (_CustPONo != value)
                {
                  OnCustPONoChanging(ref value);
                  ReportPropertyChanging("CustPONo");
                  _CustPONo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CustPONo");
                  OnCustPONoChanged();
              }
            }
        }
        private string _CustPONo;
        partial void OnGetCustPONo(ref string value);
        partial void OnCustPONoChanging(ref string value);
        partial void OnCustPONoChanged();
    
        /// <summary>
        /// There are no comments for EntryDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? EntryDate
        {
            get
            {
                global::System.DateTime? value = _EntryDate;
                OnGetEntryDate(ref value);
                return value;
            }
            set
            {
                if (_EntryDate != value)
                {
                  OnEntryDateChanging(ref value);
                  ReportPropertyChanging("EntryDate");
                  _EntryDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EntryDate");
                  OnEntryDateChanged();
              }
            }
        }
        private global::System.DateTime? _EntryDate;
        partial void OnGetEntryDate(ref global::System.DateTime? value);
        partial void OnEntryDateChanging(ref global::System.DateTime? value);
        partial void OnEntryDateChanged();
    
        /// <summary>
        /// There are no comments for EstimateKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? EstimateKey
        {
            get
            {
                int? value = _EstimateKey;
                OnGetEstimateKey(ref value);
                return value;
            }
            set
            {
                if (_EstimateKey != value)
                {
                  OnEstimateKeyChanging(ref value);
                  ReportPropertyChanging("EstimateKey");
                  _EstimateKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EstimateKey");
                  OnEstimateKeyChanged();
              }
            }
        }
        private int? _EstimateKey;
        partial void OnGetEstimateKey(ref int? value);
        partial void OnEstimateKeyChanging(ref int? value);
        partial void OnEstimateKeyChanged();
    
        /// <summary>
        /// There are no comments for ItemClassKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ItemClassKey
        {
            get
            {
                int value = _ItemClassKey;
                OnGetItemClassKey(ref value);
                return value;
            }
            set
            {
                if (_ItemClassKey != value)
                {
                  OnItemClassKeyChanging(ref value);
                  ReportPropertyChanging("ItemClassKey");
                  _ItemClassKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ItemClassKey");
                  OnItemClassKeyChanged();
              }
            }
        }
        private int _ItemClassKey;
        partial void OnGetItemClassKey(ref int value);
        partial void OnItemClassKeyChanging(ref int value);
        partial void OnItemClassKeyChanged();
    
        /// <summary>
        /// There are no comments for LastActDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? LastActDate
        {
            get
            {
                global::System.DateTime? value = _LastActDate;
                OnGetLastActDate(ref value);
                return value;
            }
            set
            {
                if (_LastActDate != value)
                {
                  OnLastActDateChanging(ref value);
                  ReportPropertyChanging("LastActDate");
                  _LastActDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LastActDate");
                  OnLastActDateChanged();
              }
            }
        }
        private global::System.DateTime? _LastActDate;
        partial void OnGetLastActDate(ref global::System.DateTime? value);
        partial void OnLastActDateChanging(ref global::System.DateTime? value);
        partial void OnLastActDateChanged();
    
        /// <summary>
        /// There are no comments for MFGCommitDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? MFGCommitDate
        {
            get
            {
                global::System.DateTime? value = _MFGCommitDate;
                OnGetMFGCommitDate(ref value);
                return value;
            }
            set
            {
                if (_MFGCommitDate != value)
                {
                  OnMFGCommitDateChanging(ref value);
                  ReportPropertyChanging("MFGCommitDate");
                  _MFGCommitDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MFGCommitDate");
                  OnMFGCommitDateChanged();
              }
            }
        }
        private global::System.DateTime? _MFGCommitDate;
        partial void OnGetMFGCommitDate(ref global::System.DateTime? value);
        partial void OnMFGCommitDateChanging(ref global::System.DateTime? value);
        partial void OnMFGCommitDateChanged();
    
        /// <summary>
        /// There are no comments for NotesKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? NotesKey
        {
            get
            {
                int? value = _NotesKey;
                OnGetNotesKey(ref value);
                return value;
            }
            set
            {
                if (_NotesKey != value)
                {
                  OnNotesKeyChanging(ref value);
                  ReportPropertyChanging("NotesKey");
                  _NotesKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NotesKey");
                  OnNotesKeyChanged();
              }
            }
        }
        private int? _NotesKey;
        partial void OnGetNotesKey(ref int? value);
        partial void OnNotesKeyChanging(ref int? value);
        partial void OnNotesKeyChanged();
    
        /// <summary>
        /// There are no comments for Printed in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Printed
        {
            get
            {
                short value = _Printed;
                OnGetPrinted(ref value);
                return value;
            }
            set
            {
                if (_Printed != value)
                {
                  OnPrintedChanging(ref value);
                  ReportPropertyChanging("Printed");
                  _Printed = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Printed");
                  OnPrintedChanged();
              }
            }
        }
        private short _Printed = 0;
        partial void OnGetPrinted(ref short value);
        partial void OnPrintedChanging(ref short value);
        partial void OnPrintedChanged();
    
        /// <summary>
        /// There are no comments for Priority in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Priority
        {
            get
            {
                short value = _Priority;
                OnGetPriority(ref value);
                return value;
            }
            set
            {
                if (_Priority != value)
                {
                  OnPriorityChanging(ref value);
                  ReportPropertyChanging("Priority");
                  _Priority = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Priority");
                  OnPriorityChanged();
              }
            }
        }
        private short _Priority = 0;
        partial void OnGetPriority(ref short value);
        partial void OnPriorityChanging(ref short value);
        partial void OnPriorityChanged();
    
        /// <summary>
        /// There are no comments for PriorityCode in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int PriorityCode
        {
            get
            {
                int value = _PriorityCode;
                OnGetPriorityCode(ref value);
                return value;
            }
            set
            {
                if (_PriorityCode != value)
                {
                  OnPriorityCodeChanging(ref value);
                  ReportPropertyChanging("PriorityCode");
                  _PriorityCode = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PriorityCode");
                  OnPriorityCodeChanged();
              }
            }
        }
        private int _PriorityCode = 0;
        partial void OnGetPriorityCode(ref int value);
        partial void OnPriorityCodeChanging(ref int value);
        partial void OnPriorityCodeChanged();
    
        /// <summary>
        /// There are no comments for ProjectKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ProjectKey
        {
            get
            {
                int? value = _ProjectKey;
                OnGetProjectKey(ref value);
                return value;
            }
            set
            {
                if (_ProjectKey != value)
                {
                  OnProjectKeyChanging(ref value);
                  ReportPropertyChanging("ProjectKey");
                  _ProjectKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ProjectKey");
                  OnProjectKeyChanged();
              }
            }
        }
        private int? _ProjectKey;
        partial void OnGetProjectKey(ref int? value);
        partial void OnProjectKeyChanging(ref int? value);
        partial void OnProjectKeyChanged();
    
        /// <summary>
        /// There are no comments for Quantity in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal Quantity
        {
            get
            {
                decimal value = _Quantity;
                OnGetQuantity(ref value);
                return value;
            }
            set
            {
                if (_Quantity != value)
                {
                  OnQuantityChanging(ref value);
                  ReportPropertyChanging("Quantity");
                  _Quantity = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Quantity");
                  OnQuantityChanged();
              }
            }
        }
        private decimal _Quantity = 0m;
        partial void OnGetQuantity(ref decimal value);
        partial void OnQuantityChanging(ref decimal value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// There are no comments for QuantityToDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal QuantityToDate
        {
            get
            {
                decimal value = _QuantityToDate;
                OnGetQuantityToDate(ref value);
                return value;
            }
            set
            {
                if (_QuantityToDate != value)
                {
                  OnQuantityToDateChanging(ref value);
                  ReportPropertyChanging("QuantityToDate");
                  _QuantityToDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QuantityToDate");
                  OnQuantityToDateChanged();
              }
            }
        }
        private decimal _QuantityToDate = 0m;
        partial void OnGetQuantityToDate(ref decimal value);
        partial void OnQuantityToDateChanging(ref decimal value);
        partial void OnQuantityToDateChanged();
    
        /// <summary>
        /// There are no comments for QTYCycle in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal QTYCycle
        {
            get
            {
                decimal value = _QTYCycle;
                OnGetQTYCycle(ref value);
                return value;
            }
            set
            {
                if (_QTYCycle != value)
                {
                  OnQTYCycleChanging(ref value);
                  ReportPropertyChanging("QTYCycle");
                  _QTYCycle = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QTYCycle");
                  OnQTYCycleChanged();
              }
            }
        }
        private decimal _QTYCycle = 0m;
        partial void OnGetQTYCycle(ref decimal value);
        partial void OnQTYCycleChanging(ref decimal value);
        partial void OnQTYCycleChanged();
    
        /// <summary>
        /// There are no comments for ReasonCodeKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ReasonCodeKey
        {
            get
            {
                int? value = _ReasonCodeKey;
                OnGetReasonCodeKey(ref value);
                return value;
            }
            set
            {
                if (_ReasonCodeKey != value)
                {
                  OnReasonCodeKeyChanging(ref value);
                  ReportPropertyChanging("ReasonCodeKey");
                  _ReasonCodeKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ReasonCodeKey");
                  OnReasonCodeKeyChanged();
              }
            }
        }
        private int? _ReasonCodeKey;
        partial void OnGetReasonCodeKey(ref int? value);
        partial void OnReasonCodeKeyChanging(ref int? value);
        partial void OnReasonCodeKeyChanged();
    
        /// <summary>
        /// There are no comments for ReleaseDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? ReleaseDate
        {
            get
            {
                global::System.DateTime? value = _ReleaseDate;
                OnGetReleaseDate(ref value);
                return value;
            }
            set
            {
                if (_ReleaseDate != value)
                {
                  OnReleaseDateChanging(ref value);
                  ReportPropertyChanging("ReleaseDate");
                  _ReleaseDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ReleaseDate");
                  OnReleaseDateChanged();
              }
            }
        }
        private global::System.DateTime? _ReleaseDate;
        partial void OnGetReleaseDate(ref global::System.DateTime? value);
        partial void OnReleaseDateChanging(ref global::System.DateTime? value);
        partial void OnReleaseDateChanged();
    
        /// <summary>
        /// There are no comments for RequiredDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? RequiredDate
        {
            get
            {
                global::System.DateTime? value = _RequiredDate;
                OnGetRequiredDate(ref value);
                return value;
            }
            set
            {
                if (_RequiredDate != value)
                {
                  OnRequiredDateChanging(ref value);
                  ReportPropertyChanging("RequiredDate");
                  _RequiredDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RequiredDate");
                  OnRequiredDateChanged();
              }
            }
        }
        private global::System.DateTime? _RequiredDate;
        partial void OnGetRequiredDate(ref global::System.DateTime? value);
        partial void OnRequiredDateChanging(ref global::System.DateTime? value);
        partial void OnRequiredDateChanged();
    
        /// <summary>
        /// There are no comments for RoutingKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int RoutingKey
        {
            get
            {
                int value = _RoutingKey;
                OnGetRoutingKey(ref value);
                return value;
            }
            set
            {
                if (_RoutingKey != value)
                {
                  OnRoutingKeyChanging(ref value);
                  ReportPropertyChanging("RoutingKey");
                  _RoutingKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RoutingKey");
                  OnRoutingKeyChanged();
              }
            }
        }
        private int _RoutingKey;
        partial void OnGetRoutingKey(ref int value);
        partial void OnRoutingKeyChanging(ref int value);
        partial void OnRoutingKeyChanged();
    
        /// <summary>
        /// There are no comments for SchedFinish in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? SchedFinish
        {
            get
            {
                global::System.DateTime? value = _SchedFinish;
                OnGetSchedFinish(ref value);
                return value;
            }
            set
            {
                if (_SchedFinish != value)
                {
                  OnSchedFinishChanging(ref value);
                  ReportPropertyChanging("SchedFinish");
                  _SchedFinish = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SchedFinish");
                  OnSchedFinishChanged();
              }
            }
        }
        private global::System.DateTime? _SchedFinish;
        partial void OnGetSchedFinish(ref global::System.DateTime? value);
        partial void OnSchedFinishChanging(ref global::System.DateTime? value);
        partial void OnSchedFinishChanged();
    
        /// <summary>
        /// There are no comments for SchedStart in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? SchedStart
        {
            get
            {
                global::System.DateTime? value = _SchedStart;
                OnGetSchedStart(ref value);
                return value;
            }
            set
            {
                if (_SchedStart != value)
                {
                  OnSchedStartChanging(ref value);
                  ReportPropertyChanging("SchedStart");
                  _SchedStart = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SchedStart");
                  OnSchedStartChanged();
              }
            }
        }
        private global::System.DateTime? _SchedStart;
        partial void OnGetSchedStart(ref global::System.DateTime? value);
        partial void OnSchedStartChanging(ref global::System.DateTime? value);
        partial void OnSchedStartChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();
    
        /// <summary>
        /// There are no comments for UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? UpdateDate
        {
            get
            {
                global::System.DateTime? value = _UpdateDate;
                OnGetUpdateDate(ref value);
                return value;
            }
            set
            {
                if (_UpdateDate != value)
                {
                  OnUpdateDateChanging(ref value);
                  ReportPropertyChanging("UpdateDate");
                  _UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateDate");
                  OnUpdateDateChanged();
              }
            }
        }
        private global::System.DateTime? _UpdateDate;
        partial void OnGetUpdateDate(ref global::System.DateTime? value);
        partial void OnUpdateDateChanging(ref global::System.DateTime? value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// There are no comments for UpdateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UpdateUserID
        {
            get
            {
                string value = _UpdateUserID;
                OnGetUpdateUserID(ref value);
                return value;
            }
            set
            {
                if (_UpdateUserID != value)
                {
                  OnUpdateUserIDChanging(ref value);
                  ReportPropertyChanging("UpdateUserID");
                  _UpdateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UpdateUserID");
                  OnUpdateUserIDChanged();
              }
            }
        }
        private string _UpdateUserID;
        partial void OnGetUpdateUserID(ref string value);
        partial void OnUpdateUserIDChanging(ref string value);
        partial void OnUpdateUserIDChanged();
    
        /// <summary>
        /// There are no comments for WhseKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int WhseKey
        {
            get
            {
                int value = _WhseKey;
                OnGetWhseKey(ref value);
                return value;
            }
            set
            {
                if (_WhseKey != value)
                {
                  OnWhseKeyChanging(ref value);
                  ReportPropertyChanging("WhseKey");
                  _WhseKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WhseKey");
                  OnWhseKeyChanged();
              }
            }
        }
        private int _WhseKey;
        partial void OnGetWhseKey(ref int value);
        partial void OnWhseKeyChanging(ref int value);
        partial void OnWhseKeyChanged();
    
        /// <summary>
        /// There are no comments for WorkOrderNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string WorkOrderNo
        {
            get
            {
                string value = _WorkOrderNo;
                OnGetWorkOrderNo(ref value);
                return value;
            }
            set
            {
                if (_WorkOrderNo != value)
                {
                  OnWorkOrderNoChanging(ref value);
                  ReportPropertyChanging("WorkOrderNo");
                  _WorkOrderNo = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("WorkOrderNo");
                  OnWorkOrderNoChanged();
              }
            }
        }
        private string _WorkOrderNo;
        partial void OnGetWorkOrderNo(ref string value);
        partial void OnWorkOrderNoChanging(ref string value);
        partial void OnWorkOrderNoChanged();
    
        /// <summary>
        /// There are no comments for WorkOrderType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short WorkOrderType
        {
            get
            {
                short value = _WorkOrderType;
                OnGetWorkOrderType(ref value);
                return value;
            }
            set
            {
                if (_WorkOrderType != value)
                {
                  OnWorkOrderTypeChanging(ref value);
                  ReportPropertyChanging("WorkOrderType");
                  _WorkOrderType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WorkOrderType");
                  OnWorkOrderTypeChanged();
              }
            }
        }
        private short _WorkOrderType = 0;
        partial void OnGetWorkOrderType(ref short value);
        partial void OnWorkOrderTypeChanging(ref short value);
        partial void OnWorkOrderTypeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Details in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "WorkOrder_WorkOrderDetails", "Details")]
        public virtual EntityCollection<WorkOrderDetails> Details
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<WorkOrderDetails>("Net4Sage.DataAccessModel.WorkOrder_WorkOrderDetails", "Details");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<WorkOrderDetails>("Net4Sage.DataAccessModel.WorkOrder_WorkOrderDetails", "Details", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Route in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Route_WorkOrder", "Route")]
        public virtual Route Route
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Route>("Net4Sage.DataAccessModel.Route_WorkOrder", "Route").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Route>("Net4Sage.DataAccessModel.Route_WorkOrder", "Route").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Route in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Route> RouteReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Route>("Net4Sage.DataAccessModel.Route_WorkOrder", "Route");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Route>("Net4Sage.DataAccessModel.Route_WorkOrder", "Route", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Route>("Net4Sage.DataAccessModel.Route_WorkOrder", "Route").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for WorkOrderProds in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "WorkOrder_WorkOrderProd", "WorkOrderProds")]
        public virtual EntityCollection<WorkOrderProd> WorkOrderProds
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<WorkOrderProd>("Net4Sage.DataAccessModel.WorkOrder_WorkOrderProd", "WorkOrderProds");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<WorkOrderProd>("Net4Sage.DataAccessModel.WorkOrder_WorkOrderProd", "WorkOrderProds", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.MFParameters in the schema.
    /// </summary>
    /// <KeyProperties>
    /// CompanyID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="MFParameters")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MFParameters : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new MFParameters object.
        /// </summary>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="createType">Initial value of CreateType.</param>
        /// <param name="gLPostRgstrFormat">Initial value of GLPostRgstrFormat.</param>
        /// <param name="nonInvtForMatOperationTyp">Initial value of NonInvtForMatOperationTyp.</param>
        /// <param name="nonInvtForOthOperationTyp">Initial value of NonInvtForOthOperationTyp.</param>
        /// <param name="nonInvtForOutOperationTyp">Initial value of NonInvtForOutOperationTyp.</param>
        /// <param name="noOfFuturePer">Initial value of NoOfFuturePer.</param>
        /// <param name="parentBackFlush">Initial value of ParentBackFlush.</param>
        /// <param name="integrateWithGL">Initial value of IntegrateWithGL.</param>
        /// <param name="parmEstExpiratDaysNum">Initial value of ParmEstExpiratDaysNum.</param>
        /// <param name="parmNextEstimateNum">Initial value of ParmNextEstimateNum.</param>
        /// <param name="parmNextLotNum">Initial value of ParmNextLotNum.</param>
        /// <param name="parmNextLotTransNum">Initial value of ParmNextLotTransNum.</param>
        /// <param name="parmNextShipment">Initial value of ParmNextShipment.</param>
        /// <param name="parmNextTranNum">Initial value of ParmNextTranNum.</param>
        /// <param name="parmNextWorkOrdNum">Initial value of ParmNextWorkOrdNum.</param>
        /// <param name="parmSchOutSideWC">Initial value of ParmSchOutSideWC.</param>
        /// <param name="parmShipNumCopies">Initial value of ParmShipNumCopies.</param>
        /// <param name="phantIncLabor">Initial value of PhantIncLabor.</param>
        /// <param name="phantIncMat">Initial value of PhantIncMat.</param>
        /// <param name="phantIncOther">Initial value of PhantIncOther.</param>
        /// <param name="phantIncOut">Initial value of PhantIncOut.</param>
        /// <param name="phantIncProg">Initial value of PhantIncProg.</param>
        /// <param name="phantStartStep">Initial value of PhantStartStep.</param>
        /// <param name="phantStepIncrement">Initial value of PhantStepIncrement.</param>
        /// <param name="releaseDateDays">Initial value of ReleaseDateDays.</param>
        /// <param name="schedCompleteTime">Initial value of SchedCompleteTime.</param>
        /// <param name="unlockAllFuturePer">Initial value of UnlockAllFuturePer.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        /// <param name="wIPHiddenBatchKey">Initial value of WIPHiddenBatchKey.</param>
        public static MFParameters CreateMFParameters(string companyID, short createType, short gLPostRgstrFormat, short nonInvtForMatOperationTyp, short nonInvtForOthOperationTyp, short nonInvtForOutOperationTyp, short noOfFuturePer, short parentBackFlush, short integrateWithGL, decimal parmEstExpiratDaysNum, decimal parmNextEstimateNum, decimal parmNextLotNum, decimal parmNextLotTransNum, decimal parmNextShipment, decimal parmNextTranNum, decimal parmNextWorkOrdNum, short parmSchOutSideWC, decimal parmShipNumCopies, short phantIncLabor, short phantIncMat, short phantIncOther, short phantIncOut, short phantIncProg, string phantStartStep, decimal phantStepIncrement, decimal releaseDateDays, global::System.DateTime schedCompleteTime, short unlockAllFuturePer, int updateCounter, int wIPHiddenBatchKey)
        {
            MFParameters mFParameters = new MFParameters();
            mFParameters.CompanyID = companyID;
            mFParameters.CreateType = createType;
            mFParameters.GLPostRgstrFormat = gLPostRgstrFormat;
            mFParameters.NonInvtForMatOperationTyp = nonInvtForMatOperationTyp;
            mFParameters.NonInvtForOthOperationTyp = nonInvtForOthOperationTyp;
            mFParameters.NonInvtForOutOperationTyp = nonInvtForOutOperationTyp;
            mFParameters.NoOfFuturePer = noOfFuturePer;
            mFParameters.ParentBackFlush = parentBackFlush;
            mFParameters.IntegrateWithGL = integrateWithGL;
            mFParameters.ParmEstExpiratDaysNum = parmEstExpiratDaysNum;
            mFParameters.ParmNextEstimateNum = parmNextEstimateNum;
            mFParameters.ParmNextLotNum = parmNextLotNum;
            mFParameters.ParmNextLotTransNum = parmNextLotTransNum;
            mFParameters.ParmNextShipment = parmNextShipment;
            mFParameters.ParmNextTranNum = parmNextTranNum;
            mFParameters.ParmNextWorkOrdNum = parmNextWorkOrdNum;
            mFParameters.ParmSchOutSideWC = parmSchOutSideWC;
            mFParameters.ParmShipNumCopies = parmShipNumCopies;
            mFParameters.PhantIncLabor = phantIncLabor;
            mFParameters.PhantIncMat = phantIncMat;
            mFParameters.PhantIncOther = phantIncOther;
            mFParameters.PhantIncOut = phantIncOut;
            mFParameters.PhantIncProg = phantIncProg;
            mFParameters.PhantStartStep = phantStartStep;
            mFParameters.PhantStepIncrement = phantStepIncrement;
            mFParameters.ReleaseDateDays = releaseDateDays;
            mFParameters.SchedCompleteTime = schedCompleteTime;
            mFParameters.UnlockAllFuturePer = unlockAllFuturePer;
            mFParameters.UpdateCounter = updateCounter;
            mFParameters.WIPHiddenBatchKey = wIPHiddenBatchKey;
            return mFParameters;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for CreateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CreateDate
        {
            get
            {
                global::System.DateTime? value = _CreateDate;
                OnGetCreateDate(ref value);
                return value;
            }
            set
            {
                if (_CreateDate != value)
                {
                  OnCreateDateChanging(ref value);
                  ReportPropertyChanging("CreateDate");
                  _CreateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateDate");
                  OnCreateDateChanged();
              }
            }
        }
        private global::System.DateTime? _CreateDate;
        partial void OnGetCreateDate(ref global::System.DateTime? value);
        partial void OnCreateDateChanging(ref global::System.DateTime? value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// There are no comments for CreateType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CreateType
        {
            get
            {
                short value = _CreateType;
                OnGetCreateType(ref value);
                return value;
            }
            set
            {
                if (_CreateType != value)
                {
                  OnCreateTypeChanging(ref value);
                  ReportPropertyChanging("CreateType");
                  _CreateType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateType");
                  OnCreateTypeChanged();
              }
            }
        }
        private short _CreateType = 0;
        partial void OnGetCreateType(ref short value);
        partial void OnCreateTypeChanging(ref short value);
        partial void OnCreateTypeChanged();
    
        /// <summary>
        /// There are no comments for CreateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CreateUserID
        {
            get
            {
                string value = _CreateUserID;
                OnGetCreateUserID(ref value);
                return value;
            }
            set
            {
                if (_CreateUserID != value)
                {
                  OnCreateUserIDChanging(ref value);
                  ReportPropertyChanging("CreateUserID");
                  _CreateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CreateUserID");
                  OnCreateUserIDChanged();
              }
            }
        }
        private string _CreateUserID;
        partial void OnGetCreateUserID(ref string value);
        partial void OnCreateUserIDChanging(ref string value);
        partial void OnCreateUserIDChanged();
    
        /// <summary>
        /// There are no comments for GLPostRgstrFormat in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short GLPostRgstrFormat
        {
            get
            {
                short value = _GLPostRgstrFormat;
                OnGetGLPostRgstrFormat(ref value);
                return value;
            }
            set
            {
                if (_GLPostRgstrFormat != value)
                {
                  OnGLPostRgstrFormatChanging(ref value);
                  ReportPropertyChanging("GLPostRgstrFormat");
                  _GLPostRgstrFormat = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("GLPostRgstrFormat");
                  OnGLPostRgstrFormatChanged();
              }
            }
        }
        private short _GLPostRgstrFormat = 2;
        partial void OnGetGLPostRgstrFormat(ref short value);
        partial void OnGLPostRgstrFormatChanging(ref short value);
        partial void OnGLPostRgstrFormatChanged();
    
        /// <summary>
        /// There are no comments for NonInvtForMatOperationTyp in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short NonInvtForMatOperationTyp
        {
            get
            {
                short value = _NonInvtForMatOperationTyp;
                OnGetNonInvtForMatOperationTyp(ref value);
                return value;
            }
            set
            {
                if (_NonInvtForMatOperationTyp != value)
                {
                  OnNonInvtForMatOperationTypChanging(ref value);
                  ReportPropertyChanging("NonInvtForMatOperationTyp");
                  _NonInvtForMatOperationTyp = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NonInvtForMatOperationTyp");
                  OnNonInvtForMatOperationTypChanged();
              }
            }
        }
        private short _NonInvtForMatOperationTyp = 0;
        partial void OnGetNonInvtForMatOperationTyp(ref short value);
        partial void OnNonInvtForMatOperationTypChanging(ref short value);
        partial void OnNonInvtForMatOperationTypChanged();
    
        /// <summary>
        /// There are no comments for NonInvtForOthOperationTyp in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short NonInvtForOthOperationTyp
        {
            get
            {
                short value = _NonInvtForOthOperationTyp;
                OnGetNonInvtForOthOperationTyp(ref value);
                return value;
            }
            set
            {
                if (_NonInvtForOthOperationTyp != value)
                {
                  OnNonInvtForOthOperationTypChanging(ref value);
                  ReportPropertyChanging("NonInvtForOthOperationTyp");
                  _NonInvtForOthOperationTyp = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NonInvtForOthOperationTyp");
                  OnNonInvtForOthOperationTypChanged();
              }
            }
        }
        private short _NonInvtForOthOperationTyp = 0;
        partial void OnGetNonInvtForOthOperationTyp(ref short value);
        partial void OnNonInvtForOthOperationTypChanging(ref short value);
        partial void OnNonInvtForOthOperationTypChanged();
    
        /// <summary>
        /// There are no comments for NonInvtForOutOperationTyp in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short NonInvtForOutOperationTyp
        {
            get
            {
                short value = _NonInvtForOutOperationTyp;
                OnGetNonInvtForOutOperationTyp(ref value);
                return value;
            }
            set
            {
                if (_NonInvtForOutOperationTyp != value)
                {
                  OnNonInvtForOutOperationTypChanging(ref value);
                  ReportPropertyChanging("NonInvtForOutOperationTyp");
                  _NonInvtForOutOperationTyp = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NonInvtForOutOperationTyp");
                  OnNonInvtForOutOperationTypChanged();
              }
            }
        }
        private short _NonInvtForOutOperationTyp = 0;
        partial void OnGetNonInvtForOutOperationTyp(ref short value);
        partial void OnNonInvtForOutOperationTypChanging(ref short value);
        partial void OnNonInvtForOutOperationTypChanged();
    
        /// <summary>
        /// There are no comments for NoOfFuturePer in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short NoOfFuturePer
        {
            get
            {
                short value = _NoOfFuturePer;
                OnGetNoOfFuturePer(ref value);
                return value;
            }
            set
            {
                if (_NoOfFuturePer != value)
                {
                  OnNoOfFuturePerChanging(ref value);
                  ReportPropertyChanging("NoOfFuturePer");
                  _NoOfFuturePer = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NoOfFuturePer");
                  OnNoOfFuturePerChanged();
              }
            }
        }
        private short _NoOfFuturePer = 0;
        partial void OnGetNoOfFuturePer(ref short value);
        partial void OnNoOfFuturePerChanging(ref short value);
        partial void OnNoOfFuturePerChanged();
    
        /// <summary>
        /// There are no comments for ParentBackFlush in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ParentBackFlush
        {
            get
            {
                short value = _ParentBackFlush;
                OnGetParentBackFlush(ref value);
                return value;
            }
            set
            {
                if (_ParentBackFlush != value)
                {
                  OnParentBackFlushChanging(ref value);
                  ReportPropertyChanging("ParentBackFlush");
                  _ParentBackFlush = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ParentBackFlush");
                  OnParentBackFlushChanged();
              }
            }
        }
        private short _ParentBackFlush = 0;
        partial void OnGetParentBackFlush(ref short value);
        partial void OnParentBackFlushChanging(ref short value);
        partial void OnParentBackFlushChanged();
    
        /// <summary>
        /// There are no comments for IntegrateWithGL in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short IntegrateWithGL
        {
            get
            {
                short value = _IntegrateWithGL;
                OnGetIntegrateWithGL(ref value);
                return value;
            }
            set
            {
                if (_IntegrateWithGL != value)
                {
                  OnIntegrateWithGLChanging(ref value);
                  ReportPropertyChanging("IntegrateWithGL");
                  _IntegrateWithGL = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IntegrateWithGL");
                  OnIntegrateWithGLChanged();
              }
            }
        }
        private short _IntegrateWithGL = 0;
        partial void OnGetIntegrateWithGL(ref short value);
        partial void OnIntegrateWithGLChanging(ref short value);
        partial void OnIntegrateWithGLChanged();
    
        /// <summary>
        /// There are no comments for ParamCADImportDelim in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ParamCADImportDelim
        {
            get
            {
                string value = _ParamCADImportDelim;
                OnGetParamCADImportDelim(ref value);
                return value;
            }
            set
            {
                if (_ParamCADImportDelim != value)
                {
                  OnParamCADImportDelimChanging(ref value);
                  ReportPropertyChanging("ParamCADImportDelim");
                  _ParamCADImportDelim = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ParamCADImportDelim");
                  OnParamCADImportDelimChanged();
              }
            }
        }
        private string _ParamCADImportDelim;
        partial void OnGetParamCADImportDelim(ref string value);
        partial void OnParamCADImportDelimChanging(ref string value);
        partial void OnParamCADImportDelimChanged();
    
        /// <summary>
        /// There are no comments for ParmEstExpiratDaysNum in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal ParmEstExpiratDaysNum
        {
            get
            {
                decimal value = _ParmEstExpiratDaysNum;
                OnGetParmEstExpiratDaysNum(ref value);
                return value;
            }
            set
            {
                if (_ParmEstExpiratDaysNum != value)
                {
                  OnParmEstExpiratDaysNumChanging(ref value);
                  ReportPropertyChanging("ParmEstExpiratDaysNum");
                  _ParmEstExpiratDaysNum = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ParmEstExpiratDaysNum");
                  OnParmEstExpiratDaysNumChanged();
              }
            }
        }
        private decimal _ParmEstExpiratDaysNum = 0m;
        partial void OnGetParmEstExpiratDaysNum(ref decimal value);
        partial void OnParmEstExpiratDaysNumChanging(ref decimal value);
        partial void OnParmEstExpiratDaysNumChanged();
    
        /// <summary>
        /// There are no comments for ParmNextEstimateNum in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal ParmNextEstimateNum
        {
            get
            {
                decimal value = _ParmNextEstimateNum;
                OnGetParmNextEstimateNum(ref value);
                return value;
            }
            set
            {
                if (_ParmNextEstimateNum != value)
                {
                  OnParmNextEstimateNumChanging(ref value);
                  ReportPropertyChanging("ParmNextEstimateNum");
                  _ParmNextEstimateNum = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ParmNextEstimateNum");
                  OnParmNextEstimateNumChanged();
              }
            }
        }
        private decimal _ParmNextEstimateNum = 0m;
        partial void OnGetParmNextEstimateNum(ref decimal value);
        partial void OnParmNextEstimateNumChanging(ref decimal value);
        partial void OnParmNextEstimateNumChanged();
    
        /// <summary>
        /// There are no comments for ParmNextLotNum in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal ParmNextLotNum
        {
            get
            {
                decimal value = _ParmNextLotNum;
                OnGetParmNextLotNum(ref value);
                return value;
            }
            set
            {
                if (_ParmNextLotNum != value)
                {
                  OnParmNextLotNumChanging(ref value);
                  ReportPropertyChanging("ParmNextLotNum");
                  _ParmNextLotNum = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ParmNextLotNum");
                  OnParmNextLotNumChanged();
              }
            }
        }
        private decimal _ParmNextLotNum = 0m;
        partial void OnGetParmNextLotNum(ref decimal value);
        partial void OnParmNextLotNumChanging(ref decimal value);
        partial void OnParmNextLotNumChanged();
    
        /// <summary>
        /// There are no comments for ParmNextLotTransNum in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal ParmNextLotTransNum
        {
            get
            {
                decimal value = _ParmNextLotTransNum;
                OnGetParmNextLotTransNum(ref value);
                return value;
            }
            set
            {
                if (_ParmNextLotTransNum != value)
                {
                  OnParmNextLotTransNumChanging(ref value);
                  ReportPropertyChanging("ParmNextLotTransNum");
                  _ParmNextLotTransNum = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ParmNextLotTransNum");
                  OnParmNextLotTransNumChanged();
              }
            }
        }
        private decimal _ParmNextLotTransNum = 0m;
        partial void OnGetParmNextLotTransNum(ref decimal value);
        partial void OnParmNextLotTransNumChanging(ref decimal value);
        partial void OnParmNextLotTransNumChanged();
    
        /// <summary>
        /// There are no comments for ParmNextShipment in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal ParmNextShipment
        {
            get
            {
                decimal value = _ParmNextShipment;
                OnGetParmNextShipment(ref value);
                return value;
            }
            set
            {
                if (_ParmNextShipment != value)
                {
                  OnParmNextShipmentChanging(ref value);
                  ReportPropertyChanging("ParmNextShipment");
                  _ParmNextShipment = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ParmNextShipment");
                  OnParmNextShipmentChanged();
              }
            }
        }
        private decimal _ParmNextShipment = 0m;
        partial void OnGetParmNextShipment(ref decimal value);
        partial void OnParmNextShipmentChanging(ref decimal value);
        partial void OnParmNextShipmentChanged();
    
        /// <summary>
        /// There are no comments for ParmNextTranNum in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal ParmNextTranNum
        {
            get
            {
                decimal value = _ParmNextTranNum;
                OnGetParmNextTranNum(ref value);
                return value;
            }
            set
            {
                if (_ParmNextTranNum != value)
                {
                  OnParmNextTranNumChanging(ref value);
                  ReportPropertyChanging("ParmNextTranNum");
                  _ParmNextTranNum = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ParmNextTranNum");
                  OnParmNextTranNumChanged();
              }
            }
        }
        private decimal _ParmNextTranNum = 0m;
        partial void OnGetParmNextTranNum(ref decimal value);
        partial void OnParmNextTranNumChanging(ref decimal value);
        partial void OnParmNextTranNumChanged();
    
        /// <summary>
        /// There are no comments for ParmNextWorkOrdNum in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal ParmNextWorkOrdNum
        {
            get
            {
                decimal value = _ParmNextWorkOrdNum;
                OnGetParmNextWorkOrdNum(ref value);
                return value;
            }
            set
            {
                if (_ParmNextWorkOrdNum != value)
                {
                  OnParmNextWorkOrdNumChanging(ref value);
                  ReportPropertyChanging("ParmNextWorkOrdNum");
                  _ParmNextWorkOrdNum = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ParmNextWorkOrdNum");
                  OnParmNextWorkOrdNumChanged();
              }
            }
        }
        private decimal _ParmNextWorkOrdNum = 0m;
        partial void OnGetParmNextWorkOrdNum(ref decimal value);
        partial void OnParmNextWorkOrdNumChanging(ref decimal value);
        partial void OnParmNextWorkOrdNumChanged();
    
        /// <summary>
        /// There are no comments for ParmSchOutSideWC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ParmSchOutSideWC
        {
            get
            {
                short value = _ParmSchOutSideWC;
                OnGetParmSchOutSideWC(ref value);
                return value;
            }
            set
            {
                if (_ParmSchOutSideWC != value)
                {
                  OnParmSchOutSideWCChanging(ref value);
                  ReportPropertyChanging("ParmSchOutSideWC");
                  _ParmSchOutSideWC = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ParmSchOutSideWC");
                  OnParmSchOutSideWCChanged();
              }
            }
        }
        private short _ParmSchOutSideWC = 0;
        partial void OnGetParmSchOutSideWC(ref short value);
        partial void OnParmSchOutSideWCChanging(ref short value);
        partial void OnParmSchOutSideWCChanged();
    
        /// <summary>
        /// There are no comments for ParmShipNumCopies in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal ParmShipNumCopies
        {
            get
            {
                decimal value = _ParmShipNumCopies;
                OnGetParmShipNumCopies(ref value);
                return value;
            }
            set
            {
                if (_ParmShipNumCopies != value)
                {
                  OnParmShipNumCopiesChanging(ref value);
                  ReportPropertyChanging("ParmShipNumCopies");
                  _ParmShipNumCopies = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ParmShipNumCopies");
                  OnParmShipNumCopiesChanged();
              }
            }
        }
        private decimal _ParmShipNumCopies = 0m;
        partial void OnGetParmShipNumCopies(ref decimal value);
        partial void OnParmShipNumCopiesChanging(ref decimal value);
        partial void OnParmShipNumCopiesChanged();
    
        /// <summary>
        /// There are no comments for PhantIncLabor in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PhantIncLabor
        {
            get
            {
                short value = _PhantIncLabor;
                OnGetPhantIncLabor(ref value);
                return value;
            }
            set
            {
                if (_PhantIncLabor != value)
                {
                  OnPhantIncLaborChanging(ref value);
                  ReportPropertyChanging("PhantIncLabor");
                  _PhantIncLabor = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PhantIncLabor");
                  OnPhantIncLaborChanged();
              }
            }
        }
        private short _PhantIncLabor = 0;
        partial void OnGetPhantIncLabor(ref short value);
        partial void OnPhantIncLaborChanging(ref short value);
        partial void OnPhantIncLaborChanged();
    
        /// <summary>
        /// There are no comments for PhantIncMat in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PhantIncMat
        {
            get
            {
                short value = _PhantIncMat;
                OnGetPhantIncMat(ref value);
                return value;
            }
            set
            {
                if (_PhantIncMat != value)
                {
                  OnPhantIncMatChanging(ref value);
                  ReportPropertyChanging("PhantIncMat");
                  _PhantIncMat = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PhantIncMat");
                  OnPhantIncMatChanged();
              }
            }
        }
        private short _PhantIncMat = 0;
        partial void OnGetPhantIncMat(ref short value);
        partial void OnPhantIncMatChanging(ref short value);
        partial void OnPhantIncMatChanged();
    
        /// <summary>
        /// There are no comments for PhantIncOther in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PhantIncOther
        {
            get
            {
                short value = _PhantIncOther;
                OnGetPhantIncOther(ref value);
                return value;
            }
            set
            {
                if (_PhantIncOther != value)
                {
                  OnPhantIncOtherChanging(ref value);
                  ReportPropertyChanging("PhantIncOther");
                  _PhantIncOther = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PhantIncOther");
                  OnPhantIncOtherChanged();
              }
            }
        }
        private short _PhantIncOther = 0;
        partial void OnGetPhantIncOther(ref short value);
        partial void OnPhantIncOtherChanging(ref short value);
        partial void OnPhantIncOtherChanged();
    
        /// <summary>
        /// There are no comments for PhantIncOut in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PhantIncOut
        {
            get
            {
                short value = _PhantIncOut;
                OnGetPhantIncOut(ref value);
                return value;
            }
            set
            {
                if (_PhantIncOut != value)
                {
                  OnPhantIncOutChanging(ref value);
                  ReportPropertyChanging("PhantIncOut");
                  _PhantIncOut = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PhantIncOut");
                  OnPhantIncOutChanged();
              }
            }
        }
        private short _PhantIncOut = 0;
        partial void OnGetPhantIncOut(ref short value);
        partial void OnPhantIncOutChanging(ref short value);
        partial void OnPhantIncOutChanged();
    
        /// <summary>
        /// There are no comments for PhantIncProg in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PhantIncProg
        {
            get
            {
                short value = _PhantIncProg;
                OnGetPhantIncProg(ref value);
                return value;
            }
            set
            {
                if (_PhantIncProg != value)
                {
                  OnPhantIncProgChanging(ref value);
                  ReportPropertyChanging("PhantIncProg");
                  _PhantIncProg = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PhantIncProg");
                  OnPhantIncProgChanged();
              }
            }
        }
        private short _PhantIncProg = 0;
        partial void OnGetPhantIncProg(ref short value);
        partial void OnPhantIncProgChanging(ref short value);
        partial void OnPhantIncProgChanged();
    
        /// <summary>
        /// There are no comments for PhantStartStep in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string PhantStartStep
        {
            get
            {
                string value = _PhantStartStep;
                OnGetPhantStartStep(ref value);
                return value;
            }
            set
            {
                if (_PhantStartStep != value)
                {
                  OnPhantStartStepChanging(ref value);
                  ReportPropertyChanging("PhantStartStep");
                  _PhantStartStep = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("PhantStartStep");
                  OnPhantStartStepChanged();
              }
            }
        }
        private string _PhantStartStep = @"000010";
        partial void OnGetPhantStartStep(ref string value);
        partial void OnPhantStartStepChanging(ref string value);
        partial void OnPhantStartStepChanged();
    
        /// <summary>
        /// There are no comments for PhantStepIncrement in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal PhantStepIncrement
        {
            get
            {
                decimal value = _PhantStepIncrement;
                OnGetPhantStepIncrement(ref value);
                return value;
            }
            set
            {
                if (_PhantStepIncrement != value)
                {
                  OnPhantStepIncrementChanging(ref value);
                  ReportPropertyChanging("PhantStepIncrement");
                  _PhantStepIncrement = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PhantStepIncrement");
                  OnPhantStepIncrementChanged();
              }
            }
        }
        private decimal _PhantStepIncrement = 0m;
        partial void OnGetPhantStepIncrement(ref decimal value);
        partial void OnPhantStepIncrementChanging(ref decimal value);
        partial void OnPhantStepIncrementChanged();
    
        /// <summary>
        /// There are no comments for ReleaseDateDays in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal ReleaseDateDays
        {
            get
            {
                decimal value = _ReleaseDateDays;
                OnGetReleaseDateDays(ref value);
                return value;
            }
            set
            {
                if (_ReleaseDateDays != value)
                {
                  OnReleaseDateDaysChanging(ref value);
                  ReportPropertyChanging("ReleaseDateDays");
                  _ReleaseDateDays = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ReleaseDateDays");
                  OnReleaseDateDaysChanged();
              }
            }
        }
        private decimal _ReleaseDateDays = 0m;
        partial void OnGetReleaseDateDays(ref decimal value);
        partial void OnReleaseDateDaysChanging(ref decimal value);
        partial void OnReleaseDateDaysChanged();
    
        /// <summary>
        /// There are no comments for SchedCompleteTime in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime SchedCompleteTime
        {
            get
            {
                global::System.DateTime value = _SchedCompleteTime;
                OnGetSchedCompleteTime(ref value);
                return value;
            }
            set
            {
                if (_SchedCompleteTime != value)
                {
                  OnSchedCompleteTimeChanging(ref value);
                  ReportPropertyChanging("SchedCompleteTime");
                  _SchedCompleteTime = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SchedCompleteTime");
                  OnSchedCompleteTimeChanged();
              }
            }
        }
        private global::System.DateTime _SchedCompleteTime;
        partial void OnGetSchedCompleteTime(ref global::System.DateTime value);
        partial void OnSchedCompleteTimeChanging(ref global::System.DateTime value);
        partial void OnSchedCompleteTimeChanged();
    
        /// <summary>
        /// There are no comments for UnlockAllFuturePer in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short UnlockAllFuturePer
        {
            get
            {
                short value = _UnlockAllFuturePer;
                OnGetUnlockAllFuturePer(ref value);
                return value;
            }
            set
            {
                if (_UnlockAllFuturePer != value)
                {
                  OnUnlockAllFuturePerChanging(ref value);
                  ReportPropertyChanging("UnlockAllFuturePer");
                  _UnlockAllFuturePer = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UnlockAllFuturePer");
                  OnUnlockAllFuturePerChanged();
              }
            }
        }
        private short _UnlockAllFuturePer = 0;
        partial void OnGetUnlockAllFuturePer(ref short value);
        partial void OnUnlockAllFuturePerChanging(ref short value);
        partial void OnUnlockAllFuturePerChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();
    
        /// <summary>
        /// There are no comments for UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? UpdateDate
        {
            get
            {
                global::System.DateTime? value = _UpdateDate;
                OnGetUpdateDate(ref value);
                return value;
            }
            set
            {
                if (_UpdateDate != value)
                {
                  OnUpdateDateChanging(ref value);
                  ReportPropertyChanging("UpdateDate");
                  _UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateDate");
                  OnUpdateDateChanged();
              }
            }
        }
        private global::System.DateTime? _UpdateDate;
        partial void OnGetUpdateDate(ref global::System.DateTime? value);
        partial void OnUpdateDateChanging(ref global::System.DateTime? value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// There are no comments for UpdateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UpdateUserID
        {
            get
            {
                string value = _UpdateUserID;
                OnGetUpdateUserID(ref value);
                return value;
            }
            set
            {
                if (_UpdateUserID != value)
                {
                  OnUpdateUserIDChanging(ref value);
                  ReportPropertyChanging("UpdateUserID");
                  _UpdateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UpdateUserID");
                  OnUpdateUserIDChanged();
              }
            }
        }
        private string _UpdateUserID;
        partial void OnGetUpdateUserID(ref string value);
        partial void OnUpdateUserIDChanging(ref string value);
        partial void OnUpdateUserIDChanged();
    
        /// <summary>
        /// There are no comments for WIPHiddenBatchKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int WIPHiddenBatchKey
        {
            get
            {
                int value = _WIPHiddenBatchKey;
                OnGetWIPHiddenBatchKey(ref value);
                return value;
            }
            set
            {
                if (_WIPHiddenBatchKey != value)
                {
                  OnWIPHiddenBatchKeyChanging(ref value);
                  ReportPropertyChanging("WIPHiddenBatchKey");
                  _WIPHiddenBatchKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WIPHiddenBatchKey");
                  OnWIPHiddenBatchKeyChanged();
              }
            }
        }
        private int _WIPHiddenBatchKey;
        partial void OnGetWIPHiddenBatchKey(ref int value);
        partial void OnWIPHiddenBatchKeyChanging(ref int value);
        partial void OnWIPHiddenBatchKeyChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.WorkOrderProd in the schema.
    /// </summary>
    /// <KeyProperties>
    /// WorkOrderKey
    /// ItemKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="WorkOrderProd")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WorkOrderProd : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new WorkOrderProd object.
        /// </summary>
        /// <param name="workOrderKey">Initial value of WorkOrderKey.</param>
        /// <param name="itemKey">Initial value of ItemKey.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="qTYCycle">Initial value of QTYCycle.</param>
        /// <param name="qTYToDate">Initial value of QTYToDate.</param>
        /// <param name="qTYTotal">Initial value of QTYTotal.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        public static WorkOrderProd CreateWorkOrderProd(int workOrderKey, int itemKey, string companyID, decimal qTYCycle, decimal qTYToDate, decimal qTYTotal, int updateCounter)
        {
            WorkOrderProd workOrderProd = new WorkOrderProd();
            workOrderProd.WorkOrderKey = workOrderKey;
            workOrderProd.ItemKey = itemKey;
            workOrderProd.CompanyID = companyID;
            workOrderProd.QTYCycle = qTYCycle;
            workOrderProd.QTYToDate = qTYToDate;
            workOrderProd.QTYTotal = qTYTotal;
            workOrderProd.UpdateCounter = updateCounter;
            return workOrderProd;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for WorkOrderKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int WorkOrderKey
        {
            get
            {
                int value = _WorkOrderKey;
                OnGetWorkOrderKey(ref value);
                return value;
            }
            set
            {
                if (_WorkOrderKey != value)
                {
                  OnWorkOrderKeyChanging(ref value);
                  ReportPropertyChanging("WorkOrderKey");
                  _WorkOrderKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WorkOrderKey");
                  OnWorkOrderKeyChanged();
              }
            }
        }
        private int _WorkOrderKey;
        partial void OnGetWorkOrderKey(ref int value);
        partial void OnWorkOrderKeyChanging(ref int value);
        partial void OnWorkOrderKeyChanged();
    
        /// <summary>
        /// There are no comments for ItemKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ItemKey
        {
            get
            {
                int value = _ItemKey;
                OnGetItemKey(ref value);
                return value;
            }
            set
            {
                if (_ItemKey != value)
                {
                  OnItemKeyChanging(ref value);
                  ReportPropertyChanging("ItemKey");
                  _ItemKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ItemKey");
                  OnItemKeyChanged();
              }
            }
        }
        private int _ItemKey;
        partial void OnGetItemKey(ref int value);
        partial void OnItemKeyChanging(ref int value);
        partial void OnItemKeyChanged();
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for QTYCycle in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal QTYCycle
        {
            get
            {
                decimal value = _QTYCycle;
                OnGetQTYCycle(ref value);
                return value;
            }
            set
            {
                if (_QTYCycle != value)
                {
                  OnQTYCycleChanging(ref value);
                  ReportPropertyChanging("QTYCycle");
                  _QTYCycle = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QTYCycle");
                  OnQTYCycleChanged();
              }
            }
        }
        private decimal _QTYCycle = 0m;
        partial void OnGetQTYCycle(ref decimal value);
        partial void OnQTYCycleChanging(ref decimal value);
        partial void OnQTYCycleChanged();
    
        /// <summary>
        /// There are no comments for QTYToDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal QTYToDate
        {
            get
            {
                decimal value = _QTYToDate;
                OnGetQTYToDate(ref value);
                return value;
            }
            set
            {
                if (_QTYToDate != value)
                {
                  OnQTYToDateChanging(ref value);
                  ReportPropertyChanging("QTYToDate");
                  _QTYToDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QTYToDate");
                  OnQTYToDateChanged();
              }
            }
        }
        private decimal _QTYToDate = 0m;
        partial void OnGetQTYToDate(ref decimal value);
        partial void OnQTYToDateChanging(ref decimal value);
        partial void OnQTYToDateChanged();
    
        /// <summary>
        /// There are no comments for QTYTotal in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal QTYTotal
        {
            get
            {
                decimal value = _QTYTotal;
                OnGetQTYTotal(ref value);
                return value;
            }
            set
            {
                if (_QTYTotal != value)
                {
                  OnQTYTotalChanging(ref value);
                  ReportPropertyChanging("QTYTotal");
                  _QTYTotal = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QTYTotal");
                  OnQTYTotalChanged();
              }
            }
        }
        private decimal _QTYTotal = 0m;
        partial void OnGetQTYTotal(ref decimal value);
        partial void OnQTYTotalChanging(ref decimal value);
        partial void OnQTYTotalChanged();
    
        /// <summary>
        /// There are no comments for SOKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? SOKey
        {
            get
            {
                int? value = _SOKey;
                OnGetSOKey(ref value);
                return value;
            }
            set
            {
                if (_SOKey != value)
                {
                  OnSOKeyChanging(ref value);
                  ReportPropertyChanging("SOKey");
                  _SOKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SOKey");
                  OnSOKeyChanged();
              }
            }
        }
        private int? _SOKey;
        partial void OnGetSOKey(ref int? value);
        partial void OnSOKeyChanging(ref int? value);
        partial void OnSOKeyChanged();
    
        /// <summary>
        /// There are no comments for SOLineKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? SOLineKey
        {
            get
            {
                int? value = _SOLineKey;
                OnGetSOLineKey(ref value);
                return value;
            }
            set
            {
                if (_SOLineKey != value)
                {
                  OnSOLineKeyChanging(ref value);
                  ReportPropertyChanging("SOLineKey");
                  _SOLineKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SOLineKey");
                  OnSOLineKeyChanged();
              }
            }
        }
        private int? _SOLineKey;
        partial void OnGetSOLineKey(ref int? value);
        partial void OnSOLineKeyChanging(ref int? value);
        partial void OnSOLineKeyChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for WorkOrder in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "WorkOrder_WorkOrderProd", "WorkOrder")]
        public virtual WorkOrder WorkOrder
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<WorkOrder>("Net4Sage.DataAccessModel.WorkOrder_WorkOrderProd", "WorkOrder").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<WorkOrder>("Net4Sage.DataAccessModel.WorkOrder_WorkOrderProd", "WorkOrder").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for WorkOrder in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkOrder> WorkOrderReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<WorkOrder>("Net4Sage.DataAccessModel.WorkOrder_WorkOrderProd", "WorkOrder");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<WorkOrder>("Net4Sage.DataAccessModel.WorkOrder_WorkOrderProd", "WorkOrder", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<WorkOrder>("Net4Sage.DataAccessModel.WorkOrder_WorkOrderProd", "WorkOrder").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.InvtLot in the schema.
    /// </summary>
    /// <KeyProperties>
    /// InvtLotKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="InvtLot")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvtLot : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvtLot object.
        /// </summary>
        /// <param name="invtLotKey">Initial value of InvtLotKey.</param>
        /// <param name="itemKey">Initial value of ItemKey.</param>
        /// <param name="lotNo">Initial value of LotNo.</param>
        /// <param name="status">Initial value of Status.</param>
        /// <param name="whseKey">Initial value of WhseKey.</param>
        public static InvtLot CreateInvtLot(int invtLotKey, int itemKey, string lotNo, short status, int whseKey)
        {
            InvtLot invtLot = new InvtLot();
            invtLot.InvtLotKey = invtLotKey;
            invtLot.ItemKey = itemKey;
            invtLot.LotNo = lotNo;
            invtLot.Status = status;
            invtLot.WhseKey = whseKey;
            return invtLot;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for InvtLotKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvtLotKey
        {
            get
            {
                int value = _InvtLotKey;
                OnGetInvtLotKey(ref value);
                return value;
            }
            set
            {
                if (_InvtLotKey != value)
                {
                  OnInvtLotKeyChanging(ref value);
                  ReportPropertyChanging("InvtLotKey");
                  _InvtLotKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvtLotKey");
                  OnInvtLotKeyChanged();
              }
            }
        }
        private int _InvtLotKey;
        partial void OnGetInvtLotKey(ref int value);
        partial void OnInvtLotKeyChanging(ref int value);
        partial void OnInvtLotKeyChanged();
    
        /// <summary>
        /// There are no comments for ExpirationDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? ExpirationDate
        {
            get
            {
                global::System.DateTime? value = _ExpirationDate;
                OnGetExpirationDate(ref value);
                return value;
            }
            set
            {
                if (_ExpirationDate != value)
                {
                  OnExpirationDateChanging(ref value);
                  ReportPropertyChanging("ExpirationDate");
                  _ExpirationDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ExpirationDate");
                  OnExpirationDateChanged();
              }
            }
        }
        private global::System.DateTime? _ExpirationDate;
        partial void OnGetExpirationDate(ref global::System.DateTime? value);
        partial void OnExpirationDateChanging(ref global::System.DateTime? value);
        partial void OnExpirationDateChanged();
    
        /// <summary>
        /// There are no comments for ImportLogKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ImportLogKey
        {
            get
            {
                int? value = _ImportLogKey;
                OnGetImportLogKey(ref value);
                return value;
            }
            set
            {
                if (_ImportLogKey != value)
                {
                  OnImportLogKeyChanging(ref value);
                  ReportPropertyChanging("ImportLogKey");
                  _ImportLogKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ImportLogKey");
                  OnImportLogKeyChanged();
              }
            }
        }
        private int? _ImportLogKey;
        partial void OnGetImportLogKey(ref int? value);
        partial void OnImportLogKeyChanging(ref int? value);
        partial void OnImportLogKeyChanged();
    
        /// <summary>
        /// There are no comments for ItemKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ItemKey
        {
            get
            {
                int value = _ItemKey;
                OnGetItemKey(ref value);
                return value;
            }
            set
            {
                if (_ItemKey != value)
                {
                  OnItemKeyChanging(ref value);
                  ReportPropertyChanging("ItemKey");
                  _ItemKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ItemKey");
                  OnItemKeyChanged();
              }
            }
        }
        private int _ItemKey;
        partial void OnGetItemKey(ref int value);
        partial void OnItemKeyChanging(ref int value);
        partial void OnItemKeyChanged();
    
        /// <summary>
        /// There are no comments for LotNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string LotNo
        {
            get
            {
                string value = _LotNo;
                OnGetLotNo(ref value);
                return value;
            }
            set
            {
                if (_LotNo != value)
                {
                  OnLotNoChanging(ref value);
                  ReportPropertyChanging("LotNo");
                  _LotNo = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("LotNo");
                  OnLotNoChanged();
              }
            }
        }
        private string _LotNo;
        partial void OnGetLotNo(ref string value);
        partial void OnLotNoChanging(ref string value);
        partial void OnLotNoChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Status
        {
            get
            {
                short value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private short _Status = 2;
        partial void OnGetStatus(ref short value);
        partial void OnStatusChanging(ref short value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// There are no comments for WhseKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int WhseKey
        {
            get
            {
                int value = _WhseKey;
                OnGetWhseKey(ref value);
                return value;
            }
            set
            {
                if (_WhseKey != value)
                {
                  OnWhseKeyChanging(ref value);
                  ReportPropertyChanging("WhseKey");
                  _WhseKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WhseKey");
                  OnWhseKeyChanged();
              }
            }
        }
        private int _WhseKey;
        partial void OnGetWhseKey(ref int value);
        partial void OnWhseKeyChanging(ref int value);
        partial void OnWhseKeyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvtLotBins in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "InvtLot_InvtLotBin", "InvtLotBins")]
        public virtual EntityCollection<InvtLotBin> InvtLotBins
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvtLotBin>("Net4Sage.DataAccessModel.InvtLot_InvtLotBin", "InvtLotBins");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvtLotBin>("Net4Sage.DataAccessModel.InvtLot_InvtLotBin", "InvtLotBins", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.InvtLotBin in the schema.
    /// </summary>
    /// <KeyProperties>
    /// InvtLotBinKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="InvtLotBin")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvtLotBin : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvtLotBin object.
        /// </summary>
        /// <param name="invtLotBinKey">Initial value of InvtLotBinKey.</param>
        /// <param name="invtLotKey">Initial value of InvtLotKey.</param>
        /// <param name="origQty">Initial value of OrigQty.</param>
        /// <param name="pendQtyDecrease">Initial value of PendQtyDecrease.</param>
        /// <param name="pendQtyIncrease">Initial value of PendQtyIncrease.</param>
        /// <param name="qtyUsed">Initial value of QtyUsed.</param>
        /// <param name="whseBinKey">Initial value of WhseBinKey.</param>
        public static InvtLotBin CreateInvtLotBin(int invtLotBinKey, int invtLotKey, decimal origQty, decimal pendQtyDecrease, decimal pendQtyIncrease, decimal qtyUsed, int whseBinKey)
        {
            InvtLotBin invtLotBin = new InvtLotBin();
            invtLotBin.InvtLotBinKey = invtLotBinKey;
            invtLotBin.InvtLotKey = invtLotKey;
            invtLotBin.OrigQty = origQty;
            invtLotBin.PendQtyDecrease = pendQtyDecrease;
            invtLotBin.PendQtyIncrease = pendQtyIncrease;
            invtLotBin.QtyUsed = qtyUsed;
            invtLotBin.WhseBinKey = whseBinKey;
            return invtLotBin;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for InvtLotBinKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvtLotBinKey
        {
            get
            {
                int value = _InvtLotBinKey;
                OnGetInvtLotBinKey(ref value);
                return value;
            }
            set
            {
                if (_InvtLotBinKey != value)
                {
                  OnInvtLotBinKeyChanging(ref value);
                  ReportPropertyChanging("InvtLotBinKey");
                  _InvtLotBinKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvtLotBinKey");
                  OnInvtLotBinKeyChanged();
              }
            }
        }
        private int _InvtLotBinKey;
        partial void OnGetInvtLotBinKey(ref int value);
        partial void OnInvtLotBinKeyChanging(ref int value);
        partial void OnInvtLotBinKeyChanged();
    
        /// <summary>
        /// There are no comments for ImportLogKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ImportLogKey
        {
            get
            {
                int? value = _ImportLogKey;
                OnGetImportLogKey(ref value);
                return value;
            }
            set
            {
                if (_ImportLogKey != value)
                {
                  OnImportLogKeyChanging(ref value);
                  ReportPropertyChanging("ImportLogKey");
                  _ImportLogKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ImportLogKey");
                  OnImportLogKeyChanged();
              }
            }
        }
        private int? _ImportLogKey;
        partial void OnGetImportLogKey(ref int? value);
        partial void OnImportLogKeyChanging(ref int? value);
        partial void OnImportLogKeyChanged();
    
        /// <summary>
        /// There are no comments for InvtLotKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvtLotKey
        {
            get
            {
                int value = _InvtLotKey;
                OnGetInvtLotKey(ref value);
                return value;
            }
            set
            {
                if (_InvtLotKey != value)
                {
                  OnInvtLotKeyChanging(ref value);
                  ReportPropertyChanging("InvtLotKey");
                  _InvtLotKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvtLotKey");
                  OnInvtLotKeyChanged();
              }
            }
        }
        private int _InvtLotKey;
        partial void OnGetInvtLotKey(ref int value);
        partial void OnInvtLotKeyChanging(ref int value);
        partial void OnInvtLotKeyChanged();
    
        /// <summary>
        /// There are no comments for OrigQty in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal OrigQty
        {
            get
            {
                decimal value = _OrigQty;
                OnGetOrigQty(ref value);
                return value;
            }
            set
            {
                if (_OrigQty != value)
                {
                  OnOrigQtyChanging(ref value);
                  ReportPropertyChanging("OrigQty");
                  _OrigQty = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OrigQty");
                  OnOrigQtyChanged();
              }
            }
        }
        private decimal _OrigQty = 0m;
        partial void OnGetOrigQty(ref decimal value);
        partial void OnOrigQtyChanging(ref decimal value);
        partial void OnOrigQtyChanged();
    
        /// <summary>
        /// There are no comments for PendQtyDecrease in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal PendQtyDecrease
        {
            get
            {
                decimal value = _PendQtyDecrease;
                OnGetPendQtyDecrease(ref value);
                return value;
            }
            set
            {
                if (_PendQtyDecrease != value)
                {
                  OnPendQtyDecreaseChanging(ref value);
                  ReportPropertyChanging("PendQtyDecrease");
                  _PendQtyDecrease = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PendQtyDecrease");
                  OnPendQtyDecreaseChanged();
              }
            }
        }
        private decimal _PendQtyDecrease = 0m;
        partial void OnGetPendQtyDecrease(ref decimal value);
        partial void OnPendQtyDecreaseChanging(ref decimal value);
        partial void OnPendQtyDecreaseChanged();
    
        /// <summary>
        /// There are no comments for PendQtyIncrease in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal PendQtyIncrease
        {
            get
            {
                decimal value = _PendQtyIncrease;
                OnGetPendQtyIncrease(ref value);
                return value;
            }
            set
            {
                if (_PendQtyIncrease != value)
                {
                  OnPendQtyIncreaseChanging(ref value);
                  ReportPropertyChanging("PendQtyIncrease");
                  _PendQtyIncrease = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PendQtyIncrease");
                  OnPendQtyIncreaseChanged();
              }
            }
        }
        private decimal _PendQtyIncrease = 0m;
        partial void OnGetPendQtyIncrease(ref decimal value);
        partial void OnPendQtyIncreaseChanging(ref decimal value);
        partial void OnPendQtyIncreaseChanged();
    
        /// <summary>
        /// There are no comments for QtyUsed in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal QtyUsed
        {
            get
            {
                decimal value = _QtyUsed;
                OnGetQtyUsed(ref value);
                return value;
            }
            set
            {
                if (_QtyUsed != value)
                {
                  OnQtyUsedChanging(ref value);
                  ReportPropertyChanging("QtyUsed");
                  _QtyUsed = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QtyUsed");
                  OnQtyUsedChanged();
              }
            }
        }
        private decimal _QtyUsed = 0m;
        partial void OnGetQtyUsed(ref decimal value);
        partial void OnQtyUsedChanging(ref decimal value);
        partial void OnQtyUsedChanged();
    
        /// <summary>
        /// There are no comments for WhseBinKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int WhseBinKey
        {
            get
            {
                int value = _WhseBinKey;
                OnGetWhseBinKey(ref value);
                return value;
            }
            set
            {
                if (_WhseBinKey != value)
                {
                  OnWhseBinKeyChanging(ref value);
                  ReportPropertyChanging("WhseBinKey");
                  _WhseBinKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WhseBinKey");
                  OnWhseBinKeyChanged();
              }
            }
        }
        private int _WhseBinKey;
        partial void OnGetWhseBinKey(ref int value);
        partial void OnWhseBinKeyChanging(ref int value);
        partial void OnWhseBinKeyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvtLot in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "InvtLot_InvtLotBin", "InvtLot")]
        public virtual InvtLot InvtLot
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvtLot>("Net4Sage.DataAccessModel.InvtLot_InvtLotBin", "InvtLot").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvtLot>("Net4Sage.DataAccessModel.InvtLot_InvtLotBin", "InvtLot").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvtLot in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvtLot> InvtLotReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvtLot>("Net4Sage.DataAccessModel.InvtLot_InvtLotBin", "InvtLot");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvtLot>("Net4Sage.DataAccessModel.InvtLot_InvtLotBin", "InvtLot", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvtLot>("Net4Sage.DataAccessModel.InvtLot_InvtLotBin", "InvtLot").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvtTranDists in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "InvtLotBin_InvtTranDist", "InvtTranDists")]
        public virtual EntityCollection<InvtTranDist> InvtTranDists
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvtTranDist>("Net4Sage.DataAccessModel.InvtLotBin_InvtTranDist", "InvtTranDists");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvtTranDist>("Net4Sage.DataAccessModel.InvtLotBin_InvtTranDist", "InvtTranDists", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for WhseBin in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "WhseBin_InvtLotBin", "WhseBin")]
        public virtual WhseBin WhseBin
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<WhseBin>("Net4Sage.DataAccessModel.WhseBin_InvtLotBin", "WhseBin").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<WhseBin>("Net4Sage.DataAccessModel.WhseBin_InvtLotBin", "WhseBin").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for WhseBin in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WhseBin> WhseBinReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<WhseBin>("Net4Sage.DataAccessModel.WhseBin_InvtLotBin", "WhseBin");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<WhseBin>("Net4Sage.DataAccessModel.WhseBin_InvtLotBin", "WhseBin", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<WhseBin>("Net4Sage.DataAccessModel.WhseBin_InvtLotBin", "WhseBin").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.InvtSerialCorr in the schema.
    /// </summary>
    /// <KeyProperties>
    /// InvtSerialKey
    /// OldSerialNo
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="InvtSerialCorr")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvtSerialCorr : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvtSerialCorr object.
        /// </summary>
        /// <param name="invtSerialKey">Initial value of InvtSerialKey.</param>
        /// <param name="oldSerialNo">Initial value of OldSerialNo.</param>
        public static InvtSerialCorr CreateInvtSerialCorr(int invtSerialKey, string oldSerialNo)
        {
            InvtSerialCorr invtSerialCorr = new InvtSerialCorr();
            invtSerialCorr.InvtSerialKey = invtSerialKey;
            invtSerialCorr.OldSerialNo = oldSerialNo;
            return invtSerialCorr;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for InvtSerialKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvtSerialKey
        {
            get
            {
                int value = _InvtSerialKey;
                OnGetInvtSerialKey(ref value);
                return value;
            }
            set
            {
                if (_InvtSerialKey != value)
                {
                  OnInvtSerialKeyChanging(ref value);
                  ReportPropertyChanging("InvtSerialKey");
                  _InvtSerialKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvtSerialKey");
                  OnInvtSerialKeyChanged();
              }
            }
        }
        private int _InvtSerialKey;
        partial void OnGetInvtSerialKey(ref int value);
        partial void OnInvtSerialKeyChanging(ref int value);
        partial void OnInvtSerialKeyChanged();
    
        /// <summary>
        /// There are no comments for OldSerialNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string OldSerialNo
        {
            get
            {
                string value = _OldSerialNo;
                OnGetOldSerialNo(ref value);
                return value;
            }
            set
            {
                if (_OldSerialNo != value)
                {
                  OnOldSerialNoChanging(ref value);
                  ReportPropertyChanging("OldSerialNo");
                  _OldSerialNo = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("OldSerialNo");
                  OnOldSerialNoChanged();
              }
            }
        }
        private string _OldSerialNo;
        partial void OnGetOldSerialNo(ref string value);
        partial void OnOldSerialNoChanging(ref string value);
        partial void OnOldSerialNoChanged();
    
        /// <summary>
        /// There are no comments for CreateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CreateDate
        {
            get
            {
                global::System.DateTime? value = _CreateDate;
                OnGetCreateDate(ref value);
                return value;
            }
            set
            {
                if (_CreateDate != value)
                {
                  OnCreateDateChanging(ref value);
                  ReportPropertyChanging("CreateDate");
                  _CreateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateDate");
                  OnCreateDateChanged();
              }
            }
        }
        private global::System.DateTime? _CreateDate;
        partial void OnGetCreateDate(ref global::System.DateTime? value);
        partial void OnCreateDateChanging(ref global::System.DateTime? value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// There are no comments for CreateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CreateUserID
        {
            get
            {
                string value = _CreateUserID;
                OnGetCreateUserID(ref value);
                return value;
            }
            set
            {
                if (_CreateUserID != value)
                {
                  OnCreateUserIDChanging(ref value);
                  ReportPropertyChanging("CreateUserID");
                  _CreateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CreateUserID");
                  OnCreateUserIDChanged();
              }
            }
        }
        private string _CreateUserID;
        partial void OnGetCreateUserID(ref string value);
        partial void OnCreateUserIDChanging(ref string value);
        partial void OnCreateUserIDChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.InvtTran in the schema.
    /// </summary>
    /// <KeyProperties>
    /// InvtTranKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="InvtTran")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvtTran : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvtTran object.
        /// </summary>
        /// <param name="invtTranKey">Initial value of InvtTranKey.</param>
        /// <param name="batchKey">Initial value of BatchKey.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="createType">Initial value of CreateType.</param>
        /// <param name="freightAmt">Initial value of FreightAmt.</param>
        /// <param name="gLAcctKey">Initial value of GLAcctKey.</param>
        /// <param name="itemKey">Initial value of ItemKey.</param>
        /// <param name="materialAmt">Initial value of MaterialAmt.</param>
        /// <param name="otherAmt">Initial value of OtherAmt.</param>
        /// <param name="otherMfgAmt">Initial value of OtherMfgAmt.</param>
        /// <param name="outsideAmt">Initial value of OutsideAmt.</param>
        /// <param name="postDate">Initial value of PostDate.</param>
        /// <param name="purchAmt">Initial value of PurchAmt.</param>
        /// <param name="qtyPerKit">Initial value of QtyPerKit.</param>
        /// <param name="runFixAmt">Initial value of RunFixAmt.</param>
        /// <param name="runVarAmt">Initial value of RunVarAmt.</param>
        /// <param name="salesAmt">Initial value of SalesAmt.</param>
        /// <param name="setFixAmt">Initial value of SetFixAmt.</param>
        /// <param name="setVarAmt">Initial value of SetVarAmt.</param>
        /// <param name="sTaxAmt">Initial value of STaxAmt.</param>
        /// <param name="tranAmt">Initial value of TranAmt.</param>
        /// <param name="tranDate">Initial value of TranDate.</param>
        /// <param name="tranID">Initial value of TranID.</param>
        /// <param name="tranNo">Initial value of TranNo.</param>
        /// <param name="tranQty">Initial value of TranQty.</param>
        /// <param name="tranType">Initial value of TranType.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        /// <param name="whseKey">Initial value of WhseKey.</param>
        public static InvtTran CreateInvtTran(int invtTranKey, int batchKey, string companyID, short createType, decimal freightAmt, int gLAcctKey, int itemKey, decimal materialAmt, decimal otherAmt, decimal otherMfgAmt, decimal outsideAmt, global::System.DateTime postDate, decimal purchAmt, decimal qtyPerKit, decimal runFixAmt, decimal runVarAmt, decimal salesAmt, decimal setFixAmt, decimal setVarAmt, decimal sTaxAmt, decimal tranAmt, global::System.DateTime tranDate, string tranID, string tranNo, decimal tranQty, int tranType, int updateCounter, int whseKey)
        {
            InvtTran invtTran = new InvtTran();
            invtTran.InvtTranKey = invtTranKey;
            invtTran.BatchKey = batchKey;
            invtTran.CompanyID = companyID;
            invtTran.CreateType = createType;
            invtTran.FreightAmt = freightAmt;
            invtTran.GLAcctKey = gLAcctKey;
            invtTran.ItemKey = itemKey;
            invtTran.MaterialAmt = materialAmt;
            invtTran.OtherAmt = otherAmt;
            invtTran.OtherMfgAmt = otherMfgAmt;
            invtTran.OutsideAmt = outsideAmt;
            invtTran.PostDate = postDate;
            invtTran.PurchAmt = purchAmt;
            invtTran.QtyPerKit = qtyPerKit;
            invtTran.RunFixAmt = runFixAmt;
            invtTran.RunVarAmt = runVarAmt;
            invtTran.SalesAmt = salesAmt;
            invtTran.SetFixAmt = setFixAmt;
            invtTran.SetVarAmt = setVarAmt;
            invtTran.STaxAmt = sTaxAmt;
            invtTran.TranAmt = tranAmt;
            invtTran.TranDate = tranDate;
            invtTran.TranID = tranID;
            invtTran.TranNo = tranNo;
            invtTran.TranQty = tranQty;
            invtTran.TranType = tranType;
            invtTran.UpdateCounter = updateCounter;
            invtTran.WhseKey = whseKey;
            return invtTran;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for InvtTranKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvtTranKey
        {
            get
            {
                int value = _InvtTranKey;
                OnGetInvtTranKey(ref value);
                return value;
            }
            set
            {
                if (_InvtTranKey != value)
                {
                  OnInvtTranKeyChanging(ref value);
                  ReportPropertyChanging("InvtTranKey");
                  _InvtTranKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvtTranKey");
                  OnInvtTranKeyChanged();
              }
            }
        }
        private int _InvtTranKey;
        partial void OnGetInvtTranKey(ref int value);
        partial void OnInvtTranKeyChanging(ref int value);
        partial void OnInvtTranKeyChanged();
    
        /// <summary>
        /// There are no comments for AcctRefKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? AcctRefKey
        {
            get
            {
                int? value = _AcctRefKey;
                OnGetAcctRefKey(ref value);
                return value;
            }
            set
            {
                if (_AcctRefKey != value)
                {
                  OnAcctRefKeyChanging(ref value);
                  ReportPropertyChanging("AcctRefKey");
                  _AcctRefKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AcctRefKey");
                  OnAcctRefKeyChanged();
              }
            }
        }
        private int? _AcctRefKey;
        partial void OnGetAcctRefKey(ref int? value);
        partial void OnAcctRefKeyChanging(ref int? value);
        partial void OnAcctRefKeyChanged();
    
        /// <summary>
        /// There are no comments for BatchKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int BatchKey
        {
            get
            {
                int value = _BatchKey;
                OnGetBatchKey(ref value);
                return value;
            }
            set
            {
                if (_BatchKey != value)
                {
                  OnBatchKeyChanging(ref value);
                  ReportPropertyChanging("BatchKey");
                  _BatchKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BatchKey");
                  OnBatchKeyChanged();
              }
            }
        }
        private int _BatchKey;
        partial void OnGetBatchKey(ref int value);
        partial void OnBatchKeyChanging(ref int value);
        partial void OnBatchKeyChanged();
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for CreateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CreateDate
        {
            get
            {
                global::System.DateTime? value = _CreateDate;
                OnGetCreateDate(ref value);
                return value;
            }
            set
            {
                if (_CreateDate != value)
                {
                  OnCreateDateChanging(ref value);
                  ReportPropertyChanging("CreateDate");
                  _CreateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateDate");
                  OnCreateDateChanged();
              }
            }
        }
        private global::System.DateTime? _CreateDate;
        partial void OnGetCreateDate(ref global::System.DateTime? value);
        partial void OnCreateDateChanging(ref global::System.DateTime? value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// There are no comments for CreateType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CreateType
        {
            get
            {
                short value = _CreateType;
                OnGetCreateType(ref value);
                return value;
            }
            set
            {
                if (_CreateType != value)
                {
                  OnCreateTypeChanging(ref value);
                  ReportPropertyChanging("CreateType");
                  _CreateType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateType");
                  OnCreateTypeChanged();
              }
            }
        }
        private short _CreateType = 0;
        partial void OnGetCreateType(ref short value);
        partial void OnCreateTypeChanging(ref short value);
        partial void OnCreateTypeChanged();
    
        /// <summary>
        /// There are no comments for CreateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CreateUserID
        {
            get
            {
                string value = _CreateUserID;
                OnGetCreateUserID(ref value);
                return value;
            }
            set
            {
                if (_CreateUserID != value)
                {
                  OnCreateUserIDChanging(ref value);
                  ReportPropertyChanging("CreateUserID");
                  _CreateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CreateUserID");
                  OnCreateUserIDChanged();
              }
            }
        }
        private string _CreateUserID;
        partial void OnGetCreateUserID(ref string value);
        partial void OnCreateUserIDChanging(ref string value);
        partial void OnCreateUserIDChanged();
    
        /// <summary>
        /// There are no comments for FreightAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal FreightAmt
        {
            get
            {
                decimal value = _FreightAmt;
                OnGetFreightAmt(ref value);
                return value;
            }
            set
            {
                if (_FreightAmt != value)
                {
                  OnFreightAmtChanging(ref value);
                  ReportPropertyChanging("FreightAmt");
                  _FreightAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FreightAmt");
                  OnFreightAmtChanged();
              }
            }
        }
        private decimal _FreightAmt = 0m;
        partial void OnGetFreightAmt(ref decimal value);
        partial void OnFreightAmtChanging(ref decimal value);
        partial void OnFreightAmtChanged();
    
        /// <summary>
        /// There are no comments for GLAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int GLAcctKey
        {
            get
            {
                int value = _GLAcctKey;
                OnGetGLAcctKey(ref value);
                return value;
            }
            set
            {
                if (_GLAcctKey != value)
                {
                  OnGLAcctKeyChanging(ref value);
                  ReportPropertyChanging("GLAcctKey");
                  _GLAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("GLAcctKey");
                  OnGLAcctKeyChanged();
              }
            }
        }
        private int _GLAcctKey;
        partial void OnGetGLAcctKey(ref int value);
        partial void OnGLAcctKeyChanging(ref int value);
        partial void OnGLAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for ImportLogKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ImportLogKey
        {
            get
            {
                int? value = _ImportLogKey;
                OnGetImportLogKey(ref value);
                return value;
            }
            set
            {
                if (_ImportLogKey != value)
                {
                  OnImportLogKeyChanging(ref value);
                  ReportPropertyChanging("ImportLogKey");
                  _ImportLogKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ImportLogKey");
                  OnImportLogKeyChanged();
              }
            }
        }
        private int? _ImportLogKey;
        partial void OnGetImportLogKey(ref int? value);
        partial void OnImportLogKeyChanging(ref int? value);
        partial void OnImportLogKeyChanged();
    
        /// <summary>
        /// There are no comments for ItemAliasKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ItemAliasKey
        {
            get
            {
                int? value = _ItemAliasKey;
                OnGetItemAliasKey(ref value);
                return value;
            }
            set
            {
                if (_ItemAliasKey != value)
                {
                  OnItemAliasKeyChanging(ref value);
                  ReportPropertyChanging("ItemAliasKey");
                  _ItemAliasKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ItemAliasKey");
                  OnItemAliasKeyChanged();
              }
            }
        }
        private int? _ItemAliasKey;
        partial void OnGetItemAliasKey(ref int? value);
        partial void OnItemAliasKeyChanging(ref int? value);
        partial void OnItemAliasKeyChanged();
    
        /// <summary>
        /// There are no comments for ItemKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ItemKey
        {
            get
            {
                int value = _ItemKey;
                OnGetItemKey(ref value);
                return value;
            }
            set
            {
                if (_ItemKey != value)
                {
                  OnItemKeyChanging(ref value);
                  ReportPropertyChanging("ItemKey");
                  _ItemKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ItemKey");
                  OnItemKeyChanged();
              }
            }
        }
        private int _ItemKey;
        partial void OnGetItemKey(ref int value);
        partial void OnItemKeyChanging(ref int value);
        partial void OnItemKeyChanged();
    
        /// <summary>
        /// There are no comments for MaterialAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal MaterialAmt
        {
            get
            {
                decimal value = _MaterialAmt;
                OnGetMaterialAmt(ref value);
                return value;
            }
            set
            {
                if (_MaterialAmt != value)
                {
                  OnMaterialAmtChanging(ref value);
                  ReportPropertyChanging("MaterialAmt");
                  _MaterialAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MaterialAmt");
                  OnMaterialAmtChanged();
              }
            }
        }
        private decimal _MaterialAmt = 0m;
        partial void OnGetMaterialAmt(ref decimal value);
        partial void OnMaterialAmtChanging(ref decimal value);
        partial void OnMaterialAmtChanged();
    
        /// <summary>
        /// There are no comments for OtherAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal OtherAmt
        {
            get
            {
                decimal value = _OtherAmt;
                OnGetOtherAmt(ref value);
                return value;
            }
            set
            {
                if (_OtherAmt != value)
                {
                  OnOtherAmtChanging(ref value);
                  ReportPropertyChanging("OtherAmt");
                  _OtherAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OtherAmt");
                  OnOtherAmtChanged();
              }
            }
        }
        private decimal _OtherAmt = 0m;
        partial void OnGetOtherAmt(ref decimal value);
        partial void OnOtherAmtChanging(ref decimal value);
        partial void OnOtherAmtChanged();
    
        /// <summary>
        /// There are no comments for OtherMfgAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal OtherMfgAmt
        {
            get
            {
                decimal value = _OtherMfgAmt;
                OnGetOtherMfgAmt(ref value);
                return value;
            }
            set
            {
                if (_OtherMfgAmt != value)
                {
                  OnOtherMfgAmtChanging(ref value);
                  ReportPropertyChanging("OtherMfgAmt");
                  _OtherMfgAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OtherMfgAmt");
                  OnOtherMfgAmtChanged();
              }
            }
        }
        private decimal _OtherMfgAmt = 0m;
        partial void OnGetOtherMfgAmt(ref decimal value);
        partial void OnOtherMfgAmtChanging(ref decimal value);
        partial void OnOtherMfgAmtChanged();
    
        /// <summary>
        /// There are no comments for OutsideAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal OutsideAmt
        {
            get
            {
                decimal value = _OutsideAmt;
                OnGetOutsideAmt(ref value);
                return value;
            }
            set
            {
                if (_OutsideAmt != value)
                {
                  OnOutsideAmtChanging(ref value);
                  ReportPropertyChanging("OutsideAmt");
                  _OutsideAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OutsideAmt");
                  OnOutsideAmtChanged();
              }
            }
        }
        private decimal _OutsideAmt = 0m;
        partial void OnGetOutsideAmt(ref decimal value);
        partial void OnOutsideAmtChanging(ref decimal value);
        partial void OnOutsideAmtChanged();
    
        /// <summary>
        /// There are no comments for PostDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime PostDate
        {
            get
            {
                global::System.DateTime value = _PostDate;
                OnGetPostDate(ref value);
                return value;
            }
            set
            {
                if (_PostDate != value)
                {
                  OnPostDateChanging(ref value);
                  ReportPropertyChanging("PostDate");
                  _PostDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PostDate");
                  OnPostDateChanged();
              }
            }
        }
        private global::System.DateTime _PostDate;
        partial void OnGetPostDate(ref global::System.DateTime value);
        partial void OnPostDateChanging(ref global::System.DateTime value);
        partial void OnPostDateChanged();
    
        /// <summary>
        /// There are no comments for PurchAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal PurchAmt
        {
            get
            {
                decimal value = _PurchAmt;
                OnGetPurchAmt(ref value);
                return value;
            }
            set
            {
                if (_PurchAmt != value)
                {
                  OnPurchAmtChanging(ref value);
                  ReportPropertyChanging("PurchAmt");
                  _PurchAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PurchAmt");
                  OnPurchAmtChanged();
              }
            }
        }
        private decimal _PurchAmt = 0m;
        partial void OnGetPurchAmt(ref decimal value);
        partial void OnPurchAmtChanging(ref decimal value);
        partial void OnPurchAmtChanged();
    
        /// <summary>
        /// There are no comments for QtyPerKit in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal QtyPerKit
        {
            get
            {
                decimal value = _QtyPerKit;
                OnGetQtyPerKit(ref value);
                return value;
            }
            set
            {
                if (_QtyPerKit != value)
                {
                  OnQtyPerKitChanging(ref value);
                  ReportPropertyChanging("QtyPerKit");
                  _QtyPerKit = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QtyPerKit");
                  OnQtyPerKitChanged();
              }
            }
        }
        private decimal _QtyPerKit = 0m;
        partial void OnGetQtyPerKit(ref decimal value);
        partial void OnQtyPerKitChanging(ref decimal value);
        partial void OnQtyPerKitChanged();
    
        /// <summary>
        /// There are no comments for ReasonCodeKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ReasonCodeKey
        {
            get
            {
                int? value = _ReasonCodeKey;
                OnGetReasonCodeKey(ref value);
                return value;
            }
            set
            {
                if (_ReasonCodeKey != value)
                {
                  OnReasonCodeKeyChanging(ref value);
                  ReportPropertyChanging("ReasonCodeKey");
                  _ReasonCodeKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ReasonCodeKey");
                  OnReasonCodeKeyChanged();
              }
            }
        }
        private int? _ReasonCodeKey;
        partial void OnGetReasonCodeKey(ref int? value);
        partial void OnReasonCodeKeyChanging(ref int? value);
        partial void OnReasonCodeKeyChanged();
    
        /// <summary>
        /// There are no comments for RunFixAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal RunFixAmt
        {
            get
            {
                decimal value = _RunFixAmt;
                OnGetRunFixAmt(ref value);
                return value;
            }
            set
            {
                if (_RunFixAmt != value)
                {
                  OnRunFixAmtChanging(ref value);
                  ReportPropertyChanging("RunFixAmt");
                  _RunFixAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RunFixAmt");
                  OnRunFixAmtChanged();
              }
            }
        }
        private decimal _RunFixAmt = 0m;
        partial void OnGetRunFixAmt(ref decimal value);
        partial void OnRunFixAmtChanging(ref decimal value);
        partial void OnRunFixAmtChanged();
    
        /// <summary>
        /// There are no comments for RunVarAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal RunVarAmt
        {
            get
            {
                decimal value = _RunVarAmt;
                OnGetRunVarAmt(ref value);
                return value;
            }
            set
            {
                if (_RunVarAmt != value)
                {
                  OnRunVarAmtChanging(ref value);
                  ReportPropertyChanging("RunVarAmt");
                  _RunVarAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RunVarAmt");
                  OnRunVarAmtChanged();
              }
            }
        }
        private decimal _RunVarAmt = 0m;
        partial void OnGetRunVarAmt(ref decimal value);
        partial void OnRunVarAmtChanging(ref decimal value);
        partial void OnRunVarAmtChanged();
    
        /// <summary>
        /// There are no comments for SalesAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal SalesAmt
        {
            get
            {
                decimal value = _SalesAmt;
                OnGetSalesAmt(ref value);
                return value;
            }
            set
            {
                if (_SalesAmt != value)
                {
                  OnSalesAmtChanging(ref value);
                  ReportPropertyChanging("SalesAmt");
                  _SalesAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesAmt");
                  OnSalesAmtChanged();
              }
            }
        }
        private decimal _SalesAmt = 0m;
        partial void OnGetSalesAmt(ref decimal value);
        partial void OnSalesAmtChanging(ref decimal value);
        partial void OnSalesAmtChanged();
    
        /// <summary>
        /// There are no comments for SetFixAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal SetFixAmt
        {
            get
            {
                decimal value = _SetFixAmt;
                OnGetSetFixAmt(ref value);
                return value;
            }
            set
            {
                if (_SetFixAmt != value)
                {
                  OnSetFixAmtChanging(ref value);
                  ReportPropertyChanging("SetFixAmt");
                  _SetFixAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SetFixAmt");
                  OnSetFixAmtChanged();
              }
            }
        }
        private decimal _SetFixAmt = 0m;
        partial void OnGetSetFixAmt(ref decimal value);
        partial void OnSetFixAmtChanging(ref decimal value);
        partial void OnSetFixAmtChanged();
    
        /// <summary>
        /// There are no comments for SetVarAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal SetVarAmt
        {
            get
            {
                decimal value = _SetVarAmt;
                OnGetSetVarAmt(ref value);
                return value;
            }
            set
            {
                if (_SetVarAmt != value)
                {
                  OnSetVarAmtChanging(ref value);
                  ReportPropertyChanging("SetVarAmt");
                  _SetVarAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SetVarAmt");
                  OnSetVarAmtChanged();
              }
            }
        }
        private decimal _SetVarAmt = 0m;
        partial void OnGetSetVarAmt(ref decimal value);
        partial void OnSetVarAmtChanging(ref decimal value);
        partial void OnSetVarAmtChanged();
    
        /// <summary>
        /// There are no comments for SourceInvtTranKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? SourceInvtTranKey
        {
            get
            {
                int? value = _SourceInvtTranKey;
                OnGetSourceInvtTranKey(ref value);
                return value;
            }
            set
            {
                if (_SourceInvtTranKey != value)
                {
                  OnSourceInvtTranKeyChanging(ref value);
                  ReportPropertyChanging("SourceInvtTranKey");
                  _SourceInvtTranKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SourceInvtTranKey");
                  OnSourceInvtTranKeyChanged();
              }
            }
        }
        private int? _SourceInvtTranKey;
        partial void OnGetSourceInvtTranKey(ref int? value);
        partial void OnSourceInvtTranKeyChanging(ref int? value);
        partial void OnSourceInvtTranKeyChanged();
    
        /// <summary>
        /// There are no comments for STaxAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal STaxAmt
        {
            get
            {
                decimal value = _STaxAmt;
                OnGetSTaxAmt(ref value);
                return value;
            }
            set
            {
                if (_STaxAmt != value)
                {
                  OnSTaxAmtChanging(ref value);
                  ReportPropertyChanging("STaxAmt");
                  _STaxAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("STaxAmt");
                  OnSTaxAmtChanged();
              }
            }
        }
        private decimal _STaxAmt = 0m;
        partial void OnGetSTaxAmt(ref decimal value);
        partial void OnSTaxAmtChanging(ref decimal value);
        partial void OnSTaxAmtChanged();
    
        /// <summary>
        /// There are no comments for TranAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal TranAmt
        {
            get
            {
                decimal value = _TranAmt;
                OnGetTranAmt(ref value);
                return value;
            }
            set
            {
                if (_TranAmt != value)
                {
                  OnTranAmtChanging(ref value);
                  ReportPropertyChanging("TranAmt");
                  _TranAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranAmt");
                  OnTranAmtChanged();
              }
            }
        }
        private decimal _TranAmt = 0m;
        partial void OnGetTranAmt(ref decimal value);
        partial void OnTranAmtChanging(ref decimal value);
        partial void OnTranAmtChanged();
    
        /// <summary>
        /// There are no comments for TranCmnt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string TranCmnt
        {
            get
            {
                string value = _TranCmnt;
                OnGetTranCmnt(ref value);
                return value;
            }
            set
            {
                if (_TranCmnt != value)
                {
                  OnTranCmntChanging(ref value);
                  ReportPropertyChanging("TranCmnt");
                  _TranCmnt = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TranCmnt");
                  OnTranCmntChanged();
              }
            }
        }
        private string _TranCmnt;
        partial void OnGetTranCmnt(ref string value);
        partial void OnTranCmntChanging(ref string value);
        partial void OnTranCmntChanged();
    
        /// <summary>
        /// There are no comments for TranDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime TranDate
        {
            get
            {
                global::System.DateTime value = _TranDate;
                OnGetTranDate(ref value);
                return value;
            }
            set
            {
                if (_TranDate != value)
                {
                  OnTranDateChanging(ref value);
                  ReportPropertyChanging("TranDate");
                  _TranDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranDate");
                  OnTranDateChanged();
              }
            }
        }
        private global::System.DateTime _TranDate;
        partial void OnGetTranDate(ref global::System.DateTime value);
        partial void OnTranDateChanging(ref global::System.DateTime value);
        partial void OnTranDateChanged();
    
        /// <summary>
        /// There are no comments for TranID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string TranID
        {
            get
            {
                string value = _TranID;
                OnGetTranID(ref value);
                return value;
            }
            set
            {
                if (_TranID != value)
                {
                  OnTranIDChanging(ref value);
                  ReportPropertyChanging("TranID");
                  _TranID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TranID");
                  OnTranIDChanged();
              }
            }
        }
        private string _TranID;
        partial void OnGetTranID(ref string value);
        partial void OnTranIDChanging(ref string value);
        partial void OnTranIDChanged();
    
        /// <summary>
        /// There are no comments for TranKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? TranKey
        {
            get
            {
                int? value = _TranKey;
                OnGetTranKey(ref value);
                return value;
            }
            set
            {
                if (_TranKey != value)
                {
                  OnTranKeyChanging(ref value);
                  ReportPropertyChanging("TranKey");
                  _TranKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranKey");
                  OnTranKeyChanged();
              }
            }
        }
        private int? _TranKey;
        partial void OnGetTranKey(ref int? value);
        partial void OnTranKeyChanging(ref int? value);
        partial void OnTranKeyChanged();
    
        /// <summary>
        /// There are no comments for TranNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string TranNo
        {
            get
            {
                string value = _TranNo;
                OnGetTranNo(ref value);
                return value;
            }
            set
            {
                if (_TranNo != value)
                {
                  OnTranNoChanging(ref value);
                  ReportPropertyChanging("TranNo");
                  _TranNo = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TranNo");
                  OnTranNoChanged();
              }
            }
        }
        private string _TranNo;
        partial void OnGetTranNo(ref string value);
        partial void OnTranNoChanging(ref string value);
        partial void OnTranNoChanged();
    
        /// <summary>
        /// There are no comments for TranQty in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal TranQty
        {
            get
            {
                decimal value = _TranQty;
                OnGetTranQty(ref value);
                return value;
            }
            set
            {
                if (_TranQty != value)
                {
                  OnTranQtyChanging(ref value);
                  ReportPropertyChanging("TranQty");
                  _TranQty = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranQty");
                  OnTranQtyChanged();
              }
            }
        }
        private decimal _TranQty = 0m;
        partial void OnGetTranQty(ref decimal value);
        partial void OnTranQtyChanging(ref decimal value);
        partial void OnTranQtyChanged();
    
        /// <summary>
        /// There are no comments for TranType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int TranType
        {
            get
            {
                int value = _TranType;
                OnGetTranType(ref value);
                return value;
            }
            set
            {
                if (_TranType != value)
                {
                  OnTranTypeChanging(ref value);
                  ReportPropertyChanging("TranType");
                  _TranType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranType");
                  OnTranTypeChanged();
              }
            }
        }
        private int _TranType;
        partial void OnGetTranType(ref int value);
        partial void OnTranTypeChanging(ref int value);
        partial void OnTranTypeChanged();
    
        /// <summary>
        /// There are no comments for TrnsfrOrderLineKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? TrnsfrOrderLineKey
        {
            get
            {
                int? value = _TrnsfrOrderLineKey;
                OnGetTrnsfrOrderLineKey(ref value);
                return value;
            }
            set
            {
                if (_TrnsfrOrderLineKey != value)
                {
                  OnTrnsfrOrderLineKeyChanging(ref value);
                  ReportPropertyChanging("TrnsfrOrderLineKey");
                  _TrnsfrOrderLineKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TrnsfrOrderLineKey");
                  OnTrnsfrOrderLineKeyChanged();
              }
            }
        }
        private int? _TrnsfrOrderLineKey;
        partial void OnGetTrnsfrOrderLineKey(ref int? value);
        partial void OnTrnsfrOrderLineKeyChanging(ref int? value);
        partial void OnTrnsfrOrderLineKeyChanged();
    
        /// <summary>
        /// There are no comments for UnitCost in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? UnitCost
        {
            get
            {
                decimal? value = _UnitCost;
                OnGetUnitCost(ref value);
                return value;
            }
            set
            {
                if (_UnitCost != value)
                {
                  OnUnitCostChanging(ref value);
                  ReportPropertyChanging("UnitCost");
                  _UnitCost = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UnitCost");
                  OnUnitCostChanged();
              }
            }
        }
        private decimal? _UnitCost = 0m;
        partial void OnGetUnitCost(ref decimal? value);
        partial void OnUnitCostChanging(ref decimal? value);
        partial void OnUnitCostChanged();
    
        /// <summary>
        /// There are no comments for UnitMeasKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? UnitMeasKey
        {
            get
            {
                int? value = _UnitMeasKey;
                OnGetUnitMeasKey(ref value);
                return value;
            }
            set
            {
                if (_UnitMeasKey != value)
                {
                  OnUnitMeasKeyChanging(ref value);
                  ReportPropertyChanging("UnitMeasKey");
                  _UnitMeasKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UnitMeasKey");
                  OnUnitMeasKeyChanged();
              }
            }
        }
        private int? _UnitMeasKey;
        partial void OnGetUnitMeasKey(ref int? value);
        partial void OnUnitMeasKeyChanging(ref int? value);
        partial void OnUnitMeasKeyChanged();
    
        /// <summary>
        /// There are no comments for UnitPrice in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? UnitPrice
        {
            get
            {
                decimal? value = _UnitPrice;
                OnGetUnitPrice(ref value);
                return value;
            }
            set
            {
                if (_UnitPrice != value)
                {
                  OnUnitPriceChanging(ref value);
                  ReportPropertyChanging("UnitPrice");
                  _UnitPrice = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UnitPrice");
                  OnUnitPriceChanged();
              }
            }
        }
        private decimal? _UnitPrice = 0m;
        partial void OnGetUnitPrice(ref decimal? value);
        partial void OnUnitPriceChanging(ref decimal? value);
        partial void OnUnitPriceChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();
    
        /// <summary>
        /// There are no comments for UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? UpdateDate
        {
            get
            {
                global::System.DateTime? value = _UpdateDate;
                OnGetUpdateDate(ref value);
                return value;
            }
            set
            {
                if (_UpdateDate != value)
                {
                  OnUpdateDateChanging(ref value);
                  ReportPropertyChanging("UpdateDate");
                  _UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateDate");
                  OnUpdateDateChanged();
              }
            }
        }
        private global::System.DateTime? _UpdateDate;
        partial void OnGetUpdateDate(ref global::System.DateTime? value);
        partial void OnUpdateDateChanging(ref global::System.DateTime? value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// There are no comments for UpdateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UpdateUserID
        {
            get
            {
                string value = _UpdateUserID;
                OnGetUpdateUserID(ref value);
                return value;
            }
            set
            {
                if (_UpdateUserID != value)
                {
                  OnUpdateUserIDChanging(ref value);
                  ReportPropertyChanging("UpdateUserID");
                  _UpdateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UpdateUserID");
                  OnUpdateUserIDChanged();
              }
            }
        }
        private string _UpdateUserID;
        partial void OnGetUpdateUserID(ref string value);
        partial void OnUpdateUserIDChanging(ref string value);
        partial void OnUpdateUserIDChanged();
    
        /// <summary>
        /// There are no comments for WhseKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int WhseKey
        {
            get
            {
                int value = _WhseKey;
                OnGetWhseKey(ref value);
                return value;
            }
            set
            {
                if (_WhseKey != value)
                {
                  OnWhseKeyChanging(ref value);
                  ReportPropertyChanging("WhseKey");
                  _WhseKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WhseKey");
                  OnWhseKeyChanged();
              }
            }
        }
        private int _WhseKey;
        partial void OnGetWhseKey(ref int value);
        partial void OnWhseKeyChanging(ref int value);
        partial void OnWhseKeyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Warehouse in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Warehouse_InvtTran", "Warehouse")]
        public virtual Warehouse Warehouse
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Warehouse>("Net4Sage.DataAccessModel.Warehouse_InvtTran", "Warehouse").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Warehouse>("Net4Sage.DataAccessModel.Warehouse_InvtTran", "Warehouse").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Warehouse in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Warehouse> WarehouseReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Warehouse>("Net4Sage.DataAccessModel.Warehouse_InvtTran", "Warehouse");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Warehouse>("Net4Sage.DataAccessModel.Warehouse_InvtTran", "Warehouse", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Warehouse>("Net4Sage.DataAccessModel.Warehouse_InvtTran", "Warehouse").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvtTranDists in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "InvtTran_InvtTranDist", "InvtTranDists")]
        public virtual EntityCollection<InvtTranDist> InvtTranDists
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvtTranDist>("Net4Sage.DataAccessModel.InvtTran_InvtTranDist", "InvtTranDists");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvtTranDist>("Net4Sage.DataAccessModel.InvtTran_InvtTranDist", "InvtTranDists", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for IMTranType in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "IMTranType_InvtTran", "IMTranType")]
        public virtual IMTranType IMTranType
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<IMTranType>("Net4Sage.DataAccessModel.IMTranType_InvtTran", "IMTranType").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<IMTranType>("Net4Sage.DataAccessModel.IMTranType_InvtTran", "IMTranType").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for IMTranType in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IMTranType> IMTranTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<IMTranType>("Net4Sage.DataAccessModel.IMTranType_InvtTran", "IMTranType");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<IMTranType>("Net4Sage.DataAccessModel.IMTranType_InvtTran", "IMTranType", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<IMTranType>("Net4Sage.DataAccessModel.IMTranType_InvtTran", "IMTranType").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Item in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Item_InvtTran", "Item")]
        public virtual Item Item
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Item>("Net4Sage.DataAccessModel.Item_InvtTran", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Item>("Net4Sage.DataAccessModel.Item_InvtTran", "Item").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Item in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Item>("Net4Sage.DataAccessModel.Item_InvtTran", "Item");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Item>("Net4Sage.DataAccessModel.Item_InvtTran", "Item", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Item>("Net4Sage.DataAccessModel.Item_InvtTran", "Item").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Inventory in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Inventory_InvtTran", "Inventory")]
        public virtual Inventory Inventory
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Inventory>("Net4Sage.DataAccessModel.Inventory_InvtTran", "Inventory").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Inventory>("Net4Sage.DataAccessModel.Inventory_InvtTran", "Inventory").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Inventory in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Inventory> InventoryReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Inventory>("Net4Sage.DataAccessModel.Inventory_InvtTran", "Inventory");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Inventory>("Net4Sage.DataAccessModel.Inventory_InvtTran", "Inventory", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Inventory>("Net4Sage.DataAccessModel.Inventory_InvtTran", "Inventory").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.InvtTranDist in the schema.
    /// </summary>
    /// <KeyProperties>
    /// InvtTranDistKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="InvtTranDist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvtTranDist : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvtTranDist object.
        /// </summary>
        /// <param name="invtTranDistKey">Initial value of InvtTranDistKey.</param>
        /// <param name="distQty">Initial value of DistQty.</param>
        /// <param name="invtTranKey">Initial value of InvtTranKey.</param>
        /// <param name="itemKey">Initial value of ItemKey.</param>
        /// <param name="whseKey">Initial value of WhseKey.</param>
        public static InvtTranDist CreateInvtTranDist(int invtTranDistKey, decimal distQty, int invtTranKey, int itemKey, int whseKey)
        {
            InvtTranDist invtTranDist = new InvtTranDist();
            invtTranDist.InvtTranDistKey = invtTranDistKey;
            invtTranDist.DistQty = distQty;
            invtTranDist.InvtTranKey = invtTranKey;
            invtTranDist.ItemKey = itemKey;
            invtTranDist.WhseKey = whseKey;
            return invtTranDist;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for InvtTranDistKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvtTranDistKey
        {
            get
            {
                int value = _InvtTranDistKey;
                OnGetInvtTranDistKey(ref value);
                return value;
            }
            set
            {
                if (_InvtTranDistKey != value)
                {
                  OnInvtTranDistKeyChanging(ref value);
                  ReportPropertyChanging("InvtTranDistKey");
                  _InvtTranDistKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvtTranDistKey");
                  OnInvtTranDistKeyChanged();
              }
            }
        }
        private int _InvtTranDistKey;
        partial void OnGetInvtTranDistKey(ref int value);
        partial void OnInvtTranDistKeyChanging(ref int value);
        partial void OnInvtTranDistKeyChanged();
    
        /// <summary>
        /// There are no comments for DistQty in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal DistQty
        {
            get
            {
                decimal value = _DistQty;
                OnGetDistQty(ref value);
                return value;
            }
            set
            {
                if (_DistQty != value)
                {
                  OnDistQtyChanging(ref value);
                  ReportPropertyChanging("DistQty");
                  _DistQty = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DistQty");
                  OnDistQtyChanged();
              }
            }
        }
        private decimal _DistQty = 0m;
        partial void OnGetDistQty(ref decimal value);
        partial void OnDistQtyChanging(ref decimal value);
        partial void OnDistQtyChanged();
    
        /// <summary>
        /// There are no comments for InvtLotBinKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? InvtLotBinKey
        {
            get
            {
                int? value = _InvtLotBinKey;
                OnGetInvtLotBinKey(ref value);
                return value;
            }
            set
            {
                if (_InvtLotBinKey != value)
                {
                  OnInvtLotBinKeyChanging(ref value);
                  ReportPropertyChanging("InvtLotBinKey");
                  _InvtLotBinKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvtLotBinKey");
                  OnInvtLotBinKeyChanged();
              }
            }
        }
        private int? _InvtLotBinKey;
        partial void OnGetInvtLotBinKey(ref int? value);
        partial void OnInvtLotBinKeyChanging(ref int? value);
        partial void OnInvtLotBinKeyChanged();
    
        /// <summary>
        /// There are no comments for InvtSerialKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? InvtSerialKey
        {
            get
            {
                int? value = _InvtSerialKey;
                OnGetInvtSerialKey(ref value);
                return value;
            }
            set
            {
                if (_InvtSerialKey != value)
                {
                  OnInvtSerialKeyChanging(ref value);
                  ReportPropertyChanging("InvtSerialKey");
                  _InvtSerialKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvtSerialKey");
                  OnInvtSerialKeyChanged();
              }
            }
        }
        private int? _InvtSerialKey;
        partial void OnGetInvtSerialKey(ref int? value);
        partial void OnInvtSerialKeyChanging(ref int? value);
        partial void OnInvtSerialKeyChanged();
    
        /// <summary>
        /// There are no comments for InvtTranKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvtTranKey
        {
            get
            {
                int value = _InvtTranKey;
                OnGetInvtTranKey(ref value);
                return value;
            }
            set
            {
                if (_InvtTranKey != value)
                {
                  OnInvtTranKeyChanging(ref value);
                  ReportPropertyChanging("InvtTranKey");
                  _InvtTranKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvtTranKey");
                  OnInvtTranKeyChanged();
              }
            }
        }
        private int _InvtTranKey;
        partial void OnGetInvtTranKey(ref int value);
        partial void OnInvtTranKeyChanging(ref int value);
        partial void OnInvtTranKeyChanged();
    
        /// <summary>
        /// There are no comments for ItemKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ItemKey
        {
            get
            {
                int value = _ItemKey;
                OnGetItemKey(ref value);
                return value;
            }
            set
            {
                if (_ItemKey != value)
                {
                  OnItemKeyChanging(ref value);
                  ReportPropertyChanging("ItemKey");
                  _ItemKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ItemKey");
                  OnItemKeyChanged();
              }
            }
        }
        private int _ItemKey;
        partial void OnGetItemKey(ref int value);
        partial void OnItemKeyChanging(ref int value);
        partial void OnItemKeyChanged();
    
        /// <summary>
        /// There are no comments for WhseBinKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? WhseBinKey
        {
            get
            {
                int? value = _WhseBinKey;
                OnGetWhseBinKey(ref value);
                return value;
            }
            set
            {
                if (_WhseBinKey != value)
                {
                  OnWhseBinKeyChanging(ref value);
                  ReportPropertyChanging("WhseBinKey");
                  _WhseBinKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WhseBinKey");
                  OnWhseBinKeyChanged();
              }
            }
        }
        private int? _WhseBinKey;
        partial void OnGetWhseBinKey(ref int? value);
        partial void OnWhseBinKeyChanging(ref int? value);
        partial void OnWhseBinKeyChanged();
    
        /// <summary>
        /// There are no comments for WhseKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int WhseKey
        {
            get
            {
                int value = _WhseKey;
                OnGetWhseKey(ref value);
                return value;
            }
            set
            {
                if (_WhseKey != value)
                {
                  OnWhseKeyChanging(ref value);
                  ReportPropertyChanging("WhseKey");
                  _WhseKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WhseKey");
                  OnWhseKeyChanged();
              }
            }
        }
        private int _WhseKey;
        partial void OnGetWhseKey(ref int value);
        partial void OnWhseKeyChanging(ref int value);
        partial void OnWhseKeyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvtTran in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "InvtTran_InvtTranDist", "InvtTran")]
        public virtual InvtTran InvtTran
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvtTran>("Net4Sage.DataAccessModel.InvtTran_InvtTranDist", "InvtTran").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvtTran>("Net4Sage.DataAccessModel.InvtTran_InvtTranDist", "InvtTran").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvtTran in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvtTran> InvtTranReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvtTran>("Net4Sage.DataAccessModel.InvtTran_InvtTranDist", "InvtTran");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvtTran>("Net4Sage.DataAccessModel.InvtTran_InvtTranDist", "InvtTran", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvtTran>("Net4Sage.DataAccessModel.InvtTran_InvtTranDist", "InvtTran").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvtLotBin in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "InvtLotBin_InvtTranDist", "InvtLotBin")]
        public virtual InvtLotBin InvtLotBin
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvtLotBin>("Net4Sage.DataAccessModel.InvtLotBin_InvtTranDist", "InvtLotBin").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvtLotBin>("Net4Sage.DataAccessModel.InvtLotBin_InvtTranDist", "InvtLotBin").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvtLotBin in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvtLotBin> InvtLotBinReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvtLotBin>("Net4Sage.DataAccessModel.InvtLotBin_InvtTranDist", "InvtLotBin");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvtLotBin>("Net4Sage.DataAccessModel.InvtLotBin_InvtTranDist", "InvtLotBin", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvtLotBin>("Net4Sage.DataAccessModel.InvtLotBin_InvtTranDist", "InvtLotBin").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for WhseBin in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "WhseBin_InvtTranDist", "WhseBin")]
        public virtual WhseBin WhseBin
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<WhseBin>("Net4Sage.DataAccessModel.WhseBin_InvtTranDist", "WhseBin").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<WhseBin>("Net4Sage.DataAccessModel.WhseBin_InvtTranDist", "WhseBin").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for WhseBin in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WhseBin> WhseBinReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<WhseBin>("Net4Sage.DataAccessModel.WhseBin_InvtTranDist", "WhseBin");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<WhseBin>("Net4Sage.DataAccessModel.WhseBin_InvtTranDist", "WhseBin", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<WhseBin>("Net4Sage.DataAccessModel.WhseBin_InvtTranDist", "WhseBin").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Warehouse in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Warehouse_InvtTranDist", "Warehouse")]
        public virtual Warehouse Warehouse
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Warehouse>("Net4Sage.DataAccessModel.Warehouse_InvtTranDist", "Warehouse").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Warehouse>("Net4Sage.DataAccessModel.Warehouse_InvtTranDist", "Warehouse").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Warehouse in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Warehouse> WarehouseReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Warehouse>("Net4Sage.DataAccessModel.Warehouse_InvtTranDist", "Warehouse");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Warehouse>("Net4Sage.DataAccessModel.Warehouse_InvtTranDist", "Warehouse", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Warehouse>("Net4Sage.DataAccessModel.Warehouse_InvtTranDist", "Warehouse").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.WorkCenter in the schema.
    /// </summary>
    /// <KeyProperties>
    /// WorkCenterKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="WorkCenter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WorkCenter : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new WorkCenter object.
        /// </summary>
        /// <param name="workCenterKey">Initial value of WorkCenterKey.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="createType">Initial value of CreateType.</param>
        /// <param name="departmentKey">Initial value of DepartmentKey.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        /// <param name="workCenterID">Initial value of WorkCenterID.</param>
        /// <param name="wrkCntrCapacity">Initial value of WrkCntrCapacity.</param>
        /// <param name="wrkCntrCrewRate0">Initial value of WrkCntrCrewRate0.</param>
        /// <param name="wrkCntrCrewRate1">Initial value of WrkCntrCrewRate1.</param>
        /// <param name="wrkCntrCrewRate2">Initial value of WrkCntrCrewRate2.</param>
        /// <param name="wrkCntrCrewRate3">Initial value of WrkCntrCrewRate3.</param>
        /// <param name="wrkCntrCrewRate4">Initial value of WrkCntrCrewRate4.</param>
        /// <param name="wrkCntrCrewRate5">Initial value of WrkCntrCrewRate5.</param>
        /// <param name="wrkCntrCrewRate6">Initial value of WrkCntrCrewRate6.</param>
        /// <param name="wrkCntrCrewRate7">Initial value of WrkCntrCrewRate7.</param>
        /// <param name="wrkCntrCrewRate8">Initial value of WrkCntrCrewRate8.</param>
        /// <param name="wrkCntrCrewRate9">Initial value of WrkCntrCrewRate9.</param>
        /// <param name="wrkCntrEstRunRate">Initial value of WrkCntrEstRunRate.</param>
        /// <param name="wrkCntrEstSetupRate">Initial value of WrkCntrEstSetupRate.</param>
        /// <param name="wrkCntrFixedRunRate">Initial value of WrkCntrFixedRunRate.</param>
        /// <param name="wrkCntrFixedSetupRate">Initial value of WrkCntrFixedSetupRate.</param>
        /// <param name="wrkCntrPcHrHrPc">Initial value of WrkCntrPcHrHrPc.</param>
        /// <param name="wrkCntrStdEffPercentage">Initial value of WrkCntrStdEffPercentage.</param>
        /// <param name="wrkCntrStdMoveHrs">Initial value of WrkCntrStdMoveHrs.</param>
        /// <param name="wrkCntrStdOprFactor">Initial value of WrkCntrStdOprFactor.</param>
        /// <param name="wrkCntrStdPcsB4Reset">Initial value of WrkCntrStdPcsB4Reset.</param>
        /// <param name="wrkCntrStdPcsHrs">Initial value of WrkCntrStdPcsHrs.</param>
        /// <param name="wrkCntrStdResetHrs">Initial value of WrkCntrStdResetHrs.</param>
        /// <param name="wrkCntrStdRunLaborRate">Initial value of WrkCntrStdRunLaborRate.</param>
        /// <param name="wrkCntrStdScrapPct">Initial value of WrkCntrStdScrapPct.</param>
        /// <param name="wrkCntrStdSetupHrs">Initial value of WrkCntrStdSetupHrs.</param>
        /// <param name="wrkCntrStdSetupLaborRate">Initial value of WrkCntrStdSetupLaborRate.</param>
        /// <param name="wrkCntrVarRunRate">Initial value of WrkCntrVarRunRate.</param>
        /// <param name="wrkCntrVarSetupRate">Initial value of WrkCntrVarSetupRate.</param>
        public static WorkCenter CreateWorkCenter(int workCenterKey, string companyID, short createType, int departmentKey, int updateCounter, string workCenterID, short wrkCntrCapacity, decimal wrkCntrCrewRate0, decimal wrkCntrCrewRate1, decimal wrkCntrCrewRate2, decimal wrkCntrCrewRate3, decimal wrkCntrCrewRate4, decimal wrkCntrCrewRate5, decimal wrkCntrCrewRate6, decimal wrkCntrCrewRate7, decimal wrkCntrCrewRate8, decimal wrkCntrCrewRate9, decimal wrkCntrEstRunRate, decimal wrkCntrEstSetupRate, decimal wrkCntrFixedRunRate, decimal wrkCntrFixedSetupRate, string wrkCntrPcHrHrPc, decimal wrkCntrStdEffPercentage, decimal wrkCntrStdMoveHrs, decimal wrkCntrStdOprFactor, decimal wrkCntrStdPcsB4Reset, decimal wrkCntrStdPcsHrs, decimal wrkCntrStdResetHrs, decimal wrkCntrStdRunLaborRate, decimal wrkCntrStdScrapPct, decimal wrkCntrStdSetupHrs, decimal wrkCntrStdSetupLaborRate, decimal wrkCntrVarRunRate, decimal wrkCntrVarSetupRate)
        {
            WorkCenter workCenter = new WorkCenter();
            workCenter.WorkCenterKey = workCenterKey;
            workCenter.CompanyID = companyID;
            workCenter.CreateType = createType;
            workCenter.DepartmentKey = departmentKey;
            workCenter.UpdateCounter = updateCounter;
            workCenter.WorkCenterID = workCenterID;
            workCenter.WrkCntrCapacity = wrkCntrCapacity;
            workCenter.WrkCntrCrewRate0 = wrkCntrCrewRate0;
            workCenter.WrkCntrCrewRate1 = wrkCntrCrewRate1;
            workCenter.WrkCntrCrewRate2 = wrkCntrCrewRate2;
            workCenter.WrkCntrCrewRate3 = wrkCntrCrewRate3;
            workCenter.WrkCntrCrewRate4 = wrkCntrCrewRate4;
            workCenter.WrkCntrCrewRate5 = wrkCntrCrewRate5;
            workCenter.WrkCntrCrewRate6 = wrkCntrCrewRate6;
            workCenter.WrkCntrCrewRate7 = wrkCntrCrewRate7;
            workCenter.WrkCntrCrewRate8 = wrkCntrCrewRate8;
            workCenter.WrkCntrCrewRate9 = wrkCntrCrewRate9;
            workCenter.WrkCntrEstRunRate = wrkCntrEstRunRate;
            workCenter.WrkCntrEstSetupRate = wrkCntrEstSetupRate;
            workCenter.WrkCntrFixedRunRate = wrkCntrFixedRunRate;
            workCenter.WrkCntrFixedSetupRate = wrkCntrFixedSetupRate;
            workCenter.WrkCntrPcHrHrPc = wrkCntrPcHrHrPc;
            workCenter.WrkCntrStdEffPercentage = wrkCntrStdEffPercentage;
            workCenter.WrkCntrStdMoveHrs = wrkCntrStdMoveHrs;
            workCenter.WrkCntrStdOprFactor = wrkCntrStdOprFactor;
            workCenter.WrkCntrStdPcsB4Reset = wrkCntrStdPcsB4Reset;
            workCenter.WrkCntrStdPcsHrs = wrkCntrStdPcsHrs;
            workCenter.WrkCntrStdResetHrs = wrkCntrStdResetHrs;
            workCenter.WrkCntrStdRunLaborRate = wrkCntrStdRunLaborRate;
            workCenter.WrkCntrStdScrapPct = wrkCntrStdScrapPct;
            workCenter.WrkCntrStdSetupHrs = wrkCntrStdSetupHrs;
            workCenter.WrkCntrStdSetupLaborRate = wrkCntrStdSetupLaborRate;
            workCenter.WrkCntrVarRunRate = wrkCntrVarRunRate;
            workCenter.WrkCntrVarSetupRate = wrkCntrVarSetupRate;
            return workCenter;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for WorkCenterKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int WorkCenterKey
        {
            get
            {
                int value = _WorkCenterKey;
                OnGetWorkCenterKey(ref value);
                return value;
            }
            set
            {
                if (_WorkCenterKey != value)
                {
                  OnWorkCenterKeyChanging(ref value);
                  ReportPropertyChanging("WorkCenterKey");
                  _WorkCenterKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WorkCenterKey");
                  OnWorkCenterKeyChanged();
              }
            }
        }
        private int _WorkCenterKey;
        partial void OnGetWorkCenterKey(ref int value);
        partial void OnWorkCenterKeyChanging(ref int value);
        partial void OnWorkCenterKeyChanged();
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for CreateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CreateDate
        {
            get
            {
                global::System.DateTime? value = _CreateDate;
                OnGetCreateDate(ref value);
                return value;
            }
            set
            {
                if (_CreateDate != value)
                {
                  OnCreateDateChanging(ref value);
                  ReportPropertyChanging("CreateDate");
                  _CreateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateDate");
                  OnCreateDateChanged();
              }
            }
        }
        private global::System.DateTime? _CreateDate;
        partial void OnGetCreateDate(ref global::System.DateTime? value);
        partial void OnCreateDateChanging(ref global::System.DateTime? value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// There are no comments for CreateType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CreateType
        {
            get
            {
                short value = _CreateType;
                OnGetCreateType(ref value);
                return value;
            }
            set
            {
                if (_CreateType != value)
                {
                  OnCreateTypeChanging(ref value);
                  ReportPropertyChanging("CreateType");
                  _CreateType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateType");
                  OnCreateTypeChanged();
              }
            }
        }
        private short _CreateType = 0;
        partial void OnGetCreateType(ref short value);
        partial void OnCreateTypeChanging(ref short value);
        partial void OnCreateTypeChanged();
    
        /// <summary>
        /// There are no comments for CreateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CreateUserID
        {
            get
            {
                string value = _CreateUserID;
                OnGetCreateUserID(ref value);
                return value;
            }
            set
            {
                if (_CreateUserID != value)
                {
                  OnCreateUserIDChanging(ref value);
                  ReportPropertyChanging("CreateUserID");
                  _CreateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CreateUserID");
                  OnCreateUserIDChanged();
              }
            }
        }
        private string _CreateUserID;
        partial void OnGetCreateUserID(ref string value);
        partial void OnCreateUserIDChanging(ref string value);
        partial void OnCreateUserIDChanged();
    
        /// <summary>
        /// There are no comments for DepartmentKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int DepartmentKey
        {
            get
            {
                int value = _DepartmentKey;
                OnGetDepartmentKey(ref value);
                return value;
            }
            set
            {
                if (_DepartmentKey != value)
                {
                  OnDepartmentKeyChanging(ref value);
                  ReportPropertyChanging("DepartmentKey");
                  _DepartmentKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DepartmentKey");
                  OnDepartmentKeyChanged();
              }
            }
        }
        private int _DepartmentKey;
        partial void OnGetDepartmentKey(ref int value);
        partial void OnDepartmentKeyChanging(ref int value);
        partial void OnDepartmentKeyChanged();
    
        /// <summary>
        /// There are no comments for FacilityKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? FacilityKey
        {
            get
            {
                int? value = _FacilityKey;
                OnGetFacilityKey(ref value);
                return value;
            }
            set
            {
                if (_FacilityKey != value)
                {
                  OnFacilityKeyChanging(ref value);
                  ReportPropertyChanging("FacilityKey");
                  _FacilityKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FacilityKey");
                  OnFacilityKeyChanged();
              }
            }
        }
        private int? _FacilityKey;
        partial void OnGetFacilityKey(ref int? value);
        partial void OnFacilityKeyChanging(ref int? value);
        partial void OnFacilityKeyChanged();
    
        /// <summary>
        /// There are no comments for FriStart1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? FriStart1
        {
            get
            {
                global::System.DateTime? value = _FriStart1;
                OnGetFriStart1(ref value);
                return value;
            }
            set
            {
                if (_FriStart1 != value)
                {
                  OnFriStart1Changing(ref value);
                  ReportPropertyChanging("FriStart1");
                  _FriStart1 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FriStart1");
                  OnFriStart1Changed();
              }
            }
        }
        private global::System.DateTime? _FriStart1;
        partial void OnGetFriStart1(ref global::System.DateTime? value);
        partial void OnFriStart1Changing(ref global::System.DateTime? value);
        partial void OnFriStart1Changed();
    
        /// <summary>
        /// There are no comments for FriStart2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? FriStart2
        {
            get
            {
                global::System.DateTime? value = _FriStart2;
                OnGetFriStart2(ref value);
                return value;
            }
            set
            {
                if (_FriStart2 != value)
                {
                  OnFriStart2Changing(ref value);
                  ReportPropertyChanging("FriStart2");
                  _FriStart2 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FriStart2");
                  OnFriStart2Changed();
              }
            }
        }
        private global::System.DateTime? _FriStart2;
        partial void OnGetFriStart2(ref global::System.DateTime? value);
        partial void OnFriStart2Changing(ref global::System.DateTime? value);
        partial void OnFriStart2Changed();
    
        /// <summary>
        /// There are no comments for FriStart3 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? FriStart3
        {
            get
            {
                global::System.DateTime? value = _FriStart3;
                OnGetFriStart3(ref value);
                return value;
            }
            set
            {
                if (_FriStart3 != value)
                {
                  OnFriStart3Changing(ref value);
                  ReportPropertyChanging("FriStart3");
                  _FriStart3 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FriStart3");
                  OnFriStart3Changed();
              }
            }
        }
        private global::System.DateTime? _FriStart3;
        partial void OnGetFriStart3(ref global::System.DateTime? value);
        partial void OnFriStart3Changing(ref global::System.DateTime? value);
        partial void OnFriStart3Changed();
    
        /// <summary>
        /// There are no comments for FriStart4 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? FriStart4
        {
            get
            {
                global::System.DateTime? value = _FriStart4;
                OnGetFriStart4(ref value);
                return value;
            }
            set
            {
                if (_FriStart4 != value)
                {
                  OnFriStart4Changing(ref value);
                  ReportPropertyChanging("FriStart4");
                  _FriStart4 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FriStart4");
                  OnFriStart4Changed();
              }
            }
        }
        private global::System.DateTime? _FriStart4;
        partial void OnGetFriStart4(ref global::System.DateTime? value);
        partial void OnFriStart4Changing(ref global::System.DateTime? value);
        partial void OnFriStart4Changed();
    
        /// <summary>
        /// There are no comments for FriStop1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? FriStop1
        {
            get
            {
                global::System.DateTime? value = _FriStop1;
                OnGetFriStop1(ref value);
                return value;
            }
            set
            {
                if (_FriStop1 != value)
                {
                  OnFriStop1Changing(ref value);
                  ReportPropertyChanging("FriStop1");
                  _FriStop1 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FriStop1");
                  OnFriStop1Changed();
              }
            }
        }
        private global::System.DateTime? _FriStop1;
        partial void OnGetFriStop1(ref global::System.DateTime? value);
        partial void OnFriStop1Changing(ref global::System.DateTime? value);
        partial void OnFriStop1Changed();
    
        /// <summary>
        /// There are no comments for FriStop2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? FriStop2
        {
            get
            {
                global::System.DateTime? value = _FriStop2;
                OnGetFriStop2(ref value);
                return value;
            }
            set
            {
                if (_FriStop2 != value)
                {
                  OnFriStop2Changing(ref value);
                  ReportPropertyChanging("FriStop2");
                  _FriStop2 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FriStop2");
                  OnFriStop2Changed();
              }
            }
        }
        private global::System.DateTime? _FriStop2;
        partial void OnGetFriStop2(ref global::System.DateTime? value);
        partial void OnFriStop2Changing(ref global::System.DateTime? value);
        partial void OnFriStop2Changed();
    
        /// <summary>
        /// There are no comments for FriStop3 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? FriStop3
        {
            get
            {
                global::System.DateTime? value = _FriStop3;
                OnGetFriStop3(ref value);
                return value;
            }
            set
            {
                if (_FriStop3 != value)
                {
                  OnFriStop3Changing(ref value);
                  ReportPropertyChanging("FriStop3");
                  _FriStop3 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FriStop3");
                  OnFriStop3Changed();
              }
            }
        }
        private global::System.DateTime? _FriStop3;
        partial void OnGetFriStop3(ref global::System.DateTime? value);
        partial void OnFriStop3Changing(ref global::System.DateTime? value);
        partial void OnFriStop3Changed();
    
        /// <summary>
        /// There are no comments for FriStop4 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? FriStop4
        {
            get
            {
                global::System.DateTime? value = _FriStop4;
                OnGetFriStop4(ref value);
                return value;
            }
            set
            {
                if (_FriStop4 != value)
                {
                  OnFriStop4Changing(ref value);
                  ReportPropertyChanging("FriStop4");
                  _FriStop4 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FriStop4");
                  OnFriStop4Changed();
              }
            }
        }
        private global::System.DateTime? _FriStop4;
        partial void OnGetFriStop4(ref global::System.DateTime? value);
        partial void OnFriStop4Changing(ref global::System.DateTime? value);
        partial void OnFriStop4Changed();
    
        /// <summary>
        /// There are no comments for MonStart1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? MonStart1
        {
            get
            {
                global::System.DateTime? value = _MonStart1;
                OnGetMonStart1(ref value);
                return value;
            }
            set
            {
                if (_MonStart1 != value)
                {
                  OnMonStart1Changing(ref value);
                  ReportPropertyChanging("MonStart1");
                  _MonStart1 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MonStart1");
                  OnMonStart1Changed();
              }
            }
        }
        private global::System.DateTime? _MonStart1;
        partial void OnGetMonStart1(ref global::System.DateTime? value);
        partial void OnMonStart1Changing(ref global::System.DateTime? value);
        partial void OnMonStart1Changed();
    
        /// <summary>
        /// There are no comments for MonStart2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? MonStart2
        {
            get
            {
                global::System.DateTime? value = _MonStart2;
                OnGetMonStart2(ref value);
                return value;
            }
            set
            {
                if (_MonStart2 != value)
                {
                  OnMonStart2Changing(ref value);
                  ReportPropertyChanging("MonStart2");
                  _MonStart2 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MonStart2");
                  OnMonStart2Changed();
              }
            }
        }
        private global::System.DateTime? _MonStart2;
        partial void OnGetMonStart2(ref global::System.DateTime? value);
        partial void OnMonStart2Changing(ref global::System.DateTime? value);
        partial void OnMonStart2Changed();
    
        /// <summary>
        /// There are no comments for MonStart3 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? MonStart3
        {
            get
            {
                global::System.DateTime? value = _MonStart3;
                OnGetMonStart3(ref value);
                return value;
            }
            set
            {
                if (_MonStart3 != value)
                {
                  OnMonStart3Changing(ref value);
                  ReportPropertyChanging("MonStart3");
                  _MonStart3 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MonStart3");
                  OnMonStart3Changed();
              }
            }
        }
        private global::System.DateTime? _MonStart3;
        partial void OnGetMonStart3(ref global::System.DateTime? value);
        partial void OnMonStart3Changing(ref global::System.DateTime? value);
        partial void OnMonStart3Changed();
    
        /// <summary>
        /// There are no comments for MonStart4 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? MonStart4
        {
            get
            {
                global::System.DateTime? value = _MonStart4;
                OnGetMonStart4(ref value);
                return value;
            }
            set
            {
                if (_MonStart4 != value)
                {
                  OnMonStart4Changing(ref value);
                  ReportPropertyChanging("MonStart4");
                  _MonStart4 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MonStart4");
                  OnMonStart4Changed();
              }
            }
        }
        private global::System.DateTime? _MonStart4;
        partial void OnGetMonStart4(ref global::System.DateTime? value);
        partial void OnMonStart4Changing(ref global::System.DateTime? value);
        partial void OnMonStart4Changed();
    
        /// <summary>
        /// There are no comments for MonStop1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? MonStop1
        {
            get
            {
                global::System.DateTime? value = _MonStop1;
                OnGetMonStop1(ref value);
                return value;
            }
            set
            {
                if (_MonStop1 != value)
                {
                  OnMonStop1Changing(ref value);
                  ReportPropertyChanging("MonStop1");
                  _MonStop1 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MonStop1");
                  OnMonStop1Changed();
              }
            }
        }
        private global::System.DateTime? _MonStop1;
        partial void OnGetMonStop1(ref global::System.DateTime? value);
        partial void OnMonStop1Changing(ref global::System.DateTime? value);
        partial void OnMonStop1Changed();
    
        /// <summary>
        /// There are no comments for MonStop2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? MonStop2
        {
            get
            {
                global::System.DateTime? value = _MonStop2;
                OnGetMonStop2(ref value);
                return value;
            }
            set
            {
                if (_MonStop2 != value)
                {
                  OnMonStop2Changing(ref value);
                  ReportPropertyChanging("MonStop2");
                  _MonStop2 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MonStop2");
                  OnMonStop2Changed();
              }
            }
        }
        private global::System.DateTime? _MonStop2;
        partial void OnGetMonStop2(ref global::System.DateTime? value);
        partial void OnMonStop2Changing(ref global::System.DateTime? value);
        partial void OnMonStop2Changed();
    
        /// <summary>
        /// There are no comments for MonStop3 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? MonStop3
        {
            get
            {
                global::System.DateTime? value = _MonStop3;
                OnGetMonStop3(ref value);
                return value;
            }
            set
            {
                if (_MonStop3 != value)
                {
                  OnMonStop3Changing(ref value);
                  ReportPropertyChanging("MonStop3");
                  _MonStop3 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MonStop3");
                  OnMonStop3Changed();
              }
            }
        }
        private global::System.DateTime? _MonStop3;
        partial void OnGetMonStop3(ref global::System.DateTime? value);
        partial void OnMonStop3Changing(ref global::System.DateTime? value);
        partial void OnMonStop3Changed();
    
        /// <summary>
        /// There are no comments for MonStop4 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? MonStop4
        {
            get
            {
                global::System.DateTime? value = _MonStop4;
                OnGetMonStop4(ref value);
                return value;
            }
            set
            {
                if (_MonStop4 != value)
                {
                  OnMonStop4Changing(ref value);
                  ReportPropertyChanging("MonStop4");
                  _MonStop4 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MonStop4");
                  OnMonStop4Changed();
              }
            }
        }
        private global::System.DateTime? _MonStop4;
        partial void OnGetMonStop4(ref global::System.DateTime? value);
        partial void OnMonStop4Changing(ref global::System.DateTime? value);
        partial void OnMonStop4Changed();
    
        /// <summary>
        /// There are no comments for SatStart1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? SatStart1
        {
            get
            {
                global::System.DateTime? value = _SatStart1;
                OnGetSatStart1(ref value);
                return value;
            }
            set
            {
                if (_SatStart1 != value)
                {
                  OnSatStart1Changing(ref value);
                  ReportPropertyChanging("SatStart1");
                  _SatStart1 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SatStart1");
                  OnSatStart1Changed();
              }
            }
        }
        private global::System.DateTime? _SatStart1;
        partial void OnGetSatStart1(ref global::System.DateTime? value);
        partial void OnSatStart1Changing(ref global::System.DateTime? value);
        partial void OnSatStart1Changed();
    
        /// <summary>
        /// There are no comments for SatStart2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? SatStart2
        {
            get
            {
                global::System.DateTime? value = _SatStart2;
                OnGetSatStart2(ref value);
                return value;
            }
            set
            {
                if (_SatStart2 != value)
                {
                  OnSatStart2Changing(ref value);
                  ReportPropertyChanging("SatStart2");
                  _SatStart2 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SatStart2");
                  OnSatStart2Changed();
              }
            }
        }
        private global::System.DateTime? _SatStart2;
        partial void OnGetSatStart2(ref global::System.DateTime? value);
        partial void OnSatStart2Changing(ref global::System.DateTime? value);
        partial void OnSatStart2Changed();
    
        /// <summary>
        /// There are no comments for SatStart3 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? SatStart3
        {
            get
            {
                global::System.DateTime? value = _SatStart3;
                OnGetSatStart3(ref value);
                return value;
            }
            set
            {
                if (_SatStart3 != value)
                {
                  OnSatStart3Changing(ref value);
                  ReportPropertyChanging("SatStart3");
                  _SatStart3 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SatStart3");
                  OnSatStart3Changed();
              }
            }
        }
        private global::System.DateTime? _SatStart3;
        partial void OnGetSatStart3(ref global::System.DateTime? value);
        partial void OnSatStart3Changing(ref global::System.DateTime? value);
        partial void OnSatStart3Changed();
    
        /// <summary>
        /// There are no comments for SatStart4 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? SatStart4
        {
            get
            {
                global::System.DateTime? value = _SatStart4;
                OnGetSatStart4(ref value);
                return value;
            }
            set
            {
                if (_SatStart4 != value)
                {
                  OnSatStart4Changing(ref value);
                  ReportPropertyChanging("SatStart4");
                  _SatStart4 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SatStart4");
                  OnSatStart4Changed();
              }
            }
        }
        private global::System.DateTime? _SatStart4;
        partial void OnGetSatStart4(ref global::System.DateTime? value);
        partial void OnSatStart4Changing(ref global::System.DateTime? value);
        partial void OnSatStart4Changed();
    
        /// <summary>
        /// There are no comments for SatStop1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? SatStop1
        {
            get
            {
                global::System.DateTime? value = _SatStop1;
                OnGetSatStop1(ref value);
                return value;
            }
            set
            {
                if (_SatStop1 != value)
                {
                  OnSatStop1Changing(ref value);
                  ReportPropertyChanging("SatStop1");
                  _SatStop1 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SatStop1");
                  OnSatStop1Changed();
              }
            }
        }
        private global::System.DateTime? _SatStop1;
        partial void OnGetSatStop1(ref global::System.DateTime? value);
        partial void OnSatStop1Changing(ref global::System.DateTime? value);
        partial void OnSatStop1Changed();
    
        /// <summary>
        /// There are no comments for SatStop2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? SatStop2
        {
            get
            {
                global::System.DateTime? value = _SatStop2;
                OnGetSatStop2(ref value);
                return value;
            }
            set
            {
                if (_SatStop2 != value)
                {
                  OnSatStop2Changing(ref value);
                  ReportPropertyChanging("SatStop2");
                  _SatStop2 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SatStop2");
                  OnSatStop2Changed();
              }
            }
        }
        private global::System.DateTime? _SatStop2;
        partial void OnGetSatStop2(ref global::System.DateTime? value);
        partial void OnSatStop2Changing(ref global::System.DateTime? value);
        partial void OnSatStop2Changed();
    
        /// <summary>
        /// There are no comments for SatStop3 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? SatStop3
        {
            get
            {
                global::System.DateTime? value = _SatStop3;
                OnGetSatStop3(ref value);
                return value;
            }
            set
            {
                if (_SatStop3 != value)
                {
                  OnSatStop3Changing(ref value);
                  ReportPropertyChanging("SatStop3");
                  _SatStop3 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SatStop3");
                  OnSatStop3Changed();
              }
            }
        }
        private global::System.DateTime? _SatStop3;
        partial void OnGetSatStop3(ref global::System.DateTime? value);
        partial void OnSatStop3Changing(ref global::System.DateTime? value);
        partial void OnSatStop3Changed();
    
        /// <summary>
        /// There are no comments for SatStop4 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? SatStop4
        {
            get
            {
                global::System.DateTime? value = _SatStop4;
                OnGetSatStop4(ref value);
                return value;
            }
            set
            {
                if (_SatStop4 != value)
                {
                  OnSatStop4Changing(ref value);
                  ReportPropertyChanging("SatStop4");
                  _SatStop4 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SatStop4");
                  OnSatStop4Changed();
              }
            }
        }
        private global::System.DateTime? _SatStop4;
        partial void OnGetSatStop4(ref global::System.DateTime? value);
        partial void OnSatStop4Changing(ref global::System.DateTime? value);
        partial void OnSatStop4Changed();
    
        /// <summary>
        /// There are no comments for SunStart1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? SunStart1
        {
            get
            {
                global::System.DateTime? value = _SunStart1;
                OnGetSunStart1(ref value);
                return value;
            }
            set
            {
                if (_SunStart1 != value)
                {
                  OnSunStart1Changing(ref value);
                  ReportPropertyChanging("SunStart1");
                  _SunStart1 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SunStart1");
                  OnSunStart1Changed();
              }
            }
        }
        private global::System.DateTime? _SunStart1;
        partial void OnGetSunStart1(ref global::System.DateTime? value);
        partial void OnSunStart1Changing(ref global::System.DateTime? value);
        partial void OnSunStart1Changed();
    
        /// <summary>
        /// There are no comments for SunStart2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? SunStart2
        {
            get
            {
                global::System.DateTime? value = _SunStart2;
                OnGetSunStart2(ref value);
                return value;
            }
            set
            {
                if (_SunStart2 != value)
                {
                  OnSunStart2Changing(ref value);
                  ReportPropertyChanging("SunStart2");
                  _SunStart2 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SunStart2");
                  OnSunStart2Changed();
              }
            }
        }
        private global::System.DateTime? _SunStart2;
        partial void OnGetSunStart2(ref global::System.DateTime? value);
        partial void OnSunStart2Changing(ref global::System.DateTime? value);
        partial void OnSunStart2Changed();
    
        /// <summary>
        /// There are no comments for SunStart3 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? SunStart3
        {
            get
            {
                global::System.DateTime? value = _SunStart3;
                OnGetSunStart3(ref value);
                return value;
            }
            set
            {
                if (_SunStart3 != value)
                {
                  OnSunStart3Changing(ref value);
                  ReportPropertyChanging("SunStart3");
                  _SunStart3 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SunStart3");
                  OnSunStart3Changed();
              }
            }
        }
        private global::System.DateTime? _SunStart3;
        partial void OnGetSunStart3(ref global::System.DateTime? value);
        partial void OnSunStart3Changing(ref global::System.DateTime? value);
        partial void OnSunStart3Changed();
    
        /// <summary>
        /// There are no comments for SunStart4 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? SunStart4
        {
            get
            {
                global::System.DateTime? value = _SunStart4;
                OnGetSunStart4(ref value);
                return value;
            }
            set
            {
                if (_SunStart4 != value)
                {
                  OnSunStart4Changing(ref value);
                  ReportPropertyChanging("SunStart4");
                  _SunStart4 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SunStart4");
                  OnSunStart4Changed();
              }
            }
        }
        private global::System.DateTime? _SunStart4;
        partial void OnGetSunStart4(ref global::System.DateTime? value);
        partial void OnSunStart4Changing(ref global::System.DateTime? value);
        partial void OnSunStart4Changed();
    
        /// <summary>
        /// There are no comments for SunStop1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? SunStop1
        {
            get
            {
                global::System.DateTime? value = _SunStop1;
                OnGetSunStop1(ref value);
                return value;
            }
            set
            {
                if (_SunStop1 != value)
                {
                  OnSunStop1Changing(ref value);
                  ReportPropertyChanging("SunStop1");
                  _SunStop1 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SunStop1");
                  OnSunStop1Changed();
              }
            }
        }
        private global::System.DateTime? _SunStop1;
        partial void OnGetSunStop1(ref global::System.DateTime? value);
        partial void OnSunStop1Changing(ref global::System.DateTime? value);
        partial void OnSunStop1Changed();
    
        /// <summary>
        /// There are no comments for SunStop2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? SunStop2
        {
            get
            {
                global::System.DateTime? value = _SunStop2;
                OnGetSunStop2(ref value);
                return value;
            }
            set
            {
                if (_SunStop2 != value)
                {
                  OnSunStop2Changing(ref value);
                  ReportPropertyChanging("SunStop2");
                  _SunStop2 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SunStop2");
                  OnSunStop2Changed();
              }
            }
        }
        private global::System.DateTime? _SunStop2;
        partial void OnGetSunStop2(ref global::System.DateTime? value);
        partial void OnSunStop2Changing(ref global::System.DateTime? value);
        partial void OnSunStop2Changed();
    
        /// <summary>
        /// There are no comments for SunStop3 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? SunStop3
        {
            get
            {
                global::System.DateTime? value = _SunStop3;
                OnGetSunStop3(ref value);
                return value;
            }
            set
            {
                if (_SunStop3 != value)
                {
                  OnSunStop3Changing(ref value);
                  ReportPropertyChanging("SunStop3");
                  _SunStop3 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SunStop3");
                  OnSunStop3Changed();
              }
            }
        }
        private global::System.DateTime? _SunStop3;
        partial void OnGetSunStop3(ref global::System.DateTime? value);
        partial void OnSunStop3Changing(ref global::System.DateTime? value);
        partial void OnSunStop3Changed();
    
        /// <summary>
        /// There are no comments for SunStop4 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? SunStop4
        {
            get
            {
                global::System.DateTime? value = _SunStop4;
                OnGetSunStop4(ref value);
                return value;
            }
            set
            {
                if (_SunStop4 != value)
                {
                  OnSunStop4Changing(ref value);
                  ReportPropertyChanging("SunStop4");
                  _SunStop4 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SunStop4");
                  OnSunStop4Changed();
              }
            }
        }
        private global::System.DateTime? _SunStop4;
        partial void OnGetSunStop4(ref global::System.DateTime? value);
        partial void OnSunStop4Changing(ref global::System.DateTime? value);
        partial void OnSunStop4Changed();
    
        /// <summary>
        /// There are no comments for ThuStart1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? ThuStart1
        {
            get
            {
                global::System.DateTime? value = _ThuStart1;
                OnGetThuStart1(ref value);
                return value;
            }
            set
            {
                if (_ThuStart1 != value)
                {
                  OnThuStart1Changing(ref value);
                  ReportPropertyChanging("ThuStart1");
                  _ThuStart1 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ThuStart1");
                  OnThuStart1Changed();
              }
            }
        }
        private global::System.DateTime? _ThuStart1;
        partial void OnGetThuStart1(ref global::System.DateTime? value);
        partial void OnThuStart1Changing(ref global::System.DateTime? value);
        partial void OnThuStart1Changed();
    
        /// <summary>
        /// There are no comments for ThuStart2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? ThuStart2
        {
            get
            {
                global::System.DateTime? value = _ThuStart2;
                OnGetThuStart2(ref value);
                return value;
            }
            set
            {
                if (_ThuStart2 != value)
                {
                  OnThuStart2Changing(ref value);
                  ReportPropertyChanging("ThuStart2");
                  _ThuStart2 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ThuStart2");
                  OnThuStart2Changed();
              }
            }
        }
        private global::System.DateTime? _ThuStart2;
        partial void OnGetThuStart2(ref global::System.DateTime? value);
        partial void OnThuStart2Changing(ref global::System.DateTime? value);
        partial void OnThuStart2Changed();
    
        /// <summary>
        /// There are no comments for ThuStart3 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? ThuStart3
        {
            get
            {
                global::System.DateTime? value = _ThuStart3;
                OnGetThuStart3(ref value);
                return value;
            }
            set
            {
                if (_ThuStart3 != value)
                {
                  OnThuStart3Changing(ref value);
                  ReportPropertyChanging("ThuStart3");
                  _ThuStart3 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ThuStart3");
                  OnThuStart3Changed();
              }
            }
        }
        private global::System.DateTime? _ThuStart3;
        partial void OnGetThuStart3(ref global::System.DateTime? value);
        partial void OnThuStart3Changing(ref global::System.DateTime? value);
        partial void OnThuStart3Changed();
    
        /// <summary>
        /// There are no comments for ThuStart4 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? ThuStart4
        {
            get
            {
                global::System.DateTime? value = _ThuStart4;
                OnGetThuStart4(ref value);
                return value;
            }
            set
            {
                if (_ThuStart4 != value)
                {
                  OnThuStart4Changing(ref value);
                  ReportPropertyChanging("ThuStart4");
                  _ThuStart4 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ThuStart4");
                  OnThuStart4Changed();
              }
            }
        }
        private global::System.DateTime? _ThuStart4;
        partial void OnGetThuStart4(ref global::System.DateTime? value);
        partial void OnThuStart4Changing(ref global::System.DateTime? value);
        partial void OnThuStart4Changed();
    
        /// <summary>
        /// There are no comments for ThuStop1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? ThuStop1
        {
            get
            {
                global::System.DateTime? value = _ThuStop1;
                OnGetThuStop1(ref value);
                return value;
            }
            set
            {
                if (_ThuStop1 != value)
                {
                  OnThuStop1Changing(ref value);
                  ReportPropertyChanging("ThuStop1");
                  _ThuStop1 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ThuStop1");
                  OnThuStop1Changed();
              }
            }
        }
        private global::System.DateTime? _ThuStop1;
        partial void OnGetThuStop1(ref global::System.DateTime? value);
        partial void OnThuStop1Changing(ref global::System.DateTime? value);
        partial void OnThuStop1Changed();
    
        /// <summary>
        /// There are no comments for ThuStop2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? ThuStop2
        {
            get
            {
                global::System.DateTime? value = _ThuStop2;
                OnGetThuStop2(ref value);
                return value;
            }
            set
            {
                if (_ThuStop2 != value)
                {
                  OnThuStop2Changing(ref value);
                  ReportPropertyChanging("ThuStop2");
                  _ThuStop2 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ThuStop2");
                  OnThuStop2Changed();
              }
            }
        }
        private global::System.DateTime? _ThuStop2;
        partial void OnGetThuStop2(ref global::System.DateTime? value);
        partial void OnThuStop2Changing(ref global::System.DateTime? value);
        partial void OnThuStop2Changed();
    
        /// <summary>
        /// There are no comments for ThuStop3 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? ThuStop3
        {
            get
            {
                global::System.DateTime? value = _ThuStop3;
                OnGetThuStop3(ref value);
                return value;
            }
            set
            {
                if (_ThuStop3 != value)
                {
                  OnThuStop3Changing(ref value);
                  ReportPropertyChanging("ThuStop3");
                  _ThuStop3 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ThuStop3");
                  OnThuStop3Changed();
              }
            }
        }
        private global::System.DateTime? _ThuStop3;
        partial void OnGetThuStop3(ref global::System.DateTime? value);
        partial void OnThuStop3Changing(ref global::System.DateTime? value);
        partial void OnThuStop3Changed();
    
        /// <summary>
        /// There are no comments for ThuStop4 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? ThuStop4
        {
            get
            {
                global::System.DateTime? value = _ThuStop4;
                OnGetThuStop4(ref value);
                return value;
            }
            set
            {
                if (_ThuStop4 != value)
                {
                  OnThuStop4Changing(ref value);
                  ReportPropertyChanging("ThuStop4");
                  _ThuStop4 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ThuStop4");
                  OnThuStop4Changed();
              }
            }
        }
        private global::System.DateTime? _ThuStop4;
        partial void OnGetThuStop4(ref global::System.DateTime? value);
        partial void OnThuStop4Changing(ref global::System.DateTime? value);
        partial void OnThuStop4Changed();
    
        /// <summary>
        /// There are no comments for TueStart1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? TueStart1
        {
            get
            {
                global::System.DateTime? value = _TueStart1;
                OnGetTueStart1(ref value);
                return value;
            }
            set
            {
                if (_TueStart1 != value)
                {
                  OnTueStart1Changing(ref value);
                  ReportPropertyChanging("TueStart1");
                  _TueStart1 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TueStart1");
                  OnTueStart1Changed();
              }
            }
        }
        private global::System.DateTime? _TueStart1;
        partial void OnGetTueStart1(ref global::System.DateTime? value);
        partial void OnTueStart1Changing(ref global::System.DateTime? value);
        partial void OnTueStart1Changed();
    
        /// <summary>
        /// There are no comments for TueStart2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? TueStart2
        {
            get
            {
                global::System.DateTime? value = _TueStart2;
                OnGetTueStart2(ref value);
                return value;
            }
            set
            {
                if (_TueStart2 != value)
                {
                  OnTueStart2Changing(ref value);
                  ReportPropertyChanging("TueStart2");
                  _TueStart2 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TueStart2");
                  OnTueStart2Changed();
              }
            }
        }
        private global::System.DateTime? _TueStart2;
        partial void OnGetTueStart2(ref global::System.DateTime? value);
        partial void OnTueStart2Changing(ref global::System.DateTime? value);
        partial void OnTueStart2Changed();
    
        /// <summary>
        /// There are no comments for TueStart3 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? TueStart3
        {
            get
            {
                global::System.DateTime? value = _TueStart3;
                OnGetTueStart3(ref value);
                return value;
            }
            set
            {
                if (_TueStart3 != value)
                {
                  OnTueStart3Changing(ref value);
                  ReportPropertyChanging("TueStart3");
                  _TueStart3 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TueStart3");
                  OnTueStart3Changed();
              }
            }
        }
        private global::System.DateTime? _TueStart3;
        partial void OnGetTueStart3(ref global::System.DateTime? value);
        partial void OnTueStart3Changing(ref global::System.DateTime? value);
        partial void OnTueStart3Changed();
    
        /// <summary>
        /// There are no comments for TueStart4 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? TueStart4
        {
            get
            {
                global::System.DateTime? value = _TueStart4;
                OnGetTueStart4(ref value);
                return value;
            }
            set
            {
                if (_TueStart4 != value)
                {
                  OnTueStart4Changing(ref value);
                  ReportPropertyChanging("TueStart4");
                  _TueStart4 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TueStart4");
                  OnTueStart4Changed();
              }
            }
        }
        private global::System.DateTime? _TueStart4;
        partial void OnGetTueStart4(ref global::System.DateTime? value);
        partial void OnTueStart4Changing(ref global::System.DateTime? value);
        partial void OnTueStart4Changed();
    
        /// <summary>
        /// There are no comments for TueStop1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? TueStop1
        {
            get
            {
                global::System.DateTime? value = _TueStop1;
                OnGetTueStop1(ref value);
                return value;
            }
            set
            {
                if (_TueStop1 != value)
                {
                  OnTueStop1Changing(ref value);
                  ReportPropertyChanging("TueStop1");
                  _TueStop1 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TueStop1");
                  OnTueStop1Changed();
              }
            }
        }
        private global::System.DateTime? _TueStop1;
        partial void OnGetTueStop1(ref global::System.DateTime? value);
        partial void OnTueStop1Changing(ref global::System.DateTime? value);
        partial void OnTueStop1Changed();
    
        /// <summary>
        /// There are no comments for TueStop2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? TueStop2
        {
            get
            {
                global::System.DateTime? value = _TueStop2;
                OnGetTueStop2(ref value);
                return value;
            }
            set
            {
                if (_TueStop2 != value)
                {
                  OnTueStop2Changing(ref value);
                  ReportPropertyChanging("TueStop2");
                  _TueStop2 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TueStop2");
                  OnTueStop2Changed();
              }
            }
        }
        private global::System.DateTime? _TueStop2;
        partial void OnGetTueStop2(ref global::System.DateTime? value);
        partial void OnTueStop2Changing(ref global::System.DateTime? value);
        partial void OnTueStop2Changed();
    
        /// <summary>
        /// There are no comments for TueStop3 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? TueStop3
        {
            get
            {
                global::System.DateTime? value = _TueStop3;
                OnGetTueStop3(ref value);
                return value;
            }
            set
            {
                if (_TueStop3 != value)
                {
                  OnTueStop3Changing(ref value);
                  ReportPropertyChanging("TueStop3");
                  _TueStop3 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TueStop3");
                  OnTueStop3Changed();
              }
            }
        }
        private global::System.DateTime? _TueStop3;
        partial void OnGetTueStop3(ref global::System.DateTime? value);
        partial void OnTueStop3Changing(ref global::System.DateTime? value);
        partial void OnTueStop3Changed();
    
        /// <summary>
        /// There are no comments for TueStop4 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? TueStop4
        {
            get
            {
                global::System.DateTime? value = _TueStop4;
                OnGetTueStop4(ref value);
                return value;
            }
            set
            {
                if (_TueStop4 != value)
                {
                  OnTueStop4Changing(ref value);
                  ReportPropertyChanging("TueStop4");
                  _TueStop4 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TueStop4");
                  OnTueStop4Changed();
              }
            }
        }
        private global::System.DateTime? _TueStop4;
        partial void OnGetTueStop4(ref global::System.DateTime? value);
        partial void OnTueStop4Changing(ref global::System.DateTime? value);
        partial void OnTueStop4Changed();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();
    
        /// <summary>
        /// There are no comments for UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? UpdateDate
        {
            get
            {
                global::System.DateTime? value = _UpdateDate;
                OnGetUpdateDate(ref value);
                return value;
            }
            set
            {
                if (_UpdateDate != value)
                {
                  OnUpdateDateChanging(ref value);
                  ReportPropertyChanging("UpdateDate");
                  _UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateDate");
                  OnUpdateDateChanged();
              }
            }
        }
        private global::System.DateTime? _UpdateDate;
        partial void OnGetUpdateDate(ref global::System.DateTime? value);
        partial void OnUpdateDateChanging(ref global::System.DateTime? value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// There are no comments for UpdateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UpdateUserID
        {
            get
            {
                string value = _UpdateUserID;
                OnGetUpdateUserID(ref value);
                return value;
            }
            set
            {
                if (_UpdateUserID != value)
                {
                  OnUpdateUserIDChanging(ref value);
                  ReportPropertyChanging("UpdateUserID");
                  _UpdateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UpdateUserID");
                  OnUpdateUserIDChanged();
              }
            }
        }
        private string _UpdateUserID;
        partial void OnGetUpdateUserID(ref string value);
        partial void OnUpdateUserIDChanging(ref string value);
        partial void OnUpdateUserIDChanged();
    
        /// <summary>
        /// There are no comments for WedStart1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? WedStart1
        {
            get
            {
                global::System.DateTime? value = _WedStart1;
                OnGetWedStart1(ref value);
                return value;
            }
            set
            {
                if (_WedStart1 != value)
                {
                  OnWedStart1Changing(ref value);
                  ReportPropertyChanging("WedStart1");
                  _WedStart1 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WedStart1");
                  OnWedStart1Changed();
              }
            }
        }
        private global::System.DateTime? _WedStart1;
        partial void OnGetWedStart1(ref global::System.DateTime? value);
        partial void OnWedStart1Changing(ref global::System.DateTime? value);
        partial void OnWedStart1Changed();
    
        /// <summary>
        /// There are no comments for WedStart2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? WedStart2
        {
            get
            {
                global::System.DateTime? value = _WedStart2;
                OnGetWedStart2(ref value);
                return value;
            }
            set
            {
                if (_WedStart2 != value)
                {
                  OnWedStart2Changing(ref value);
                  ReportPropertyChanging("WedStart2");
                  _WedStart2 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WedStart2");
                  OnWedStart2Changed();
              }
            }
        }
        private global::System.DateTime? _WedStart2;
        partial void OnGetWedStart2(ref global::System.DateTime? value);
        partial void OnWedStart2Changing(ref global::System.DateTime? value);
        partial void OnWedStart2Changed();
    
        /// <summary>
        /// There are no comments for WedStart3 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? WedStart3
        {
            get
            {
                global::System.DateTime? value = _WedStart3;
                OnGetWedStart3(ref value);
                return value;
            }
            set
            {
                if (_WedStart3 != value)
                {
                  OnWedStart3Changing(ref value);
                  ReportPropertyChanging("WedStart3");
                  _WedStart3 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WedStart3");
                  OnWedStart3Changed();
              }
            }
        }
        private global::System.DateTime? _WedStart3;
        partial void OnGetWedStart3(ref global::System.DateTime? value);
        partial void OnWedStart3Changing(ref global::System.DateTime? value);
        partial void OnWedStart3Changed();
    
        /// <summary>
        /// There are no comments for WedStart4 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? WedStart4
        {
            get
            {
                global::System.DateTime? value = _WedStart4;
                OnGetWedStart4(ref value);
                return value;
            }
            set
            {
                if (_WedStart4 != value)
                {
                  OnWedStart4Changing(ref value);
                  ReportPropertyChanging("WedStart4");
                  _WedStart4 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WedStart4");
                  OnWedStart4Changed();
              }
            }
        }
        private global::System.DateTime? _WedStart4;
        partial void OnGetWedStart4(ref global::System.DateTime? value);
        partial void OnWedStart4Changing(ref global::System.DateTime? value);
        partial void OnWedStart4Changed();
    
        /// <summary>
        /// There are no comments for WedStop1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? WedStop1
        {
            get
            {
                global::System.DateTime? value = _WedStop1;
                OnGetWedStop1(ref value);
                return value;
            }
            set
            {
                if (_WedStop1 != value)
                {
                  OnWedStop1Changing(ref value);
                  ReportPropertyChanging("WedStop1");
                  _WedStop1 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WedStop1");
                  OnWedStop1Changed();
              }
            }
        }
        private global::System.DateTime? _WedStop1;
        partial void OnGetWedStop1(ref global::System.DateTime? value);
        partial void OnWedStop1Changing(ref global::System.DateTime? value);
        partial void OnWedStop1Changed();
    
        /// <summary>
        /// There are no comments for WedStop2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? WedStop2
        {
            get
            {
                global::System.DateTime? value = _WedStop2;
                OnGetWedStop2(ref value);
                return value;
            }
            set
            {
                if (_WedStop2 != value)
                {
                  OnWedStop2Changing(ref value);
                  ReportPropertyChanging("WedStop2");
                  _WedStop2 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WedStop2");
                  OnWedStop2Changed();
              }
            }
        }
        private global::System.DateTime? _WedStop2;
        partial void OnGetWedStop2(ref global::System.DateTime? value);
        partial void OnWedStop2Changing(ref global::System.DateTime? value);
        partial void OnWedStop2Changed();
    
        /// <summary>
        /// There are no comments for WedStop3 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? WedStop3
        {
            get
            {
                global::System.DateTime? value = _WedStop3;
                OnGetWedStop3(ref value);
                return value;
            }
            set
            {
                if (_WedStop3 != value)
                {
                  OnWedStop3Changing(ref value);
                  ReportPropertyChanging("WedStop3");
                  _WedStop3 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WedStop3");
                  OnWedStop3Changed();
              }
            }
        }
        private global::System.DateTime? _WedStop3;
        partial void OnGetWedStop3(ref global::System.DateTime? value);
        partial void OnWedStop3Changing(ref global::System.DateTime? value);
        partial void OnWedStop3Changed();
    
        /// <summary>
        /// There are no comments for WedStop4 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? WedStop4
        {
            get
            {
                global::System.DateTime? value = _WedStop4;
                OnGetWedStop4(ref value);
                return value;
            }
            set
            {
                if (_WedStop4 != value)
                {
                  OnWedStop4Changing(ref value);
                  ReportPropertyChanging("WedStop4");
                  _WedStop4 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WedStop4");
                  OnWedStop4Changed();
              }
            }
        }
        private global::System.DateTime? _WedStop4;
        partial void OnGetWedStop4(ref global::System.DateTime? value);
        partial void OnWedStop4Changing(ref global::System.DateTime? value);
        partial void OnWedStop4Changed();
    
        /// <summary>
        /// There are no comments for WorkCenterDesc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string WorkCenterDesc
        {
            get
            {
                string value = _WorkCenterDesc;
                OnGetWorkCenterDesc(ref value);
                return value;
            }
            set
            {
                if (_WorkCenterDesc != value)
                {
                  OnWorkCenterDescChanging(ref value);
                  ReportPropertyChanging("WorkCenterDesc");
                  _WorkCenterDesc = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("WorkCenterDesc");
                  OnWorkCenterDescChanged();
              }
            }
        }
        private string _WorkCenterDesc;
        partial void OnGetWorkCenterDesc(ref string value);
        partial void OnWorkCenterDescChanging(ref string value);
        partial void OnWorkCenterDescChanged();
    
        /// <summary>
        /// There are no comments for WorkCenterID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string WorkCenterID
        {
            get
            {
                string value = _WorkCenterID;
                OnGetWorkCenterID(ref value);
                return value;
            }
            set
            {
                if (_WorkCenterID != value)
                {
                  OnWorkCenterIDChanging(ref value);
                  ReportPropertyChanging("WorkCenterID");
                  _WorkCenterID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("WorkCenterID");
                  OnWorkCenterIDChanged();
              }
            }
        }
        private string _WorkCenterID;
        partial void OnGetWorkCenterID(ref string value);
        partial void OnWorkCenterIDChanging(ref string value);
        partial void OnWorkCenterIDChanged();
    
        /// <summary>
        /// There are no comments for WrkCntrCapacity in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short WrkCntrCapacity
        {
            get
            {
                short value = _WrkCntrCapacity;
                OnGetWrkCntrCapacity(ref value);
                return value;
            }
            set
            {
                if (_WrkCntrCapacity != value)
                {
                  OnWrkCntrCapacityChanging(ref value);
                  ReportPropertyChanging("WrkCntrCapacity");
                  _WrkCntrCapacity = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WrkCntrCapacity");
                  OnWrkCntrCapacityChanged();
              }
            }
        }
        private short _WrkCntrCapacity = 0;
        partial void OnGetWrkCntrCapacity(ref short value);
        partial void OnWrkCntrCapacityChanging(ref short value);
        partial void OnWrkCntrCapacityChanged();
    
        /// <summary>
        /// There are no comments for WrkCntrCrewRate0 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal WrkCntrCrewRate0
        {
            get
            {
                decimal value = _WrkCntrCrewRate0;
                OnGetWrkCntrCrewRate0(ref value);
                return value;
            }
            set
            {
                if (_WrkCntrCrewRate0 != value)
                {
                  OnWrkCntrCrewRate0Changing(ref value);
                  ReportPropertyChanging("WrkCntrCrewRate0");
                  _WrkCntrCrewRate0 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WrkCntrCrewRate0");
                  OnWrkCntrCrewRate0Changed();
              }
            }
        }
        private decimal _WrkCntrCrewRate0 = 0m;
        partial void OnGetWrkCntrCrewRate0(ref decimal value);
        partial void OnWrkCntrCrewRate0Changing(ref decimal value);
        partial void OnWrkCntrCrewRate0Changed();
    
        /// <summary>
        /// There are no comments for WrkCntrCrewRate1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal WrkCntrCrewRate1
        {
            get
            {
                decimal value = _WrkCntrCrewRate1;
                OnGetWrkCntrCrewRate1(ref value);
                return value;
            }
            set
            {
                if (_WrkCntrCrewRate1 != value)
                {
                  OnWrkCntrCrewRate1Changing(ref value);
                  ReportPropertyChanging("WrkCntrCrewRate1");
                  _WrkCntrCrewRate1 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WrkCntrCrewRate1");
                  OnWrkCntrCrewRate1Changed();
              }
            }
        }
        private decimal _WrkCntrCrewRate1 = 0m;
        partial void OnGetWrkCntrCrewRate1(ref decimal value);
        partial void OnWrkCntrCrewRate1Changing(ref decimal value);
        partial void OnWrkCntrCrewRate1Changed();
    
        /// <summary>
        /// There are no comments for WrkCntrCrewRate2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal WrkCntrCrewRate2
        {
            get
            {
                decimal value = _WrkCntrCrewRate2;
                OnGetWrkCntrCrewRate2(ref value);
                return value;
            }
            set
            {
                if (_WrkCntrCrewRate2 != value)
                {
                  OnWrkCntrCrewRate2Changing(ref value);
                  ReportPropertyChanging("WrkCntrCrewRate2");
                  _WrkCntrCrewRate2 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WrkCntrCrewRate2");
                  OnWrkCntrCrewRate2Changed();
              }
            }
        }
        private decimal _WrkCntrCrewRate2 = 0m;
        partial void OnGetWrkCntrCrewRate2(ref decimal value);
        partial void OnWrkCntrCrewRate2Changing(ref decimal value);
        partial void OnWrkCntrCrewRate2Changed();
    
        /// <summary>
        /// There are no comments for WrkCntrCrewRate3 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal WrkCntrCrewRate3
        {
            get
            {
                decimal value = _WrkCntrCrewRate3;
                OnGetWrkCntrCrewRate3(ref value);
                return value;
            }
            set
            {
                if (_WrkCntrCrewRate3 != value)
                {
                  OnWrkCntrCrewRate3Changing(ref value);
                  ReportPropertyChanging("WrkCntrCrewRate3");
                  _WrkCntrCrewRate3 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WrkCntrCrewRate3");
                  OnWrkCntrCrewRate3Changed();
              }
            }
        }
        private decimal _WrkCntrCrewRate3 = 0m;
        partial void OnGetWrkCntrCrewRate3(ref decimal value);
        partial void OnWrkCntrCrewRate3Changing(ref decimal value);
        partial void OnWrkCntrCrewRate3Changed();
    
        /// <summary>
        /// There are no comments for WrkCntrCrewRate4 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal WrkCntrCrewRate4
        {
            get
            {
                decimal value = _WrkCntrCrewRate4;
                OnGetWrkCntrCrewRate4(ref value);
                return value;
            }
            set
            {
                if (_WrkCntrCrewRate4 != value)
                {
                  OnWrkCntrCrewRate4Changing(ref value);
                  ReportPropertyChanging("WrkCntrCrewRate4");
                  _WrkCntrCrewRate4 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WrkCntrCrewRate4");
                  OnWrkCntrCrewRate4Changed();
              }
            }
        }
        private decimal _WrkCntrCrewRate4 = 0m;
        partial void OnGetWrkCntrCrewRate4(ref decimal value);
        partial void OnWrkCntrCrewRate4Changing(ref decimal value);
        partial void OnWrkCntrCrewRate4Changed();
    
        /// <summary>
        /// There are no comments for WrkCntrCrewRate5 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal WrkCntrCrewRate5
        {
            get
            {
                decimal value = _WrkCntrCrewRate5;
                OnGetWrkCntrCrewRate5(ref value);
                return value;
            }
            set
            {
                if (_WrkCntrCrewRate5 != value)
                {
                  OnWrkCntrCrewRate5Changing(ref value);
                  ReportPropertyChanging("WrkCntrCrewRate5");
                  _WrkCntrCrewRate5 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WrkCntrCrewRate5");
                  OnWrkCntrCrewRate5Changed();
              }
            }
        }
        private decimal _WrkCntrCrewRate5 = 0m;
        partial void OnGetWrkCntrCrewRate5(ref decimal value);
        partial void OnWrkCntrCrewRate5Changing(ref decimal value);
        partial void OnWrkCntrCrewRate5Changed();
    
        /// <summary>
        /// There are no comments for WrkCntrCrewRate6 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal WrkCntrCrewRate6
        {
            get
            {
                decimal value = _WrkCntrCrewRate6;
                OnGetWrkCntrCrewRate6(ref value);
                return value;
            }
            set
            {
                if (_WrkCntrCrewRate6 != value)
                {
                  OnWrkCntrCrewRate6Changing(ref value);
                  ReportPropertyChanging("WrkCntrCrewRate6");
                  _WrkCntrCrewRate6 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WrkCntrCrewRate6");
                  OnWrkCntrCrewRate6Changed();
              }
            }
        }
        private decimal _WrkCntrCrewRate6 = 0m;
        partial void OnGetWrkCntrCrewRate6(ref decimal value);
        partial void OnWrkCntrCrewRate6Changing(ref decimal value);
        partial void OnWrkCntrCrewRate6Changed();
    
        /// <summary>
        /// There are no comments for WrkCntrCrewRate7 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal WrkCntrCrewRate7
        {
            get
            {
                decimal value = _WrkCntrCrewRate7;
                OnGetWrkCntrCrewRate7(ref value);
                return value;
            }
            set
            {
                if (_WrkCntrCrewRate7 != value)
                {
                  OnWrkCntrCrewRate7Changing(ref value);
                  ReportPropertyChanging("WrkCntrCrewRate7");
                  _WrkCntrCrewRate7 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WrkCntrCrewRate7");
                  OnWrkCntrCrewRate7Changed();
              }
            }
        }
        private decimal _WrkCntrCrewRate7 = 0m;
        partial void OnGetWrkCntrCrewRate7(ref decimal value);
        partial void OnWrkCntrCrewRate7Changing(ref decimal value);
        partial void OnWrkCntrCrewRate7Changed();
    
        /// <summary>
        /// There are no comments for WrkCntrCrewRate8 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal WrkCntrCrewRate8
        {
            get
            {
                decimal value = _WrkCntrCrewRate8;
                OnGetWrkCntrCrewRate8(ref value);
                return value;
            }
            set
            {
                if (_WrkCntrCrewRate8 != value)
                {
                  OnWrkCntrCrewRate8Changing(ref value);
                  ReportPropertyChanging("WrkCntrCrewRate8");
                  _WrkCntrCrewRate8 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WrkCntrCrewRate8");
                  OnWrkCntrCrewRate8Changed();
              }
            }
        }
        private decimal _WrkCntrCrewRate8 = 0m;
        partial void OnGetWrkCntrCrewRate8(ref decimal value);
        partial void OnWrkCntrCrewRate8Changing(ref decimal value);
        partial void OnWrkCntrCrewRate8Changed();
    
        /// <summary>
        /// There are no comments for WrkCntrCrewRate9 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal WrkCntrCrewRate9
        {
            get
            {
                decimal value = _WrkCntrCrewRate9;
                OnGetWrkCntrCrewRate9(ref value);
                return value;
            }
            set
            {
                if (_WrkCntrCrewRate9 != value)
                {
                  OnWrkCntrCrewRate9Changing(ref value);
                  ReportPropertyChanging("WrkCntrCrewRate9");
                  _WrkCntrCrewRate9 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WrkCntrCrewRate9");
                  OnWrkCntrCrewRate9Changed();
              }
            }
        }
        private decimal _WrkCntrCrewRate9 = 0m;
        partial void OnGetWrkCntrCrewRate9(ref decimal value);
        partial void OnWrkCntrCrewRate9Changing(ref decimal value);
        partial void OnWrkCntrCrewRate9Changed();
    
        /// <summary>
        /// There are no comments for WrkCntrEstRunRate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal WrkCntrEstRunRate
        {
            get
            {
                decimal value = _WrkCntrEstRunRate;
                OnGetWrkCntrEstRunRate(ref value);
                return value;
            }
            set
            {
                if (_WrkCntrEstRunRate != value)
                {
                  OnWrkCntrEstRunRateChanging(ref value);
                  ReportPropertyChanging("WrkCntrEstRunRate");
                  _WrkCntrEstRunRate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WrkCntrEstRunRate");
                  OnWrkCntrEstRunRateChanged();
              }
            }
        }
        private decimal _WrkCntrEstRunRate = 0m;
        partial void OnGetWrkCntrEstRunRate(ref decimal value);
        partial void OnWrkCntrEstRunRateChanging(ref decimal value);
        partial void OnWrkCntrEstRunRateChanged();
    
        /// <summary>
        /// There are no comments for WrkCntrEstSetupRate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal WrkCntrEstSetupRate
        {
            get
            {
                decimal value = _WrkCntrEstSetupRate;
                OnGetWrkCntrEstSetupRate(ref value);
                return value;
            }
            set
            {
                if (_WrkCntrEstSetupRate != value)
                {
                  OnWrkCntrEstSetupRateChanging(ref value);
                  ReportPropertyChanging("WrkCntrEstSetupRate");
                  _WrkCntrEstSetupRate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WrkCntrEstSetupRate");
                  OnWrkCntrEstSetupRateChanged();
              }
            }
        }
        private decimal _WrkCntrEstSetupRate = 0m;
        partial void OnGetWrkCntrEstSetupRate(ref decimal value);
        partial void OnWrkCntrEstSetupRateChanging(ref decimal value);
        partial void OnWrkCntrEstSetupRateChanged();
    
        /// <summary>
        /// There are no comments for WrkCntrFixedRunRate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal WrkCntrFixedRunRate
        {
            get
            {
                decimal value = _WrkCntrFixedRunRate;
                OnGetWrkCntrFixedRunRate(ref value);
                return value;
            }
            set
            {
                if (_WrkCntrFixedRunRate != value)
                {
                  OnWrkCntrFixedRunRateChanging(ref value);
                  ReportPropertyChanging("WrkCntrFixedRunRate");
                  _WrkCntrFixedRunRate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WrkCntrFixedRunRate");
                  OnWrkCntrFixedRunRateChanged();
              }
            }
        }
        private decimal _WrkCntrFixedRunRate = 0m;
        partial void OnGetWrkCntrFixedRunRate(ref decimal value);
        partial void OnWrkCntrFixedRunRateChanging(ref decimal value);
        partial void OnWrkCntrFixedRunRateChanged();
    
        /// <summary>
        /// There are no comments for WrkCntrFixedSetupRate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal WrkCntrFixedSetupRate
        {
            get
            {
                decimal value = _WrkCntrFixedSetupRate;
                OnGetWrkCntrFixedSetupRate(ref value);
                return value;
            }
            set
            {
                if (_WrkCntrFixedSetupRate != value)
                {
                  OnWrkCntrFixedSetupRateChanging(ref value);
                  ReportPropertyChanging("WrkCntrFixedSetupRate");
                  _WrkCntrFixedSetupRate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WrkCntrFixedSetupRate");
                  OnWrkCntrFixedSetupRateChanged();
              }
            }
        }
        private decimal _WrkCntrFixedSetupRate = 0m;
        partial void OnGetWrkCntrFixedSetupRate(ref decimal value);
        partial void OnWrkCntrFixedSetupRateChanging(ref decimal value);
        partial void OnWrkCntrFixedSetupRateChanged();
    
        /// <summary>
        /// There are no comments for WrkCntrPcHrHrPc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string WrkCntrPcHrHrPc
        {
            get
            {
                string value = _WrkCntrPcHrHrPc;
                OnGetWrkCntrPcHrHrPc(ref value);
                return value;
            }
            set
            {
                if (_WrkCntrPcHrHrPc != value)
                {
                  OnWrkCntrPcHrHrPcChanging(ref value);
                  ReportPropertyChanging("WrkCntrPcHrHrPc");
                  _WrkCntrPcHrHrPc = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("WrkCntrPcHrHrPc");
                  OnWrkCntrPcHrHrPcChanged();
              }
            }
        }
        private string _WrkCntrPcHrHrPc;
        partial void OnGetWrkCntrPcHrHrPc(ref string value);
        partial void OnWrkCntrPcHrHrPcChanging(ref string value);
        partial void OnWrkCntrPcHrHrPcChanged();
    
        /// <summary>
        /// There are no comments for WrkCntrStdEffPercentage in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal WrkCntrStdEffPercentage
        {
            get
            {
                decimal value = _WrkCntrStdEffPercentage;
                OnGetWrkCntrStdEffPercentage(ref value);
                return value;
            }
            set
            {
                if (_WrkCntrStdEffPercentage != value)
                {
                  OnWrkCntrStdEffPercentageChanging(ref value);
                  ReportPropertyChanging("WrkCntrStdEffPercentage");
                  _WrkCntrStdEffPercentage = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WrkCntrStdEffPercentage");
                  OnWrkCntrStdEffPercentageChanged();
              }
            }
        }
        private decimal _WrkCntrStdEffPercentage = 0m;
        partial void OnGetWrkCntrStdEffPercentage(ref decimal value);
        partial void OnWrkCntrStdEffPercentageChanging(ref decimal value);
        partial void OnWrkCntrStdEffPercentageChanged();
    
        /// <summary>
        /// There are no comments for WrkCntrStdMoveHrs in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal WrkCntrStdMoveHrs
        {
            get
            {
                decimal value = _WrkCntrStdMoveHrs;
                OnGetWrkCntrStdMoveHrs(ref value);
                return value;
            }
            set
            {
                if (_WrkCntrStdMoveHrs != value)
                {
                  OnWrkCntrStdMoveHrsChanging(ref value);
                  ReportPropertyChanging("WrkCntrStdMoveHrs");
                  _WrkCntrStdMoveHrs = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WrkCntrStdMoveHrs");
                  OnWrkCntrStdMoveHrsChanged();
              }
            }
        }
        private decimal _WrkCntrStdMoveHrs = 0m;
        partial void OnGetWrkCntrStdMoveHrs(ref decimal value);
        partial void OnWrkCntrStdMoveHrsChanging(ref decimal value);
        partial void OnWrkCntrStdMoveHrsChanged();
    
        /// <summary>
        /// There are no comments for WrkCntrStdOprFactor in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal WrkCntrStdOprFactor
        {
            get
            {
                decimal value = _WrkCntrStdOprFactor;
                OnGetWrkCntrStdOprFactor(ref value);
                return value;
            }
            set
            {
                if (_WrkCntrStdOprFactor != value)
                {
                  OnWrkCntrStdOprFactorChanging(ref value);
                  ReportPropertyChanging("WrkCntrStdOprFactor");
                  _WrkCntrStdOprFactor = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WrkCntrStdOprFactor");
                  OnWrkCntrStdOprFactorChanged();
              }
            }
        }
        private decimal _WrkCntrStdOprFactor = 0m;
        partial void OnGetWrkCntrStdOprFactor(ref decimal value);
        partial void OnWrkCntrStdOprFactorChanging(ref decimal value);
        partial void OnWrkCntrStdOprFactorChanged();
    
        /// <summary>
        /// There are no comments for WrkCntrStdPcsB4Reset in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal WrkCntrStdPcsB4Reset
        {
            get
            {
                decimal value = _WrkCntrStdPcsB4Reset;
                OnGetWrkCntrStdPcsB4Reset(ref value);
                return value;
            }
            set
            {
                if (_WrkCntrStdPcsB4Reset != value)
                {
                  OnWrkCntrStdPcsB4ResetChanging(ref value);
                  ReportPropertyChanging("WrkCntrStdPcsB4Reset");
                  _WrkCntrStdPcsB4Reset = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WrkCntrStdPcsB4Reset");
                  OnWrkCntrStdPcsB4ResetChanged();
              }
            }
        }
        private decimal _WrkCntrStdPcsB4Reset = 0m;
        partial void OnGetWrkCntrStdPcsB4Reset(ref decimal value);
        partial void OnWrkCntrStdPcsB4ResetChanging(ref decimal value);
        partial void OnWrkCntrStdPcsB4ResetChanged();
    
        /// <summary>
        /// There are no comments for WrkCntrStdPcsHrs in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal WrkCntrStdPcsHrs
        {
            get
            {
                decimal value = _WrkCntrStdPcsHrs;
                OnGetWrkCntrStdPcsHrs(ref value);
                return value;
            }
            set
            {
                if (_WrkCntrStdPcsHrs != value)
                {
                  OnWrkCntrStdPcsHrsChanging(ref value);
                  ReportPropertyChanging("WrkCntrStdPcsHrs");
                  _WrkCntrStdPcsHrs = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WrkCntrStdPcsHrs");
                  OnWrkCntrStdPcsHrsChanged();
              }
            }
        }
        private decimal _WrkCntrStdPcsHrs = 0m;
        partial void OnGetWrkCntrStdPcsHrs(ref decimal value);
        partial void OnWrkCntrStdPcsHrsChanging(ref decimal value);
        partial void OnWrkCntrStdPcsHrsChanged();
    
        /// <summary>
        /// There are no comments for WrkCntrStdResetHrs in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal WrkCntrStdResetHrs
        {
            get
            {
                decimal value = _WrkCntrStdResetHrs;
                OnGetWrkCntrStdResetHrs(ref value);
                return value;
            }
            set
            {
                if (_WrkCntrStdResetHrs != value)
                {
                  OnWrkCntrStdResetHrsChanging(ref value);
                  ReportPropertyChanging("WrkCntrStdResetHrs");
                  _WrkCntrStdResetHrs = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WrkCntrStdResetHrs");
                  OnWrkCntrStdResetHrsChanged();
              }
            }
        }
        private decimal _WrkCntrStdResetHrs = 0m;
        partial void OnGetWrkCntrStdResetHrs(ref decimal value);
        partial void OnWrkCntrStdResetHrsChanging(ref decimal value);
        partial void OnWrkCntrStdResetHrsChanged();
    
        /// <summary>
        /// There are no comments for WrkCntrStdRunLaborRate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal WrkCntrStdRunLaborRate
        {
            get
            {
                decimal value = _WrkCntrStdRunLaborRate;
                OnGetWrkCntrStdRunLaborRate(ref value);
                return value;
            }
            set
            {
                if (_WrkCntrStdRunLaborRate != value)
                {
                  OnWrkCntrStdRunLaborRateChanging(ref value);
                  ReportPropertyChanging("WrkCntrStdRunLaborRate");
                  _WrkCntrStdRunLaborRate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WrkCntrStdRunLaborRate");
                  OnWrkCntrStdRunLaborRateChanged();
              }
            }
        }
        private decimal _WrkCntrStdRunLaborRate = 0m;
        partial void OnGetWrkCntrStdRunLaborRate(ref decimal value);
        partial void OnWrkCntrStdRunLaborRateChanging(ref decimal value);
        partial void OnWrkCntrStdRunLaborRateChanged();
    
        /// <summary>
        /// There are no comments for WrkCntrStdScrapPct in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal WrkCntrStdScrapPct
        {
            get
            {
                decimal value = _WrkCntrStdScrapPct;
                OnGetWrkCntrStdScrapPct(ref value);
                return value;
            }
            set
            {
                if (_WrkCntrStdScrapPct != value)
                {
                  OnWrkCntrStdScrapPctChanging(ref value);
                  ReportPropertyChanging("WrkCntrStdScrapPct");
                  _WrkCntrStdScrapPct = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WrkCntrStdScrapPct");
                  OnWrkCntrStdScrapPctChanged();
              }
            }
        }
        private decimal _WrkCntrStdScrapPct = 0m;
        partial void OnGetWrkCntrStdScrapPct(ref decimal value);
        partial void OnWrkCntrStdScrapPctChanging(ref decimal value);
        partial void OnWrkCntrStdScrapPctChanged();
    
        /// <summary>
        /// There are no comments for WrkCntrStdSetupHrs in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal WrkCntrStdSetupHrs
        {
            get
            {
                decimal value = _WrkCntrStdSetupHrs;
                OnGetWrkCntrStdSetupHrs(ref value);
                return value;
            }
            set
            {
                if (_WrkCntrStdSetupHrs != value)
                {
                  OnWrkCntrStdSetupHrsChanging(ref value);
                  ReportPropertyChanging("WrkCntrStdSetupHrs");
                  _WrkCntrStdSetupHrs = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WrkCntrStdSetupHrs");
                  OnWrkCntrStdSetupHrsChanged();
              }
            }
        }
        private decimal _WrkCntrStdSetupHrs = 0m;
        partial void OnGetWrkCntrStdSetupHrs(ref decimal value);
        partial void OnWrkCntrStdSetupHrsChanging(ref decimal value);
        partial void OnWrkCntrStdSetupHrsChanged();
    
        /// <summary>
        /// There are no comments for WrkCntrStdSetupLaborRate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal WrkCntrStdSetupLaborRate
        {
            get
            {
                decimal value = _WrkCntrStdSetupLaborRate;
                OnGetWrkCntrStdSetupLaborRate(ref value);
                return value;
            }
            set
            {
                if (_WrkCntrStdSetupLaborRate != value)
                {
                  OnWrkCntrStdSetupLaborRateChanging(ref value);
                  ReportPropertyChanging("WrkCntrStdSetupLaborRate");
                  _WrkCntrStdSetupLaborRate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WrkCntrStdSetupLaborRate");
                  OnWrkCntrStdSetupLaborRateChanged();
              }
            }
        }
        private decimal _WrkCntrStdSetupLaborRate = 0m;
        partial void OnGetWrkCntrStdSetupLaborRate(ref decimal value);
        partial void OnWrkCntrStdSetupLaborRateChanging(ref decimal value);
        partial void OnWrkCntrStdSetupLaborRateChanged();
    
        /// <summary>
        /// There are no comments for WrkCntrVarRunRate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal WrkCntrVarRunRate
        {
            get
            {
                decimal value = _WrkCntrVarRunRate;
                OnGetWrkCntrVarRunRate(ref value);
                return value;
            }
            set
            {
                if (_WrkCntrVarRunRate != value)
                {
                  OnWrkCntrVarRunRateChanging(ref value);
                  ReportPropertyChanging("WrkCntrVarRunRate");
                  _WrkCntrVarRunRate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WrkCntrVarRunRate");
                  OnWrkCntrVarRunRateChanged();
              }
            }
        }
        private decimal _WrkCntrVarRunRate = 0m;
        partial void OnGetWrkCntrVarRunRate(ref decimal value);
        partial void OnWrkCntrVarRunRateChanging(ref decimal value);
        partial void OnWrkCntrVarRunRateChanged();
    
        /// <summary>
        /// There are no comments for WrkCntrVarSetupRate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal WrkCntrVarSetupRate
        {
            get
            {
                decimal value = _WrkCntrVarSetupRate;
                OnGetWrkCntrVarSetupRate(ref value);
                return value;
            }
            set
            {
                if (_WrkCntrVarSetupRate != value)
                {
                  OnWrkCntrVarSetupRateChanging(ref value);
                  ReportPropertyChanging("WrkCntrVarSetupRate");
                  _WrkCntrVarSetupRate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WrkCntrVarSetupRate");
                  OnWrkCntrVarSetupRateChanged();
              }
            }
        }
        private decimal _WrkCntrVarSetupRate = 0m;
        partial void OnGetWrkCntrVarSetupRate(ref decimal value);
        partial void OnWrkCntrVarSetupRateChanging(ref decimal value);
        partial void OnWrkCntrVarSetupRateChanged();
    
        /// <summary>
        /// There are no comments for WrkCntStdQueueHrs in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? WrkCntStdQueueHrs
        {
            get
            {
                decimal? value = _WrkCntStdQueueHrs;
                OnGetWrkCntStdQueueHrs(ref value);
                return value;
            }
            set
            {
                if (_WrkCntStdQueueHrs != value)
                {
                  OnWrkCntStdQueueHrsChanging(ref value);
                  ReportPropertyChanging("WrkCntStdQueueHrs");
                  _WrkCntStdQueueHrs = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WrkCntStdQueueHrs");
                  OnWrkCntStdQueueHrsChanged();
              }
            }
        }
        private decimal? _WrkCntStdQueueHrs = 0m;
        partial void OnGetWrkCntStdQueueHrs(ref decimal? value);
        partial void OnWrkCntStdQueueHrsChanging(ref decimal? value);
        partial void OnWrkCntStdQueueHrsChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.Warehouse in the schema.
    /// </summary>
    /// <KeyProperties>
    /// WhseKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="Warehouse")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [Net4Sage.Controls.Lookup.LookupAutoShowColumns(false)]
    [Net4Sage.Controls.Lookup.LookupFormTitle(@"Buscar Almacén")]
    public partial class Warehouse : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Warehouse object.
        /// </summary>
        /// <param name="whseKey">Initial value of WhseKey.</param>
        /// <param name="allowImmedPickFromSO">Initial value of AllowImmedPickFromSO.</param>
        /// <param name="allowImmedShipFromPick">Initial value of AllowImmedShipFromPick.</param>
        /// <param name="allowTrnsfrBackOrd">Initial value of AllowTrnsfrBackOrd.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="costOfCarry">Initial value of CostOfCarry.</param>
        /// <param name="costToReplenish">Initial value of CostToReplenish.</param>
        /// <param name="description">Initial value of Description.</param>
        /// <param name="dfltLotPickMethod">Initial value of DfltLotPickMethod.</param>
        /// <param name="dfltPickMeth">Initial value of DfltPickMeth.</param>
        /// <param name="dfltPickOfOutOfStockItems">Initial value of DfltPickOfOutOfStockItems.</param>
        /// <param name="maxDemandMult">Initial value of MaxDemandMult.</param>
        /// <param name="maxSeasDemandMult">Initial value of MaxSeasDemandMult.</param>
        /// <param name="minDemandMult">Initial value of MinDemandMult.</param>
        /// <param name="reordMeth">Initial value of ReordMeth.</param>
        /// <param name="restockMeth">Initial value of RestockMeth.</param>
        /// <param name="restockRate">Initial value of RestockRate.</param>
        /// <param name="shipAddrKey">Initial value of ShipAddrKey.</param>
        /// <param name="shipComplete">Initial value of ShipComplete.</param>
        /// <param name="sortPickTckt">Initial value of SortPickTckt.</param>
        /// <param name="trackQtyAtBin">Initial value of TrackQtyAtBin.</param>
        /// <param name="transit">Initial value of Transit.</param>
        /// <param name="trnsfrFrtChrgOpt">Initial value of TrnsfrFrtChrgOpt.</param>
        /// <param name="trnsfrSrchrgOpt">Initial value of TrnsfrSrchrgOpt.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        /// <param name="useBins">Initial value of UseBins.</param>
        /// <param name="useZones">Initial value of UseZones.</param>
        /// <param name="whseID">Initial value of WhseID.</param>
        public static Warehouse CreateWarehouse(int whseKey, short allowImmedPickFromSO, short allowImmedShipFromPick, short allowTrnsfrBackOrd, string companyID, decimal costOfCarry, decimal costToReplenish, string description, short dfltLotPickMethod, short dfltPickMeth, short dfltPickOfOutOfStockItems, decimal maxDemandMult, decimal maxSeasDemandMult, decimal minDemandMult, short reordMeth, short restockMeth, decimal restockRate, int shipAddrKey, short shipComplete, short sortPickTckt, short trackQtyAtBin, short transit, short trnsfrFrtChrgOpt, short trnsfrSrchrgOpt, int updateCounter, short useBins, short useZones, string whseID)
        {
            Warehouse warehouse = new Warehouse();
            warehouse.WhseKey = whseKey;
            warehouse.AllowImmedPickFromSO = allowImmedPickFromSO;
            warehouse.AllowImmedShipFromPick = allowImmedShipFromPick;
            warehouse.AllowTrnsfrBackOrd = allowTrnsfrBackOrd;
            warehouse.CompanyID = companyID;
            warehouse.CostOfCarry = costOfCarry;
            warehouse.CostToReplenish = costToReplenish;
            warehouse.Description = description;
            warehouse.DfltLotPickMethod = dfltLotPickMethod;
            warehouse.DfltPickMeth = dfltPickMeth;
            warehouse.DfltPickOfOutOfStockItems = dfltPickOfOutOfStockItems;
            warehouse.MaxDemandMult = maxDemandMult;
            warehouse.MaxSeasDemandMult = maxSeasDemandMult;
            warehouse.MinDemandMult = minDemandMult;
            warehouse.ReordMeth = reordMeth;
            warehouse.RestockMeth = restockMeth;
            warehouse.RestockRate = restockRate;
            warehouse.ShipAddrKey = shipAddrKey;
            warehouse.ShipComplete = shipComplete;
            warehouse.SortPickTckt = sortPickTckt;
            warehouse.TrackQtyAtBin = trackQtyAtBin;
            warehouse.Transit = transit;
            warehouse.TrnsfrFrtChrgOpt = trnsfrFrtChrgOpt;
            warehouse.TrnsfrSrchrgOpt = trnsfrSrchrgOpt;
            warehouse.UpdateCounter = updateCounter;
            warehouse.UseBins = useBins;
            warehouse.UseZones = useZones;
            warehouse.WhseID = whseID;
            return warehouse;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for WhseKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupKeyReturn]
        public virtual int WhseKey
        {
            get
            {
                int value = _WhseKey;
                OnGetWhseKey(ref value);
                return value;
            }
            set
            {
                if (_WhseKey != value)
                {
                  OnWhseKeyChanging(ref value);
                  ReportPropertyChanging("WhseKey");
                  _WhseKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WhseKey");
                  OnWhseKeyChanged();
              }
            }
        }
        private int _WhseKey;
        partial void OnGetWhseKey(ref int value);
        partial void OnWhseKeyChanging(ref int value);
        partial void OnWhseKeyChanged();
    
        /// <summary>
        /// There are no comments for AllowImmedPickFromSO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short AllowImmedPickFromSO
        {
            get
            {
                short value = _AllowImmedPickFromSO;
                OnGetAllowImmedPickFromSO(ref value);
                return value;
            }
            set
            {
                if (_AllowImmedPickFromSO != value)
                {
                  OnAllowImmedPickFromSOChanging(ref value);
                  ReportPropertyChanging("AllowImmedPickFromSO");
                  _AllowImmedPickFromSO = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AllowImmedPickFromSO");
                  OnAllowImmedPickFromSOChanged();
              }
            }
        }
        private short _AllowImmedPickFromSO = 0;
        partial void OnGetAllowImmedPickFromSO(ref short value);
        partial void OnAllowImmedPickFromSOChanging(ref short value);
        partial void OnAllowImmedPickFromSOChanged();
    
        /// <summary>
        /// There are no comments for AllowImmedShipFromPick in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short AllowImmedShipFromPick
        {
            get
            {
                short value = _AllowImmedShipFromPick;
                OnGetAllowImmedShipFromPick(ref value);
                return value;
            }
            set
            {
                if (_AllowImmedShipFromPick != value)
                {
                  OnAllowImmedShipFromPickChanging(ref value);
                  ReportPropertyChanging("AllowImmedShipFromPick");
                  _AllowImmedShipFromPick = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AllowImmedShipFromPick");
                  OnAllowImmedShipFromPickChanged();
              }
            }
        }
        private short _AllowImmedShipFromPick = 0;
        partial void OnGetAllowImmedShipFromPick(ref short value);
        partial void OnAllowImmedShipFromPickChanging(ref short value);
        partial void OnAllowImmedShipFromPickChanged();
    
        /// <summary>
        /// There are no comments for AllowTrnsfrBackOrd in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short AllowTrnsfrBackOrd
        {
            get
            {
                short value = _AllowTrnsfrBackOrd;
                OnGetAllowTrnsfrBackOrd(ref value);
                return value;
            }
            set
            {
                if (_AllowTrnsfrBackOrd != value)
                {
                  OnAllowTrnsfrBackOrdChanging(ref value);
                  ReportPropertyChanging("AllowTrnsfrBackOrd");
                  _AllowTrnsfrBackOrd = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AllowTrnsfrBackOrd");
                  OnAllowTrnsfrBackOrdChanged();
              }
            }
        }
        private short _AllowTrnsfrBackOrd = 0;
        partial void OnGetAllowTrnsfrBackOrd(ref short value);
        partial void OnAllowTrnsfrBackOrdChanging(ref short value);
        partial void OnAllowTrnsfrBackOrdChanged();
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for CostOfCarry in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal CostOfCarry
        {
            get
            {
                decimal value = _CostOfCarry;
                OnGetCostOfCarry(ref value);
                return value;
            }
            set
            {
                if (_CostOfCarry != value)
                {
                  OnCostOfCarryChanging(ref value);
                  ReportPropertyChanging("CostOfCarry");
                  _CostOfCarry = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CostOfCarry");
                  OnCostOfCarryChanged();
              }
            }
        }
        private decimal _CostOfCarry = 0m;
        partial void OnGetCostOfCarry(ref decimal value);
        partial void OnCostOfCarryChanging(ref decimal value);
        partial void OnCostOfCarryChanged();
    
        /// <summary>
        /// There are no comments for COSAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? COSAcctKey
        {
            get
            {
                int? value = _COSAcctKey;
                OnGetCOSAcctKey(ref value);
                return value;
            }
            set
            {
                if (_COSAcctKey != value)
                {
                  OnCOSAcctKeyChanging(ref value);
                  ReportPropertyChanging("COSAcctKey");
                  _COSAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("COSAcctKey");
                  OnCOSAcctKeyChanged();
              }
            }
        }
        private int? _COSAcctKey;
        partial void OnGetCOSAcctKey(ref int? value);
        partial void OnCOSAcctKeyChanging(ref int? value);
        partial void OnCOSAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for CostTierAdjAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CostTierAdjAcctKey
        {
            get
            {
                int? value = _CostTierAdjAcctKey;
                OnGetCostTierAdjAcctKey(ref value);
                return value;
            }
            set
            {
                if (_CostTierAdjAcctKey != value)
                {
                  OnCostTierAdjAcctKeyChanging(ref value);
                  ReportPropertyChanging("CostTierAdjAcctKey");
                  _CostTierAdjAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CostTierAdjAcctKey");
                  OnCostTierAdjAcctKeyChanged();
              }
            }
        }
        private int? _CostTierAdjAcctKey;
        partial void OnGetCostTierAdjAcctKey(ref int? value);
        partial void OnCostTierAdjAcctKeyChanging(ref int? value);
        partial void OnCostTierAdjAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for CostToReplenish in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal CostToReplenish
        {
            get
            {
                decimal value = _CostToReplenish;
                OnGetCostToReplenish(ref value);
                return value;
            }
            set
            {
                if (_CostToReplenish != value)
                {
                  OnCostToReplenishChanging(ref value);
                  ReportPropertyChanging("CostToReplenish");
                  _CostToReplenish = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CostToReplenish");
                  OnCostToReplenishChanged();
              }
            }
        }
        private decimal _CostToReplenish = 0m;
        partial void OnGetCostToReplenish(ref decimal value);
        partial void OnCostToReplenishChanging(ref decimal value);
        partial void OnCostToReplenishChanged();
    
        /// <summary>
        /// There are no comments for CostWhseKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CostWhseKey
        {
            get
            {
                int? value = _CostWhseKey;
                OnGetCostWhseKey(ref value);
                return value;
            }
            set
            {
                if (_CostWhseKey != value)
                {
                  OnCostWhseKeyChanging(ref value);
                  ReportPropertyChanging("CostWhseKey");
                  _CostWhseKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CostWhseKey");
                  OnCostWhseKeyChanged();
              }
            }
        }
        private int? _CostWhseKey;
        partial void OnGetCostWhseKey(ref int? value);
        partial void OnCostWhseKeyChanging(ref int? value);
        partial void OnCostWhseKeyChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"Descripción")]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Descripción")]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for DfltLotPickMethod in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short DfltLotPickMethod
        {
            get
            {
                short value = _DfltLotPickMethod;
                OnGetDfltLotPickMethod(ref value);
                return value;
            }
            set
            {
                if (_DfltLotPickMethod != value)
                {
                  OnDfltLotPickMethodChanging(ref value);
                  ReportPropertyChanging("DfltLotPickMethod");
                  _DfltLotPickMethod = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltLotPickMethod");
                  OnDfltLotPickMethodChanged();
              }
            }
        }
        private short _DfltLotPickMethod = 1;
        partial void OnGetDfltLotPickMethod(ref short value);
        partial void OnDfltLotPickMethodChanging(ref short value);
        partial void OnDfltLotPickMethodChanged();
    
        /// <summary>
        /// There are no comments for DfltPickMeth in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short DfltPickMeth
        {
            get
            {
                short value = _DfltPickMeth;
                OnGetDfltPickMeth(ref value);
                return value;
            }
            set
            {
                if (_DfltPickMeth != value)
                {
                  OnDfltPickMethChanging(ref value);
                  ReportPropertyChanging("DfltPickMeth");
                  _DfltPickMeth = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltPickMeth");
                  OnDfltPickMethChanged();
              }
            }
        }
        private short _DfltPickMeth = 1;
        partial void OnGetDfltPickMeth(ref short value);
        partial void OnDfltPickMethChanging(ref short value);
        partial void OnDfltPickMethChanged();
    
        /// <summary>
        /// There are no comments for DfltPickOfOutOfStockItems in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short DfltPickOfOutOfStockItems
        {
            get
            {
                short value = _DfltPickOfOutOfStockItems;
                OnGetDfltPickOfOutOfStockItems(ref value);
                return value;
            }
            set
            {
                if (_DfltPickOfOutOfStockItems != value)
                {
                  OnDfltPickOfOutOfStockItemsChanging(ref value);
                  ReportPropertyChanging("DfltPickOfOutOfStockItems");
                  _DfltPickOfOutOfStockItems = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltPickOfOutOfStockItems");
                  OnDfltPickOfOutOfStockItemsChanged();
              }
            }
        }
        private short _DfltPickOfOutOfStockItems = 0;
        partial void OnGetDfltPickOfOutOfStockItems(ref short value);
        partial void OnDfltPickOfOutOfStockItemsChanging(ref short value);
        partial void OnDfltPickOfOutOfStockItemsChanged();
    
        /// <summary>
        /// There are no comments for ImmedInvcPrinterDest in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ImmedInvcPrinterDest
        {
            get
            {
                string value = _ImmedInvcPrinterDest;
                OnGetImmedInvcPrinterDest(ref value);
                return value;
            }
            set
            {
                if (_ImmedInvcPrinterDest != value)
                {
                  OnImmedInvcPrinterDestChanging(ref value);
                  ReportPropertyChanging("ImmedInvcPrinterDest");
                  _ImmedInvcPrinterDest = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ImmedInvcPrinterDest");
                  OnImmedInvcPrinterDestChanged();
              }
            }
        }
        private string _ImmedInvcPrinterDest;
        partial void OnGetImmedInvcPrinterDest(ref string value);
        partial void OnImmedInvcPrinterDestChanging(ref string value);
        partial void OnImmedInvcPrinterDestChanged();
    
        /// <summary>
        /// There are no comments for ImmedInvcRptSettingKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ImmedInvcRptSettingKey
        {
            get
            {
                int? value = _ImmedInvcRptSettingKey;
                OnGetImmedInvcRptSettingKey(ref value);
                return value;
            }
            set
            {
                if (_ImmedInvcRptSettingKey != value)
                {
                  OnImmedInvcRptSettingKeyChanging(ref value);
                  ReportPropertyChanging("ImmedInvcRptSettingKey");
                  _ImmedInvcRptSettingKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ImmedInvcRptSettingKey");
                  OnImmedInvcRptSettingKeyChanged();
              }
            }
        }
        private int? _ImmedInvcRptSettingKey;
        partial void OnGetImmedInvcRptSettingKey(ref int? value);
        partial void OnImmedInvcRptSettingKeyChanging(ref int? value);
        partial void OnImmedInvcRptSettingKeyChanged();
    
        /// <summary>
        /// There are no comments for ImmedPickPrinterDest in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ImmedPickPrinterDest
        {
            get
            {
                string value = _ImmedPickPrinterDest;
                OnGetImmedPickPrinterDest(ref value);
                return value;
            }
            set
            {
                if (_ImmedPickPrinterDest != value)
                {
                  OnImmedPickPrinterDestChanging(ref value);
                  ReportPropertyChanging("ImmedPickPrinterDest");
                  _ImmedPickPrinterDest = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ImmedPickPrinterDest");
                  OnImmedPickPrinterDestChanged();
              }
            }
        }
        private string _ImmedPickPrinterDest;
        partial void OnGetImmedPickPrinterDest(ref string value);
        partial void OnImmedPickPrinterDestChanging(ref string value);
        partial void OnImmedPickPrinterDestChanged();
    
        /// <summary>
        /// There are no comments for ImmedPickRptSettingKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ImmedPickRptSettingKey
        {
            get
            {
                int? value = _ImmedPickRptSettingKey;
                OnGetImmedPickRptSettingKey(ref value);
                return value;
            }
            set
            {
                if (_ImmedPickRptSettingKey != value)
                {
                  OnImmedPickRptSettingKeyChanging(ref value);
                  ReportPropertyChanging("ImmedPickRptSettingKey");
                  _ImmedPickRptSettingKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ImmedPickRptSettingKey");
                  OnImmedPickRptSettingKeyChanged();
              }
            }
        }
        private int? _ImmedPickRptSettingKey;
        partial void OnGetImmedPickRptSettingKey(ref int? value);
        partial void OnImmedPickRptSettingKeyChanging(ref int? value);
        partial void OnImmedPickRptSettingKeyChanged();
    
        /// <summary>
        /// There are no comments for InvtAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? InvtAcctKey
        {
            get
            {
                int? value = _InvtAcctKey;
                OnGetInvtAcctKey(ref value);
                return value;
            }
            set
            {
                if (_InvtAcctKey != value)
                {
                  OnInvtAcctKeyChanging(ref value);
                  ReportPropertyChanging("InvtAcctKey");
                  _InvtAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvtAcctKey");
                  OnInvtAcctKeyChanged();
              }
            }
        }
        private int? _InvtAcctKey;
        partial void OnGetInvtAcctKey(ref int? value);
        partial void OnInvtAcctKeyChanging(ref int? value);
        partial void OnInvtAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for IssueAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? IssueAcctKey
        {
            get
            {
                int? value = _IssueAcctKey;
                OnGetIssueAcctKey(ref value);
                return value;
            }
            set
            {
                if (_IssueAcctKey != value)
                {
                  OnIssueAcctKeyChanging(ref value);
                  ReportPropertyChanging("IssueAcctKey");
                  _IssueAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IssueAcctKey");
                  OnIssueAcctKeyChanged();
              }
            }
        }
        private int? _IssueAcctKey;
        partial void OnGetIssueAcctKey(ref int? value);
        partial void OnIssueAcctKeyChanging(ref int? value);
        partial void OnIssueAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for LastRankDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? LastRankDate
        {
            get
            {
                global::System.DateTime? value = _LastRankDate;
                OnGetLastRankDate(ref value);
                return value;
            }
            set
            {
                if (_LastRankDate != value)
                {
                  OnLastRankDateChanging(ref value);
                  ReportPropertyChanging("LastRankDate");
                  _LastRankDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LastRankDate");
                  OnLastRankDateChanged();
              }
            }
        }
        private global::System.DateTime? _LastRankDate;
        partial void OnGetLastRankDate(ref global::System.DateTime? value);
        partial void OnLastRankDateChanging(ref global::System.DateTime? value);
        partial void OnLastRankDateChanged();
    
        /// <summary>
        /// There are no comments for LastRankInvtPerKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? LastRankInvtPerKey
        {
            get
            {
                int? value = _LastRankInvtPerKey;
                OnGetLastRankInvtPerKey(ref value);
                return value;
            }
            set
            {
                if (_LastRankInvtPerKey != value)
                {
                  OnLastRankInvtPerKeyChanging(ref value);
                  ReportPropertyChanging("LastRankInvtPerKey");
                  _LastRankInvtPerKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LastRankInvtPerKey");
                  OnLastRankInvtPerKeyChanged();
              }
            }
        }
        private int? _LastRankInvtPerKey;
        partial void OnGetLastRankInvtPerKey(ref int? value);
        partial void OnLastRankInvtPerKeyChanging(ref int? value);
        partial void OnLastRankInvtPerKeyChanged();
    
        /// <summary>
        /// There are no comments for LastRplnsmntUpdate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? LastRplnsmntUpdate
        {
            get
            {
                global::System.DateTime? value = _LastRplnsmntUpdate;
                OnGetLastRplnsmntUpdate(ref value);
                return value;
            }
            set
            {
                if (_LastRplnsmntUpdate != value)
                {
                  OnLastRplnsmntUpdateChanging(ref value);
                  ReportPropertyChanging("LastRplnsmntUpdate");
                  _LastRplnsmntUpdate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LastRplnsmntUpdate");
                  OnLastRplnsmntUpdateChanged();
              }
            }
        }
        private global::System.DateTime? _LastRplnsmntUpdate;
        partial void OnGetLastRplnsmntUpdate(ref global::System.DateTime? value);
        partial void OnLastRplnsmntUpdateChanging(ref global::System.DateTime? value);
        partial void OnLastRplnsmntUpdateChanged();
    
        /// <summary>
        /// There are no comments for MailAddrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? MailAddrKey
        {
            get
            {
                int? value = _MailAddrKey;
                OnGetMailAddrKey(ref value);
                return value;
            }
            set
            {
                if (_MailAddrKey != value)
                {
                  OnMailAddrKeyChanging(ref value);
                  ReportPropertyChanging("MailAddrKey");
                  _MailAddrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MailAddrKey");
                  OnMailAddrKeyChanged();
              }
            }
        }
        private int? _MailAddrKey;
        partial void OnGetMailAddrKey(ref int? value);
        partial void OnMailAddrKeyChanging(ref int? value);
        partial void OnMailAddrKeyChanged();
    
        /// <summary>
        /// There are no comments for MaxDemandMult in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal MaxDemandMult
        {
            get
            {
                decimal value = _MaxDemandMult;
                OnGetMaxDemandMult(ref value);
                return value;
            }
            set
            {
                if (_MaxDemandMult != value)
                {
                  OnMaxDemandMultChanging(ref value);
                  ReportPropertyChanging("MaxDemandMult");
                  _MaxDemandMult = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MaxDemandMult");
                  OnMaxDemandMultChanged();
              }
            }
        }
        private decimal _MaxDemandMult = 12m;
        partial void OnGetMaxDemandMult(ref decimal value);
        partial void OnMaxDemandMultChanging(ref decimal value);
        partial void OnMaxDemandMultChanged();
    
        /// <summary>
        /// There are no comments for MaxOrderCycle in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual short? MaxOrderCycle
        {
            get
            {
                short? value = _MaxOrderCycle;
                OnGetMaxOrderCycle(ref value);
                return value;
            }
            set
            {
                if (_MaxOrderCycle != value)
                {
                  OnMaxOrderCycleChanging(ref value);
                  ReportPropertyChanging("MaxOrderCycle");
                  _MaxOrderCycle = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MaxOrderCycle");
                  OnMaxOrderCycleChanged();
              }
            }
        }
        private short? _MaxOrderCycle;
        partial void OnGetMaxOrderCycle(ref short? value);
        partial void OnMaxOrderCycleChanging(ref short? value);
        partial void OnMaxOrderCycleChanged();
    
        /// <summary>
        /// There are no comments for MaxQualLeadTime in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual short? MaxQualLeadTime
        {
            get
            {
                short? value = _MaxQualLeadTime;
                OnGetMaxQualLeadTime(ref value);
                return value;
            }
            set
            {
                if (_MaxQualLeadTime != value)
                {
                  OnMaxQualLeadTimeChanging(ref value);
                  ReportPropertyChanging("MaxQualLeadTime");
                  _MaxQualLeadTime = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MaxQualLeadTime");
                  OnMaxQualLeadTimeChanged();
              }
            }
        }
        private short? _MaxQualLeadTime;
        partial void OnGetMaxQualLeadTime(ref short? value);
        partial void OnMaxQualLeadTimeChanging(ref short? value);
        partial void OnMaxQualLeadTimeChanged();
    
        /// <summary>
        /// There are no comments for MaxQualLeadTimePct in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? MaxQualLeadTimePct
        {
            get
            {
                decimal? value = _MaxQualLeadTimePct;
                OnGetMaxQualLeadTimePct(ref value);
                return value;
            }
            set
            {
                if (_MaxQualLeadTimePct != value)
                {
                  OnMaxQualLeadTimePctChanging(ref value);
                  ReportPropertyChanging("MaxQualLeadTimePct");
                  _MaxQualLeadTimePct = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MaxQualLeadTimePct");
                  OnMaxQualLeadTimePctChanged();
              }
            }
        }
        private decimal? _MaxQualLeadTimePct = 0m;
        partial void OnGetMaxQualLeadTimePct(ref decimal? value);
        partial void OnMaxQualLeadTimePctChanging(ref decimal? value);
        partial void OnMaxQualLeadTimePctChanged();
    
        /// <summary>
        /// There are no comments for MaxSeasDemandMult in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal MaxSeasDemandMult
        {
            get
            {
                decimal value = _MaxSeasDemandMult;
                OnGetMaxSeasDemandMult(ref value);
                return value;
            }
            set
            {
                if (_MaxSeasDemandMult != value)
                {
                  OnMaxSeasDemandMultChanging(ref value);
                  ReportPropertyChanging("MaxSeasDemandMult");
                  _MaxSeasDemandMult = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MaxSeasDemandMult");
                  OnMaxSeasDemandMultChanged();
              }
            }
        }
        private decimal _MaxSeasDemandMult = 3m;
        partial void OnGetMaxSeasDemandMult(ref decimal value);
        partial void OnMaxSeasDemandMultChanging(ref decimal value);
        partial void OnMaxSeasDemandMultChanged();
    
        /// <summary>
        /// There are no comments for MinDemandMult in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal MinDemandMult
        {
            get
            {
                decimal value = _MinDemandMult;
                OnGetMinDemandMult(ref value);
                return value;
            }
            set
            {
                if (_MinDemandMult != value)
                {
                  OnMinDemandMultChanging(ref value);
                  ReportPropertyChanging("MinDemandMult");
                  _MinDemandMult = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MinDemandMult");
                  OnMinDemandMultChanged();
              }
            }
        }
        private decimal _MinDemandMult = 0m;
        partial void OnGetMinDemandMult(ref decimal value);
        partial void OnMinDemandMultChanging(ref decimal value);
        partial void OnMinDemandMultChanged();
    
        /// <summary>
        /// There are no comments for MinOrderCycle in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual short? MinOrderCycle
        {
            get
            {
                short? value = _MinOrderCycle;
                OnGetMinOrderCycle(ref value);
                return value;
            }
            set
            {
                if (_MinOrderCycle != value)
                {
                  OnMinOrderCycleChanging(ref value);
                  ReportPropertyChanging("MinOrderCycle");
                  _MinOrderCycle = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MinOrderCycle");
                  OnMinOrderCycleChanged();
              }
            }
        }
        private short? _MinOrderCycle = 0;
        partial void OnGetMinOrderCycle(ref short? value);
        partial void OnMinOrderCycleChanging(ref short? value);
        partial void OnMinOrderCycleChanged();
    
        /// <summary>
        /// There are no comments for MinQualLeadTimePct in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? MinQualLeadTimePct
        {
            get
            {
                decimal? value = _MinQualLeadTimePct;
                OnGetMinQualLeadTimePct(ref value);
                return value;
            }
            set
            {
                if (_MinQualLeadTimePct != value)
                {
                  OnMinQualLeadTimePctChanging(ref value);
                  ReportPropertyChanging("MinQualLeadTimePct");
                  _MinQualLeadTimePct = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MinQualLeadTimePct");
                  OnMinQualLeadTimePctChanged();
              }
            }
        }
        private decimal? _MinQualLeadTimePct = 0m;
        partial void OnGetMinQualLeadTimePct(ref decimal? value);
        partial void OnMinQualLeadTimePctChanging(ref decimal? value);
        partial void OnMinQualLeadTimePctChanged();
    
        /// <summary>
        /// There are no comments for MiscAdjAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? MiscAdjAcctKey
        {
            get
            {
                int? value = _MiscAdjAcctKey;
                OnGetMiscAdjAcctKey(ref value);
                return value;
            }
            set
            {
                if (_MiscAdjAcctKey != value)
                {
                  OnMiscAdjAcctKeyChanging(ref value);
                  ReportPropertyChanging("MiscAdjAcctKey");
                  _MiscAdjAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MiscAdjAcctKey");
                  OnMiscAdjAcctKeyChanged();
              }
            }
        }
        private int? _MiscAdjAcctKey;
        partial void OnGetMiscAdjAcctKey(ref int? value);
        partial void OnMiscAdjAcctKeyChanging(ref int? value);
        partial void OnMiscAdjAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for PhysCountAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? PhysCountAcctKey
        {
            get
            {
                int? value = _PhysCountAcctKey;
                OnGetPhysCountAcctKey(ref value);
                return value;
            }
            set
            {
                if (_PhysCountAcctKey != value)
                {
                  OnPhysCountAcctKeyChanging(ref value);
                  ReportPropertyChanging("PhysCountAcctKey");
                  _PhysCountAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PhysCountAcctKey");
                  OnPhysCountAcctKeyChanged();
              }
            }
        }
        private int? _PhysCountAcctKey;
        partial void OnGetPhysCountAcctKey(ref int? value);
        partial void OnPhysCountAcctKeyChanging(ref int? value);
        partial void OnPhysCountAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for PriceWhseKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? PriceWhseKey
        {
            get
            {
                int? value = _PriceWhseKey;
                OnGetPriceWhseKey(ref value);
                return value;
            }
            set
            {
                if (_PriceWhseKey != value)
                {
                  OnPriceWhseKeyChanging(ref value);
                  ReportPropertyChanging("PriceWhseKey");
                  _PriceWhseKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PriceWhseKey");
                  OnPriceWhseKeyChanged();
              }
            }
        }
        private int? _PriceWhseKey;
        partial void OnGetPriceWhseKey(ref int? value);
        partial void OnPriceWhseKeyChanging(ref int? value);
        partial void OnPriceWhseKeyChanged();
    
        /// <summary>
        /// There are no comments for PurchAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? PurchAcctKey
        {
            get
            {
                int? value = _PurchAcctKey;
                OnGetPurchAcctKey(ref value);
                return value;
            }
            set
            {
                if (_PurchAcctKey != value)
                {
                  OnPurchAcctKeyChanging(ref value);
                  ReportPropertyChanging("PurchAcctKey");
                  _PurchAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PurchAcctKey");
                  OnPurchAcctKeyChanged();
              }
            }
        }
        private int? _PurchAcctKey;
        partial void OnGetPurchAcctKey(ref int? value);
        partial void OnPurchAcctKeyChanging(ref int? value);
        partial void OnPurchAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for ReordMeth in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ReordMeth
        {
            get
            {
                short value = _ReordMeth;
                OnGetReordMeth(ref value);
                return value;
            }
            set
            {
                if (_ReordMeth != value)
                {
                  OnReordMethChanging(ref value);
                  ReportPropertyChanging("ReordMeth");
                  _ReordMeth = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ReordMeth");
                  OnReordMethChanged();
              }
            }
        }
        private short _ReordMeth = 0;
        partial void OnGetReordMeth(ref short value);
        partial void OnReordMethChanging(ref short value);
        partial void OnReordMethChanged();
    
        /// <summary>
        /// There are no comments for RestockMeth in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short RestockMeth
        {
            get
            {
                short value = _RestockMeth;
                OnGetRestockMeth(ref value);
                return value;
            }
            set
            {
                if (_RestockMeth != value)
                {
                  OnRestockMethChanging(ref value);
                  ReportPropertyChanging("RestockMeth");
                  _RestockMeth = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RestockMeth");
                  OnRestockMethChanged();
              }
            }
        }
        private short _RestockMeth = 1;
        partial void OnGetRestockMeth(ref short value);
        partial void OnRestockMethChanging(ref short value);
        partial void OnRestockMethChanged();
    
        /// <summary>
        /// There are no comments for RestockRate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal RestockRate
        {
            get
            {
                decimal value = _RestockRate;
                OnGetRestockRate(ref value);
                return value;
            }
            set
            {
                if (_RestockRate != value)
                {
                  OnRestockRateChanging(ref value);
                  ReportPropertyChanging("RestockRate");
                  _RestockRate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RestockRate");
                  OnRestockRateChanged();
              }
            }
        }
        private decimal _RestockRate = 0m;
        partial void OnGetRestockRate(ref decimal value);
        partial void OnRestockRateChanging(ref decimal value);
        partial void OnRestockRateChanged();
    
        /// <summary>
        /// There are no comments for SalesAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? SalesAcctKey
        {
            get
            {
                int? value = _SalesAcctKey;
                OnGetSalesAcctKey(ref value);
                return value;
            }
            set
            {
                if (_SalesAcctKey != value)
                {
                  OnSalesAcctKeyChanging(ref value);
                  ReportPropertyChanging("SalesAcctKey");
                  _SalesAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesAcctKey");
                  OnSalesAcctKeyChanged();
              }
            }
        }
        private int? _SalesAcctKey;
        partial void OnGetSalesAcctKey(ref int? value);
        partial void OnSalesAcctKeyChanging(ref int? value);
        partial void OnSalesAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for SalesOffsetAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? SalesOffsetAcctKey
        {
            get
            {
                int? value = _SalesOffsetAcctKey;
                OnGetSalesOffsetAcctKey(ref value);
                return value;
            }
            set
            {
                if (_SalesOffsetAcctKey != value)
                {
                  OnSalesOffsetAcctKeyChanging(ref value);
                  ReportPropertyChanging("SalesOffsetAcctKey");
                  _SalesOffsetAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesOffsetAcctKey");
                  OnSalesOffsetAcctKeyChanged();
              }
            }
        }
        private int? _SalesOffsetAcctKey;
        partial void OnGetSalesOffsetAcctKey(ref int? value);
        partial void OnSalesOffsetAcctKeyChanging(ref int? value);
        partial void OnSalesOffsetAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for SalesReturnAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? SalesReturnAcctKey
        {
            get
            {
                int? value = _SalesReturnAcctKey;
                OnGetSalesReturnAcctKey(ref value);
                return value;
            }
            set
            {
                if (_SalesReturnAcctKey != value)
                {
                  OnSalesReturnAcctKeyChanging(ref value);
                  ReportPropertyChanging("SalesReturnAcctKey");
                  _SalesReturnAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesReturnAcctKey");
                  OnSalesReturnAcctKeyChanged();
              }
            }
        }
        private int? _SalesReturnAcctKey;
        partial void OnGetSalesReturnAcctKey(ref int? value);
        partial void OnSalesReturnAcctKeyChanging(ref int? value);
        partial void OnSalesReturnAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for ShipAddrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ShipAddrKey
        {
            get
            {
                int value = _ShipAddrKey;
                OnGetShipAddrKey(ref value);
                return value;
            }
            set
            {
                if (_ShipAddrKey != value)
                {
                  OnShipAddrKeyChanging(ref value);
                  ReportPropertyChanging("ShipAddrKey");
                  _ShipAddrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipAddrKey");
                  OnShipAddrKeyChanged();
              }
            }
        }
        private int _ShipAddrKey;
        partial void OnGetShipAddrKey(ref int value);
        partial void OnShipAddrKeyChanging(ref int value);
        partial void OnShipAddrKeyChanged();
    
        /// <summary>
        /// There are no comments for ShipComplete in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ShipComplete
        {
            get
            {
                short value = _ShipComplete;
                OnGetShipComplete(ref value);
                return value;
            }
            set
            {
                if (_ShipComplete != value)
                {
                  OnShipCompleteChanging(ref value);
                  ReportPropertyChanging("ShipComplete");
                  _ShipComplete = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipComplete");
                  OnShipCompleteChanged();
              }
            }
        }
        private short _ShipComplete = 0;
        partial void OnGetShipComplete(ref short value);
        partial void OnShipCompleteChanging(ref short value);
        partial void OnShipCompleteChanged();
    
        /// <summary>
        /// There are no comments for SortPickTckt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short SortPickTckt
        {
            get
            {
                short value = _SortPickTckt;
                OnGetSortPickTckt(ref value);
                return value;
            }
            set
            {
                if (_SortPickTckt != value)
                {
                  OnSortPickTcktChanging(ref value);
                  ReportPropertyChanging("SortPickTckt");
                  _SortPickTckt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SortPickTckt");
                  OnSortPickTcktChanged();
              }
            }
        }
        private short _SortPickTckt = 0;
        partial void OnGetSortPickTckt(ref short value);
        partial void OnSortPickTcktChanging(ref short value);
        partial void OnSortPickTcktChanged();
    
        /// <summary>
        /// There are no comments for STaxSchdKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? STaxSchdKey
        {
            get
            {
                int? value = _STaxSchdKey;
                OnGetSTaxSchdKey(ref value);
                return value;
            }
            set
            {
                if (_STaxSchdKey != value)
                {
                  OnSTaxSchdKeyChanging(ref value);
                  ReportPropertyChanging("STaxSchdKey");
                  _STaxSchdKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("STaxSchdKey");
                  OnSTaxSchdKeyChanged();
              }
            }
        }
        private int? _STaxSchdKey;
        partial void OnGetSTaxSchdKey(ref int? value);
        partial void OnSTaxSchdKeyChanging(ref int? value);
        partial void OnSTaxSchdKeyChanged();
    
        /// <summary>
        /// There are no comments for TrackQtyAtBin in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short TrackQtyAtBin
        {
            get
            {
                short value = _TrackQtyAtBin;
                OnGetTrackQtyAtBin(ref value);
                return value;
            }
            set
            {
                if (_TrackQtyAtBin != value)
                {
                  OnTrackQtyAtBinChanging(ref value);
                  ReportPropertyChanging("TrackQtyAtBin");
                  _TrackQtyAtBin = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TrackQtyAtBin");
                  OnTrackQtyAtBinChanged();
              }
            }
        }
        private short _TrackQtyAtBin = 0;
        partial void OnGetTrackQtyAtBin(ref short value);
        partial void OnTrackQtyAtBinChanging(ref short value);
        partial void OnTrackQtyAtBinChanged();
    
        /// <summary>
        /// There are no comments for Transit in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Transit
        {
            get
            {
                short value = _Transit;
                OnGetTransit(ref value);
                return value;
            }
            set
            {
                if (_Transit != value)
                {
                  OnTransitChanging(ref value);
                  ReportPropertyChanging("Transit");
                  _Transit = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Transit");
                  OnTransitChanged();
              }
            }
        }
        private short _Transit = 0;
        partial void OnGetTransit(ref short value);
        partial void OnTransitChanging(ref short value);
        partial void OnTransitChanged();
    
        /// <summary>
        /// There are no comments for TrendPct in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? TrendPct
        {
            get
            {
                decimal? value = _TrendPct;
                OnGetTrendPct(ref value);
                return value;
            }
            set
            {
                if (_TrendPct != value)
                {
                  OnTrendPctChanging(ref value);
                  ReportPropertyChanging("TrendPct");
                  _TrendPct = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TrendPct");
                  OnTrendPctChanged();
              }
            }
        }
        private decimal? _TrendPct = 0m;
        partial void OnGetTrendPct(ref decimal? value);
        partial void OnTrendPctChanging(ref decimal? value);
        partial void OnTrendPctChanged();
    
        /// <summary>
        /// There are no comments for TrnsfrExpAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? TrnsfrExpAcctKey
        {
            get
            {
                int? value = _TrnsfrExpAcctKey;
                OnGetTrnsfrExpAcctKey(ref value);
                return value;
            }
            set
            {
                if (_TrnsfrExpAcctKey != value)
                {
                  OnTrnsfrExpAcctKeyChanging(ref value);
                  ReportPropertyChanging("TrnsfrExpAcctKey");
                  _TrnsfrExpAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TrnsfrExpAcctKey");
                  OnTrnsfrExpAcctKeyChanged();
              }
            }
        }
        private int? _TrnsfrExpAcctKey;
        partial void OnGetTrnsfrExpAcctKey(ref int? value);
        partial void OnTrnsfrExpAcctKeyChanging(ref int? value);
        partial void OnTrnsfrExpAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for TrnsfrFrtChrgOpt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short TrnsfrFrtChrgOpt
        {
            get
            {
                short value = _TrnsfrFrtChrgOpt;
                OnGetTrnsfrFrtChrgOpt(ref value);
                return value;
            }
            set
            {
                if (_TrnsfrFrtChrgOpt != value)
                {
                  OnTrnsfrFrtChrgOptChanging(ref value);
                  ReportPropertyChanging("TrnsfrFrtChrgOpt");
                  _TrnsfrFrtChrgOpt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TrnsfrFrtChrgOpt");
                  OnTrnsfrFrtChrgOptChanged();
              }
            }
        }
        private short _TrnsfrFrtChrgOpt = 1;
        partial void OnGetTrnsfrFrtChrgOpt(ref short value);
        partial void OnTrnsfrFrtChrgOptChanging(ref short value);
        partial void OnTrnsfrFrtChrgOptChanged();
    
        /// <summary>
        /// There are no comments for TrnsfrMrkupAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? TrnsfrMrkupAcctKey
        {
            get
            {
                int? value = _TrnsfrMrkupAcctKey;
                OnGetTrnsfrMrkupAcctKey(ref value);
                return value;
            }
            set
            {
                if (_TrnsfrMrkupAcctKey != value)
                {
                  OnTrnsfrMrkupAcctKeyChanging(ref value);
                  ReportPropertyChanging("TrnsfrMrkupAcctKey");
                  _TrnsfrMrkupAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TrnsfrMrkupAcctKey");
                  OnTrnsfrMrkupAcctKeyChanged();
              }
            }
        }
        private int? _TrnsfrMrkupAcctKey;
        partial void OnGetTrnsfrMrkupAcctKey(ref int? value);
        partial void OnTrnsfrMrkupAcctKeyChanging(ref int? value);
        partial void OnTrnsfrMrkupAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for TrnsfrSrchrgOpt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short TrnsfrSrchrgOpt
        {
            get
            {
                short value = _TrnsfrSrchrgOpt;
                OnGetTrnsfrSrchrgOpt(ref value);
                return value;
            }
            set
            {
                if (_TrnsfrSrchrgOpt != value)
                {
                  OnTrnsfrSrchrgOptChanging(ref value);
                  ReportPropertyChanging("TrnsfrSrchrgOpt");
                  _TrnsfrSrchrgOpt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TrnsfrSrchrgOpt");
                  OnTrnsfrSrchrgOptChanged();
              }
            }
        }
        private short _TrnsfrSrchrgOpt = 1;
        partial void OnGetTrnsfrSrchrgOpt(ref short value);
        partial void OnTrnsfrSrchrgOptChanging(ref short value);
        partial void OnTrnsfrSrchrgOptChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();
    
        /// <summary>
        /// There are no comments for UseBins in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short UseBins
        {
            get
            {
                short value = _UseBins;
                OnGetUseBins(ref value);
                return value;
            }
            set
            {
                if (_UseBins != value)
                {
                  OnUseBinsChanging(ref value);
                  ReportPropertyChanging("UseBins");
                  _UseBins = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UseBins");
                  OnUseBinsChanged();
              }
            }
        }
        private short _UseBins = 1;
        partial void OnGetUseBins(ref short value);
        partial void OnUseBinsChanging(ref short value);
        partial void OnUseBinsChanged();
    
        /// <summary>
        /// There are no comments for UseZones in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short UseZones
        {
            get
            {
                short value = _UseZones;
                OnGetUseZones(ref value);
                return value;
            }
            set
            {
                if (_UseZones != value)
                {
                  OnUseZonesChanging(ref value);
                  ReportPropertyChanging("UseZones");
                  _UseZones = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UseZones");
                  OnUseZonesChanged();
              }
            }
        }
        private short _UseZones = 0;
        partial void OnGetUseZones(ref short value);
        partial void OnUseZonesChanging(ref short value);
        partial void OnUseZonesChanged();
    
        /// <summary>
        /// There are no comments for WhseID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupTextReturn]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"Almacén")]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Almacén")]
        public virtual string WhseID
        {
            get
            {
                string value = _WhseID;
                OnGetWhseID(ref value);
                return value;
            }
            set
            {
                if (_WhseID != value)
                {
                  OnWhseIDChanging(ref value);
                  ReportPropertyChanging("WhseID");
                  _WhseID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("WhseID");
                  OnWhseIDChanged();
              }
            }
        }
        private string _WhseID;
        partial void OnGetWhseID(ref string value);
        partial void OnWhseIDChanging(ref string value);
        partial void OnWhseIDChanged();
    
        /// <summary>
        /// There are no comments for WhseMgrCntctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? WhseMgrCntctKey
        {
            get
            {
                int? value = _WhseMgrCntctKey;
                OnGetWhseMgrCntctKey(ref value);
                return value;
            }
            set
            {
                if (_WhseMgrCntctKey != value)
                {
                  OnWhseMgrCntctKeyChanging(ref value);
                  ReportPropertyChanging("WhseMgrCntctKey");
                  _WhseMgrCntctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WhseMgrCntctKey");
                  OnWhseMgrCntctKeyChanged();
              }
            }
        }
        private int? _WhseMgrCntctKey;
        partial void OnGetWhseMgrCntctKey(ref int? value);
        partial void OnWhseMgrCntctKeyChanging(ref int? value);
        partial void OnWhseMgrCntctKeyChanged();
    
        /// <summary>
        /// There are no comments for WhseOvrdSegValue in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string WhseOvrdSegValue
        {
            get
            {
                string value = _WhseOvrdSegValue;
                OnGetWhseOvrdSegValue(ref value);
                return value;
            }
            set
            {
                if (_WhseOvrdSegValue != value)
                {
                  OnWhseOvrdSegValueChanging(ref value);
                  ReportPropertyChanging("WhseOvrdSegValue");
                  _WhseOvrdSegValue = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("WhseOvrdSegValue");
                  OnWhseOvrdSegValueChanged();
              }
            }
        }
        private string _WhseOvrdSegValue;
        partial void OnGetWhseOvrdSegValue(ref string value);
        partial void OnWhseOvrdSegValueChanging(ref string value);
        partial void OnWhseOvrdSegValueChanged();
    
        /// <summary>
        /// There are no comments for WillCallPickPrinterDest in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string WillCallPickPrinterDest
        {
            get
            {
                string value = _WillCallPickPrinterDest;
                OnGetWillCallPickPrinterDest(ref value);
                return value;
            }
            set
            {
                if (_WillCallPickPrinterDest != value)
                {
                  OnWillCallPickPrinterDestChanging(ref value);
                  ReportPropertyChanging("WillCallPickPrinterDest");
                  _WillCallPickPrinterDest = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("WillCallPickPrinterDest");
                  OnWillCallPickPrinterDestChanged();
              }
            }
        }
        private string _WillCallPickPrinterDest;
        partial void OnGetWillCallPickPrinterDest(ref string value);
        partial void OnWillCallPickPrinterDestChanging(ref string value);
        partial void OnWillCallPickPrinterDestChanged();
    
        /// <summary>
        /// There are no comments for WillCallPickRptSettingKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? WillCallPickRptSettingKey
        {
            get
            {
                int? value = _WillCallPickRptSettingKey;
                OnGetWillCallPickRptSettingKey(ref value);
                return value;
            }
            set
            {
                if (_WillCallPickRptSettingKey != value)
                {
                  OnWillCallPickRptSettingKeyChanging(ref value);
                  ReportPropertyChanging("WillCallPickRptSettingKey");
                  _WillCallPickRptSettingKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WillCallPickRptSettingKey");
                  OnWillCallPickRptSettingKeyChanged();
              }
            }
        }
        private int? _WillCallPickRptSettingKey;
        partial void OnGetWillCallPickRptSettingKey(ref int? value);
        partial void OnWillCallPickRptSettingKeyChanging(ref int? value);
        partial void OnWillCallPickRptSettingKeyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for WhseBins in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Warehouse_WhseBin", "WhseBins")]
        public virtual EntityCollection<WhseBin> WhseBins
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<WhseBin>("Net4Sage.DataAccessModel.Warehouse_WhseBin", "WhseBins");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<WhseBin>("Net4Sage.DataAccessModel.Warehouse_WhseBin", "WhseBins", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvtTrans in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Warehouse_InvtTran", "InvtTrans")]
        public virtual EntityCollection<InvtTran> InvtTrans
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvtTran>("Net4Sage.DataAccessModel.Warehouse_InvtTran", "InvtTrans");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvtTran>("Net4Sage.DataAccessModel.Warehouse_InvtTran", "InvtTrans", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvtTranDists in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Warehouse_InvtTranDist", "InvtTranDists")]
        public virtual EntityCollection<InvtTranDist> InvtTranDists
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvtTranDist>("Net4Sage.DataAccessModel.Warehouse_InvtTranDist", "InvtTranDists");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvtTranDist>("Net4Sage.DataAccessModel.Warehouse_InvtTranDist", "InvtTranDists", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Inventories in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Warehouse_Inventory", "Inventories")]
        public virtual EntityCollection<Inventory> Inventories
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Inventory>("Net4Sage.DataAccessModel.Warehouse_Inventory", "Inventories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Inventory>("Net4Sage.DataAccessModel.Warehouse_Inventory", "Inventories", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Address in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Address_Warehouse", "Address")]
        public virtual Address Address
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Address>("Net4Sage.DataAccessModel.Address_Warehouse", "Address").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Address>("Net4Sage.DataAccessModel.Address_Warehouse", "Address").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Address in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Address> AddressReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Address>("Net4Sage.DataAccessModel.Address_Warehouse", "Address");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Address>("Net4Sage.DataAccessModel.Address_Warehouse", "Address", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Address>("Net4Sage.DataAccessModel.Address_Warehouse", "Address").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.WhseBin in the schema.
    /// </summary>
    /// <KeyProperties>
    /// WhseBinKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="WhseBin")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [Net4Sage.Controls.Lookup.LookupFormTitle(@"Buscar Gaveta")]
    [Net4Sage.Controls.Lookup.LookupAutoShowColumns(false)]
    public partial class WhseBin : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new WhseBin object.
        /// </summary>
        /// <param name="whseBinKey">Initial value of WhseBinKey.</param>
        /// <param name="dfltBin">Initial value of DfltBin.</param>
        /// <param name="exclFromAvail">Initial value of ExclFromAvail.</param>
        /// <param name="lockedForPick">Initial value of LockedForPick.</param>
        /// <param name="lockedForPutaway">Initial value of LockedForPutaway.</param>
        /// <param name="sortOrder">Initial value of SortOrder.</param>
        /// <param name="status">Initial value of Status.</param>
        /// <param name="tempBin">Initial value of TempBin.</param>
        /// <param name="type">Initial value of Type.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        /// <param name="whseBinID">Initial value of WhseBinID.</param>
        /// <param name="whseKey">Initial value of WhseKey.</param>
        public static WhseBin CreateWhseBin(int whseBinKey, short dfltBin, short exclFromAvail, short lockedForPick, short lockedForPutaway, int sortOrder, short status, short tempBin, short type, int updateCounter, string whseBinID, int whseKey)
        {
            WhseBin whseBin = new WhseBin();
            whseBin.WhseBinKey = whseBinKey;
            whseBin.DfltBin = dfltBin;
            whseBin.ExclFromAvail = exclFromAvail;
            whseBin.LockedForPick = lockedForPick;
            whseBin.LockedForPutaway = lockedForPutaway;
            whseBin.SortOrder = sortOrder;
            whseBin.Status = status;
            whseBin.TempBin = tempBin;
            whseBin.Type = type;
            whseBin.UpdateCounter = updateCounter;
            whseBin.WhseBinID = whseBinID;
            whseBin.WhseKey = whseKey;
            return whseBin;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for WhseBinKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupKeyReturn]
        public virtual int WhseBinKey
        {
            get
            {
                int value = _WhseBinKey;
                OnGetWhseBinKey(ref value);
                return value;
            }
            set
            {
                if (_WhseBinKey != value)
                {
                  OnWhseBinKeyChanging(ref value);
                  ReportPropertyChanging("WhseBinKey");
                  _WhseBinKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WhseBinKey");
                  OnWhseBinKeyChanged();
              }
            }
        }
        private int _WhseBinKey;
        partial void OnGetWhseBinKey(ref int value);
        partial void OnWhseBinKeyChanging(ref int value);
        partial void OnWhseBinKeyChanged();
    
        /// <summary>
        /// There are no comments for DfltBin in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short DfltBin
        {
            get
            {
                short value = _DfltBin;
                OnGetDfltBin(ref value);
                return value;
            }
            set
            {
                if (_DfltBin != value)
                {
                  OnDfltBinChanging(ref value);
                  ReportPropertyChanging("DfltBin");
                  _DfltBin = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltBin");
                  OnDfltBinChanged();
              }
            }
        }
        private short _DfltBin = 0;
        partial void OnGetDfltBin(ref short value);
        partial void OnDfltBinChanging(ref short value);
        partial void OnDfltBinChanged();
    
        /// <summary>
        /// There are no comments for ExclFromAvail in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ExclFromAvail
        {
            get
            {
                short value = _ExclFromAvail;
                OnGetExclFromAvail(ref value);
                return value;
            }
            set
            {
                if (_ExclFromAvail != value)
                {
                  OnExclFromAvailChanging(ref value);
                  ReportPropertyChanging("ExclFromAvail");
                  _ExclFromAvail = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ExclFromAvail");
                  OnExclFromAvailChanged();
              }
            }
        }
        private short _ExclFromAvail = 0;
        partial void OnGetExclFromAvail(ref short value);
        partial void OnExclFromAvailChanging(ref short value);
        partial void OnExclFromAvailChanged();
    
        /// <summary>
        /// There are no comments for ImportLogKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ImportLogKey
        {
            get
            {
                int? value = _ImportLogKey;
                OnGetImportLogKey(ref value);
                return value;
            }
            set
            {
                if (_ImportLogKey != value)
                {
                  OnImportLogKeyChanging(ref value);
                  ReportPropertyChanging("ImportLogKey");
                  _ImportLogKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ImportLogKey");
                  OnImportLogKeyChanged();
              }
            }
        }
        private int? _ImportLogKey;
        partial void OnGetImportLogKey(ref int? value);
        partial void OnImportLogKeyChanging(ref int? value);
        partial void OnImportLogKeyChanged();
    
        /// <summary>
        /// There are no comments for Location in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Localización")]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        public virtual string Location
        {
            get
            {
                string value = _Location;
                OnGetLocation(ref value);
                return value;
            }
            set
            {
                if (_Location != value)
                {
                  OnLocationChanging(ref value);
                  ReportPropertyChanging("Location");
                  _Location = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Location");
                  OnLocationChanged();
              }
            }
        }
        private string _Location;
        partial void OnGetLocation(ref string value);
        partial void OnLocationChanging(ref string value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// There are no comments for LockedForPick in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short LockedForPick
        {
            get
            {
                short value = _LockedForPick;
                OnGetLockedForPick(ref value);
                return value;
            }
            set
            {
                if (_LockedForPick != value)
                {
                  OnLockedForPickChanging(ref value);
                  ReportPropertyChanging("LockedForPick");
                  _LockedForPick = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LockedForPick");
                  OnLockedForPickChanged();
              }
            }
        }
        private short _LockedForPick = 0;
        partial void OnGetLockedForPick(ref short value);
        partial void OnLockedForPickChanging(ref short value);
        partial void OnLockedForPickChanged();
    
        /// <summary>
        /// There are no comments for LockedForPutaway in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short LockedForPutaway
        {
            get
            {
                short value = _LockedForPutaway;
                OnGetLockedForPutaway(ref value);
                return value;
            }
            set
            {
                if (_LockedForPutaway != value)
                {
                  OnLockedForPutawayChanging(ref value);
                  ReportPropertyChanging("LockedForPutaway");
                  _LockedForPutaway = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LockedForPutaway");
                  OnLockedForPutawayChanged();
              }
            }
        }
        private short _LockedForPutaway = 0;
        partial void OnGetLockedForPutaway(ref short value);
        partial void OnLockedForPutawayChanging(ref short value);
        partial void OnLockedForPutawayChanged();
    
        /// <summary>
        /// There are no comments for PhysCountCycleKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? PhysCountCycleKey
        {
            get
            {
                int? value = _PhysCountCycleKey;
                OnGetPhysCountCycleKey(ref value);
                return value;
            }
            set
            {
                if (_PhysCountCycleKey != value)
                {
                  OnPhysCountCycleKeyChanging(ref value);
                  ReportPropertyChanging("PhysCountCycleKey");
                  _PhysCountCycleKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PhysCountCycleKey");
                  OnPhysCountCycleKeyChanged();
              }
            }
        }
        private int? _PhysCountCycleKey;
        partial void OnGetPhysCountCycleKey(ref int? value);
        partial void OnPhysCountCycleKeyChanging(ref int? value);
        partial void OnPhysCountCycleKeyChanged();
    
        /// <summary>
        /// There are no comments for SortOrder in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SortOrder
        {
            get
            {
                int value = _SortOrder;
                OnGetSortOrder(ref value);
                return value;
            }
            set
            {
                if (_SortOrder != value)
                {
                  OnSortOrderChanging(ref value);
                  ReportPropertyChanging("SortOrder");
                  _SortOrder = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SortOrder");
                  OnSortOrderChanged();
              }
            }
        }
        private int _SortOrder = 0;
        partial void OnGetSortOrder(ref int value);
        partial void OnSortOrderChanging(ref int value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Status
        {
            get
            {
                short value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private short _Status = 1;
        partial void OnGetStatus(ref short value);
        partial void OnStatusChanging(ref short value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// There are no comments for TempBin in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short TempBin
        {
            get
            {
                short value = _TempBin;
                OnGetTempBin(ref value);
                return value;
            }
            set
            {
                if (_TempBin != value)
                {
                  OnTempBinChanging(ref value);
                  ReportPropertyChanging("TempBin");
                  _TempBin = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TempBin");
                  OnTempBinChanged();
              }
            }
        }
        private short _TempBin = 0;
        partial void OnGetTempBin(ref short value);
        partial void OnTempBinChanging(ref short value);
        partial void OnTempBinChanged();
    
        /// <summary>
        /// There are no comments for Type in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Type
        {
            get
            {
                short value = _Type;
                OnGetType(ref value);
                return value;
            }
            set
            {
                if (_Type != value)
                {
                  OnTypeChanging(ref value);
                  ReportPropertyChanging("Type");
                  _Type = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Type");
                  OnTypeChanged();
              }
            }
        }
        private short _Type = 1;
        partial void OnGetType(ref short value);
        partial void OnTypeChanging(ref short value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();
    
        /// <summary>
        /// There are no comments for VolCapacity in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? VolCapacity
        {
            get
            {
                decimal? value = _VolCapacity;
                OnGetVolCapacity(ref value);
                return value;
            }
            set
            {
                if (_VolCapacity != value)
                {
                  OnVolCapacityChanging(ref value);
                  ReportPropertyChanging("VolCapacity");
                  _VolCapacity = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VolCapacity");
                  OnVolCapacityChanged();
              }
            }
        }
        private decimal? _VolCapacity = 0m;
        partial void OnGetVolCapacity(ref decimal? value);
        partial void OnVolCapacityChanging(ref decimal? value);
        partial void OnVolCapacityChanged();
    
        /// <summary>
        /// There are no comments for VolCapUnitMeasKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? VolCapUnitMeasKey
        {
            get
            {
                int? value = _VolCapUnitMeasKey;
                OnGetVolCapUnitMeasKey(ref value);
                return value;
            }
            set
            {
                if (_VolCapUnitMeasKey != value)
                {
                  OnVolCapUnitMeasKeyChanging(ref value);
                  ReportPropertyChanging("VolCapUnitMeasKey");
                  _VolCapUnitMeasKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VolCapUnitMeasKey");
                  OnVolCapUnitMeasKeyChanged();
              }
            }
        }
        private int? _VolCapUnitMeasKey;
        partial void OnGetVolCapUnitMeasKey(ref int? value);
        partial void OnVolCapUnitMeasKeyChanging(ref int? value);
        partial void OnVolCapUnitMeasKeyChanged();
    
        /// <summary>
        /// There are no comments for WghtCapacity in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? WghtCapacity
        {
            get
            {
                decimal? value = _WghtCapacity;
                OnGetWghtCapacity(ref value);
                return value;
            }
            set
            {
                if (_WghtCapacity != value)
                {
                  OnWghtCapacityChanging(ref value);
                  ReportPropertyChanging("WghtCapacity");
                  _WghtCapacity = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WghtCapacity");
                  OnWghtCapacityChanged();
              }
            }
        }
        private decimal? _WghtCapacity = 0m;
        partial void OnGetWghtCapacity(ref decimal? value);
        partial void OnWghtCapacityChanging(ref decimal? value);
        partial void OnWghtCapacityChanged();
    
        /// <summary>
        /// There are no comments for WghtCapUnitMeasKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? WghtCapUnitMeasKey
        {
            get
            {
                int? value = _WghtCapUnitMeasKey;
                OnGetWghtCapUnitMeasKey(ref value);
                return value;
            }
            set
            {
                if (_WghtCapUnitMeasKey != value)
                {
                  OnWghtCapUnitMeasKeyChanging(ref value);
                  ReportPropertyChanging("WghtCapUnitMeasKey");
                  _WghtCapUnitMeasKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WghtCapUnitMeasKey");
                  OnWghtCapUnitMeasKeyChanged();
              }
            }
        }
        private int? _WghtCapUnitMeasKey;
        partial void OnGetWghtCapUnitMeasKey(ref int? value);
        partial void OnWghtCapUnitMeasKeyChanging(ref int? value);
        partial void OnWghtCapUnitMeasKeyChanged();
    
        /// <summary>
        /// There are no comments for WhseBinID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Gaveta")]
        [Net4Sage.Controls.Lookup.LookupTextReturn]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"Gaveta")]
        public virtual string WhseBinID
        {
            get
            {
                string value = _WhseBinID;
                OnGetWhseBinID(ref value);
                return value;
            }
            set
            {
                if (_WhseBinID != value)
                {
                  OnWhseBinIDChanging(ref value);
                  ReportPropertyChanging("WhseBinID");
                  _WhseBinID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("WhseBinID");
                  OnWhseBinIDChanged();
              }
            }
        }
        private string _WhseBinID;
        partial void OnGetWhseBinID(ref string value);
        partial void OnWhseBinIDChanging(ref string value);
        partial void OnWhseBinIDChanged();
    
        /// <summary>
        /// There are no comments for WhseKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int WhseKey
        {
            get
            {
                int value = _WhseKey;
                OnGetWhseKey(ref value);
                return value;
            }
            set
            {
                if (_WhseKey != value)
                {
                  OnWhseKeyChanging(ref value);
                  ReportPropertyChanging("WhseKey");
                  _WhseKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WhseKey");
                  OnWhseKeyChanged();
              }
            }
        }
        private int _WhseKey;
        partial void OnGetWhseKey(ref int value);
        partial void OnWhseKeyChanging(ref int value);
        partial void OnWhseKeyChanged();
    
        /// <summary>
        /// There are no comments for WhseZoneKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? WhseZoneKey
        {
            get
            {
                int? value = _WhseZoneKey;
                OnGetWhseZoneKey(ref value);
                return value;
            }
            set
            {
                if (_WhseZoneKey != value)
                {
                  OnWhseZoneKeyChanging(ref value);
                  ReportPropertyChanging("WhseZoneKey");
                  _WhseZoneKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WhseZoneKey");
                  OnWhseZoneKeyChanged();
              }
            }
        }
        private int? _WhseZoneKey;
        partial void OnGetWhseZoneKey(ref int? value);
        partial void OnWhseZoneKeyChanging(ref int? value);
        partial void OnWhseZoneKeyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Warehouse in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Warehouse_WhseBin", "Warehouse")]
        public virtual Warehouse Warehouse
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Warehouse>("Net4Sage.DataAccessModel.Warehouse_WhseBin", "Warehouse").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Warehouse>("Net4Sage.DataAccessModel.Warehouse_WhseBin", "Warehouse").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Warehouse in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Warehouse> WarehouseReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Warehouse>("Net4Sage.DataAccessModel.Warehouse_WhseBin", "Warehouse");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Warehouse>("Net4Sage.DataAccessModel.Warehouse_WhseBin", "Warehouse", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Warehouse>("Net4Sage.DataAccessModel.Warehouse_WhseBin", "Warehouse").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvtLotBins in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "WhseBin_InvtLotBin", "InvtLotBins")]
        public virtual EntityCollection<InvtLotBin> InvtLotBins
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvtLotBin>("Net4Sage.DataAccessModel.WhseBin_InvtLotBin", "InvtLotBins");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvtLotBin>("Net4Sage.DataAccessModel.WhseBin_InvtLotBin", "InvtLotBins", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvtTranDists in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "WhseBin_InvtTranDist", "InvtTranDists")]
        public virtual EntityCollection<InvtTranDist> InvtTranDists
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvtTranDist>("Net4Sage.DataAccessModel.WhseBin_InvtTranDist", "InvtTranDists");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvtTranDist>("Net4Sage.DataAccessModel.WhseBin_InvtTranDist", "InvtTranDists", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.Inventory in the schema.
    /// </summary>
    /// <KeyProperties>
    /// WhseKey
    /// ItemKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="Inventory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Inventory : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Inventory object.
        /// </summary>
        /// <param name="whseKey">Initial value of WhseKey.</param>
        /// <param name="itemKey">Initial value of ItemKey.</param>
        /// <param name="avgUnitCost">Initial value of AvgUnitCost.</param>
        /// <param name="buyerKey">Initial value of BuyerKey.</param>
        /// <param name="closeSOLineOnFirstShip">Initial value of CloseSOLineOnFirstShip.</param>
        /// <param name="cOSAcctKey">Initial value of COSAcctKey.</param>
        /// <param name="costTierAdjAcctKey">Initial value of CostTierAdjAcctKey.</param>
        /// <param name="createType">Initial value of CreateType.</param>
        /// <param name="dateEstab">Initial value of DateEstab.</param>
        /// <param name="demand">Initial value of Demand.</param>
        /// <param name="invtAcctKey">Initial value of InvtAcctKey.</param>
        /// <param name="issueAcctKey">Initial value of IssueAcctKey.</param>
        /// <param name="landedUnitCost">Initial value of LandedUnitCost.</param>
        /// <param name="lastPhysCountVar">Initial value of LastPhysCountVar.</param>
        /// <param name="lastUnitCost">Initial value of LastUnitCost.</param>
        /// <param name="leadTime">Initial value of LeadTime.</param>
        /// <param name="linePoint">Initial value of LinePoint.</param>
        /// <param name="maxStockQty">Initial value of MaxStockQty.</param>
        /// <param name="minStockQty">Initial value of MinStockQty.</param>
        /// <param name="miscAdjAcctKey">Initial value of MiscAdjAcctKey.</param>
        /// <param name="nonStock">Initial value of NonStock.</param>
        /// <param name="orderPoint">Initial value of OrderPoint.</param>
        /// <param name="physCountAcctKey">Initial value of PhysCountAcctKey.</param>
        /// <param name="physCountTolPct">Initial value of PhysCountTolPct.</param>
        /// <param name="pickMethod">Initial value of PickMethod.</param>
        /// <param name="pickOneLotOnly">Initial value of PickOneLotOnly.</param>
        /// <param name="pickPrefBinsFirst">Initial value of PickPrefBinsFirst.</param>
        /// <param name="purchAcctKey">Initial value of PurchAcctKey.</param>
        /// <param name="qtyOnBO">Initial value of QtyOnBO.</param>
        /// <param name="qtyOnPO">Initial value of QtyOnPO.</param>
        /// <param name="qtyOnSO">Initial value of QtyOnSO.</param>
        /// <param name="qtyOnTrnsfr">Initial value of QtyOnTrnsfr.</param>
        /// <param name="qtyOnWO">Initial value of QtyOnWO.</param>
        /// <param name="qtyReqForWO">Initial value of QtyReqForWO.</param>
        /// <param name="rankByCOS">Initial value of RankByCOS.</param>
        /// <param name="rankByGrMargin">Initial value of RankByGrMargin.</param>
        /// <param name="rankByHits">Initial value of RankByHits.</param>
        /// <param name="rankByQtySold">Initial value of RankByQtySold.</param>
        /// <param name="reordMeth">Initial value of ReordMeth.</param>
        /// <param name="rplcmntUnitCost">Initial value of RplcmntUnitCost.</param>
        /// <param name="rplnsmntLevel">Initial value of RplnsmntLevel.</param>
        /// <param name="safetyStockQty">Initial value of SafetyStockQty.</param>
        /// <param name="salesAcctKey">Initial value of SalesAcctKey.</param>
        /// <param name="salesOffsetAcctKey">Initial value of SalesOffsetAcctKey.</param>
        /// <param name="salesReturnAcctKey">Initial value of SalesReturnAcctKey.</param>
        /// <param name="serialNoLinesOnPickList">Initial value of SerialNoLinesOnPickList.</param>
        /// <param name="shipComplete">Initial value of ShipComplete.</param>
        /// <param name="showAvailLots">Initial value of ShowAvailLots.</param>
        /// <param name="status">Initial value of Status.</param>
        /// <param name="stdOrdQty">Initial value of StdOrdQty.</param>
        /// <param name="stdUnitCost">Initial value of StdUnitCost.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        public static Inventory CreateInventory(int whseKey, int itemKey, decimal avgUnitCost, int buyerKey, short closeSOLineOnFirstShip, int cOSAcctKey, int costTierAdjAcctKey, short createType, global::System.DateTime dateEstab, decimal demand, int invtAcctKey, int issueAcctKey, decimal landedUnitCost, decimal lastPhysCountVar, decimal lastUnitCost, short leadTime, decimal linePoint, decimal maxStockQty, decimal minStockQty, int miscAdjAcctKey, short nonStock, decimal orderPoint, int physCountAcctKey, decimal physCountTolPct, short pickMethod, short pickOneLotOnly, short pickPrefBinsFirst, int purchAcctKey, decimal qtyOnBO, decimal qtyOnPO, decimal qtyOnSO, decimal qtyOnTrnsfr, decimal qtyOnWO, decimal qtyReqForWO, string rankByCOS, string rankByGrMargin, string rankByHits, string rankByQtySold, short reordMeth, decimal rplcmntUnitCost, short rplnsmntLevel, decimal safetyStockQty, int salesAcctKey, int salesOffsetAcctKey, int salesReturnAcctKey, short serialNoLinesOnPickList, short shipComplete, short showAvailLots, short status, decimal stdOrdQty, decimal stdUnitCost, int updateCounter)
        {
            Inventory inventory = new Inventory();
            inventory.WhseKey = whseKey;
            inventory.ItemKey = itemKey;
            inventory.AvgUnitCost = avgUnitCost;
            inventory.BuyerKey = buyerKey;
            inventory.CloseSOLineOnFirstShip = closeSOLineOnFirstShip;
            inventory.COSAcctKey = cOSAcctKey;
            inventory.CostTierAdjAcctKey = costTierAdjAcctKey;
            inventory.CreateType = createType;
            inventory.DateEstab = dateEstab;
            inventory.Demand = demand;
            inventory.InvtAcctKey = invtAcctKey;
            inventory.IssueAcctKey = issueAcctKey;
            inventory.LandedUnitCost = landedUnitCost;
            inventory.LastPhysCountVar = lastPhysCountVar;
            inventory.LastUnitCost = lastUnitCost;
            inventory.LeadTime = leadTime;
            inventory.LinePoint = linePoint;
            inventory.MaxStockQty = maxStockQty;
            inventory.MinStockQty = minStockQty;
            inventory.MiscAdjAcctKey = miscAdjAcctKey;
            inventory.NonStock = nonStock;
            inventory.OrderPoint = orderPoint;
            inventory.PhysCountAcctKey = physCountAcctKey;
            inventory.PhysCountTolPct = physCountTolPct;
            inventory.PickMethod = pickMethod;
            inventory.PickOneLotOnly = pickOneLotOnly;
            inventory.PickPrefBinsFirst = pickPrefBinsFirst;
            inventory.PurchAcctKey = purchAcctKey;
            inventory.QtyOnBO = qtyOnBO;
            inventory.QtyOnPO = qtyOnPO;
            inventory.QtyOnSO = qtyOnSO;
            inventory.QtyOnTrnsfr = qtyOnTrnsfr;
            inventory.QtyOnWO = qtyOnWO;
            inventory.QtyReqForWO = qtyReqForWO;
            inventory.RankByCOS = rankByCOS;
            inventory.RankByGrMargin = rankByGrMargin;
            inventory.RankByHits = rankByHits;
            inventory.RankByQtySold = rankByQtySold;
            inventory.ReordMeth = reordMeth;
            inventory.RplcmntUnitCost = rplcmntUnitCost;
            inventory.RplnsmntLevel = rplnsmntLevel;
            inventory.SafetyStockQty = safetyStockQty;
            inventory.SalesAcctKey = salesAcctKey;
            inventory.SalesOffsetAcctKey = salesOffsetAcctKey;
            inventory.SalesReturnAcctKey = salesReturnAcctKey;
            inventory.SerialNoLinesOnPickList = serialNoLinesOnPickList;
            inventory.ShipComplete = shipComplete;
            inventory.ShowAvailLots = showAvailLots;
            inventory.Status = status;
            inventory.StdOrdQty = stdOrdQty;
            inventory.StdUnitCost = stdUnitCost;
            inventory.UpdateCounter = updateCounter;
            return inventory;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for WhseKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int WhseKey
        {
            get
            {
                int value = _WhseKey;
                OnGetWhseKey(ref value);
                return value;
            }
            set
            {
                if (_WhseKey != value)
                {
                  OnWhseKeyChanging(ref value);
                  ReportPropertyChanging("WhseKey");
                  _WhseKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WhseKey");
                  OnWhseKeyChanged();
              }
            }
        }
        private int _WhseKey;
        partial void OnGetWhseKey(ref int value);
        partial void OnWhseKeyChanging(ref int value);
        partial void OnWhseKeyChanged();
    
        /// <summary>
        /// There are no comments for ItemKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ItemKey
        {
            get
            {
                int value = _ItemKey;
                OnGetItemKey(ref value);
                return value;
            }
            set
            {
                if (_ItemKey != value)
                {
                  OnItemKeyChanging(ref value);
                  ReportPropertyChanging("ItemKey");
                  _ItemKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ItemKey");
                  OnItemKeyChanged();
              }
            }
        }
        private int _ItemKey;
        partial void OnGetItemKey(ref int value);
        partial void OnItemKeyChanging(ref int value);
        partial void OnItemKeyChanged();
    
        /// <summary>
        /// There are no comments for AvgUnitCost in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal AvgUnitCost
        {
            get
            {
                decimal value = _AvgUnitCost;
                OnGetAvgUnitCost(ref value);
                return value;
            }
            set
            {
                if (_AvgUnitCost != value)
                {
                  OnAvgUnitCostChanging(ref value);
                  ReportPropertyChanging("AvgUnitCost");
                  _AvgUnitCost = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AvgUnitCost");
                  OnAvgUnitCostChanged();
              }
            }
        }
        private decimal _AvgUnitCost = 0m;
        partial void OnGetAvgUnitCost(ref decimal value);
        partial void OnAvgUnitCostChanging(ref decimal value);
        partial void OnAvgUnitCostChanged();
    
        /// <summary>
        /// There are no comments for BuyerKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int BuyerKey
        {
            get
            {
                int value = _BuyerKey;
                OnGetBuyerKey(ref value);
                return value;
            }
            set
            {
                if (_BuyerKey != value)
                {
                  OnBuyerKeyChanging(ref value);
                  ReportPropertyChanging("BuyerKey");
                  _BuyerKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BuyerKey");
                  OnBuyerKeyChanged();
              }
            }
        }
        private int _BuyerKey;
        partial void OnGetBuyerKey(ref int value);
        partial void OnBuyerKeyChanging(ref int value);
        partial void OnBuyerKeyChanged();
    
        /// <summary>
        /// There are no comments for CloseSOLineOnFirstShip in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CloseSOLineOnFirstShip
        {
            get
            {
                short value = _CloseSOLineOnFirstShip;
                OnGetCloseSOLineOnFirstShip(ref value);
                return value;
            }
            set
            {
                if (_CloseSOLineOnFirstShip != value)
                {
                  OnCloseSOLineOnFirstShipChanging(ref value);
                  ReportPropertyChanging("CloseSOLineOnFirstShip");
                  _CloseSOLineOnFirstShip = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CloseSOLineOnFirstShip");
                  OnCloseSOLineOnFirstShipChanged();
              }
            }
        }
        private short _CloseSOLineOnFirstShip = 0;
        partial void OnGetCloseSOLineOnFirstShip(ref short value);
        partial void OnCloseSOLineOnFirstShipChanging(ref short value);
        partial void OnCloseSOLineOnFirstShipChanged();
    
        /// <summary>
        /// There are no comments for COSAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int COSAcctKey
        {
            get
            {
                int value = _COSAcctKey;
                OnGetCOSAcctKey(ref value);
                return value;
            }
            set
            {
                if (_COSAcctKey != value)
                {
                  OnCOSAcctKeyChanging(ref value);
                  ReportPropertyChanging("COSAcctKey");
                  _COSAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("COSAcctKey");
                  OnCOSAcctKeyChanged();
              }
            }
        }
        private int _COSAcctKey;
        partial void OnGetCOSAcctKey(ref int value);
        partial void OnCOSAcctKeyChanging(ref int value);
        partial void OnCOSAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for CostOfCarry in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? CostOfCarry
        {
            get
            {
                decimal? value = _CostOfCarry;
                OnGetCostOfCarry(ref value);
                return value;
            }
            set
            {
                if (_CostOfCarry != value)
                {
                  OnCostOfCarryChanging(ref value);
                  ReportPropertyChanging("CostOfCarry");
                  _CostOfCarry = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CostOfCarry");
                  OnCostOfCarryChanged();
              }
            }
        }
        private decimal? _CostOfCarry;
        partial void OnGetCostOfCarry(ref decimal? value);
        partial void OnCostOfCarryChanging(ref decimal? value);
        partial void OnCostOfCarryChanged();
    
        /// <summary>
        /// There are no comments for CostTierAdjAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CostTierAdjAcctKey
        {
            get
            {
                int value = _CostTierAdjAcctKey;
                OnGetCostTierAdjAcctKey(ref value);
                return value;
            }
            set
            {
                if (_CostTierAdjAcctKey != value)
                {
                  OnCostTierAdjAcctKeyChanging(ref value);
                  ReportPropertyChanging("CostTierAdjAcctKey");
                  _CostTierAdjAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CostTierAdjAcctKey");
                  OnCostTierAdjAcctKeyChanged();
              }
            }
        }
        private int _CostTierAdjAcctKey;
        partial void OnGetCostTierAdjAcctKey(ref int value);
        partial void OnCostTierAdjAcctKeyChanging(ref int value);
        partial void OnCostTierAdjAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for CostToReplenish in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? CostToReplenish
        {
            get
            {
                decimal? value = _CostToReplenish;
                OnGetCostToReplenish(ref value);
                return value;
            }
            set
            {
                if (_CostToReplenish != value)
                {
                  OnCostToReplenishChanging(ref value);
                  ReportPropertyChanging("CostToReplenish");
                  _CostToReplenish = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CostToReplenish");
                  OnCostToReplenishChanged();
              }
            }
        }
        private decimal? _CostToReplenish;
        partial void OnGetCostToReplenish(ref decimal? value);
        partial void OnCostToReplenishChanging(ref decimal? value);
        partial void OnCostToReplenishChanged();
    
        /// <summary>
        /// There are no comments for CreateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CreateDate
        {
            get
            {
                global::System.DateTime? value = _CreateDate;
                OnGetCreateDate(ref value);
                return value;
            }
            set
            {
                if (_CreateDate != value)
                {
                  OnCreateDateChanging(ref value);
                  ReportPropertyChanging("CreateDate");
                  _CreateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateDate");
                  OnCreateDateChanged();
              }
            }
        }
        private global::System.DateTime? _CreateDate;
        partial void OnGetCreateDate(ref global::System.DateTime? value);
        partial void OnCreateDateChanging(ref global::System.DateTime? value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// There are no comments for CreateType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CreateType
        {
            get
            {
                short value = _CreateType;
                OnGetCreateType(ref value);
                return value;
            }
            set
            {
                if (_CreateType != value)
                {
                  OnCreateTypeChanging(ref value);
                  ReportPropertyChanging("CreateType");
                  _CreateType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateType");
                  OnCreateTypeChanged();
              }
            }
        }
        private short _CreateType = 0;
        partial void OnGetCreateType(ref short value);
        partial void OnCreateTypeChanging(ref short value);
        partial void OnCreateTypeChanged();
    
        /// <summary>
        /// There are no comments for CreateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CreateUserID
        {
            get
            {
                string value = _CreateUserID;
                OnGetCreateUserID(ref value);
                return value;
            }
            set
            {
                if (_CreateUserID != value)
                {
                  OnCreateUserIDChanging(ref value);
                  ReportPropertyChanging("CreateUserID");
                  _CreateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CreateUserID");
                  OnCreateUserIDChanged();
              }
            }
        }
        private string _CreateUserID;
        partial void OnGetCreateUserID(ref string value);
        partial void OnCreateUserIDChanging(ref string value);
        partial void OnCreateUserIDChanged();
    
        /// <summary>
        /// There are no comments for DateEstab in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime DateEstab
        {
            get
            {
                global::System.DateTime value = _DateEstab;
                OnGetDateEstab(ref value);
                return value;
            }
            set
            {
                if (_DateEstab != value)
                {
                  OnDateEstabChanging(ref value);
                  ReportPropertyChanging("DateEstab");
                  _DateEstab = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DateEstab");
                  OnDateEstabChanged();
              }
            }
        }
        private global::System.DateTime _DateEstab;
        partial void OnGetDateEstab(ref global::System.DateTime value);
        partial void OnDateEstabChanging(ref global::System.DateTime value);
        partial void OnDateEstabChanged();
    
        /// <summary>
        /// There are no comments for Demand in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal Demand
        {
            get
            {
                decimal value = _Demand;
                OnGetDemand(ref value);
                return value;
            }
            set
            {
                if (_Demand != value)
                {
                  OnDemandChanging(ref value);
                  ReportPropertyChanging("Demand");
                  _Demand = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Demand");
                  OnDemandChanged();
              }
            }
        }
        private decimal _Demand = 0m;
        partial void OnGetDemand(ref decimal value);
        partial void OnDemandChanging(ref decimal value);
        partial void OnDemandChanged();
    
        /// <summary>
        /// There are no comments for DemandCalcKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? DemandCalcKey
        {
            get
            {
                int? value = _DemandCalcKey;
                OnGetDemandCalcKey(ref value);
                return value;
            }
            set
            {
                if (_DemandCalcKey != value)
                {
                  OnDemandCalcKeyChanging(ref value);
                  ReportPropertyChanging("DemandCalcKey");
                  _DemandCalcKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DemandCalcKey");
                  OnDemandCalcKeyChanged();
              }
            }
        }
        private int? _DemandCalcKey;
        partial void OnGetDemandCalcKey(ref int? value);
        partial void OnDemandCalcKeyChanging(ref int? value);
        partial void OnDemandCalcKeyChanged();
    
        /// <summary>
        /// There are no comments for ImportLogKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ImportLogKey
        {
            get
            {
                int? value = _ImportLogKey;
                OnGetImportLogKey(ref value);
                return value;
            }
            set
            {
                if (_ImportLogKey != value)
                {
                  OnImportLogKeyChanging(ref value);
                  ReportPropertyChanging("ImportLogKey");
                  _ImportLogKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ImportLogKey");
                  OnImportLogKeyChanged();
              }
            }
        }
        private int? _ImportLogKey;
        partial void OnGetImportLogKey(ref int? value);
        partial void OnImportLogKeyChanging(ref int? value);
        partial void OnImportLogKeyChanged();
    
        /// <summary>
        /// There are no comments for InvtAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvtAcctKey
        {
            get
            {
                int value = _InvtAcctKey;
                OnGetInvtAcctKey(ref value);
                return value;
            }
            set
            {
                if (_InvtAcctKey != value)
                {
                  OnInvtAcctKeyChanging(ref value);
                  ReportPropertyChanging("InvtAcctKey");
                  _InvtAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvtAcctKey");
                  OnInvtAcctKeyChanged();
              }
            }
        }
        private int _InvtAcctKey;
        partial void OnGetInvtAcctKey(ref int value);
        partial void OnInvtAcctKeyChanging(ref int value);
        partial void OnInvtAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for IssueAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int IssueAcctKey
        {
            get
            {
                int value = _IssueAcctKey;
                OnGetIssueAcctKey(ref value);
                return value;
            }
            set
            {
                if (_IssueAcctKey != value)
                {
                  OnIssueAcctKeyChanging(ref value);
                  ReportPropertyChanging("IssueAcctKey");
                  _IssueAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IssueAcctKey");
                  OnIssueAcctKeyChanged();
              }
            }
        }
        private int _IssueAcctKey;
        partial void OnGetIssueAcctKey(ref int value);
        partial void OnIssueAcctKeyChanging(ref int value);
        partial void OnIssueAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for LandedUnitCost in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal LandedUnitCost
        {
            get
            {
                decimal value = _LandedUnitCost;
                OnGetLandedUnitCost(ref value);
                return value;
            }
            set
            {
                if (_LandedUnitCost != value)
                {
                  OnLandedUnitCostChanging(ref value);
                  ReportPropertyChanging("LandedUnitCost");
                  _LandedUnitCost = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LandedUnitCost");
                  OnLandedUnitCostChanged();
              }
            }
        }
        private decimal _LandedUnitCost = 0m;
        partial void OnGetLandedUnitCost(ref decimal value);
        partial void OnLandedUnitCostChanging(ref decimal value);
        partial void OnLandedUnitCostChanged();
    
        /// <summary>
        /// There are no comments for LastDemandCalcInvtPerKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? LastDemandCalcInvtPerKey
        {
            get
            {
                int? value = _LastDemandCalcInvtPerKey;
                OnGetLastDemandCalcInvtPerKey(ref value);
                return value;
            }
            set
            {
                if (_LastDemandCalcInvtPerKey != value)
                {
                  OnLastDemandCalcInvtPerKeyChanging(ref value);
                  ReportPropertyChanging("LastDemandCalcInvtPerKey");
                  _LastDemandCalcInvtPerKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LastDemandCalcInvtPerKey");
                  OnLastDemandCalcInvtPerKeyChanged();
              }
            }
        }
        private int? _LastDemandCalcInvtPerKey;
        partial void OnGetLastDemandCalcInvtPerKey(ref int? value);
        partial void OnLastDemandCalcInvtPerKeyChanging(ref int? value);
        partial void OnLastDemandCalcInvtPerKeyChanged();
    
        /// <summary>
        /// There are no comments for LastPhysCount in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? LastPhysCount
        {
            get
            {
                global::System.DateTime? value = _LastPhysCount;
                OnGetLastPhysCount(ref value);
                return value;
            }
            set
            {
                if (_LastPhysCount != value)
                {
                  OnLastPhysCountChanging(ref value);
                  ReportPropertyChanging("LastPhysCount");
                  _LastPhysCount = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LastPhysCount");
                  OnLastPhysCountChanged();
              }
            }
        }
        private global::System.DateTime? _LastPhysCount;
        partial void OnGetLastPhysCount(ref global::System.DateTime? value);
        partial void OnLastPhysCountChanging(ref global::System.DateTime? value);
        partial void OnLastPhysCountChanged();
    
        /// <summary>
        /// There are no comments for LastPhysCountVar in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal LastPhysCountVar
        {
            get
            {
                decimal value = _LastPhysCountVar;
                OnGetLastPhysCountVar(ref value);
                return value;
            }
            set
            {
                if (_LastPhysCountVar != value)
                {
                  OnLastPhysCountVarChanging(ref value);
                  ReportPropertyChanging("LastPhysCountVar");
                  _LastPhysCountVar = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LastPhysCountVar");
                  OnLastPhysCountVarChanged();
              }
            }
        }
        private decimal _LastPhysCountVar = 0m;
        partial void OnGetLastPhysCountVar(ref decimal value);
        partial void OnLastPhysCountVarChanging(ref decimal value);
        partial void OnLastPhysCountVarChanged();
    
        /// <summary>
        /// There are no comments for LastReplParamCalcInvtPerKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? LastReplParamCalcInvtPerKey
        {
            get
            {
                int? value = _LastReplParamCalcInvtPerKey;
                OnGetLastReplParamCalcInvtPerKey(ref value);
                return value;
            }
            set
            {
                if (_LastReplParamCalcInvtPerKey != value)
                {
                  OnLastReplParamCalcInvtPerKeyChanging(ref value);
                  ReportPropertyChanging("LastReplParamCalcInvtPerKey");
                  _LastReplParamCalcInvtPerKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LastReplParamCalcInvtPerKey");
                  OnLastReplParamCalcInvtPerKeyChanged();
              }
            }
        }
        private int? _LastReplParamCalcInvtPerKey;
        partial void OnGetLastReplParamCalcInvtPerKey(ref int? value);
        partial void OnLastReplParamCalcInvtPerKeyChanging(ref int? value);
        partial void OnLastReplParamCalcInvtPerKeyChanged();
    
        /// <summary>
        /// There are no comments for LastStockOut in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? LastStockOut
        {
            get
            {
                global::System.DateTime? value = _LastStockOut;
                OnGetLastStockOut(ref value);
                return value;
            }
            set
            {
                if (_LastStockOut != value)
                {
                  OnLastStockOutChanging(ref value);
                  ReportPropertyChanging("LastStockOut");
                  _LastStockOut = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LastStockOut");
                  OnLastStockOutChanged();
              }
            }
        }
        private global::System.DateTime? _LastStockOut;
        partial void OnGetLastStockOut(ref global::System.DateTime? value);
        partial void OnLastStockOutChanging(ref global::System.DateTime? value);
        partial void OnLastStockOutChanged();
    
        /// <summary>
        /// There are no comments for LastUnitCost in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal LastUnitCost
        {
            get
            {
                decimal value = _LastUnitCost;
                OnGetLastUnitCost(ref value);
                return value;
            }
            set
            {
                if (_LastUnitCost != value)
                {
                  OnLastUnitCostChanging(ref value);
                  ReportPropertyChanging("LastUnitCost");
                  _LastUnitCost = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LastUnitCost");
                  OnLastUnitCostChanged();
              }
            }
        }
        private decimal _LastUnitCost = 0m;
        partial void OnGetLastUnitCost(ref decimal value);
        partial void OnLastUnitCostChanging(ref decimal value);
        partial void OnLastUnitCostChanged();
    
        /// <summary>
        /// There are no comments for LeadTime in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short LeadTime
        {
            get
            {
                short value = _LeadTime;
                OnGetLeadTime(ref value);
                return value;
            }
            set
            {
                if (_LeadTime != value)
                {
                  OnLeadTimeChanging(ref value);
                  ReportPropertyChanging("LeadTime");
                  _LeadTime = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LeadTime");
                  OnLeadTimeChanged();
              }
            }
        }
        private short _LeadTime = 0;
        partial void OnGetLeadTime(ref short value);
        partial void OnLeadTimeChanging(ref short value);
        partial void OnLeadTimeChanged();
    
        /// <summary>
        /// There are no comments for LeadTimeCalcKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? LeadTimeCalcKey
        {
            get
            {
                int? value = _LeadTimeCalcKey;
                OnGetLeadTimeCalcKey(ref value);
                return value;
            }
            set
            {
                if (_LeadTimeCalcKey != value)
                {
                  OnLeadTimeCalcKeyChanging(ref value);
                  ReportPropertyChanging("LeadTimeCalcKey");
                  _LeadTimeCalcKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LeadTimeCalcKey");
                  OnLeadTimeCalcKeyChanged();
              }
            }
        }
        private int? _LeadTimeCalcKey;
        partial void OnGetLeadTimeCalcKey(ref int? value);
        partial void OnLeadTimeCalcKeyChanging(ref int? value);
        partial void OnLeadTimeCalcKeyChanged();
    
        /// <summary>
        /// There are no comments for LinePoint in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal LinePoint
        {
            get
            {
                decimal value = _LinePoint;
                OnGetLinePoint(ref value);
                return value;
            }
            set
            {
                if (_LinePoint != value)
                {
                  OnLinePointChanging(ref value);
                  ReportPropertyChanging("LinePoint");
                  _LinePoint = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LinePoint");
                  OnLinePointChanged();
              }
            }
        }
        private decimal _LinePoint = 0m;
        partial void OnGetLinePoint(ref decimal value);
        partial void OnLinePointChanging(ref decimal value);
        partial void OnLinePointChanged();
    
        /// <summary>
        /// There are no comments for MaxStockQty in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal MaxStockQty
        {
            get
            {
                decimal value = _MaxStockQty;
                OnGetMaxStockQty(ref value);
                return value;
            }
            set
            {
                if (_MaxStockQty != value)
                {
                  OnMaxStockQtyChanging(ref value);
                  ReportPropertyChanging("MaxStockQty");
                  _MaxStockQty = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MaxStockQty");
                  OnMaxStockQtyChanged();
              }
            }
        }
        private decimal _MaxStockQty = 0m;
        partial void OnGetMaxStockQty(ref decimal value);
        partial void OnMaxStockQtyChanging(ref decimal value);
        partial void OnMaxStockQtyChanged();
    
        /// <summary>
        /// There are no comments for MinStockQty in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal MinStockQty
        {
            get
            {
                decimal value = _MinStockQty;
                OnGetMinStockQty(ref value);
                return value;
            }
            set
            {
                if (_MinStockQty != value)
                {
                  OnMinStockQtyChanging(ref value);
                  ReportPropertyChanging("MinStockQty");
                  _MinStockQty = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MinStockQty");
                  OnMinStockQtyChanged();
              }
            }
        }
        private decimal _MinStockQty = 0m;
        partial void OnGetMinStockQty(ref decimal value);
        partial void OnMinStockQtyChanging(ref decimal value);
        partial void OnMinStockQtyChanged();
    
        /// <summary>
        /// There are no comments for MiscAdjAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int MiscAdjAcctKey
        {
            get
            {
                int value = _MiscAdjAcctKey;
                OnGetMiscAdjAcctKey(ref value);
                return value;
            }
            set
            {
                if (_MiscAdjAcctKey != value)
                {
                  OnMiscAdjAcctKeyChanging(ref value);
                  ReportPropertyChanging("MiscAdjAcctKey");
                  _MiscAdjAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MiscAdjAcctKey");
                  OnMiscAdjAcctKeyChanged();
              }
            }
        }
        private int _MiscAdjAcctKey;
        partial void OnGetMiscAdjAcctKey(ref int value);
        partial void OnMiscAdjAcctKeyChanging(ref int value);
        partial void OnMiscAdjAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for NonStock in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short NonStock
        {
            get
            {
                short value = _NonStock;
                OnGetNonStock(ref value);
                return value;
            }
            set
            {
                if (_NonStock != value)
                {
                  OnNonStockChanging(ref value);
                  ReportPropertyChanging("NonStock");
                  _NonStock = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NonStock");
                  OnNonStockChanged();
              }
            }
        }
        private short _NonStock = 0;
        partial void OnGetNonStock(ref short value);
        partial void OnNonStockChanging(ref short value);
        partial void OnNonStockChanged();
    
        /// <summary>
        /// There are no comments for OrderPoint in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal OrderPoint
        {
            get
            {
                decimal value = _OrderPoint;
                OnGetOrderPoint(ref value);
                return value;
            }
            set
            {
                if (_OrderPoint != value)
                {
                  OnOrderPointChanging(ref value);
                  ReportPropertyChanging("OrderPoint");
                  _OrderPoint = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OrderPoint");
                  OnOrderPointChanged();
              }
            }
        }
        private decimal _OrderPoint = 0m;
        partial void OnGetOrderPoint(ref decimal value);
        partial void OnOrderPointChanging(ref decimal value);
        partial void OnOrderPointChanged();
    
        /// <summary>
        /// There are no comments for PhysCountAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int PhysCountAcctKey
        {
            get
            {
                int value = _PhysCountAcctKey;
                OnGetPhysCountAcctKey(ref value);
                return value;
            }
            set
            {
                if (_PhysCountAcctKey != value)
                {
                  OnPhysCountAcctKeyChanging(ref value);
                  ReportPropertyChanging("PhysCountAcctKey");
                  _PhysCountAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PhysCountAcctKey");
                  OnPhysCountAcctKeyChanged();
              }
            }
        }
        private int _PhysCountAcctKey;
        partial void OnGetPhysCountAcctKey(ref int value);
        partial void OnPhysCountAcctKeyChanging(ref int value);
        partial void OnPhysCountAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for PhysCountCycleKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? PhysCountCycleKey
        {
            get
            {
                int? value = _PhysCountCycleKey;
                OnGetPhysCountCycleKey(ref value);
                return value;
            }
            set
            {
                if (_PhysCountCycleKey != value)
                {
                  OnPhysCountCycleKeyChanging(ref value);
                  ReportPropertyChanging("PhysCountCycleKey");
                  _PhysCountCycleKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PhysCountCycleKey");
                  OnPhysCountCycleKeyChanged();
              }
            }
        }
        private int? _PhysCountCycleKey;
        partial void OnGetPhysCountCycleKey(ref int? value);
        partial void OnPhysCountCycleKeyChanging(ref int? value);
        partial void OnPhysCountCycleKeyChanged();
    
        /// <summary>
        /// There are no comments for PhysCountTolPct in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal PhysCountTolPct
        {
            get
            {
                decimal value = _PhysCountTolPct;
                OnGetPhysCountTolPct(ref value);
                return value;
            }
            set
            {
                if (_PhysCountTolPct != value)
                {
                  OnPhysCountTolPctChanging(ref value);
                  ReportPropertyChanging("PhysCountTolPct");
                  _PhysCountTolPct = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PhysCountTolPct");
                  OnPhysCountTolPctChanged();
              }
            }
        }
        private decimal _PhysCountTolPct = 0m;
        partial void OnGetPhysCountTolPct(ref decimal value);
        partial void OnPhysCountTolPctChanging(ref decimal value);
        partial void OnPhysCountTolPctChanged();
    
        /// <summary>
        /// There are no comments for PickMethod in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PickMethod
        {
            get
            {
                short value = _PickMethod;
                OnGetPickMethod(ref value);
                return value;
            }
            set
            {
                if (_PickMethod != value)
                {
                  OnPickMethodChanging(ref value);
                  ReportPropertyChanging("PickMethod");
                  _PickMethod = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PickMethod");
                  OnPickMethodChanged();
              }
            }
        }
        private short _PickMethod = 1;
        partial void OnGetPickMethod(ref short value);
        partial void OnPickMethodChanging(ref short value);
        partial void OnPickMethodChanged();
    
        /// <summary>
        /// There are no comments for PickOneLotOnly in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PickOneLotOnly
        {
            get
            {
                short value = _PickOneLotOnly;
                OnGetPickOneLotOnly(ref value);
                return value;
            }
            set
            {
                if (_PickOneLotOnly != value)
                {
                  OnPickOneLotOnlyChanging(ref value);
                  ReportPropertyChanging("PickOneLotOnly");
                  _PickOneLotOnly = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PickOneLotOnly");
                  OnPickOneLotOnlyChanged();
              }
            }
        }
        private short _PickOneLotOnly = 0;
        partial void OnGetPickOneLotOnly(ref short value);
        partial void OnPickOneLotOnlyChanging(ref short value);
        partial void OnPickOneLotOnlyChanged();
    
        /// <summary>
        /// There are no comments for PickPrefBinsFirst in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PickPrefBinsFirst
        {
            get
            {
                short value = _PickPrefBinsFirst;
                OnGetPickPrefBinsFirst(ref value);
                return value;
            }
            set
            {
                if (_PickPrefBinsFirst != value)
                {
                  OnPickPrefBinsFirstChanging(ref value);
                  ReportPropertyChanging("PickPrefBinsFirst");
                  _PickPrefBinsFirst = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PickPrefBinsFirst");
                  OnPickPrefBinsFirstChanged();
              }
            }
        }
        private short _PickPrefBinsFirst = 0;
        partial void OnGetPickPrefBinsFirst(ref short value);
        partial void OnPickPrefBinsFirstChanging(ref short value);
        partial void OnPickPrefBinsFirstChanged();
    
        /// <summary>
        /// There are no comments for PrimaryVendKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? PrimaryVendKey
        {
            get
            {
                int? value = _PrimaryVendKey;
                OnGetPrimaryVendKey(ref value);
                return value;
            }
            set
            {
                if (_PrimaryVendKey != value)
                {
                  OnPrimaryVendKeyChanging(ref value);
                  ReportPropertyChanging("PrimaryVendKey");
                  _PrimaryVendKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PrimaryVendKey");
                  OnPrimaryVendKeyChanged();
              }
            }
        }
        private int? _PrimaryVendKey;
        partial void OnGetPrimaryVendKey(ref int? value);
        partial void OnPrimaryVendKeyChanging(ref int? value);
        partial void OnPrimaryVendKeyChanged();
    
        /// <summary>
        /// There are no comments for PurchAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int PurchAcctKey
        {
            get
            {
                int value = _PurchAcctKey;
                OnGetPurchAcctKey(ref value);
                return value;
            }
            set
            {
                if (_PurchAcctKey != value)
                {
                  OnPurchAcctKeyChanging(ref value);
                  ReportPropertyChanging("PurchAcctKey");
                  _PurchAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PurchAcctKey");
                  OnPurchAcctKeyChanged();
              }
            }
        }
        private int _PurchAcctKey;
        partial void OnGetPurchAcctKey(ref int value);
        partial void OnPurchAcctKeyChanging(ref int value);
        partial void OnPurchAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for PurchProdLineKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? PurchProdLineKey
        {
            get
            {
                int? value = _PurchProdLineKey;
                OnGetPurchProdLineKey(ref value);
                return value;
            }
            set
            {
                if (_PurchProdLineKey != value)
                {
                  OnPurchProdLineKeyChanging(ref value);
                  ReportPropertyChanging("PurchProdLineKey");
                  _PurchProdLineKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PurchProdLineKey");
                  OnPurchProdLineKeyChanged();
              }
            }
        }
        private int? _PurchProdLineKey;
        partial void OnGetPurchProdLineKey(ref int? value);
        partial void OnPurchProdLineKeyChanging(ref int? value);
        partial void OnPurchProdLineKeyChanged();
    
        /// <summary>
        /// There are no comments for QtyOnBO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal QtyOnBO
        {
            get
            {
                decimal value = _QtyOnBO;
                OnGetQtyOnBO(ref value);
                return value;
            }
            set
            {
                if (_QtyOnBO != value)
                {
                  OnQtyOnBOChanging(ref value);
                  ReportPropertyChanging("QtyOnBO");
                  _QtyOnBO = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QtyOnBO");
                  OnQtyOnBOChanged();
              }
            }
        }
        private decimal _QtyOnBO = 0m;
        partial void OnGetQtyOnBO(ref decimal value);
        partial void OnQtyOnBOChanging(ref decimal value);
        partial void OnQtyOnBOChanged();
    
        /// <summary>
        /// There are no comments for QtyOnPO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal QtyOnPO
        {
            get
            {
                decimal value = _QtyOnPO;
                OnGetQtyOnPO(ref value);
                return value;
            }
            set
            {
                if (_QtyOnPO != value)
                {
                  OnQtyOnPOChanging(ref value);
                  ReportPropertyChanging("QtyOnPO");
                  _QtyOnPO = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QtyOnPO");
                  OnQtyOnPOChanged();
              }
            }
        }
        private decimal _QtyOnPO = 0m;
        partial void OnGetQtyOnPO(ref decimal value);
        partial void OnQtyOnPOChanging(ref decimal value);
        partial void OnQtyOnPOChanged();
    
        /// <summary>
        /// There are no comments for QtyOnSO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal QtyOnSO
        {
            get
            {
                decimal value = _QtyOnSO;
                OnGetQtyOnSO(ref value);
                return value;
            }
            set
            {
                if (_QtyOnSO != value)
                {
                  OnQtyOnSOChanging(ref value);
                  ReportPropertyChanging("QtyOnSO");
                  _QtyOnSO = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QtyOnSO");
                  OnQtyOnSOChanged();
              }
            }
        }
        private decimal _QtyOnSO = 0m;
        partial void OnGetQtyOnSO(ref decimal value);
        partial void OnQtyOnSOChanging(ref decimal value);
        partial void OnQtyOnSOChanged();
    
        /// <summary>
        /// There are no comments for QtyOnTrnsfr in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal QtyOnTrnsfr
        {
            get
            {
                decimal value = _QtyOnTrnsfr;
                OnGetQtyOnTrnsfr(ref value);
                return value;
            }
            set
            {
                if (_QtyOnTrnsfr != value)
                {
                  OnQtyOnTrnsfrChanging(ref value);
                  ReportPropertyChanging("QtyOnTrnsfr");
                  _QtyOnTrnsfr = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QtyOnTrnsfr");
                  OnQtyOnTrnsfrChanged();
              }
            }
        }
        private decimal _QtyOnTrnsfr = 0m;
        partial void OnGetQtyOnTrnsfr(ref decimal value);
        partial void OnQtyOnTrnsfrChanging(ref decimal value);
        partial void OnQtyOnTrnsfrChanged();
    
        /// <summary>
        /// There are no comments for QtyOnWO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal QtyOnWO
        {
            get
            {
                decimal value = _QtyOnWO;
                OnGetQtyOnWO(ref value);
                return value;
            }
            set
            {
                if (_QtyOnWO != value)
                {
                  OnQtyOnWOChanging(ref value);
                  ReportPropertyChanging("QtyOnWO");
                  _QtyOnWO = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QtyOnWO");
                  OnQtyOnWOChanged();
              }
            }
        }
        private decimal _QtyOnWO = 0m;
        partial void OnGetQtyOnWO(ref decimal value);
        partial void OnQtyOnWOChanging(ref decimal value);
        partial void OnQtyOnWOChanged();
    
        /// <summary>
        /// There are no comments for QtyReqForTrnsfr in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? QtyReqForTrnsfr
        {
            get
            {
                decimal? value = _QtyReqForTrnsfr;
                OnGetQtyReqForTrnsfr(ref value);
                return value;
            }
            set
            {
                if (_QtyReqForTrnsfr != value)
                {
                  OnQtyReqForTrnsfrChanging(ref value);
                  ReportPropertyChanging("QtyReqForTrnsfr");
                  _QtyReqForTrnsfr = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QtyReqForTrnsfr");
                  OnQtyReqForTrnsfrChanged();
              }
            }
        }
        private decimal? _QtyReqForTrnsfr = 0m;
        partial void OnGetQtyReqForTrnsfr(ref decimal? value);
        partial void OnQtyReqForTrnsfrChanging(ref decimal? value);
        partial void OnQtyReqForTrnsfrChanged();
    
        /// <summary>
        /// There are no comments for QtyReqForWO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal QtyReqForWO
        {
            get
            {
                decimal value = _QtyReqForWO;
                OnGetQtyReqForWO(ref value);
                return value;
            }
            set
            {
                if (_QtyReqForWO != value)
                {
                  OnQtyReqForWOChanging(ref value);
                  ReportPropertyChanging("QtyReqForWO");
                  _QtyReqForWO = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QtyReqForWO");
                  OnQtyReqForWOChanged();
              }
            }
        }
        private decimal _QtyReqForWO = 0m;
        partial void OnGetQtyReqForWO(ref decimal value);
        partial void OnQtyReqForWOChanging(ref decimal value);
        partial void OnQtyReqForWOChanged();
    
        /// <summary>
        /// There are no comments for RankByCOS in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string RankByCOS
        {
            get
            {
                string value = _RankByCOS;
                OnGetRankByCOS(ref value);
                return value;
            }
            set
            {
                if (_RankByCOS != value)
                {
                  OnRankByCOSChanging(ref value);
                  ReportPropertyChanging("RankByCOS");
                  _RankByCOS = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("RankByCOS");
                  OnRankByCOSChanged();
              }
            }
        }
        private string _RankByCOS = @"X";
        partial void OnGetRankByCOS(ref string value);
        partial void OnRankByCOSChanging(ref string value);
        partial void OnRankByCOSChanged();
    
        /// <summary>
        /// There are no comments for RankByGrMargin in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string RankByGrMargin
        {
            get
            {
                string value = _RankByGrMargin;
                OnGetRankByGrMargin(ref value);
                return value;
            }
            set
            {
                if (_RankByGrMargin != value)
                {
                  OnRankByGrMarginChanging(ref value);
                  ReportPropertyChanging("RankByGrMargin");
                  _RankByGrMargin = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("RankByGrMargin");
                  OnRankByGrMarginChanged();
              }
            }
        }
        private string _RankByGrMargin = @"X";
        partial void OnGetRankByGrMargin(ref string value);
        partial void OnRankByGrMarginChanging(ref string value);
        partial void OnRankByGrMarginChanged();
    
        /// <summary>
        /// There are no comments for RankByHits in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string RankByHits
        {
            get
            {
                string value = _RankByHits;
                OnGetRankByHits(ref value);
                return value;
            }
            set
            {
                if (_RankByHits != value)
                {
                  OnRankByHitsChanging(ref value);
                  ReportPropertyChanging("RankByHits");
                  _RankByHits = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("RankByHits");
                  OnRankByHitsChanged();
              }
            }
        }
        private string _RankByHits = @"X";
        partial void OnGetRankByHits(ref string value);
        partial void OnRankByHitsChanging(ref string value);
        partial void OnRankByHitsChanged();
    
        /// <summary>
        /// There are no comments for RankByQtySold in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string RankByQtySold
        {
            get
            {
                string value = _RankByQtySold;
                OnGetRankByQtySold(ref value);
                return value;
            }
            set
            {
                if (_RankByQtySold != value)
                {
                  OnRankByQtySoldChanging(ref value);
                  ReportPropertyChanging("RankByQtySold");
                  _RankByQtySold = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("RankByQtySold");
                  OnRankByQtySoldChanged();
              }
            }
        }
        private string _RankByQtySold = @"X";
        partial void OnGetRankByQtySold(ref string value);
        partial void OnRankByQtySoldChanging(ref string value);
        partial void OnRankByQtySoldChanged();
    
        /// <summary>
        /// There are no comments for ReordMeth in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ReordMeth
        {
            get
            {
                short value = _ReordMeth;
                OnGetReordMeth(ref value);
                return value;
            }
            set
            {
                if (_ReordMeth != value)
                {
                  OnReordMethChanging(ref value);
                  ReportPropertyChanging("ReordMeth");
                  _ReordMeth = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ReordMeth");
                  OnReordMethChanged();
              }
            }
        }
        private short _ReordMeth = 0;
        partial void OnGetReordMeth(ref short value);
        partial void OnReordMethChanging(ref short value);
        partial void OnReordMethChanged();
    
        /// <summary>
        /// There are no comments for RplcmntUnitCost in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal RplcmntUnitCost
        {
            get
            {
                decimal value = _RplcmntUnitCost;
                OnGetRplcmntUnitCost(ref value);
                return value;
            }
            set
            {
                if (_RplcmntUnitCost != value)
                {
                  OnRplcmntUnitCostChanging(ref value);
                  ReportPropertyChanging("RplcmntUnitCost");
                  _RplcmntUnitCost = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RplcmntUnitCost");
                  OnRplcmntUnitCostChanged();
              }
            }
        }
        private decimal _RplcmntUnitCost = 0m;
        partial void OnGetRplcmntUnitCost(ref decimal value);
        partial void OnRplcmntUnitCostChanging(ref decimal value);
        partial void OnRplcmntUnitCostChanged();
    
        /// <summary>
        /// There are no comments for RplnsmntLevel in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short RplnsmntLevel
        {
            get
            {
                short value = _RplnsmntLevel;
                OnGetRplnsmntLevel(ref value);
                return value;
            }
            set
            {
                if (_RplnsmntLevel != value)
                {
                  OnRplnsmntLevelChanging(ref value);
                  ReportPropertyChanging("RplnsmntLevel");
                  _RplnsmntLevel = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RplnsmntLevel");
                  OnRplnsmntLevelChanged();
              }
            }
        }
        private short _RplnsmntLevel = 0;
        partial void OnGetRplnsmntLevel(ref short value);
        partial void OnRplnsmntLevelChanging(ref short value);
        partial void OnRplnsmntLevelChanged();
    
        /// <summary>
        /// There are no comments for RplnsmntParmFreeze in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? RplnsmntParmFreeze
        {
            get
            {
                global::System.DateTime? value = _RplnsmntParmFreeze;
                OnGetRplnsmntParmFreeze(ref value);
                return value;
            }
            set
            {
                if (_RplnsmntParmFreeze != value)
                {
                  OnRplnsmntParmFreezeChanging(ref value);
                  ReportPropertyChanging("RplnsmntParmFreeze");
                  _RplnsmntParmFreeze = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RplnsmntParmFreeze");
                  OnRplnsmntParmFreezeChanged();
              }
            }
        }
        private global::System.DateTime? _RplnsmntParmFreeze;
        partial void OnGetRplnsmntParmFreeze(ref global::System.DateTime? value);
        partial void OnRplnsmntParmFreezeChanging(ref global::System.DateTime? value);
        partial void OnRplnsmntParmFreezeChanged();
    
        /// <summary>
        /// There are no comments for RplnsmntWhseKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? RplnsmntWhseKey
        {
            get
            {
                int? value = _RplnsmntWhseKey;
                OnGetRplnsmntWhseKey(ref value);
                return value;
            }
            set
            {
                if (_RplnsmntWhseKey != value)
                {
                  OnRplnsmntWhseKeyChanging(ref value);
                  ReportPropertyChanging("RplnsmntWhseKey");
                  _RplnsmntWhseKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RplnsmntWhseKey");
                  OnRplnsmntWhseKeyChanged();
              }
            }
        }
        private int? _RplnsmntWhseKey;
        partial void OnGetRplnsmntWhseKey(ref int? value);
        partial void OnRplnsmntWhseKeyChanging(ref int? value);
        partial void OnRplnsmntWhseKeyChanged();
    
        /// <summary>
        /// There are no comments for SafetyStockCalcKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? SafetyStockCalcKey
        {
            get
            {
                int? value = _SafetyStockCalcKey;
                OnGetSafetyStockCalcKey(ref value);
                return value;
            }
            set
            {
                if (_SafetyStockCalcKey != value)
                {
                  OnSafetyStockCalcKeyChanging(ref value);
                  ReportPropertyChanging("SafetyStockCalcKey");
                  _SafetyStockCalcKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SafetyStockCalcKey");
                  OnSafetyStockCalcKeyChanged();
              }
            }
        }
        private int? _SafetyStockCalcKey;
        partial void OnGetSafetyStockCalcKey(ref int? value);
        partial void OnSafetyStockCalcKeyChanging(ref int? value);
        partial void OnSafetyStockCalcKeyChanged();
    
        /// <summary>
        /// There are no comments for SafetyStockQty in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal SafetyStockQty
        {
            get
            {
                decimal value = _SafetyStockQty;
                OnGetSafetyStockQty(ref value);
                return value;
            }
            set
            {
                if (_SafetyStockQty != value)
                {
                  OnSafetyStockQtyChanging(ref value);
                  ReportPropertyChanging("SafetyStockQty");
                  _SafetyStockQty = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SafetyStockQty");
                  OnSafetyStockQtyChanged();
              }
            }
        }
        private decimal _SafetyStockQty = 0m;
        partial void OnGetSafetyStockQty(ref decimal value);
        partial void OnSafetyStockQtyChanging(ref decimal value);
        partial void OnSafetyStockQtyChanged();
    
        /// <summary>
        /// There are no comments for SalesAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SalesAcctKey
        {
            get
            {
                int value = _SalesAcctKey;
                OnGetSalesAcctKey(ref value);
                return value;
            }
            set
            {
                if (_SalesAcctKey != value)
                {
                  OnSalesAcctKeyChanging(ref value);
                  ReportPropertyChanging("SalesAcctKey");
                  _SalesAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesAcctKey");
                  OnSalesAcctKeyChanged();
              }
            }
        }
        private int _SalesAcctKey;
        partial void OnGetSalesAcctKey(ref int value);
        partial void OnSalesAcctKeyChanging(ref int value);
        partial void OnSalesAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for SalesOffsetAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SalesOffsetAcctKey
        {
            get
            {
                int value = _SalesOffsetAcctKey;
                OnGetSalesOffsetAcctKey(ref value);
                return value;
            }
            set
            {
                if (_SalesOffsetAcctKey != value)
                {
                  OnSalesOffsetAcctKeyChanging(ref value);
                  ReportPropertyChanging("SalesOffsetAcctKey");
                  _SalesOffsetAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesOffsetAcctKey");
                  OnSalesOffsetAcctKeyChanged();
              }
            }
        }
        private int _SalesOffsetAcctKey;
        partial void OnGetSalesOffsetAcctKey(ref int value);
        partial void OnSalesOffsetAcctKeyChanging(ref int value);
        partial void OnSalesOffsetAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for SalesReturnAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SalesReturnAcctKey
        {
            get
            {
                int value = _SalesReturnAcctKey;
                OnGetSalesReturnAcctKey(ref value);
                return value;
            }
            set
            {
                if (_SalesReturnAcctKey != value)
                {
                  OnSalesReturnAcctKeyChanging(ref value);
                  ReportPropertyChanging("SalesReturnAcctKey");
                  _SalesReturnAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesReturnAcctKey");
                  OnSalesReturnAcctKeyChanged();
              }
            }
        }
        private int _SalesReturnAcctKey;
        partial void OnGetSalesReturnAcctKey(ref int value);
        partial void OnSalesReturnAcctKeyChanging(ref int value);
        partial void OnSalesReturnAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for SerialNoLinesOnPickList in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short SerialNoLinesOnPickList
        {
            get
            {
                short value = _SerialNoLinesOnPickList;
                OnGetSerialNoLinesOnPickList(ref value);
                return value;
            }
            set
            {
                if (_SerialNoLinesOnPickList != value)
                {
                  OnSerialNoLinesOnPickListChanging(ref value);
                  ReportPropertyChanging("SerialNoLinesOnPickList");
                  _SerialNoLinesOnPickList = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SerialNoLinesOnPickList");
                  OnSerialNoLinesOnPickListChanged();
              }
            }
        }
        private short _SerialNoLinesOnPickList = 0;
        partial void OnGetSerialNoLinesOnPickList(ref short value);
        partial void OnSerialNoLinesOnPickListChanging(ref short value);
        partial void OnSerialNoLinesOnPickListChanged();
    
        /// <summary>
        /// There are no comments for ShipComplete in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ShipComplete
        {
            get
            {
                short value = _ShipComplete;
                OnGetShipComplete(ref value);
                return value;
            }
            set
            {
                if (_ShipComplete != value)
                {
                  OnShipCompleteChanging(ref value);
                  ReportPropertyChanging("ShipComplete");
                  _ShipComplete = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipComplete");
                  OnShipCompleteChanged();
              }
            }
        }
        private short _ShipComplete = 0;
        partial void OnGetShipComplete(ref short value);
        partial void OnShipCompleteChanging(ref short value);
        partial void OnShipCompleteChanged();
    
        /// <summary>
        /// There are no comments for ShowAvailLots in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ShowAvailLots
        {
            get
            {
                short value = _ShowAvailLots;
                OnGetShowAvailLots(ref value);
                return value;
            }
            set
            {
                if (_ShowAvailLots != value)
                {
                  OnShowAvailLotsChanging(ref value);
                  ReportPropertyChanging("ShowAvailLots");
                  _ShowAvailLots = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShowAvailLots");
                  OnShowAvailLotsChanged();
              }
            }
        }
        private short _ShowAvailLots = 0;
        partial void OnGetShowAvailLots(ref short value);
        partial void OnShowAvailLotsChanging(ref short value);
        partial void OnShowAvailLotsChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Status
        {
            get
            {
                short value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private short _Status = 1;
        partial void OnGetStatus(ref short value);
        partial void OnStatusChanging(ref short value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// There are no comments for StdOrdQty in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal StdOrdQty
        {
            get
            {
                decimal value = _StdOrdQty;
                OnGetStdOrdQty(ref value);
                return value;
            }
            set
            {
                if (_StdOrdQty != value)
                {
                  OnStdOrdQtyChanging(ref value);
                  ReportPropertyChanging("StdOrdQty");
                  _StdOrdQty = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("StdOrdQty");
                  OnStdOrdQtyChanged();
              }
            }
        }
        private decimal _StdOrdQty = 0m;
        partial void OnGetStdOrdQty(ref decimal value);
        partial void OnStdOrdQtyChanging(ref decimal value);
        partial void OnStdOrdQtyChanged();
    
        /// <summary>
        /// There are no comments for StdUnitCost in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal StdUnitCost
        {
            get
            {
                decimal value = _StdUnitCost;
                OnGetStdUnitCost(ref value);
                return value;
            }
            set
            {
                if (_StdUnitCost != value)
                {
                  OnStdUnitCostChanging(ref value);
                  ReportPropertyChanging("StdUnitCost");
                  _StdUnitCost = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("StdUnitCost");
                  OnStdUnitCostChanged();
              }
            }
        }
        private decimal _StdUnitCost = 0m;
        partial void OnGetStdUnitCost(ref decimal value);
        partial void OnStdUnitCostChanging(ref decimal value);
        partial void OnStdUnitCostChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();
    
        /// <summary>
        /// There are no comments for UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? UpdateDate
        {
            get
            {
                global::System.DateTime? value = _UpdateDate;
                OnGetUpdateDate(ref value);
                return value;
            }
            set
            {
                if (_UpdateDate != value)
                {
                  OnUpdateDateChanging(ref value);
                  ReportPropertyChanging("UpdateDate");
                  _UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateDate");
                  OnUpdateDateChanged();
              }
            }
        }
        private global::System.DateTime? _UpdateDate;
        partial void OnGetUpdateDate(ref global::System.DateTime? value);
        partial void OnUpdateDateChanging(ref global::System.DateTime? value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// There are no comments for UpdateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UpdateUserID
        {
            get
            {
                string value = _UpdateUserID;
                OnGetUpdateUserID(ref value);
                return value;
            }
            set
            {
                if (_UpdateUserID != value)
                {
                  OnUpdateUserIDChanging(ref value);
                  ReportPropertyChanging("UpdateUserID");
                  _UpdateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UpdateUserID");
                  OnUpdateUserIDChanged();
              }
            }
        }
        private string _UpdateUserID;
        partial void OnGetUpdateUserID(ref string value);
        partial void OnUpdateUserIDChanging(ref string value);
        partial void OnUpdateUserIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Warehouse in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Warehouse_Inventory", "Warehouse")]
        public virtual Warehouse Warehouse
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Warehouse>("Net4Sage.DataAccessModel.Warehouse_Inventory", "Warehouse").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Warehouse>("Net4Sage.DataAccessModel.Warehouse_Inventory", "Warehouse").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Warehouse in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Warehouse> WarehouseReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Warehouse>("Net4Sage.DataAccessModel.Warehouse_Inventory", "Warehouse");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Warehouse>("Net4Sage.DataAccessModel.Warehouse_Inventory", "Warehouse", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Warehouse>("Net4Sage.DataAccessModel.Warehouse_Inventory", "Warehouse").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Item in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Item_Inventory", "Item")]
        public virtual Item Item
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Item>("Net4Sage.DataAccessModel.Item_Inventory", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Item>("Net4Sage.DataAccessModel.Item_Inventory", "Item").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Item in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Item>("Net4Sage.DataAccessModel.Item_Inventory", "Item");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Item>("Net4Sage.DataAccessModel.Item_Inventory", "Item", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Item>("Net4Sage.DataAccessModel.Item_Inventory", "Item").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvtTrans in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Inventory_InvtTran", "InvtTrans")]
        public virtual EntityCollection<InvtTran> InvtTrans
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvtTran>("Net4Sage.DataAccessModel.Inventory_InvtTran", "InvtTrans");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvtTran>("Net4Sage.DataAccessModel.Inventory_InvtTran", "InvtTrans", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvtGLAccount in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "GLAccount_Inventory", "InvtGLAccount")]
        public virtual GLAccount InvtGLAccount
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<GLAccount>("Net4Sage.DataAccessModel.GLAccount_Inventory", "InvtGLAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<GLAccount>("Net4Sage.DataAccessModel.GLAccount_Inventory", "InvtGLAccount").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvtGLAccount in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GLAccount> InvtGLAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<GLAccount>("Net4Sage.DataAccessModel.GLAccount_Inventory", "InvtGLAccount");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<GLAccount>("Net4Sage.DataAccessModel.GLAccount_Inventory", "InvtGLAccount", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<GLAccount>("Net4Sage.DataAccessModel.GLAccount_Inventory", "InvtGLAccount").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.Item in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ItemKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="Item")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [Net4Sage.Controls.Lookup.LookupAutoShowColumns(false)]
    [Net4Sage.Controls.Lookup.LookupFormTitle(@"Buscar Artículo")]
    public partial class Item : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Item object.
        /// </summary>
        /// <param name="itemKey">Initial value of ItemKey.</param>
        /// <param name="allowCostOvrd">Initial value of AllowCostOvrd.</param>
        /// <param name="allowDecimalQty">Initial value of AllowDecimalQty.</param>
        /// <param name="allowPriceOvrd">Initial value of AllowPriceOvrd.</param>
        /// <param name="allowRtrns">Initial value of AllowRtrns.</param>
        /// <param name="availForSale">Initial value of AvailForSale.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="createType">Initial value of CreateType.</param>
        /// <param name="dfltSaleQty">Initial value of DfltSaleQty.</param>
        /// <param name="hazMat">Initial value of HazMat.</param>
        /// <param name="inclOnPackList">Initial value of InclOnPackList.</param>
        /// <param name="internalLongDesc">Initial value of InternalLongDesc.</param>
        /// <param name="intrnlDeliveryReq">Initial value of IntrnlDeliveryReq.</param>
        /// <param name="itemClassKey">Initial value of ItemClassKey.</param>
        /// <param name="itemID">Initial value of ItemID.</param>
        /// <param name="itemSubType">Initial value of ItemSubType.</param>
        /// <param name="itemType">Initial value of ItemType.</param>
        /// <param name="minGrossProfitPct">Initial value of MinGrossProfitPct.</param>
        /// <param name="minSaleQty">Initial value of MinSaleQty.</param>
        /// <param name="perUsageOrdLimit">Initial value of PerUsageOrdLimit.</param>
        /// <param name="rcptReq">Initial value of RcptReq.</param>
        /// <param name="restockRate">Initial value of RestockRate.</param>
        /// <param name="saleMultiple">Initial value of SaleMultiple.</param>
        /// <param name="seasonal">Initial value of Seasonal.</param>
        /// <param name="shelfLife">Initial value of ShelfLife.</param>
        /// <param name="status">Initial value of Status.</param>
        /// <param name="stdPrice">Initial value of StdPrice.</param>
        /// <param name="stdUnitCost">Initial value of StdUnitCost.</param>
        /// <param name="subjToTradeDisc">Initial value of SubjToTradeDisc.</param>
        /// <param name="targetMargin">Initial value of TargetMargin.</param>
        /// <param name="trackMeth">Initial value of TrackMeth.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        /// <param name="valuationMeth">Initial value of ValuationMeth.</param>
        /// <param name="warrantyDays">Initial value of WarrantyDays.</param>
        /// <param name="warrantyProvider">Initial value of WarrantyProvider.</param>
        public static Item CreateItem(int itemKey, short allowCostOvrd, short allowDecimalQty, short allowPriceOvrd, short allowRtrns, short availForSale, string companyID, short createType, decimal dfltSaleQty, short hazMat, short inclOnPackList, short internalLongDesc, short intrnlDeliveryReq, int itemClassKey, string itemID, short itemSubType, short itemType, decimal minGrossProfitPct, decimal minSaleQty, short perUsageOrdLimit, short rcptReq, decimal restockRate, decimal saleMultiple, short seasonal, short shelfLife, short status, decimal stdPrice, decimal stdUnitCost, short subjToTradeDisc, decimal targetMargin, ItemTrackMeth trackMeth, int updateCounter, short valuationMeth, short warrantyDays, short warrantyProvider)
        {
            Item item = new Item();
            item.ItemKey = itemKey;
            item.AllowCostOvrd = allowCostOvrd;
            item.AllowDecimalQty = allowDecimalQty;
            item.AllowPriceOvrd = allowPriceOvrd;
            item.AllowRtrns = allowRtrns;
            item.AvailForSale = availForSale;
            item.CompanyID = companyID;
            item.CreateType = createType;
            item.DfltSaleQty = dfltSaleQty;
            item.HazMat = hazMat;
            item.InclOnPackList = inclOnPackList;
            item.InternalLongDesc = internalLongDesc;
            item.IntrnlDeliveryReq = intrnlDeliveryReq;
            item.ItemClassKey = itemClassKey;
            item.ItemID = itemID;
            item.ItemSubType = itemSubType;
            item.ItemType = itemType;
            item.MinGrossProfitPct = minGrossProfitPct;
            item.MinSaleQty = minSaleQty;
            item.PerUsageOrdLimit = perUsageOrdLimit;
            item.RcptReq = rcptReq;
            item.RestockRate = restockRate;
            item.SaleMultiple = saleMultiple;
            item.Seasonal = seasonal;
            item.ShelfLife = shelfLife;
            item.Status = status;
            item.StdPrice = stdPrice;
            item.StdUnitCost = stdUnitCost;
            item.SubjToTradeDisc = subjToTradeDisc;
            item.TargetMargin = targetMargin;
            item.TrackMeth = trackMeth;
            item.UpdateCounter = updateCounter;
            item.ValuationMeth = valuationMeth;
            item.WarrantyDays = warrantyDays;
            item.WarrantyProvider = warrantyProvider;
            return item;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ItemKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupKeyReturn]
        public virtual int ItemKey
        {
            get
            {
                int value = _ItemKey;
                OnGetItemKey(ref value);
                return value;
            }
            set
            {
                if (_ItemKey != value)
                {
                  OnItemKeyChanging(ref value);
                  ReportPropertyChanging("ItemKey");
                  _ItemKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ItemKey");
                  OnItemKeyChanged();
              }
            }
        }
        private int _ItemKey;
        partial void OnGetItemKey(ref int value);
        partial void OnItemKeyChanging(ref int value);
        partial void OnItemKeyChanged();
    
        /// <summary>
        /// There are no comments for AllowCostOvrd in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short AllowCostOvrd
        {
            get
            {
                short value = _AllowCostOvrd;
                OnGetAllowCostOvrd(ref value);
                return value;
            }
            set
            {
                if (_AllowCostOvrd != value)
                {
                  OnAllowCostOvrdChanging(ref value);
                  ReportPropertyChanging("AllowCostOvrd");
                  _AllowCostOvrd = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AllowCostOvrd");
                  OnAllowCostOvrdChanged();
              }
            }
        }
        private short _AllowCostOvrd = 0;
        partial void OnGetAllowCostOvrd(ref short value);
        partial void OnAllowCostOvrdChanging(ref short value);
        partial void OnAllowCostOvrdChanged();
    
        /// <summary>
        /// There are no comments for AllowDecimalQty in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short AllowDecimalQty
        {
            get
            {
                short value = _AllowDecimalQty;
                OnGetAllowDecimalQty(ref value);
                return value;
            }
            set
            {
                if (_AllowDecimalQty != value)
                {
                  OnAllowDecimalQtyChanging(ref value);
                  ReportPropertyChanging("AllowDecimalQty");
                  _AllowDecimalQty = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AllowDecimalQty");
                  OnAllowDecimalQtyChanged();
              }
            }
        }
        private short _AllowDecimalQty = 1;
        partial void OnGetAllowDecimalQty(ref short value);
        partial void OnAllowDecimalQtyChanging(ref short value);
        partial void OnAllowDecimalQtyChanged();
    
        /// <summary>
        /// There are no comments for AllowDropShip in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual short? AllowDropShip
        {
            get
            {
                short? value = _AllowDropShip;
                OnGetAllowDropShip(ref value);
                return value;
            }
            set
            {
                if (_AllowDropShip != value)
                {
                  OnAllowDropShipChanging(ref value);
                  ReportPropertyChanging("AllowDropShip");
                  _AllowDropShip = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AllowDropShip");
                  OnAllowDropShipChanged();
              }
            }
        }
        private short? _AllowDropShip = 0;
        partial void OnGetAllowDropShip(ref short? value);
        partial void OnAllowDropShipChanging(ref short? value);
        partial void OnAllowDropShipChanged();
    
        /// <summary>
        /// There are no comments for AllowPriceOvrd in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short AllowPriceOvrd
        {
            get
            {
                short value = _AllowPriceOvrd;
                OnGetAllowPriceOvrd(ref value);
                return value;
            }
            set
            {
                if (_AllowPriceOvrd != value)
                {
                  OnAllowPriceOvrdChanging(ref value);
                  ReportPropertyChanging("AllowPriceOvrd");
                  _AllowPriceOvrd = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AllowPriceOvrd");
                  OnAllowPriceOvrdChanged();
              }
            }
        }
        private short _AllowPriceOvrd = 0;
        partial void OnGetAllowPriceOvrd(ref short value);
        partial void OnAllowPriceOvrdChanging(ref short value);
        partial void OnAllowPriceOvrdChanged();
    
        /// <summary>
        /// There are no comments for AllowRtrns in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short AllowRtrns
        {
            get
            {
                short value = _AllowRtrns;
                OnGetAllowRtrns(ref value);
                return value;
            }
            set
            {
                if (_AllowRtrns != value)
                {
                  OnAllowRtrnsChanging(ref value);
                  ReportPropertyChanging("AllowRtrns");
                  _AllowRtrns = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AllowRtrns");
                  OnAllowRtrnsChanged();
              }
            }
        }
        private short _AllowRtrns = 1;
        partial void OnGetAllowRtrns(ref short value);
        partial void OnAllowRtrnsChanging(ref short value);
        partial void OnAllowRtrnsChanged();
    
        /// <summary>
        /// There are no comments for AvailForSale in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short AvailForSale
        {
            get
            {
                short value = _AvailForSale;
                OnGetAvailForSale(ref value);
                return value;
            }
            set
            {
                if (_AvailForSale != value)
                {
                  OnAvailForSaleChanging(ref value);
                  ReportPropertyChanging("AvailForSale");
                  _AvailForSale = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AvailForSale");
                  OnAvailForSaleChanged();
              }
            }
        }
        private short _AvailForSale = 1;
        partial void OnGetAvailForSale(ref short value);
        partial void OnAvailForSaleChanging(ref short value);
        partial void OnAvailForSaleChanged();
    
        /// <summary>
        /// There are no comments for CommClassKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CommClassKey
        {
            get
            {
                int? value = _CommClassKey;
                OnGetCommClassKey(ref value);
                return value;
            }
            set
            {
                if (_CommClassKey != value)
                {
                  OnCommClassKeyChanging(ref value);
                  ReportPropertyChanging("CommClassKey");
                  _CommClassKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CommClassKey");
                  OnCommClassKeyChanged();
              }
            }
        }
        private int? _CommClassKey;
        partial void OnGetCommClassKey(ref int? value);
        partial void OnCommClassKeyChanging(ref int? value);
        partial void OnCommClassKeyChanged();
    
        /// <summary>
        /// There are no comments for CommodityCodeKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CommodityCodeKey
        {
            get
            {
                int? value = _CommodityCodeKey;
                OnGetCommodityCodeKey(ref value);
                return value;
            }
            set
            {
                if (_CommodityCodeKey != value)
                {
                  OnCommodityCodeKeyChanging(ref value);
                  ReportPropertyChanging("CommodityCodeKey");
                  _CommodityCodeKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CommodityCodeKey");
                  OnCommodityCodeKeyChanged();
              }
            }
        }
        private int? _CommodityCodeKey;
        partial void OnGetCommodityCodeKey(ref int? value);
        partial void OnCommodityCodeKeyChanging(ref int? value);
        partial void OnCommodityCodeKeyChanged();
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for COSAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? COSAcctKey
        {
            get
            {
                int? value = _COSAcctKey;
                OnGetCOSAcctKey(ref value);
                return value;
            }
            set
            {
                if (_COSAcctKey != value)
                {
                  OnCOSAcctKeyChanging(ref value);
                  ReportPropertyChanging("COSAcctKey");
                  _COSAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("COSAcctKey");
                  OnCOSAcctKeyChanged();
              }
            }
        }
        private int? _COSAcctKey;
        partial void OnGetCOSAcctKey(ref int? value);
        partial void OnCOSAcctKeyChanging(ref int? value);
        partial void OnCOSAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for CreateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CreateDate
        {
            get
            {
                global::System.DateTime? value = _CreateDate;
                OnGetCreateDate(ref value);
                return value;
            }
            set
            {
                if (_CreateDate != value)
                {
                  OnCreateDateChanging(ref value);
                  ReportPropertyChanging("CreateDate");
                  _CreateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateDate");
                  OnCreateDateChanged();
              }
            }
        }
        private global::System.DateTime? _CreateDate;
        partial void OnGetCreateDate(ref global::System.DateTime? value);
        partial void OnCreateDateChanging(ref global::System.DateTime? value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// There are no comments for CreateType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CreateType
        {
            get
            {
                short value = _CreateType;
                OnGetCreateType(ref value);
                return value;
            }
            set
            {
                if (_CreateType != value)
                {
                  OnCreateTypeChanging(ref value);
                  ReportPropertyChanging("CreateType");
                  _CreateType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateType");
                  OnCreateTypeChanged();
              }
            }
        }
        private short _CreateType = 0;
        partial void OnGetCreateType(ref short value);
        partial void OnCreateTypeChanging(ref short value);
        partial void OnCreateTypeChanged();
    
        /// <summary>
        /// There are no comments for CreateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CreateUserID
        {
            get
            {
                string value = _CreateUserID;
                OnGetCreateUserID(ref value);
                return value;
            }
            set
            {
                if (_CreateUserID != value)
                {
                  OnCreateUserIDChanging(ref value);
                  ReportPropertyChanging("CreateUserID");
                  _CreateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CreateUserID");
                  OnCreateUserIDChanged();
              }
            }
        }
        private string _CreateUserID;
        partial void OnGetCreateUserID(ref string value);
        partial void OnCreateUserIDChanging(ref string value);
        partial void OnCreateUserIDChanged();
    
        /// <summary>
        /// There are no comments for CRMItemID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CRMItemID
        {
            get
            {
                string value = _CRMItemID;
                OnGetCRMItemID(ref value);
                return value;
            }
            set
            {
                if (_CRMItemID != value)
                {
                  OnCRMItemIDChanging(ref value);
                  ReportPropertyChanging("CRMItemID");
                  _CRMItemID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CRMItemID");
                  OnCRMItemIDChanged();
              }
            }
        }
        private string _CRMItemID;
        partial void OnGetCRMItemID(ref string value);
        partial void OnCRMItemIDChanging(ref string value);
        partial void OnCRMItemIDChanged();
    
        /// <summary>
        /// There are no comments for DateEstab in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? DateEstab
        {
            get
            {
                global::System.DateTime? value = _DateEstab;
                OnGetDateEstab(ref value);
                return value;
            }
            set
            {
                if (_DateEstab != value)
                {
                  OnDateEstabChanging(ref value);
                  ReportPropertyChanging("DateEstab");
                  _DateEstab = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DateEstab");
                  OnDateEstabChanged();
              }
            }
        }
        private global::System.DateTime? _DateEstab;
        partial void OnGetDateEstab(ref global::System.DateTime? value);
        partial void OnDateEstabChanging(ref global::System.DateTime? value);
        partial void OnDateEstabChanged();
    
        /// <summary>
        /// There are no comments for DfltSaleQty in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal DfltSaleQty
        {
            get
            {
                decimal value = _DfltSaleQty;
                OnGetDfltSaleQty(ref value);
                return value;
            }
            set
            {
                if (_DfltSaleQty != value)
                {
                  OnDfltSaleQtyChanging(ref value);
                  ReportPropertyChanging("DfltSaleQty");
                  _DfltSaleQty = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltSaleQty");
                  OnDfltSaleQtyChanged();
              }
            }
        }
        private decimal _DfltSaleQty = 1m;
        partial void OnGetDfltSaleQty(ref decimal value);
        partial void OnDfltSaleQtyChanging(ref decimal value);
        partial void OnDfltSaleQtyChanged();
    
        /// <summary>
        /// There are no comments for DfltWhseKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? DfltWhseKey
        {
            get
            {
                int? value = _DfltWhseKey;
                OnGetDfltWhseKey(ref value);
                return value;
            }
            set
            {
                if (_DfltWhseKey != value)
                {
                  OnDfltWhseKeyChanging(ref value);
                  ReportPropertyChanging("DfltWhseKey");
                  _DfltWhseKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltWhseKey");
                  OnDfltWhseKeyChanged();
              }
            }
        }
        private int? _DfltWhseKey;
        partial void OnGetDfltWhseKey(ref int? value);
        partial void OnDfltWhseKeyChanging(ref int? value);
        partial void OnDfltWhseKeyChanged();
    
        /// <summary>
        /// There are no comments for ExpAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ExpAcctKey
        {
            get
            {
                int? value = _ExpAcctKey;
                OnGetExpAcctKey(ref value);
                return value;
            }
            set
            {
                if (_ExpAcctKey != value)
                {
                  OnExpAcctKeyChanging(ref value);
                  ReportPropertyChanging("ExpAcctKey");
                  _ExpAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ExpAcctKey");
                  OnExpAcctKeyChanged();
              }
            }
        }
        private int? _ExpAcctKey;
        partial void OnGetExpAcctKey(ref int? value);
        partial void OnExpAcctKeyChanging(ref int? value);
        partial void OnExpAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for FASAssetTemplate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string FASAssetTemplate
        {
            get
            {
                string value = _FASAssetTemplate;
                OnGetFASAssetTemplate(ref value);
                return value;
            }
            set
            {
                if (_FASAssetTemplate != value)
                {
                  OnFASAssetTemplateChanging(ref value);
                  ReportPropertyChanging("FASAssetTemplate");
                  _FASAssetTemplate = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("FASAssetTemplate");
                  OnFASAssetTemplateChanged();
              }
            }
        }
        private string _FASAssetTemplate;
        partial void OnGetFASAssetTemplate(ref string value);
        partial void OnFASAssetTemplateChanging(ref string value);
        partial void OnFASAssetTemplateChanged();
    
        /// <summary>
        /// There are no comments for FreightClassKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? FreightClassKey
        {
            get
            {
                int? value = _FreightClassKey;
                OnGetFreightClassKey(ref value);
                return value;
            }
            set
            {
                if (_FreightClassKey != value)
                {
                  OnFreightClassKeyChanging(ref value);
                  ReportPropertyChanging("FreightClassKey");
                  _FreightClassKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FreightClassKey");
                  OnFreightClassKeyChanged();
              }
            }
        }
        private int? _FreightClassKey;
        partial void OnGetFreightClassKey(ref int? value);
        partial void OnFreightClassKeyChanging(ref int? value);
        partial void OnFreightClassKeyChanged();
    
        /// <summary>
        /// There are no comments for HazMat in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short HazMat
        {
            get
            {
                short value = _HazMat;
                OnGetHazMat(ref value);
                return value;
            }
            set
            {
                if (_HazMat != value)
                {
                  OnHazMatChanging(ref value);
                  ReportPropertyChanging("HazMat");
                  _HazMat = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("HazMat");
                  OnHazMatChanged();
              }
            }
        }
        private short _HazMat = 0;
        partial void OnGetHazMat(ref short value);
        partial void OnHazMatChanging(ref short value);
        partial void OnHazMatChanged();
    
        /// <summary>
        /// There are no comments for ImportLogKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ImportLogKey
        {
            get
            {
                int? value = _ImportLogKey;
                OnGetImportLogKey(ref value);
                return value;
            }
            set
            {
                if (_ImportLogKey != value)
                {
                  OnImportLogKeyChanging(ref value);
                  ReportPropertyChanging("ImportLogKey");
                  _ImportLogKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ImportLogKey");
                  OnImportLogKeyChanged();
              }
            }
        }
        private int? _ImportLogKey;
        partial void OnGetImportLogKey(ref int? value);
        partial void OnImportLogKeyChanging(ref int? value);
        partial void OnImportLogKeyChanged();
    
        /// <summary>
        /// There are no comments for InclOnPackList in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short InclOnPackList
        {
            get
            {
                short value = _InclOnPackList;
                OnGetInclOnPackList(ref value);
                return value;
            }
            set
            {
                if (_InclOnPackList != value)
                {
                  OnInclOnPackListChanging(ref value);
                  ReportPropertyChanging("InclOnPackList");
                  _InclOnPackList = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InclOnPackList");
                  OnInclOnPackListChanged();
              }
            }
        }
        private short _InclOnPackList = 1;
        partial void OnGetInclOnPackList(ref short value);
        partial void OnInclOnPackListChanging(ref short value);
        partial void OnInclOnPackListChanged();
    
        /// <summary>
        /// There are no comments for InternalLongDesc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short InternalLongDesc
        {
            get
            {
                short value = _InternalLongDesc;
                OnGetInternalLongDesc(ref value);
                return value;
            }
            set
            {
                if (_InternalLongDesc != value)
                {
                  OnInternalLongDescChanging(ref value);
                  ReportPropertyChanging("InternalLongDesc");
                  _InternalLongDesc = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InternalLongDesc");
                  OnInternalLongDescChanged();
              }
            }
        }
        private short _InternalLongDesc = 0;
        partial void OnGetInternalLongDesc(ref short value);
        partial void OnInternalLongDescChanging(ref short value);
        partial void OnInternalLongDescChanged();
    
        /// <summary>
        /// There are no comments for IntrnlDeliveryReq in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short IntrnlDeliveryReq
        {
            get
            {
                short value = _IntrnlDeliveryReq;
                OnGetIntrnlDeliveryReq(ref value);
                return value;
            }
            set
            {
                if (_IntrnlDeliveryReq != value)
                {
                  OnIntrnlDeliveryReqChanging(ref value);
                  ReportPropertyChanging("IntrnlDeliveryReq");
                  _IntrnlDeliveryReq = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IntrnlDeliveryReq");
                  OnIntrnlDeliveryReqChanged();
              }
            }
        }
        private short _IntrnlDeliveryReq = 0;
        partial void OnGetIntrnlDeliveryReq(ref short value);
        partial void OnIntrnlDeliveryReqChanging(ref short value);
        partial void OnIntrnlDeliveryReqChanged();
    
        /// <summary>
        /// There are no comments for ItemClassKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ItemClassKey
        {
            get
            {
                int value = _ItemClassKey;
                OnGetItemClassKey(ref value);
                return value;
            }
            set
            {
                if (_ItemClassKey != value)
                {
                  OnItemClassKeyChanging(ref value);
                  ReportPropertyChanging("ItemClassKey");
                  _ItemClassKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ItemClassKey");
                  OnItemClassKeyChanged();
              }
            }
        }
        private int _ItemClassKey;
        partial void OnGetItemClassKey(ref int value);
        partial void OnItemClassKeyChanging(ref int value);
        partial void OnItemClassKeyChanged();
    
        /// <summary>
        /// There are no comments for ItemID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupTextReturn]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"ID Artículo")]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"ID Artículo")]
        public virtual string ItemID
        {
            get
            {
                string value = _ItemID;
                OnGetItemID(ref value);
                return value;
            }
            set
            {
                if (_ItemID != value)
                {
                  OnItemIDChanging(ref value);
                  ReportPropertyChanging("ItemID");
                  _ItemID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ItemID");
                  OnItemIDChanged();
              }
            }
        }
        private string _ItemID;
        partial void OnGetItemID(ref string value);
        partial void OnItemIDChanging(ref string value);
        partial void OnItemIDChanged();
    
        /// <summary>
        /// There are no comments for ItemSubType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ItemSubType
        {
            get
            {
                short value = _ItemSubType;
                OnGetItemSubType(ref value);
                return value;
            }
            set
            {
                if (_ItemSubType != value)
                {
                  OnItemSubTypeChanging(ref value);
                  ReportPropertyChanging("ItemSubType");
                  _ItemSubType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ItemSubType");
                  OnItemSubTypeChanged();
              }
            }
        }
        private short _ItemSubType = 1;
        partial void OnGetItemSubType(ref short value);
        partial void OnItemSubTypeChanging(ref short value);
        partial void OnItemSubTypeChanged();
    
        /// <summary>
        /// There are no comments for ItemType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ItemType
        {
            get
            {
                short value = _ItemType;
                OnGetItemType(ref value);
                return value;
            }
            set
            {
                if (_ItemType != value)
                {
                  OnItemTypeChanging(ref value);
                  ReportPropertyChanging("ItemType");
                  _ItemType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ItemType");
                  OnItemTypeChanged();
              }
            }
        }
        private short _ItemType;
        partial void OnGetItemType(ref short value);
        partial void OnItemTypeChanging(ref short value);
        partial void OnItemTypeChanged();
    
        /// <summary>
        /// There are no comments for MatchToleranceKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? MatchToleranceKey
        {
            get
            {
                int? value = _MatchToleranceKey;
                OnGetMatchToleranceKey(ref value);
                return value;
            }
            set
            {
                if (_MatchToleranceKey != value)
                {
                  OnMatchToleranceKeyChanging(ref value);
                  ReportPropertyChanging("MatchToleranceKey");
                  _MatchToleranceKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MatchToleranceKey");
                  OnMatchToleranceKeyChanged();
              }
            }
        }
        private int? _MatchToleranceKey;
        partial void OnGetMatchToleranceKey(ref int? value);
        partial void OnMatchToleranceKeyChanging(ref int? value);
        partial void OnMatchToleranceKeyChanged();
    
        /// <summary>
        /// There are no comments for MatSafetySheetKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? MatSafetySheetKey
        {
            get
            {
                int? value = _MatSafetySheetKey;
                OnGetMatSafetySheetKey(ref value);
                return value;
            }
            set
            {
                if (_MatSafetySheetKey != value)
                {
                  OnMatSafetySheetKeyChanging(ref value);
                  ReportPropertyChanging("MatSafetySheetKey");
                  _MatSafetySheetKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MatSafetySheetKey");
                  OnMatSafetySheetKeyChanged();
              }
            }
        }
        private int? _MatSafetySheetKey;
        partial void OnGetMatSafetySheetKey(ref int? value);
        partial void OnMatSafetySheetKeyChanging(ref int? value);
        partial void OnMatSafetySheetKeyChanged();
    
        /// <summary>
        /// There are no comments for MinGrossProfitPct in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal MinGrossProfitPct
        {
            get
            {
                decimal value = _MinGrossProfitPct;
                OnGetMinGrossProfitPct(ref value);
                return value;
            }
            set
            {
                if (_MinGrossProfitPct != value)
                {
                  OnMinGrossProfitPctChanging(ref value);
                  ReportPropertyChanging("MinGrossProfitPct");
                  _MinGrossProfitPct = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MinGrossProfitPct");
                  OnMinGrossProfitPctChanged();
              }
            }
        }
        private decimal _MinGrossProfitPct = 0m;
        partial void OnGetMinGrossProfitPct(ref decimal value);
        partial void OnMinGrossProfitPctChanging(ref decimal value);
        partial void OnMinGrossProfitPctChanged();
    
        /// <summary>
        /// There are no comments for MinSaleQty in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal MinSaleQty
        {
            get
            {
                decimal value = _MinSaleQty;
                OnGetMinSaleQty(ref value);
                return value;
            }
            set
            {
                if (_MinSaleQty != value)
                {
                  OnMinSaleQtyChanging(ref value);
                  ReportPropertyChanging("MinSaleQty");
                  _MinSaleQty = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MinSaleQty");
                  OnMinSaleQtyChanged();
              }
            }
        }
        private decimal _MinSaleQty = 0m;
        partial void OnGetMinSaleQty(ref decimal value);
        partial void OnMinSaleQtyChanging(ref decimal value);
        partial void OnMinSaleQtyChanged();
    
        /// <summary>
        /// There are no comments for PerUsageOrdLimit in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PerUsageOrdLimit
        {
            get
            {
                short value = _PerUsageOrdLimit;
                OnGetPerUsageOrdLimit(ref value);
                return value;
            }
            set
            {
                if (_PerUsageOrdLimit != value)
                {
                  OnPerUsageOrdLimitChanging(ref value);
                  ReportPropertyChanging("PerUsageOrdLimit");
                  _PerUsageOrdLimit = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PerUsageOrdLimit");
                  OnPerUsageOrdLimitChanged();
              }
            }
        }
        private short _PerUsageOrdLimit = 0;
        partial void OnGetPerUsageOrdLimit(ref short value);
        partial void OnPerUsageOrdLimitChanging(ref short value);
        partial void OnPerUsageOrdLimitChanged();
    
        /// <summary>
        /// There are no comments for PriceSeq in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? PriceSeq
        {
            get
            {
                int? value = _PriceSeq;
                OnGetPriceSeq(ref value);
                return value;
            }
            set
            {
                if (_PriceSeq != value)
                {
                  OnPriceSeqChanging(ref value);
                  ReportPropertyChanging("PriceSeq");
                  _PriceSeq = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PriceSeq");
                  OnPriceSeqChanged();
              }
            }
        }
        private int? _PriceSeq;
        partial void OnGetPriceSeq(ref int? value);
        partial void OnPriceSeqChanging(ref int? value);
        partial void OnPriceSeqChanged();
    
        /// <summary>
        /// There are no comments for PriceUnitMeasKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? PriceUnitMeasKey
        {
            get
            {
                int? value = _PriceUnitMeasKey;
                OnGetPriceUnitMeasKey(ref value);
                return value;
            }
            set
            {
                if (_PriceUnitMeasKey != value)
                {
                  OnPriceUnitMeasKeyChanging(ref value);
                  ReportPropertyChanging("PriceUnitMeasKey");
                  _PriceUnitMeasKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PriceUnitMeasKey");
                  OnPriceUnitMeasKeyChanged();
              }
            }
        }
        private int? _PriceUnitMeasKey;
        partial void OnGetPriceUnitMeasKey(ref int? value);
        partial void OnPriceUnitMeasKeyChanging(ref int? value);
        partial void OnPriceUnitMeasKeyChanged();
    
        /// <summary>
        /// There are no comments for ProdDetlLink in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ProdDetlLink
        {
            get
            {
                string value = _ProdDetlLink;
                OnGetProdDetlLink(ref value);
                return value;
            }
            set
            {
                if (_ProdDetlLink != value)
                {
                  OnProdDetlLinkChanging(ref value);
                  ReportPropertyChanging("ProdDetlLink");
                  _ProdDetlLink = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ProdDetlLink");
                  OnProdDetlLinkChanged();
              }
            }
        }
        private string _ProdDetlLink;
        partial void OnGetProdDetlLink(ref string value);
        partial void OnProdDetlLinkChanging(ref string value);
        partial void OnProdDetlLinkChanged();
    
        /// <summary>
        /// There are no comments for ProdPriceGroupKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ProdPriceGroupKey
        {
            get
            {
                int? value = _ProdPriceGroupKey;
                OnGetProdPriceGroupKey(ref value);
                return value;
            }
            set
            {
                if (_ProdPriceGroupKey != value)
                {
                  OnProdPriceGroupKeyChanging(ref value);
                  ReportPropertyChanging("ProdPriceGroupKey");
                  _ProdPriceGroupKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ProdPriceGroupKey");
                  OnProdPriceGroupKeyChanged();
              }
            }
        }
        private int? _ProdPriceGroupKey;
        partial void OnGetProdPriceGroupKey(ref int? value);
        partial void OnProdPriceGroupKeyChanging(ref int? value);
        partial void OnProdPriceGroupKeyChanged();
    
        /// <summary>
        /// There are no comments for PurchProdLineKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? PurchProdLineKey
        {
            get
            {
                int? value = _PurchProdLineKey;
                OnGetPurchProdLineKey(ref value);
                return value;
            }
            set
            {
                if (_PurchProdLineKey != value)
                {
                  OnPurchProdLineKeyChanging(ref value);
                  ReportPropertyChanging("PurchProdLineKey");
                  _PurchProdLineKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PurchProdLineKey");
                  OnPurchProdLineKeyChanged();
              }
            }
        }
        private int? _PurchProdLineKey;
        partial void OnGetPurchProdLineKey(ref int? value);
        partial void OnPurchProdLineKeyChanging(ref int? value);
        partial void OnPurchProdLineKeyChanged();
    
        /// <summary>
        /// There are no comments for PurchUnitMeasKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? PurchUnitMeasKey
        {
            get
            {
                int? value = _PurchUnitMeasKey;
                OnGetPurchUnitMeasKey(ref value);
                return value;
            }
            set
            {
                if (_PurchUnitMeasKey != value)
                {
                  OnPurchUnitMeasKeyChanging(ref value);
                  ReportPropertyChanging("PurchUnitMeasKey");
                  _PurchUnitMeasKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PurchUnitMeasKey");
                  OnPurchUnitMeasKeyChanged();
              }
            }
        }
        private int? _PurchUnitMeasKey;
        partial void OnGetPurchUnitMeasKey(ref int? value);
        partial void OnPurchUnitMeasKeyChanging(ref int? value);
        partial void OnPurchUnitMeasKeyChanged();
    
        /// <summary>
        /// There are no comments for RcptReq in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short RcptReq
        {
            get
            {
                short value = _RcptReq;
                OnGetRcptReq(ref value);
                return value;
            }
            set
            {
                if (_RcptReq != value)
                {
                  OnRcptReqChanging(ref value);
                  ReportPropertyChanging("RcptReq");
                  _RcptReq = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RcptReq");
                  OnRcptReqChanged();
              }
            }
        }
        private short _RcptReq = 0;
        partial void OnGetRcptReq(ref short value);
        partial void OnRcptReqChanging(ref short value);
        partial void OnRcptReqChanged();
    
        /// <summary>
        /// There are no comments for RcvgCmnt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string RcvgCmnt
        {
            get
            {
                string value = _RcvgCmnt;
                OnGetRcvgCmnt(ref value);
                return value;
            }
            set
            {
                if (_RcvgCmnt != value)
                {
                  OnRcvgCmntChanging(ref value);
                  ReportPropertyChanging("RcvgCmnt");
                  _RcvgCmnt = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("RcvgCmnt");
                  OnRcvgCmntChanged();
              }
            }
        }
        private string _RcvgCmnt;
        partial void OnGetRcvgCmnt(ref string value);
        partial void OnRcvgCmntChanging(ref string value);
        partial void OnRcvgCmntChanged();
    
        /// <summary>
        /// There are no comments for RestockRate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal RestockRate
        {
            get
            {
                decimal value = _RestockRate;
                OnGetRestockRate(ref value);
                return value;
            }
            set
            {
                if (_RestockRate != value)
                {
                  OnRestockRateChanging(ref value);
                  ReportPropertyChanging("RestockRate");
                  _RestockRate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RestockRate");
                  OnRestockRateChanged();
              }
            }
        }
        private decimal _RestockRate = 0m;
        partial void OnGetRestockRate(ref decimal value);
        partial void OnRestockRateChanging(ref decimal value);
        partial void OnRestockRateChanged();
    
        /// <summary>
        /// There are no comments for ReturnsAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ReturnsAcctKey
        {
            get
            {
                int? value = _ReturnsAcctKey;
                OnGetReturnsAcctKey(ref value);
                return value;
            }
            set
            {
                if (_ReturnsAcctKey != value)
                {
                  OnReturnsAcctKeyChanging(ref value);
                  ReportPropertyChanging("ReturnsAcctKey");
                  _ReturnsAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ReturnsAcctKey");
                  OnReturnsAcctKeyChanged();
              }
            }
        }
        private int? _ReturnsAcctKey;
        partial void OnGetReturnsAcctKey(ref int? value);
        partial void OnReturnsAcctKeyChanging(ref int? value);
        partial void OnReturnsAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for SaleMultiple in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal SaleMultiple
        {
            get
            {
                decimal value = _SaleMultiple;
                OnGetSaleMultiple(ref value);
                return value;
            }
            set
            {
                if (_SaleMultiple != value)
                {
                  OnSaleMultipleChanging(ref value);
                  ReportPropertyChanging("SaleMultiple");
                  _SaleMultiple = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SaleMultiple");
                  OnSaleMultipleChanged();
              }
            }
        }
        private decimal _SaleMultiple = 0m;
        partial void OnGetSaleMultiple(ref decimal value);
        partial void OnSaleMultipleChanging(ref decimal value);
        partial void OnSaleMultipleChanged();
    
        /// <summary>
        /// There are no comments for SalesAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? SalesAcctKey
        {
            get
            {
                int? value = _SalesAcctKey;
                OnGetSalesAcctKey(ref value);
                return value;
            }
            set
            {
                if (_SalesAcctKey != value)
                {
                  OnSalesAcctKeyChanging(ref value);
                  ReportPropertyChanging("SalesAcctKey");
                  _SalesAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesAcctKey");
                  OnSalesAcctKeyChanged();
              }
            }
        }
        private int? _SalesAcctKey;
        partial void OnGetSalesAcctKey(ref int? value);
        partial void OnSalesAcctKeyChanging(ref int? value);
        partial void OnSalesAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for SalesProdLineKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? SalesProdLineKey
        {
            get
            {
                int? value = _SalesProdLineKey;
                OnGetSalesProdLineKey(ref value);
                return value;
            }
            set
            {
                if (_SalesProdLineKey != value)
                {
                  OnSalesProdLineKeyChanging(ref value);
                  ReportPropertyChanging("SalesProdLineKey");
                  _SalesProdLineKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesProdLineKey");
                  OnSalesProdLineKeyChanged();
              }
            }
        }
        private int? _SalesProdLineKey;
        partial void OnGetSalesProdLineKey(ref int? value);
        partial void OnSalesProdLineKeyChanging(ref int? value);
        partial void OnSalesProdLineKeyChanged();
    
        /// <summary>
        /// There are no comments for SalesUnitMeasKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? SalesUnitMeasKey
        {
            get
            {
                int? value = _SalesUnitMeasKey;
                OnGetSalesUnitMeasKey(ref value);
                return value;
            }
            set
            {
                if (_SalesUnitMeasKey != value)
                {
                  OnSalesUnitMeasKeyChanging(ref value);
                  ReportPropertyChanging("SalesUnitMeasKey");
                  _SalesUnitMeasKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesUnitMeasKey");
                  OnSalesUnitMeasKeyChanged();
              }
            }
        }
        private int? _SalesUnitMeasKey;
        partial void OnGetSalesUnitMeasKey(ref int? value);
        partial void OnSalesUnitMeasKeyChanging(ref int? value);
        partial void OnSalesUnitMeasKeyChanged();
    
        /// <summary>
        /// There are no comments for Seasonal in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Seasonal
        {
            get
            {
                short value = _Seasonal;
                OnGetSeasonal(ref value);
                return value;
            }
            set
            {
                if (_Seasonal != value)
                {
                  OnSeasonalChanging(ref value);
                  ReportPropertyChanging("Seasonal");
                  _Seasonal = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Seasonal");
                  OnSeasonalChanged();
              }
            }
        }
        private short _Seasonal = 0;
        partial void OnGetSeasonal(ref short value);
        partial void OnSeasonalChanging(ref short value);
        partial void OnSeasonalChanged();
    
        /// <summary>
        /// There are no comments for SerialIncrement in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string SerialIncrement
        {
            get
            {
                string value = _SerialIncrement;
                OnGetSerialIncrement(ref value);
                return value;
            }
            set
            {
                if (_SerialIncrement != value)
                {
                  OnSerialIncrementChanging(ref value);
                  ReportPropertyChanging("SerialIncrement");
                  _SerialIncrement = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("SerialIncrement");
                  OnSerialIncrementChanged();
              }
            }
        }
        private string _SerialIncrement;
        partial void OnGetSerialIncrement(ref string value);
        partial void OnSerialIncrementChanging(ref string value);
        partial void OnSerialIncrementChanged();
    
        /// <summary>
        /// There are no comments for SerialMask in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string SerialMask
        {
            get
            {
                string value = _SerialMask;
                OnGetSerialMask(ref value);
                return value;
            }
            set
            {
                if (_SerialMask != value)
                {
                  OnSerialMaskChanging(ref value);
                  ReportPropertyChanging("SerialMask");
                  _SerialMask = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("SerialMask");
                  OnSerialMaskChanged();
              }
            }
        }
        private string _SerialMask;
        partial void OnGetSerialMask(ref string value);
        partial void OnSerialMaskChanging(ref string value);
        partial void OnSerialMaskChanged();
    
        /// <summary>
        /// There are no comments for ShelfLife in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ShelfLife
        {
            get
            {
                short value = _ShelfLife;
                OnGetShelfLife(ref value);
                return value;
            }
            set
            {
                if (_ShelfLife != value)
                {
                  OnShelfLifeChanging(ref value);
                  ReportPropertyChanging("ShelfLife");
                  _ShelfLife = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShelfLife");
                  OnShelfLifeChanged();
              }
            }
        }
        private short _ShelfLife = 0;
        partial void OnGetShelfLife(ref short value);
        partial void OnShelfLifeChanging(ref short value);
        partial void OnShelfLifeChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Status
        {
            get
            {
                short value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private short _Status = 1;
        partial void OnGetStatus(ref short value);
        partial void OnStatusChanging(ref short value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// There are no comments for STaxClassKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? STaxClassKey
        {
            get
            {
                int? value = _STaxClassKey;
                OnGetSTaxClassKey(ref value);
                return value;
            }
            set
            {
                if (_STaxClassKey != value)
                {
                  OnSTaxClassKeyChanging(ref value);
                  ReportPropertyChanging("STaxClassKey");
                  _STaxClassKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("STaxClassKey");
                  OnSTaxClassKeyChanged();
              }
            }
        }
        private int? _STaxClassKey;
        partial void OnGetSTaxClassKey(ref int? value);
        partial void OnSTaxClassKeyChanging(ref int? value);
        partial void OnSTaxClassKeyChanged();
    
        /// <summary>
        /// There are no comments for StdPrice in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal StdPrice
        {
            get
            {
                decimal value = _StdPrice;
                OnGetStdPrice(ref value);
                return value;
            }
            set
            {
                if (_StdPrice != value)
                {
                  OnStdPriceChanging(ref value);
                  ReportPropertyChanging("StdPrice");
                  _StdPrice = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("StdPrice");
                  OnStdPriceChanged();
              }
            }
        }
        private decimal _StdPrice = 0m;
        partial void OnGetStdPrice(ref decimal value);
        partial void OnStdPriceChanging(ref decimal value);
        partial void OnStdPriceChanged();
    
        /// <summary>
        /// There are no comments for StdUnitCost in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal StdUnitCost
        {
            get
            {
                decimal value = _StdUnitCost;
                OnGetStdUnitCost(ref value);
                return value;
            }
            set
            {
                if (_StdUnitCost != value)
                {
                  OnStdUnitCostChanging(ref value);
                  ReportPropertyChanging("StdUnitCost");
                  _StdUnitCost = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("StdUnitCost");
                  OnStdUnitCostChanged();
              }
            }
        }
        private decimal _StdUnitCost = 0m;
        partial void OnGetStdUnitCost(ref decimal value);
        partial void OnStdUnitCostChanging(ref decimal value);
        partial void OnStdUnitCostChanged();
    
        /// <summary>
        /// There are no comments for StockUnitMeasKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? StockUnitMeasKey
        {
            get
            {
                int? value = _StockUnitMeasKey;
                OnGetStockUnitMeasKey(ref value);
                return value;
            }
            set
            {
                if (_StockUnitMeasKey != value)
                {
                  OnStockUnitMeasKeyChanging(ref value);
                  ReportPropertyChanging("StockUnitMeasKey");
                  _StockUnitMeasKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("StockUnitMeasKey");
                  OnStockUnitMeasKeyChanged();
              }
            }
        }
        private int? _StockUnitMeasKey;
        partial void OnGetStockUnitMeasKey(ref int? value);
        partial void OnStockUnitMeasKeyChanging(ref int? value);
        partial void OnStockUnitMeasKeyChanged();
    
        /// <summary>
        /// There are no comments for SubjToTradeDisc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short SubjToTradeDisc
        {
            get
            {
                short value = _SubjToTradeDisc;
                OnGetSubjToTradeDisc(ref value);
                return value;
            }
            set
            {
                if (_SubjToTradeDisc != value)
                {
                  OnSubjToTradeDiscChanging(ref value);
                  ReportPropertyChanging("SubjToTradeDisc");
                  _SubjToTradeDisc = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SubjToTradeDisc");
                  OnSubjToTradeDiscChanged();
              }
            }
        }
        private short _SubjToTradeDisc = 0;
        partial void OnGetSubjToTradeDisc(ref short value);
        partial void OnSubjToTradeDiscChanging(ref short value);
        partial void OnSubjToTradeDiscChanged();
    
        /// <summary>
        /// There are no comments for SuccessorDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? SuccessorDate
        {
            get
            {
                global::System.DateTime? value = _SuccessorDate;
                OnGetSuccessorDate(ref value);
                return value;
            }
            set
            {
                if (_SuccessorDate != value)
                {
                  OnSuccessorDateChanging(ref value);
                  ReportPropertyChanging("SuccessorDate");
                  _SuccessorDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SuccessorDate");
                  OnSuccessorDateChanged();
              }
            }
        }
        private global::System.DateTime? _SuccessorDate;
        partial void OnGetSuccessorDate(ref global::System.DateTime? value);
        partial void OnSuccessorDateChanging(ref global::System.DateTime? value);
        partial void OnSuccessorDateChanged();
    
        /// <summary>
        /// There are no comments for SuccessorItemKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? SuccessorItemKey
        {
            get
            {
                int? value = _SuccessorItemKey;
                OnGetSuccessorItemKey(ref value);
                return value;
            }
            set
            {
                if (_SuccessorItemKey != value)
                {
                  OnSuccessorItemKeyChanging(ref value);
                  ReportPropertyChanging("SuccessorItemKey");
                  _SuccessorItemKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SuccessorItemKey");
                  OnSuccessorItemKeyChanged();
              }
            }
        }
        private int? _SuccessorItemKey;
        partial void OnGetSuccessorItemKey(ref int? value);
        partial void OnSuccessorItemKeyChanging(ref int? value);
        partial void OnSuccessorItemKeyChanged();
    
        /// <summary>
        /// There are no comments for TargetMargin in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal TargetMargin
        {
            get
            {
                decimal value = _TargetMargin;
                OnGetTargetMargin(ref value);
                return value;
            }
            set
            {
                if (_TargetMargin != value)
                {
                  OnTargetMarginChanging(ref value);
                  ReportPropertyChanging("TargetMargin");
                  _TargetMargin = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TargetMargin");
                  OnTargetMarginChanged();
              }
            }
        }
        private decimal _TargetMargin = 0m;
        partial void OnGetTargetMargin(ref decimal value);
        partial void OnTargetMarginChanging(ref decimal value);
        partial void OnTargetMarginChanged();
    
        /// <summary>
        /// There are no comments for TrackMeth in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual ItemTrackMeth TrackMeth
        {
            get
            {
                ItemTrackMeth value = _TrackMeth;
                OnGetTrackMeth(ref value);
                return value;
            }
            set
            {
                if (_TrackMeth != value)
                {
                  OnTrackMethChanging(ref value);
                  ReportPropertyChanging("TrackMeth");
                  _TrackMeth = (ItemTrackMeth)StructuralObject.SetValidValue((short)value);
                  ReportPropertyChanged("TrackMeth");
                  OnTrackMethChanged();
              }
            }
        }
        private ItemTrackMeth _TrackMeth;
        partial void OnGetTrackMeth(ref ItemTrackMeth value);
        partial void OnTrackMethChanging(ref ItemTrackMeth value);
        partial void OnTrackMethChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();
    
        /// <summary>
        /// There are no comments for UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? UpdateDate
        {
            get
            {
                global::System.DateTime? value = _UpdateDate;
                OnGetUpdateDate(ref value);
                return value;
            }
            set
            {
                if (_UpdateDate != value)
                {
                  OnUpdateDateChanging(ref value);
                  ReportPropertyChanging("UpdateDate");
                  _UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateDate");
                  OnUpdateDateChanged();
              }
            }
        }
        private global::System.DateTime? _UpdateDate;
        partial void OnGetUpdateDate(ref global::System.DateTime? value);
        partial void OnUpdateDateChanging(ref global::System.DateTime? value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// There are no comments for UpdateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UpdateUserID
        {
            get
            {
                string value = _UpdateUserID;
                OnGetUpdateUserID(ref value);
                return value;
            }
            set
            {
                if (_UpdateUserID != value)
                {
                  OnUpdateUserIDChanging(ref value);
                  ReportPropertyChanging("UpdateUserID");
                  _UpdateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UpdateUserID");
                  OnUpdateUserIDChanged();
              }
            }
        }
        private string _UpdateUserID;
        partial void OnGetUpdateUserID(ref string value);
        partial void OnUpdateUserIDChanging(ref string value);
        partial void OnUpdateUserIDChanged();
    
        /// <summary>
        /// There are no comments for UserFld1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld1
        {
            get
            {
                string value = _UserFld1;
                OnGetUserFld1(ref value);
                return value;
            }
            set
            {
                if (_UserFld1 != value)
                {
                  OnUserFld1Changing(ref value);
                  ReportPropertyChanging("UserFld1");
                  _UserFld1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld1");
                  OnUserFld1Changed();
              }
            }
        }
        private string _UserFld1;
        partial void OnGetUserFld1(ref string value);
        partial void OnUserFld1Changing(ref string value);
        partial void OnUserFld1Changed();
    
        /// <summary>
        /// There are no comments for UserFld2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld2
        {
            get
            {
                string value = _UserFld2;
                OnGetUserFld2(ref value);
                return value;
            }
            set
            {
                if (_UserFld2 != value)
                {
                  OnUserFld2Changing(ref value);
                  ReportPropertyChanging("UserFld2");
                  _UserFld2 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld2");
                  OnUserFld2Changed();
              }
            }
        }
        private string _UserFld2;
        partial void OnGetUserFld2(ref string value);
        partial void OnUserFld2Changing(ref string value);
        partial void OnUserFld2Changed();
    
        /// <summary>
        /// There are no comments for UserFld3 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld3
        {
            get
            {
                string value = _UserFld3;
                OnGetUserFld3(ref value);
                return value;
            }
            set
            {
                if (_UserFld3 != value)
                {
                  OnUserFld3Changing(ref value);
                  ReportPropertyChanging("UserFld3");
                  _UserFld3 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld3");
                  OnUserFld3Changed();
              }
            }
        }
        private string _UserFld3;
        partial void OnGetUserFld3(ref string value);
        partial void OnUserFld3Changing(ref string value);
        partial void OnUserFld3Changed();
    
        /// <summary>
        /// There are no comments for UserFld4 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld4
        {
            get
            {
                string value = _UserFld4;
                OnGetUserFld4(ref value);
                return value;
            }
            set
            {
                if (_UserFld4 != value)
                {
                  OnUserFld4Changing(ref value);
                  ReportPropertyChanging("UserFld4");
                  _UserFld4 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld4");
                  OnUserFld4Changed();
              }
            }
        }
        private string _UserFld4;
        partial void OnGetUserFld4(ref string value);
        partial void OnUserFld4Changing(ref string value);
        partial void OnUserFld4Changed();
    
        /// <summary>
        /// There are no comments for UserFld5 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld5
        {
            get
            {
                string value = _UserFld5;
                OnGetUserFld5(ref value);
                return value;
            }
            set
            {
                if (_UserFld5 != value)
                {
                  OnUserFld5Changing(ref value);
                  ReportPropertyChanging("UserFld5");
                  _UserFld5 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld5");
                  OnUserFld5Changed();
              }
            }
        }
        private string _UserFld5;
        partial void OnGetUserFld5(ref string value);
        partial void OnUserFld5Changing(ref string value);
        partial void OnUserFld5Changed();
    
        /// <summary>
        /// There are no comments for UserFld6 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld6
        {
            get
            {
                string value = _UserFld6;
                OnGetUserFld6(ref value);
                return value;
            }
            set
            {
                if (_UserFld6 != value)
                {
                  OnUserFld6Changing(ref value);
                  ReportPropertyChanging("UserFld6");
                  _UserFld6 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld6");
                  OnUserFld6Changed();
              }
            }
        }
        private string _UserFld6;
        partial void OnGetUserFld6(ref string value);
        partial void OnUserFld6Changing(ref string value);
        partial void OnUserFld6Changed();
    
        /// <summary>
        /// There are no comments for ValuationMeth in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ValuationMeth
        {
            get
            {
                short value = _ValuationMeth;
                OnGetValuationMeth(ref value);
                return value;
            }
            set
            {
                if (_ValuationMeth != value)
                {
                  OnValuationMethChanging(ref value);
                  ReportPropertyChanging("ValuationMeth");
                  _ValuationMeth = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ValuationMeth");
                  OnValuationMethChanged();
              }
            }
        }
        private short _ValuationMeth = 1;
        partial void OnGetValuationMeth(ref short value);
        partial void OnValuationMethChanging(ref short value);
        partial void OnValuationMethChanged();
    
        /// <summary>
        /// There are no comments for VendFamilyKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? VendFamilyKey
        {
            get
            {
                int? value = _VendFamilyKey;
                OnGetVendFamilyKey(ref value);
                return value;
            }
            set
            {
                if (_VendFamilyKey != value)
                {
                  OnVendFamilyKeyChanging(ref value);
                  ReportPropertyChanging("VendFamilyKey");
                  _VendFamilyKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VendFamilyKey");
                  OnVendFamilyKeyChanged();
              }
            }
        }
        private int? _VendFamilyKey;
        partial void OnGetVendFamilyKey(ref int? value);
        partial void OnVendFamilyKeyChanging(ref int? value);
        partial void OnVendFamilyKeyChanged();
    
        /// <summary>
        /// There are no comments for WarrantyDays in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short WarrantyDays
        {
            get
            {
                short value = _WarrantyDays;
                OnGetWarrantyDays(ref value);
                return value;
            }
            set
            {
                if (_WarrantyDays != value)
                {
                  OnWarrantyDaysChanging(ref value);
                  ReportPropertyChanging("WarrantyDays");
                  _WarrantyDays = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WarrantyDays");
                  OnWarrantyDaysChanged();
              }
            }
        }
        private short _WarrantyDays = 0;
        partial void OnGetWarrantyDays(ref short value);
        partial void OnWarrantyDaysChanging(ref short value);
        partial void OnWarrantyDaysChanged();
    
        /// <summary>
        /// There are no comments for WarrantyProvider in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short WarrantyProvider
        {
            get
            {
                short value = _WarrantyProvider;
                OnGetWarrantyProvider(ref value);
                return value;
            }
            set
            {
                if (_WarrantyProvider != value)
                {
                  OnWarrantyProviderChanging(ref value);
                  ReportPropertyChanging("WarrantyProvider");
                  _WarrantyProvider = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WarrantyProvider");
                  OnWarrantyProviderChanged();
              }
            }
        }
        private short _WarrantyProvider = 0;
        partial void OnGetWarrantyProvider(ref short value);
        partial void OnWarrantyProviderChanging(ref short value);
        partial void OnWarrantyProviderChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Inventories in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Item_Inventory", "Inventories")]
        public virtual EntityCollection<Inventory> Inventories
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Inventory>("Net4Sage.DataAccessModel.Item_Inventory", "Inventories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Inventory>("Net4Sage.DataAccessModel.Item_Inventory", "Inventories", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvtTrans in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Item_InvtTran", "InvtTrans")]
        public virtual EntityCollection<InvtTran> InvtTrans
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvtTran>("Net4Sage.DataAccessModel.Item_InvtTran", "InvtTrans");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvtTran>("Net4Sage.DataAccessModel.Item_InvtTran", "InvtTrans", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Descriptions in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Item_ItemDescription", "Descriptions")]
        public virtual EntityCollection<ItemDescription> Descriptions
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ItemDescription>("Net4Sage.DataAccessModel.Item_ItemDescription", "Descriptions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ItemDescription>("Net4Sage.DataAccessModel.Item_ItemDescription", "Descriptions", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for StockUM in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "UnitMeasure_Item", "StockUM")]
        public virtual UnitMeasure StockUM
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<UnitMeasure>("Net4Sage.DataAccessModel.UnitMeasure_Item", "StockUM").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<UnitMeasure>("Net4Sage.DataAccessModel.UnitMeasure_Item", "StockUM").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for StockUM in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UnitMeasure> StockUMReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<UnitMeasure>("Net4Sage.DataAccessModel.UnitMeasure_Item", "StockUM");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<UnitMeasure>("Net4Sage.DataAccessModel.UnitMeasure_Item", "StockUM", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<UnitMeasure>("Net4Sage.DataAccessModel.UnitMeasure_Item", "StockUM").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for UMs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Item_ItemUM", "UMs")]
        public virtual EntityCollection<ItemUM> UMs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ItemUM>("Net4Sage.DataAccessModel.Item_ItemUM", "UMs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ItemUM>("Net4Sage.DataAccessModel.Item_ItemUM", "UMs", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SalesProductLine in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "SalesProductLine_Item", "SalesProductLine")]
        public virtual SalesProductLine SalesProductLine
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesProductLine>("Net4Sage.DataAccessModel.SalesProductLine_Item", "SalesProductLine").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesProductLine>("Net4Sage.DataAccessModel.SalesProductLine_Item", "SalesProductLine").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SalesProductLine in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SalesProductLine> SalesProductLineReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesProductLine>("Net4Sage.DataAccessModel.SalesProductLine_Item", "SalesProductLine");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SalesProductLine>("Net4Sage.DataAccessModel.SalesProductLine_Item", "SalesProductLine", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesProductLine>("Net4Sage.DataAccessModel.SalesProductLine_Item", "SalesProductLine").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ProductCategoryItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Item_ProductCategoryItem", "ProductCategoryItems")]
        public virtual EntityCollection<ProductCategoryItem> ProductCategoryItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ProductCategoryItem>("Net4Sage.DataAccessModel.Item_ProductCategoryItem", "ProductCategoryItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ProductCategoryItem>("Net4Sage.DataAccessModel.Item_ProductCategoryItem", "ProductCategoryItems", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CommodityCode in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "CommodityCode_Item", "CommodityCode")]
        public virtual CommodityCode CommodityCode
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CommodityCode>("Net4Sage.DataAccessModel.CommodityCode_Item", "CommodityCode").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CommodityCode>("Net4Sage.DataAccessModel.CommodityCode_Item", "CommodityCode").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for CommodityCode in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CommodityCode> CommodityCodeReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CommodityCode>("Net4Sage.DataAccessModel.CommodityCode_Item", "CommodityCode");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CommodityCode>("Net4Sage.DataAccessModel.CommodityCode_Item", "CommodityCode", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CommodityCode>("Net4Sage.DataAccessModel.CommodityCode_Item", "CommodityCode").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for RcvrLines in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Item_RcvrLine", "RcvrLines")]
        public virtual EntityCollection<RcvrLine> RcvrLines
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<RcvrLine>("Net4Sage.DataAccessModel.Item_RcvrLine", "RcvrLines");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<RcvrLine>("Net4Sage.DataAccessModel.Item_RcvrLine", "RcvrLines", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for MFRoutes in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Item_Route", "MFRoutes")]
        public virtual EntityCollection<Route> MFRoutes
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Route>("Net4Sage.DataAccessModel.Item_Route", "MFRoutes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Route>("Net4Sage.DataAccessModel.Item_Route", "MFRoutes", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.IMTranType in the schema.
    /// </summary>
    /// <KeyProperties>
    /// TranType
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="IMTranType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IMTranType : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new IMTranType object.
        /// </summary>
        /// <param name="tranType">Initial value of TranType.</param>
        /// <param name="invtTranClass">Initial value of InvtTranClass.</param>
        /// <param name="qtyOnHandEffect">Initial value of QtyOnHandEffect.</param>
        public static IMTranType CreateIMTranType(int tranType, short invtTranClass, short qtyOnHandEffect)
        {
            IMTranType iMTranType = new IMTranType();
            iMTranType.TranType = tranType;
            iMTranType.InvtTranClass = invtTranClass;
            iMTranType.QtyOnHandEffect = qtyOnHandEffect;
            return iMTranType;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for TranType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int TranType
        {
            get
            {
                int value = _TranType;
                OnGetTranType(ref value);
                return value;
            }
            set
            {
                if (_TranType != value)
                {
                  OnTranTypeChanging(ref value);
                  ReportPropertyChanging("TranType");
                  _TranType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranType");
                  OnTranTypeChanged();
              }
            }
        }
        private int _TranType;
        partial void OnGetTranType(ref int value);
        partial void OnTranTypeChanging(ref int value);
        partial void OnTranTypeChanged();
    
        /// <summary>
        /// There are no comments for InvtOffsetAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? InvtOffsetAcctKey
        {
            get
            {
                int? value = _InvtOffsetAcctKey;
                OnGetInvtOffsetAcctKey(ref value);
                return value;
            }
            set
            {
                if (_InvtOffsetAcctKey != value)
                {
                  OnInvtOffsetAcctKeyChanging(ref value);
                  ReportPropertyChanging("InvtOffsetAcctKey");
                  _InvtOffsetAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvtOffsetAcctKey");
                  OnInvtOffsetAcctKeyChanged();
              }
            }
        }
        private int? _InvtOffsetAcctKey;
        partial void OnGetInvtOffsetAcctKey(ref int? value);
        partial void OnInvtOffsetAcctKeyChanging(ref int? value);
        partial void OnInvtOffsetAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for InvtTranClass in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short InvtTranClass
        {
            get
            {
                short value = _InvtTranClass;
                OnGetInvtTranClass(ref value);
                return value;
            }
            set
            {
                if (_InvtTranClass != value)
                {
                  OnInvtTranClassChanging(ref value);
                  ReportPropertyChanging("InvtTranClass");
                  _InvtTranClass = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvtTranClass");
                  OnInvtTranClassChanged();
              }
            }
        }
        private short _InvtTranClass;
        partial void OnGetInvtTranClass(ref short value);
        partial void OnInvtTranClassChanging(ref short value);
        partial void OnInvtTranClassChanged();
    
        /// <summary>
        /// There are no comments for QtyOnHandEffect in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short QtyOnHandEffect
        {
            get
            {
                short value = _QtyOnHandEffect;
                OnGetQtyOnHandEffect(ref value);
                return value;
            }
            set
            {
                if (_QtyOnHandEffect != value)
                {
                  OnQtyOnHandEffectChanging(ref value);
                  ReportPropertyChanging("QtyOnHandEffect");
                  _QtyOnHandEffect = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QtyOnHandEffect");
                  OnQtyOnHandEffectChanged();
              }
            }
        }
        private short _QtyOnHandEffect = 0;
        partial void OnGetQtyOnHandEffect(ref short value);
        partial void OnQtyOnHandEffectChanging(ref short value);
        partial void OnQtyOnHandEffectChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvtTrans in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "IMTranType_InvtTran", "InvtTrans")]
        public virtual EntityCollection<InvtTran> InvtTrans
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvtTran>("Net4Sage.DataAccessModel.IMTranType_InvtTran", "InvtTrans");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvtTran>("Net4Sage.DataAccessModel.IMTranType_InvtTran", "InvtTrans", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.BatchLog in the schema.
    /// </summary>
    /// <KeyProperties>
    /// BatchKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="BatchLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BatchLog : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new BatchLog object.
        /// </summary>
        /// <param name="batchKey">Initial value of BatchKey.</param>
        /// <param name="batchNo">Initial value of BatchNo.</param>
        /// <param name="batchTotal">Initial value of BatchTotal.</param>
        /// <param name="batchType">Initial value of BatchType.</param>
        /// <param name="createType">Initial value of CreateType.</param>
        /// <param name="nextSeqNo">Initial value of NextSeqNo.</param>
        /// <param name="origUserID">Initial value of OrigUserID.</param>
        /// <param name="postCompanyID">Initial value of PostCompanyID.</param>
        /// <param name="postError">Initial value of PostError.</param>
        /// <param name="postStatus">Initial value of PostStatus.</param>
        /// <param name="rgstrPrinted">Initial value of RgstrPrinted.</param>
        /// <param name="sourceCompanyID">Initial value of SourceCompanyID.</param>
        /// <param name="status">Initial value of Status.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        public static BatchLog CreateBatchLog(int batchKey, int batchNo, decimal batchTotal, int batchType, short createType, int nextSeqNo, string origUserID, string postCompanyID, short postError, short postStatus, short rgstrPrinted, string sourceCompanyID, short status, int updateCounter)
        {
            BatchLog batchLog = new BatchLog();
            batchLog.BatchKey = batchKey;
            batchLog.BatchNo = batchNo;
            batchLog.BatchTotal = batchTotal;
            batchLog.BatchType = batchType;
            batchLog.CreateType = createType;
            batchLog.NextSeqNo = nextSeqNo;
            batchLog.OrigUserID = origUserID;
            batchLog.PostCompanyID = postCompanyID;
            batchLog.PostError = postError;
            batchLog.PostStatus = postStatus;
            batchLog.RgstrPrinted = rgstrPrinted;
            batchLog.SourceCompanyID = sourceCompanyID;
            batchLog.Status = status;
            batchLog.UpdateCounter = updateCounter;
            return batchLog;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for BatchKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int BatchKey
        {
            get
            {
                int value = _BatchKey;
                OnGetBatchKey(ref value);
                return value;
            }
            set
            {
                if (_BatchKey != value)
                {
                  OnBatchKeyChanging(ref value);
                  ReportPropertyChanging("BatchKey");
                  _BatchKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BatchKey");
                  OnBatchKeyChanged();
              }
            }
        }
        private int _BatchKey;
        partial void OnGetBatchKey(ref int value);
        partial void OnBatchKeyChanging(ref int value);
        partial void OnBatchKeyChanged();
    
        /// <summary>
        /// There are no comments for BatchCmnt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string BatchCmnt
        {
            get
            {
                string value = _BatchCmnt;
                OnGetBatchCmnt(ref value);
                return value;
            }
            set
            {
                if (_BatchCmnt != value)
                {
                  OnBatchCmntChanging(ref value);
                  ReportPropertyChanging("BatchCmnt");
                  _BatchCmnt = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("BatchCmnt");
                  OnBatchCmntChanged();
              }
            }
        }
        private string _BatchCmnt;
        partial void OnGetBatchCmnt(ref string value);
        partial void OnBatchCmntChanging(ref string value);
        partial void OnBatchCmntChanged();
    
        /// <summary>
        /// There are no comments for BatchID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string BatchID
        {
            get
            {
                string value = _BatchID;
                OnGetBatchID(ref value);
                return value;
            }
            set
            {
                if (_BatchID != value)
                {
                  OnBatchIDChanging(ref value);
                  ReportPropertyChanging("BatchID");
                  _BatchID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("BatchID");
                  OnBatchIDChanged();
              }
            }
        }
        private string _BatchID;
        partial void OnGetBatchID(ref string value);
        partial void OnBatchIDChanging(ref string value);
        partial void OnBatchIDChanged();
    
        /// <summary>
        /// There are no comments for BatchNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int BatchNo
        {
            get
            {
                int value = _BatchNo;
                OnGetBatchNo(ref value);
                return value;
            }
            set
            {
                if (_BatchNo != value)
                {
                  OnBatchNoChanging(ref value);
                  ReportPropertyChanging("BatchNo");
                  _BatchNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BatchNo");
                  OnBatchNoChanged();
              }
            }
        }
        private int _BatchNo;
        partial void OnGetBatchNo(ref int value);
        partial void OnBatchNoChanging(ref int value);
        partial void OnBatchNoChanged();
    
        /// <summary>
        /// There are no comments for BatchOvrdSegKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? BatchOvrdSegKey
        {
            get
            {
                int? value = _BatchOvrdSegKey;
                OnGetBatchOvrdSegKey(ref value);
                return value;
            }
            set
            {
                if (_BatchOvrdSegKey != value)
                {
                  OnBatchOvrdSegKeyChanging(ref value);
                  ReportPropertyChanging("BatchOvrdSegKey");
                  _BatchOvrdSegKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BatchOvrdSegKey");
                  OnBatchOvrdSegKeyChanged();
              }
            }
        }
        private int? _BatchOvrdSegKey;
        partial void OnGetBatchOvrdSegKey(ref int? value);
        partial void OnBatchOvrdSegKeyChanging(ref int? value);
        partial void OnBatchOvrdSegKeyChanged();
    
        /// <summary>
        /// There are no comments for BatchOvrdSegValue in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string BatchOvrdSegValue
        {
            get
            {
                string value = _BatchOvrdSegValue;
                OnGetBatchOvrdSegValue(ref value);
                return value;
            }
            set
            {
                if (_BatchOvrdSegValue != value)
                {
                  OnBatchOvrdSegValueChanging(ref value);
                  ReportPropertyChanging("BatchOvrdSegValue");
                  _BatchOvrdSegValue = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("BatchOvrdSegValue");
                  OnBatchOvrdSegValueChanged();
              }
            }
        }
        private string _BatchOvrdSegValue;
        partial void OnGetBatchOvrdSegValue(ref string value);
        partial void OnBatchOvrdSegValueChanging(ref string value);
        partial void OnBatchOvrdSegValueChanged();
    
        /// <summary>
        /// There are no comments for BatchTotal in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal BatchTotal
        {
            get
            {
                decimal value = _BatchTotal;
                OnGetBatchTotal(ref value);
                return value;
            }
            set
            {
                if (_BatchTotal != value)
                {
                  OnBatchTotalChanging(ref value);
                  ReportPropertyChanging("BatchTotal");
                  _BatchTotal = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BatchTotal");
                  OnBatchTotalChanged();
              }
            }
        }
        private decimal _BatchTotal = 0m;
        partial void OnGetBatchTotal(ref decimal value);
        partial void OnBatchTotalChanging(ref decimal value);
        partial void OnBatchTotalChanged();
    
        /// <summary>
        /// There are no comments for BatchType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int BatchType
        {
            get
            {
                int value = _BatchType;
                OnGetBatchType(ref value);
                return value;
            }
            set
            {
                if (_BatchType != value)
                {
                  OnBatchTypeChanging(ref value);
                  ReportPropertyChanging("BatchType");
                  _BatchType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BatchType");
                  OnBatchTypeChanged();
              }
            }
        }
        private int _BatchType;
        partial void OnGetBatchType(ref int value);
        partial void OnBatchTypeChanging(ref int value);
        partial void OnBatchTypeChanged();
    
        /// <summary>
        /// There are no comments for CreateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CreateDate
        {
            get
            {
                global::System.DateTime? value = _CreateDate;
                OnGetCreateDate(ref value);
                return value;
            }
            set
            {
                if (_CreateDate != value)
                {
                  OnCreateDateChanging(ref value);
                  ReportPropertyChanging("CreateDate");
                  _CreateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateDate");
                  OnCreateDateChanged();
              }
            }
        }
        private global::System.DateTime? _CreateDate;
        partial void OnGetCreateDate(ref global::System.DateTime? value);
        partial void OnCreateDateChanging(ref global::System.DateTime? value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// There are no comments for CreateType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CreateType
        {
            get
            {
                short value = _CreateType;
                OnGetCreateType(ref value);
                return value;
            }
            set
            {
                if (_CreateType != value)
                {
                  OnCreateTypeChanging(ref value);
                  ReportPropertyChanging("CreateType");
                  _CreateType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateType");
                  OnCreateTypeChanged();
              }
            }
        }
        private short _CreateType = 0;
        partial void OnGetCreateType(ref short value);
        partial void OnCreateTypeChanging(ref short value);
        partial void OnCreateTypeChanged();
    
        /// <summary>
        /// There are no comments for ImportLogKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ImportLogKey
        {
            get
            {
                int? value = _ImportLogKey;
                OnGetImportLogKey(ref value);
                return value;
            }
            set
            {
                if (_ImportLogKey != value)
                {
                  OnImportLogKeyChanging(ref value);
                  ReportPropertyChanging("ImportLogKey");
                  _ImportLogKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ImportLogKey");
                  OnImportLogKeyChanged();
              }
            }
        }
        private int? _ImportLogKey;
        partial void OnGetImportLogKey(ref int? value);
        partial void OnImportLogKeyChanging(ref int? value);
        partial void OnImportLogKeyChanged();
    
        /// <summary>
        /// There are no comments for NextSeqNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int NextSeqNo
        {
            get
            {
                int value = _NextSeqNo;
                OnGetNextSeqNo(ref value);
                return value;
            }
            set
            {
                if (_NextSeqNo != value)
                {
                  OnNextSeqNoChanging(ref value);
                  ReportPropertyChanging("NextSeqNo");
                  _NextSeqNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NextSeqNo");
                  OnNextSeqNoChanged();
              }
            }
        }
        private int _NextSeqNo = 1;
        partial void OnGetNextSeqNo(ref int value);
        partial void OnNextSeqNoChanging(ref int value);
        partial void OnNextSeqNoChanged();
    
        /// <summary>
        /// There are no comments for OrigUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string OrigUserID
        {
            get
            {
                string value = _OrigUserID;
                OnGetOrigUserID(ref value);
                return value;
            }
            set
            {
                if (_OrigUserID != value)
                {
                  OnOrigUserIDChanging(ref value);
                  ReportPropertyChanging("OrigUserID");
                  _OrigUserID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("OrigUserID");
                  OnOrigUserIDChanged();
              }
            }
        }
        private string _OrigUserID;
        partial void OnGetOrigUserID(ref string value);
        partial void OnOrigUserIDChanging(ref string value);
        partial void OnOrigUserIDChanged();
    
        /// <summary>
        /// There are no comments for PostCompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string PostCompanyID
        {
            get
            {
                string value = _PostCompanyID;
                OnGetPostCompanyID(ref value);
                return value;
            }
            set
            {
                if (_PostCompanyID != value)
                {
                  OnPostCompanyIDChanging(ref value);
                  ReportPropertyChanging("PostCompanyID");
                  _PostCompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("PostCompanyID");
                  OnPostCompanyIDChanged();
              }
            }
        }
        private string _PostCompanyID;
        partial void OnGetPostCompanyID(ref string value);
        partial void OnPostCompanyIDChanging(ref string value);
        partial void OnPostCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for PostDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? PostDate
        {
            get
            {
                global::System.DateTime? value = _PostDate;
                OnGetPostDate(ref value);
                return value;
            }
            set
            {
                if (_PostDate != value)
                {
                  OnPostDateChanging(ref value);
                  ReportPropertyChanging("PostDate");
                  _PostDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PostDate");
                  OnPostDateChanged();
              }
            }
        }
        private global::System.DateTime? _PostDate;
        partial void OnGetPostDate(ref global::System.DateTime? value);
        partial void OnPostDateChanging(ref global::System.DateTime? value);
        partial void OnPostDateChanged();
    
        /// <summary>
        /// There are no comments for PostError in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PostError
        {
            get
            {
                short value = _PostError;
                OnGetPostError(ref value);
                return value;
            }
            set
            {
                if (_PostError != value)
                {
                  OnPostErrorChanging(ref value);
                  ReportPropertyChanging("PostError");
                  _PostError = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PostError");
                  OnPostErrorChanged();
              }
            }
        }
        private short _PostError = 0;
        partial void OnGetPostError(ref short value);
        partial void OnPostErrorChanging(ref short value);
        partial void OnPostErrorChanged();
    
        /// <summary>
        /// There are no comments for PostStatus in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PostStatus
        {
            get
            {
                short value = _PostStatus;
                OnGetPostStatus(ref value);
                return value;
            }
            set
            {
                if (_PostStatus != value)
                {
                  OnPostStatusChanging(ref value);
                  ReportPropertyChanging("PostStatus");
                  _PostStatus = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PostStatus");
                  OnPostStatusChanged();
              }
            }
        }
        private short _PostStatus = 0;
        partial void OnGetPostStatus(ref short value);
        partial void OnPostStatusChanging(ref short value);
        partial void OnPostStatusChanged();
    
        /// <summary>
        /// There are no comments for PostUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PostUserID
        {
            get
            {
                string value = _PostUserID;
                OnGetPostUserID(ref value);
                return value;
            }
            set
            {
                if (_PostUserID != value)
                {
                  OnPostUserIDChanging(ref value);
                  ReportPropertyChanging("PostUserID");
                  _PostUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PostUserID");
                  OnPostUserIDChanged();
              }
            }
        }
        private string _PostUserID;
        partial void OnGetPostUserID(ref string value);
        partial void OnPostUserIDChanging(ref string value);
        partial void OnPostUserIDChanged();
    
        /// <summary>
        /// There are no comments for RevrsBatchKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? RevrsBatchKey
        {
            get
            {
                int? value = _RevrsBatchKey;
                OnGetRevrsBatchKey(ref value);
                return value;
            }
            set
            {
                if (_RevrsBatchKey != value)
                {
                  OnRevrsBatchKeyChanging(ref value);
                  ReportPropertyChanging("RevrsBatchKey");
                  _RevrsBatchKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RevrsBatchKey");
                  OnRevrsBatchKeyChanged();
              }
            }
        }
        private int? _RevrsBatchKey;
        partial void OnGetRevrsBatchKey(ref int? value);
        partial void OnRevrsBatchKeyChanging(ref int? value);
        partial void OnRevrsBatchKeyChanged();
    
        /// <summary>
        /// There are no comments for RgstrPrinted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short RgstrPrinted
        {
            get
            {
                short value = _RgstrPrinted;
                OnGetRgstrPrinted(ref value);
                return value;
            }
            set
            {
                if (_RgstrPrinted != value)
                {
                  OnRgstrPrintedChanging(ref value);
                  ReportPropertyChanging("RgstrPrinted");
                  _RgstrPrinted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RgstrPrinted");
                  OnRgstrPrintedChanged();
              }
            }
        }
        private short _RgstrPrinted = 0;
        partial void OnGetRgstrPrinted(ref short value);
        partial void OnRgstrPrintedChanging(ref short value);
        partial void OnRgstrPrintedChanged();
    
        /// <summary>
        /// There are no comments for SourceCompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string SourceCompanyID
        {
            get
            {
                string value = _SourceCompanyID;
                OnGetSourceCompanyID(ref value);
                return value;
            }
            set
            {
                if (_SourceCompanyID != value)
                {
                  OnSourceCompanyIDChanging(ref value);
                  ReportPropertyChanging("SourceCompanyID");
                  _SourceCompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("SourceCompanyID");
                  OnSourceCompanyIDChanged();
              }
            }
        }
        private string _SourceCompanyID;
        partial void OnGetSourceCompanyID(ref string value);
        partial void OnSourceCompanyIDChanging(ref string value);
        partial void OnSourceCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Status
        {
            get
            {
                short value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private short _Status = 4;
        partial void OnGetStatus(ref short value);
        partial void OnStatusChanging(ref short value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for GLBatch in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "BatchLog_GLBatch", "GLBatch")]
        public virtual GLBatch GLBatch
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<GLBatch>("Net4Sage.DataAccessModel.BatchLog_GLBatch", "GLBatch").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<GLBatch>("Net4Sage.DataAccessModel.BatchLog_GLBatch", "GLBatch").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for GLBatch in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GLBatch> GLBatchReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<GLBatch>("Net4Sage.DataAccessModel.BatchLog_GLBatch", "GLBatch");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<GLBatch>("Net4Sage.DataAccessModel.BatchLog_GLBatch", "GLBatch", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<GLBatch>("Net4Sage.DataAccessModel.BatchLog_GLBatch", "GLBatch").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for GLTransactions in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "BatchLog_GLTransaction", "GLTransactions")]
        public virtual EntityCollection<GLTransaction> GLTransactions
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<GLTransaction>("Net4Sage.DataAccessModel.BatchLog_GLTransaction", "GLTransactions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<GLTransaction>("Net4Sage.DataAccessModel.BatchLog_GLTransaction", "GLTransactions", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ARBatch in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "BatchLog_ARBatch", "ARBatch")]
        public virtual ARBatch ARBatch
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ARBatch>("Net4Sage.DataAccessModel.BatchLog_ARBatch", "ARBatch").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ARBatch>("Net4Sage.DataAccessModel.BatchLog_ARBatch", "ARBatch").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for ARBatch in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ARBatch> ARBatchReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ARBatch>("Net4Sage.DataAccessModel.BatchLog_ARBatch", "ARBatch");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<ARBatch>("Net4Sage.DataAccessModel.BatchLog_ARBatch", "ARBatch", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ARBatch>("Net4Sage.DataAccessModel.BatchLog_ARBatch", "ARBatch").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.GLBatch in the schema.
    /// </summary>
    /// <KeyProperties>
    /// BatchKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="GLBatch")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GLBatch : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new GLBatch object.
        /// </summary>
        /// <param name="batchKey">Initial value of BatchKey.</param>
        /// <param name="createType">Initial value of CreateType.</param>
        /// <param name="generalJrnlType">Initial value of GeneralJrnlType.</param>
        /// <param name="hold">Initial value of Hold.</param>
        /// <param name="interCompany">Initial value of InterCompany.</param>
        /// <param name="interCompUsage">Initial value of InterCompUsage.</param>
        /// <param name="origUserID">Initial value of OrigUserID.</param>
        /// <param name="postDate">Initial value of PostDate.</param>
        /// <param name="@private">Initial value of Private.</param>
        /// <param name="tranCtrl">Initial value of TranCtrl.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        public static GLBatch CreateGLBatch(int batchKey, short createType, GeneralJournalType generalJrnlType, short hold, short interCompany, short interCompUsage, string origUserID, global::System.DateTime postDate, short @private, decimal tranCtrl, int updateCounter)
        {
            GLBatch gLBatch = new GLBatch();
            gLBatch.BatchKey = batchKey;
            gLBatch.CreateType = createType;
            gLBatch.GeneralJrnlType = generalJrnlType;
            gLBatch.Hold = hold;
            gLBatch.InterCompany = interCompany;
            gLBatch.InterCompUsage = interCompUsage;
            gLBatch.OrigUserID = origUserID;
            gLBatch.PostDate = postDate;
            gLBatch.Private = @private;
            gLBatch.TranCtrl = tranCtrl;
            gLBatch.UpdateCounter = updateCounter;
            return gLBatch;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for BatchKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int BatchKey
        {
            get
            {
                int value = _BatchKey;
                OnGetBatchKey(ref value);
                return value;
            }
            set
            {
                if (_BatchKey != value)
                {
                  OnBatchKeyChanging(ref value);
                  ReportPropertyChanging("BatchKey");
                  _BatchKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BatchKey");
                  OnBatchKeyChanged();
              }
            }
        }
        private int _BatchKey;
        partial void OnGetBatchKey(ref int value);
        partial void OnBatchKeyChanging(ref int value);
        partial void OnBatchKeyChanged();
    
        /// <summary>
        /// There are no comments for BatchCmnt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string BatchCmnt
        {
            get
            {
                string value = _BatchCmnt;
                OnGetBatchCmnt(ref value);
                return value;
            }
            set
            {
                if (_BatchCmnt != value)
                {
                  OnBatchCmntChanging(ref value);
                  ReportPropertyChanging("BatchCmnt");
                  _BatchCmnt = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("BatchCmnt");
                  OnBatchCmntChanged();
              }
            }
        }
        private string _BatchCmnt;
        partial void OnGetBatchCmnt(ref string value);
        partial void OnBatchCmntChanging(ref string value);
        partial void OnBatchCmntChanged();
    
        /// <summary>
        /// There are no comments for CreateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CreateDate
        {
            get
            {
                global::System.DateTime? value = _CreateDate;
                OnGetCreateDate(ref value);
                return value;
            }
            set
            {
                if (_CreateDate != value)
                {
                  OnCreateDateChanging(ref value);
                  ReportPropertyChanging("CreateDate");
                  _CreateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateDate");
                  OnCreateDateChanged();
              }
            }
        }
        private global::System.DateTime? _CreateDate;
        partial void OnGetCreateDate(ref global::System.DateTime? value);
        partial void OnCreateDateChanging(ref global::System.DateTime? value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// There are no comments for CreateType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CreateType
        {
            get
            {
                short value = _CreateType;
                OnGetCreateType(ref value);
                return value;
            }
            set
            {
                if (_CreateType != value)
                {
                  OnCreateTypeChanging(ref value);
                  ReportPropertyChanging("CreateType");
                  _CreateType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateType");
                  OnCreateTypeChanged();
              }
            }
        }
        private short _CreateType = 0;
        partial void OnGetCreateType(ref short value);
        partial void OnCreateTypeChanging(ref short value);
        partial void OnCreateTypeChanged();
    
        /// <summary>
        /// There are no comments for GeneralJrnlType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual GeneralJournalType GeneralJrnlType
        {
            get
            {
                GeneralJournalType value = _GeneralJrnlType;
                OnGetGeneralJrnlType(ref value);
                return value;
            }
            set
            {
                if (_GeneralJrnlType != value)
                {
                  OnGeneralJrnlTypeChanging(ref value);
                  ReportPropertyChanging("GeneralJrnlType");
                  _GeneralJrnlType = (GeneralJournalType)StructuralObject.SetValidValue((short)value);
                  ReportPropertyChanged("GeneralJrnlType");
                  OnGeneralJrnlTypeChanged();
              }
            }
        }
        private GeneralJournalType _GeneralJrnlType;
        partial void OnGetGeneralJrnlType(ref GeneralJournalType value);
        partial void OnGeneralJrnlTypeChanging(ref GeneralJournalType value);
        partial void OnGeneralJrnlTypeChanged();
    
        /// <summary>
        /// There are no comments for Hold in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Hold
        {
            get
            {
                short value = _Hold;
                OnGetHold(ref value);
                return value;
            }
            set
            {
                if (_Hold != value)
                {
                  OnHoldChanging(ref value);
                  ReportPropertyChanging("Hold");
                  _Hold = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Hold");
                  OnHoldChanged();
              }
            }
        }
        private short _Hold = 0;
        partial void OnGetHold(ref short value);
        partial void OnHoldChanging(ref short value);
        partial void OnHoldChanged();
    
        /// <summary>
        /// There are no comments for HoldReason in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string HoldReason
        {
            get
            {
                string value = _HoldReason;
                OnGetHoldReason(ref value);
                return value;
            }
            set
            {
                if (_HoldReason != value)
                {
                  OnHoldReasonChanging(ref value);
                  ReportPropertyChanging("HoldReason");
                  _HoldReason = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("HoldReason");
                  OnHoldReasonChanged();
              }
            }
        }
        private string _HoldReason;
        partial void OnGetHoldReason(ref string value);
        partial void OnHoldReasonChanging(ref string value);
        partial void OnHoldReasonChanged();
    
        /// <summary>
        /// There are no comments for InterCompany in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short InterCompany
        {
            get
            {
                short value = _InterCompany;
                OnGetInterCompany(ref value);
                return value;
            }
            set
            {
                if (_InterCompany != value)
                {
                  OnInterCompanyChanging(ref value);
                  ReportPropertyChanging("InterCompany");
                  _InterCompany = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InterCompany");
                  OnInterCompanyChanged();
              }
            }
        }
        private short _InterCompany = 0;
        partial void OnGetInterCompany(ref short value);
        partial void OnInterCompanyChanging(ref short value);
        partial void OnInterCompanyChanged();
    
        /// <summary>
        /// There are no comments for InterCompBatchKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? InterCompBatchKey
        {
            get
            {
                int? value = _InterCompBatchKey;
                OnGetInterCompBatchKey(ref value);
                return value;
            }
            set
            {
                if (_InterCompBatchKey != value)
                {
                  OnInterCompBatchKeyChanging(ref value);
                  ReportPropertyChanging("InterCompBatchKey");
                  _InterCompBatchKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InterCompBatchKey");
                  OnInterCompBatchKeyChanged();
              }
            }
        }
        private int? _InterCompBatchKey;
        partial void OnGetInterCompBatchKey(ref int? value);
        partial void OnInterCompBatchKeyChanging(ref int? value);
        partial void OnInterCompBatchKeyChanged();
    
        /// <summary>
        /// There are no comments for InterCompUsage in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short InterCompUsage
        {
            get
            {
                short value = _InterCompUsage;
                OnGetInterCompUsage(ref value);
                return value;
            }
            set
            {
                if (_InterCompUsage != value)
                {
                  OnInterCompUsageChanging(ref value);
                  ReportPropertyChanging("InterCompUsage");
                  _InterCompUsage = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InterCompUsage");
                  OnInterCompUsageChanged();
              }
            }
        }
        private short _InterCompUsage = 0;
        partial void OnGetInterCompUsage(ref short value);
        partial void OnInterCompUsageChanging(ref short value);
        partial void OnInterCompUsageChanged();
    
        /// <summary>
        /// There are no comments for OrigUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string OrigUserID
        {
            get
            {
                string value = _OrigUserID;
                OnGetOrigUserID(ref value);
                return value;
            }
            set
            {
                if (_OrigUserID != value)
                {
                  OnOrigUserIDChanging(ref value);
                  ReportPropertyChanging("OrigUserID");
                  _OrigUserID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("OrigUserID");
                  OnOrigUserIDChanged();
              }
            }
        }
        private string _OrigUserID;
        partial void OnGetOrigUserID(ref string value);
        partial void OnOrigUserIDChanging(ref string value);
        partial void OnOrigUserIDChanged();
    
        /// <summary>
        /// There are no comments for PostDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime PostDate
        {
            get
            {
                global::System.DateTime value = _PostDate;
                OnGetPostDate(ref value);
                return value;
            }
            set
            {
                if (_PostDate != value)
                {
                  OnPostDateChanging(ref value);
                  ReportPropertyChanging("PostDate");
                  _PostDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PostDate");
                  OnPostDateChanged();
              }
            }
        }
        private global::System.DateTime _PostDate;
        partial void OnGetPostDate(ref global::System.DateTime value);
        partial void OnPostDateChanging(ref global::System.DateTime value);
        partial void OnPostDateChanged();
    
        /// <summary>
        /// There are no comments for Private in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Private
        {
            get
            {
                short value = _Private;
                OnGetPrivate(ref value);
                return value;
            }
            set
            {
                if (_Private != value)
                {
                  OnPrivateChanging(ref value);
                  ReportPropertyChanging("Private");
                  _Private = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Private");
                  OnPrivateChanged();
              }
            }
        }
        private short _Private = 0;
        partial void OnGetPrivate(ref short value);
        partial void OnPrivateChanging(ref short value);
        partial void OnPrivateChanged();
    
        /// <summary>
        /// There are no comments for ReversingDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? ReversingDate
        {
            get
            {
                global::System.DateTime? value = _ReversingDate;
                OnGetReversingDate(ref value);
                return value;
            }
            set
            {
                if (_ReversingDate != value)
                {
                  OnReversingDateChanging(ref value);
                  ReportPropertyChanging("ReversingDate");
                  _ReversingDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ReversingDate");
                  OnReversingDateChanged();
              }
            }
        }
        private global::System.DateTime? _ReversingDate;
        partial void OnGetReversingDate(ref global::System.DateTime? value);
        partial void OnReversingDateChanging(ref global::System.DateTime? value);
        partial void OnReversingDateChanged();
    
        /// <summary>
        /// There are no comments for TranCtrl in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal TranCtrl
        {
            get
            {
                decimal value = _TranCtrl;
                OnGetTranCtrl(ref value);
                return value;
            }
            set
            {
                if (_TranCtrl != value)
                {
                  OnTranCtrlChanging(ref value);
                  ReportPropertyChanging("TranCtrl");
                  _TranCtrl = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranCtrl");
                  OnTranCtrlChanged();
              }
            }
        }
        private decimal _TranCtrl = 0m;
        partial void OnGetTranCtrl(ref decimal value);
        partial void OnTranCtrlChanging(ref decimal value);
        partial void OnTranCtrlChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for BatchLog in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "BatchLog_GLBatch", "BatchLog")]
        public virtual BatchLog BatchLog
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<BatchLog>("Net4Sage.DataAccessModel.BatchLog_GLBatch", "BatchLog").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<BatchLog>("Net4Sage.DataAccessModel.BatchLog_GLBatch", "BatchLog").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for BatchLog in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BatchLog> BatchLogReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<BatchLog>("Net4Sage.DataAccessModel.BatchLog_GLBatch", "BatchLog");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<BatchLog>("Net4Sage.DataAccessModel.BatchLog_GLBatch", "BatchLog", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<BatchLog>("Net4Sage.DataAccessModel.BatchLog_GLBatch", "BatchLog").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Journals in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "GLBatch_JournalHdr", "Journals")]
        public virtual EntityCollection<JournalHdr> Journals
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<JournalHdr>("Net4Sage.DataAccessModel.GLBatch_JournalHdr", "Journals");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<JournalHdr>("Net4Sage.DataAccessModel.GLBatch_JournalHdr", "Journals", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.JournalDetail in the schema.
    /// </summary>
    /// <KeyProperties>
    /// JrnlHdrKey
    /// EntryNo
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="JournalDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JournalDetail : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new JournalDetail object.
        /// </summary>
        /// <param name="jrnlHdrKey">Initial value of JrnlHdrKey.</param>
        /// <param name="entryNo">Initial value of EntryNo.</param>
        /// <param name="postAmt">Initial value of PostAmt.</param>
        /// <param name="postAmtHC">Initial value of PostAmtHC.</param>
        /// <param name="postCmnt">Initial value of PostCmnt.</param>
        /// <param name="postQty">Initial value of PostQty.</param>
        /// <param name="seqNo">Initial value of SeqNo.</param>
        /// <param name="targetCompanyID">Initial value of TargetCompanyID.</param>
        public static JournalDetail CreateJournalDetail(int jrnlHdrKey, int entryNo, decimal postAmt, decimal postAmtHC, string postCmnt, decimal postQty, int seqNo, string targetCompanyID)
        {
            JournalDetail journalDetail = new JournalDetail();
            journalDetail.JrnlHdrKey = jrnlHdrKey;
            journalDetail.EntryNo = entryNo;
            journalDetail.PostAmt = postAmt;
            journalDetail.PostAmtHC = postAmtHC;
            journalDetail.PostCmnt = postCmnt;
            journalDetail.PostQty = postQty;
            journalDetail.SeqNo = seqNo;
            journalDetail.TargetCompanyID = targetCompanyID;
            return journalDetail;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for JrnlHdrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int JrnlHdrKey
        {
            get
            {
                int value = _JrnlHdrKey;
                OnGetJrnlHdrKey(ref value);
                return value;
            }
            set
            {
                if (_JrnlHdrKey != value)
                {
                  OnJrnlHdrKeyChanging(ref value);
                  ReportPropertyChanging("JrnlHdrKey");
                  _JrnlHdrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("JrnlHdrKey");
                  OnJrnlHdrKeyChanged();
              }
            }
        }
        private int _JrnlHdrKey;
        partial void OnGetJrnlHdrKey(ref int value);
        partial void OnJrnlHdrKeyChanging(ref int value);
        partial void OnJrnlHdrKeyChanged();
    
        /// <summary>
        /// There are no comments for EntryNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int EntryNo
        {
            get
            {
                int value = _EntryNo;
                OnGetEntryNo(ref value);
                return value;
            }
            set
            {
                if (_EntryNo != value)
                {
                  OnEntryNoChanging(ref value);
                  ReportPropertyChanging("EntryNo");
                  _EntryNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EntryNo");
                  OnEntryNoChanged();
              }
            }
        }
        private int _EntryNo;
        partial void OnGetEntryNo(ref int value);
        partial void OnEntryNoChanging(ref int value);
        partial void OnEntryNoChanged();
    
        /// <summary>
        /// There are no comments for AcctRefKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? AcctRefKey
        {
            get
            {
                int? value = _AcctRefKey;
                OnGetAcctRefKey(ref value);
                return value;
            }
            set
            {
                if (_AcctRefKey != value)
                {
                  OnAcctRefKeyChanging(ref value);
                  ReportPropertyChanging("AcctRefKey");
                  _AcctRefKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AcctRefKey");
                  OnAcctRefKeyChanged();
              }
            }
        }
        private int? _AcctRefKey;
        partial void OnGetAcctRefKey(ref int? value);
        partial void OnAcctRefKeyChanging(ref int? value);
        partial void OnAcctRefKeyChanged();
    
        /// <summary>
        /// There are no comments for GLAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? GLAcctKey
        {
            get
            {
                int? value = _GLAcctKey;
                OnGetGLAcctKey(ref value);
                return value;
            }
            set
            {
                if (_GLAcctKey != value)
                {
                  OnGLAcctKeyChanging(ref value);
                  ReportPropertyChanging("GLAcctKey");
                  _GLAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("GLAcctKey");
                  OnGLAcctKeyChanged();
              }
            }
        }
        private int? _GLAcctKey;
        partial void OnGetGLAcctKey(ref int? value);
        partial void OnGLAcctKeyChanging(ref int? value);
        partial void OnGLAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for PostAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal PostAmt
        {
            get
            {
                decimal value = _PostAmt;
                OnGetPostAmt(ref value);
                return value;
            }
            set
            {
                if (_PostAmt != value)
                {
                  OnPostAmtChanging(ref value);
                  ReportPropertyChanging("PostAmt");
                  _PostAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PostAmt");
                  OnPostAmtChanged();
              }
            }
        }
        private decimal _PostAmt = 0m;
        partial void OnGetPostAmt(ref decimal value);
        partial void OnPostAmtChanging(ref decimal value);
        partial void OnPostAmtChanged();
    
        /// <summary>
        /// There are no comments for PostAmtHC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal PostAmtHC
        {
            get
            {
                decimal value = _PostAmtHC;
                OnGetPostAmtHC(ref value);
                return value;
            }
            set
            {
                if (_PostAmtHC != value)
                {
                  OnPostAmtHCChanging(ref value);
                  ReportPropertyChanging("PostAmtHC");
                  _PostAmtHC = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PostAmtHC");
                  OnPostAmtHCChanged();
              }
            }
        }
        private decimal _PostAmtHC = 0m;
        partial void OnGetPostAmtHC(ref decimal value);
        partial void OnPostAmtHCChanging(ref decimal value);
        partial void OnPostAmtHCChanged();
    
        /// <summary>
        /// There are no comments for PostCmnt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string PostCmnt
        {
            get
            {
                string value = _PostCmnt;
                OnGetPostCmnt(ref value);
                return value;
            }
            set
            {
                if (_PostCmnt != value)
                {
                  OnPostCmntChanging(ref value);
                  ReportPropertyChanging("PostCmnt");
                  _PostCmnt = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("PostCmnt");
                  OnPostCmntChanged();
              }
            }
        }
        private string _PostCmnt;
        partial void OnGetPostCmnt(ref string value);
        partial void OnPostCmntChanging(ref string value);
        partial void OnPostCmntChanged();
    
        /// <summary>
        /// There are no comments for PostQty in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal PostQty
        {
            get
            {
                decimal value = _PostQty;
                OnGetPostQty(ref value);
                return value;
            }
            set
            {
                if (_PostQty != value)
                {
                  OnPostQtyChanging(ref value);
                  ReportPropertyChanging("PostQty");
                  _PostQty = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PostQty");
                  OnPostQtyChanged();
              }
            }
        }
        private decimal _PostQty = 0m;
        partial void OnGetPostQty(ref decimal value);
        partial void OnPostQtyChanging(ref decimal value);
        partial void OnPostQtyChanged();
    
        /// <summary>
        /// There are no comments for RefNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string RefNo
        {
            get
            {
                string value = _RefNo;
                OnGetRefNo(ref value);
                return value;
            }
            set
            {
                if (_RefNo != value)
                {
                  OnRefNoChanging(ref value);
                  ReportPropertyChanging("RefNo");
                  _RefNo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("RefNo");
                  OnRefNoChanged();
              }
            }
        }
        private string _RefNo;
        partial void OnGetRefNo(ref string value);
        partial void OnRefNoChanging(ref string value);
        partial void OnRefNoChanged();
    
        /// <summary>
        /// There are no comments for SeqNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SeqNo
        {
            get
            {
                int value = _SeqNo;
                OnGetSeqNo(ref value);
                return value;
            }
            set
            {
                if (_SeqNo != value)
                {
                  OnSeqNoChanging(ref value);
                  ReportPropertyChanging("SeqNo");
                  _SeqNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SeqNo");
                  OnSeqNoChanged();
              }
            }
        }
        private int _SeqNo;
        partial void OnGetSeqNo(ref int value);
        partial void OnSeqNoChanging(ref int value);
        partial void OnSeqNoChanged();
    
        /// <summary>
        /// There are no comments for TargetCompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string TargetCompanyID
        {
            get
            {
                string value = _TargetCompanyID;
                OnGetTargetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_TargetCompanyID != value)
                {
                  OnTargetCompanyIDChanging(ref value);
                  ReportPropertyChanging("TargetCompanyID");
                  _TargetCompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TargetCompanyID");
                  OnTargetCompanyIDChanged();
              }
            }
        }
        private string _TargetCompanyID;
        partial void OnGetTargetCompanyID(ref string value);
        partial void OnTargetCompanyIDChanging(ref string value);
        partial void OnTargetCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for TranDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? TranDate
        {
            get
            {
                global::System.DateTime? value = _TranDate;
                OnGetTranDate(ref value);
                return value;
            }
            set
            {
                if (_TranDate != value)
                {
                  OnTranDateChanging(ref value);
                  ReportPropertyChanging("TranDate");
                  _TranDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranDate");
                  OnTranDateChanged();
              }
            }
        }
        private global::System.DateTime? _TranDate;
        partial void OnGetTranDate(ref global::System.DateTime? value);
        partial void OnTranDateChanging(ref global::System.DateTime? value);
        partial void OnTranDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Journal in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "JournalHdr_JournalDetl", "Journal")]
        public virtual JournalHdr Journal
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JournalHdr>("Net4Sage.DataAccessModel.JournalHdr_JournalDetl", "Journal").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JournalHdr>("Net4Sage.DataAccessModel.JournalHdr_JournalDetl", "Journal").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Journal in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JournalHdr> JournalReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JournalHdr>("Net4Sage.DataAccessModel.JournalHdr_JournalDetl", "Journal");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<JournalHdr>("Net4Sage.DataAccessModel.JournalHdr_JournalDetl", "Journal", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<JournalHdr>("Net4Sage.DataAccessModel.JournalHdr_JournalDetl", "Journal").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for GLAccount in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "GLAccount_JournalDetl", "GLAccount")]
        public virtual GLAccount GLAccount
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<GLAccount>("Net4Sage.DataAccessModel.GLAccount_JournalDetl", "GLAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<GLAccount>("Net4Sage.DataAccessModel.GLAccount_JournalDetl", "GLAccount").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for GLAccount in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GLAccount> GLAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<GLAccount>("Net4Sage.DataAccessModel.GLAccount_JournalDetl", "GLAccount");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<GLAccount>("Net4Sage.DataAccessModel.GLAccount_JournalDetl", "GLAccount", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<GLAccount>("Net4Sage.DataAccessModel.GLAccount_JournalDetl", "GLAccount").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.JournalHdr in the schema.
    /// </summary>
    /// <KeyProperties>
    /// JrnlHdrKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="JournalHdr")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JournalHdr : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new JournalHdr object.
        /// </summary>
        /// <param name="jrnlHdrKey">Initial value of JrnlHdrKey.</param>
        /// <param name="batchKey">Initial value of BatchKey.</param>
        /// <param name="checkNo">Initial value of CheckNo.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="createType">Initial value of CreateType.</param>
        /// <param name="currExchRate">Initial value of CurrExchRate.</param>
        /// <param name="currID">Initial value of CurrID.</param>
        /// <param name="financial">Initial value of Financial.</param>
        /// <param name="jrnlKey">Initial value of JrnlKey.</param>
        /// <param name="jrnlNo">Initial value of JrnlNo.</param>
        /// <param name="offsetAmt">Initial value of OffsetAmt.</param>
        /// <param name="offsetPost">Initial value of OffsetPost.</param>
        /// <param name="outOfBalance">Initial value of OutOfBalance.</param>
        /// <param name="outOfBalOverride">Initial value of OutOfBalOverride.</param>
        /// <param name="reqOffsetAmt">Initial value of ReqOffsetAmt.</param>
        /// <param name="reverseJrnl">Initial value of ReverseJrnl.</param>
        /// <param name="sourceModule">Initial value of SourceModule.</param>
        /// <param name="status">Initial value of Status.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        public static JournalHdr CreateJournalHdr(int jrnlHdrKey, int batchKey, short checkNo, string companyID, short createType, double currExchRate, string currID, short financial, int jrnlKey, int jrnlNo, decimal offsetAmt, JournalOffsetPostType offsetPost, short outOfBalance, short outOfBalOverride, short reqOffsetAmt, short reverseJrnl, string sourceModule, JournalStatus status, int updateCounter)
        {
            JournalHdr journalHdr = new JournalHdr();
            journalHdr.JrnlHdrKey = jrnlHdrKey;
            journalHdr.BatchKey = batchKey;
            journalHdr.CheckNo = checkNo;
            journalHdr.CompanyID = companyID;
            journalHdr.CreateType = createType;
            journalHdr.CurrExchRate = currExchRate;
            journalHdr.CurrID = currID;
            journalHdr.Financial = financial;
            journalHdr.JrnlKey = jrnlKey;
            journalHdr.JrnlNo = jrnlNo;
            journalHdr.OffsetAmt = offsetAmt;
            journalHdr.OffsetPost = offsetPost;
            journalHdr.OutOfBalance = outOfBalance;
            journalHdr.OutOfBalOverride = outOfBalOverride;
            journalHdr.ReqOffsetAmt = reqOffsetAmt;
            journalHdr.ReverseJrnl = reverseJrnl;
            journalHdr.SourceModule = sourceModule;
            journalHdr.Status = status;
            journalHdr.UpdateCounter = updateCounter;
            return journalHdr;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for JrnlHdrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int JrnlHdrKey
        {
            get
            {
                int value = _JrnlHdrKey;
                OnGetJrnlHdrKey(ref value);
                return value;
            }
            set
            {
                if (_JrnlHdrKey != value)
                {
                  OnJrnlHdrKeyChanging(ref value);
                  ReportPropertyChanging("JrnlHdrKey");
                  _JrnlHdrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("JrnlHdrKey");
                  OnJrnlHdrKeyChanged();
              }
            }
        }
        private int _JrnlHdrKey;
        partial void OnGetJrnlHdrKey(ref int value);
        partial void OnJrnlHdrKeyChanging(ref int value);
        partial void OnJrnlHdrKeyChanged();
    
        /// <summary>
        /// There are no comments for AcctRefKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? AcctRefKey
        {
            get
            {
                int? value = _AcctRefKey;
                OnGetAcctRefKey(ref value);
                return value;
            }
            set
            {
                if (_AcctRefKey != value)
                {
                  OnAcctRefKeyChanging(ref value);
                  ReportPropertyChanging("AcctRefKey");
                  _AcctRefKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AcctRefKey");
                  OnAcctRefKeyChanged();
              }
            }
        }
        private int? _AcctRefKey;
        partial void OnGetAcctRefKey(ref int? value);
        partial void OnAcctRefKeyChanging(ref int? value);
        partial void OnAcctRefKeyChanged();
    
        /// <summary>
        /// There are no comments for AllocateKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? AllocateKey
        {
            get
            {
                int? value = _AllocateKey;
                OnGetAllocateKey(ref value);
                return value;
            }
            set
            {
                if (_AllocateKey != value)
                {
                  OnAllocateKeyChanging(ref value);
                  ReportPropertyChanging("AllocateKey");
                  _AllocateKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AllocateKey");
                  OnAllocateKeyChanged();
              }
            }
        }
        private int? _AllocateKey;
        partial void OnGetAllocateKey(ref int? value);
        partial void OnAllocateKeyChanging(ref int? value);
        partial void OnAllocateKeyChanged();
    
        /// <summary>
        /// There are no comments for BatchKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int BatchKey
        {
            get
            {
                int value = _BatchKey;
                OnGetBatchKey(ref value);
                return value;
            }
            set
            {
                if (_BatchKey != value)
                {
                  OnBatchKeyChanging(ref value);
                  ReportPropertyChanging("BatchKey");
                  _BatchKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BatchKey");
                  OnBatchKeyChanged();
              }
            }
        }
        private int _BatchKey;
        partial void OnGetBatchKey(ref int value);
        partial void OnBatchKeyChanging(ref int value);
        partial void OnBatchKeyChanged();
    
        /// <summary>
        /// There are no comments for CheckNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CheckNo
        {
            get
            {
                short value = _CheckNo;
                OnGetCheckNo(ref value);
                return value;
            }
            set
            {
                if (_CheckNo != value)
                {
                  OnCheckNoChanging(ref value);
                  ReportPropertyChanging("CheckNo");
                  _CheckNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CheckNo");
                  OnCheckNoChanged();
              }
            }
        }
        private short _CheckNo = 0;
        partial void OnGetCheckNo(ref short value);
        partial void OnCheckNoChanging(ref short value);
        partial void OnCheckNoChanged();
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for CreateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CreateDate
        {
            get
            {
                global::System.DateTime? value = _CreateDate;
                OnGetCreateDate(ref value);
                return value;
            }
            set
            {
                if (_CreateDate != value)
                {
                  OnCreateDateChanging(ref value);
                  ReportPropertyChanging("CreateDate");
                  _CreateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateDate");
                  OnCreateDateChanged();
              }
            }
        }
        private global::System.DateTime? _CreateDate;
        partial void OnGetCreateDate(ref global::System.DateTime? value);
        partial void OnCreateDateChanging(ref global::System.DateTime? value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// There are no comments for CreateType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CreateType
        {
            get
            {
                short value = _CreateType;
                OnGetCreateType(ref value);
                return value;
            }
            set
            {
                if (_CreateType != value)
                {
                  OnCreateTypeChanging(ref value);
                  ReportPropertyChanging("CreateType");
                  _CreateType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateType");
                  OnCreateTypeChanged();
              }
            }
        }
        private short _CreateType = 0;
        partial void OnGetCreateType(ref short value);
        partial void OnCreateTypeChanging(ref short value);
        partial void OnCreateTypeChanged();
    
        /// <summary>
        /// There are no comments for CreateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CreateUserID
        {
            get
            {
                string value = _CreateUserID;
                OnGetCreateUserID(ref value);
                return value;
            }
            set
            {
                if (_CreateUserID != value)
                {
                  OnCreateUserIDChanging(ref value);
                  ReportPropertyChanging("CreateUserID");
                  _CreateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CreateUserID");
                  OnCreateUserIDChanged();
              }
            }
        }
        private string _CreateUserID;
        partial void OnGetCreateUserID(ref string value);
        partial void OnCreateUserIDChanging(ref string value);
        partial void OnCreateUserIDChanged();
    
        /// <summary>
        /// There are no comments for CurrExchRate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual double CurrExchRate
        {
            get
            {
                double value = _CurrExchRate;
                OnGetCurrExchRate(ref value);
                return value;
            }
            set
            {
                if (_CurrExchRate != value)
                {
                  OnCurrExchRateChanging(ref value);
                  ReportPropertyChanging("CurrExchRate");
                  _CurrExchRate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CurrExchRate");
                  OnCurrExchRateChanged();
              }
            }
        }
        private double _CurrExchRate = 1;
        partial void OnGetCurrExchRate(ref double value);
        partial void OnCurrExchRateChanging(ref double value);
        partial void OnCurrExchRateChanged();
    
        /// <summary>
        /// There are no comments for CurrExchSchdKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CurrExchSchdKey
        {
            get
            {
                int? value = _CurrExchSchdKey;
                OnGetCurrExchSchdKey(ref value);
                return value;
            }
            set
            {
                if (_CurrExchSchdKey != value)
                {
                  OnCurrExchSchdKeyChanging(ref value);
                  ReportPropertyChanging("CurrExchSchdKey");
                  _CurrExchSchdKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CurrExchSchdKey");
                  OnCurrExchSchdKeyChanged();
              }
            }
        }
        private int? _CurrExchSchdKey;
        partial void OnGetCurrExchSchdKey(ref int? value);
        partial void OnCurrExchSchdKeyChanging(ref int? value);
        partial void OnCurrExchSchdKeyChanged();
    
        /// <summary>
        /// There are no comments for CurrID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CurrID
        {
            get
            {
                string value = _CurrID;
                OnGetCurrID(ref value);
                return value;
            }
            set
            {
                if (_CurrID != value)
                {
                  OnCurrIDChanging(ref value);
                  ReportPropertyChanging("CurrID");
                  _CurrID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CurrID");
                  OnCurrIDChanged();
              }
            }
        }
        private string _CurrID;
        partial void OnGetCurrID(ref string value);
        partial void OnCurrIDChanging(ref string value);
        partial void OnCurrIDChanged();
    
        /// <summary>
        /// There are no comments for DfltAcctRefKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? DfltAcctRefKey
        {
            get
            {
                int? value = _DfltAcctRefKey;
                OnGetDfltAcctRefKey(ref value);
                return value;
            }
            set
            {
                if (_DfltAcctRefKey != value)
                {
                  OnDfltAcctRefKeyChanging(ref value);
                  ReportPropertyChanging("DfltAcctRefKey");
                  _DfltAcctRefKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltAcctRefKey");
                  OnDfltAcctRefKeyChanged();
              }
            }
        }
        private int? _DfltAcctRefKey;
        partial void OnGetDfltAcctRefKey(ref int? value);
        partial void OnDfltAcctRefKeyChanging(ref int? value);
        partial void OnDfltAcctRefKeyChanged();
    
        /// <summary>
        /// There are no comments for Financial in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Financial
        {
            get
            {
                short value = _Financial;
                OnGetFinancial(ref value);
                return value;
            }
            set
            {
                if (_Financial != value)
                {
                  OnFinancialChanging(ref value);
                  ReportPropertyChanging("Financial");
                  _Financial = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Financial");
                  OnFinancialChanged();
              }
            }
        }
        private short _Financial = 1;
        partial void OnGetFinancial(ref short value);
        partial void OnFinancialChanging(ref short value);
        partial void OnFinancialChanged();
    
        /// <summary>
        /// There are no comments for GLAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? GLAcctKey
        {
            get
            {
                int? value = _GLAcctKey;
                OnGetGLAcctKey(ref value);
                return value;
            }
            set
            {
                if (_GLAcctKey != value)
                {
                  OnGLAcctKeyChanging(ref value);
                  ReportPropertyChanging("GLAcctKey");
                  _GLAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("GLAcctKey");
                  OnGLAcctKeyChanged();
              }
            }
        }
        private int? _GLAcctKey;
        partial void OnGetGLAcctKey(ref int? value);
        partial void OnGLAcctKeyChanging(ref int? value);
        partial void OnGLAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for ImportLogKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ImportLogKey
        {
            get
            {
                int? value = _ImportLogKey;
                OnGetImportLogKey(ref value);
                return value;
            }
            set
            {
                if (_ImportLogKey != value)
                {
                  OnImportLogKeyChanging(ref value);
                  ReportPropertyChanging("ImportLogKey");
                  _ImportLogKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ImportLogKey");
                  OnImportLogKeyChanged();
              }
            }
        }
        private int? _ImportLogKey;
        partial void OnGetImportLogKey(ref int? value);
        partial void OnImportLogKeyChanging(ref int? value);
        partial void OnImportLogKeyChanged();
    
        /// <summary>
        /// There are no comments for JrnlKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int JrnlKey
        {
            get
            {
                int value = _JrnlKey;
                OnGetJrnlKey(ref value);
                return value;
            }
            set
            {
                if (_JrnlKey != value)
                {
                  OnJrnlKeyChanging(ref value);
                  ReportPropertyChanging("JrnlKey");
                  _JrnlKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("JrnlKey");
                  OnJrnlKeyChanged();
              }
            }
        }
        private int _JrnlKey;
        partial void OnGetJrnlKey(ref int value);
        partial void OnJrnlKeyChanging(ref int value);
        partial void OnJrnlKeyChanged();
    
        /// <summary>
        /// There are no comments for JrnlNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int JrnlNo
        {
            get
            {
                int value = _JrnlNo;
                OnGetJrnlNo(ref value);
                return value;
            }
            set
            {
                if (_JrnlNo != value)
                {
                  OnJrnlNoChanging(ref value);
                  ReportPropertyChanging("JrnlNo");
                  _JrnlNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("JrnlNo");
                  OnJrnlNoChanged();
              }
            }
        }
        private int _JrnlNo;
        partial void OnGetJrnlNo(ref int value);
        partial void OnJrnlNoChanging(ref int value);
        partial void OnJrnlNoChanged();
    
        /// <summary>
        /// There are no comments for JrnlTotalHC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? JrnlTotalHC
        {
            get
            {
                decimal? value = _JrnlTotalHC;
                OnGetJrnlTotalHC(ref value);
                return value;
            }
            set
            {
                if (_JrnlTotalHC != value)
                {
                  OnJrnlTotalHCChanging(ref value);
                  ReportPropertyChanging("JrnlTotalHC");
                  _JrnlTotalHC = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("JrnlTotalHC");
                  OnJrnlTotalHCChanged();
              }
            }
        }
        private decimal? _JrnlTotalHC = 0m;
        partial void OnGetJrnlTotalHC(ref decimal? value);
        partial void OnJrnlTotalHCChanging(ref decimal? value);
        partial void OnJrnlTotalHCChanged();
    
        /// <summary>
        /// There are no comments for NextEntryNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? NextEntryNo
        {
            get
            {
                int? value = _NextEntryNo;
                OnGetNextEntryNo(ref value);
                return value;
            }
            set
            {
                if (_NextEntryNo != value)
                {
                  OnNextEntryNoChanging(ref value);
                  ReportPropertyChanging("NextEntryNo");
                  _NextEntryNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NextEntryNo");
                  OnNextEntryNoChanged();
              }
            }
        }
        private int? _NextEntryNo;
        partial void OnGetNextEntryNo(ref int? value);
        partial void OnNextEntryNoChanging(ref int? value);
        partial void OnNextEntryNoChanged();
    
        /// <summary>
        /// There are no comments for OffsetAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal OffsetAmt
        {
            get
            {
                decimal value = _OffsetAmt;
                OnGetOffsetAmt(ref value);
                return value;
            }
            set
            {
                if (_OffsetAmt != value)
                {
                  OnOffsetAmtChanging(ref value);
                  ReportPropertyChanging("OffsetAmt");
                  _OffsetAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OffsetAmt");
                  OnOffsetAmtChanged();
              }
            }
        }
        private decimal _OffsetAmt = 0m;
        partial void OnGetOffsetAmt(ref decimal value);
        partial void OnOffsetAmtChanging(ref decimal value);
        partial void OnOffsetAmtChanged();
    
        /// <summary>
        /// There are no comments for OffsetAmtHC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? OffsetAmtHC
        {
            get
            {
                decimal? value = _OffsetAmtHC;
                OnGetOffsetAmtHC(ref value);
                return value;
            }
            set
            {
                if (_OffsetAmtHC != value)
                {
                  OnOffsetAmtHCChanging(ref value);
                  ReportPropertyChanging("OffsetAmtHC");
                  _OffsetAmtHC = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OffsetAmtHC");
                  OnOffsetAmtHCChanged();
              }
            }
        }
        private decimal? _OffsetAmtHC = 0m;
        partial void OnGetOffsetAmtHC(ref decimal? value);
        partial void OnOffsetAmtHCChanging(ref decimal? value);
        partial void OnOffsetAmtHCChanged();
    
        /// <summary>
        /// There are no comments for OffsetPost in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual JournalOffsetPostType OffsetPost
        {
            get
            {
                JournalOffsetPostType value = _OffsetPost;
                OnGetOffsetPost(ref value);
                return value;
            }
            set
            {
                if (_OffsetPost != value)
                {
                  OnOffsetPostChanging(ref value);
                  ReportPropertyChanging("OffsetPost");
                  _OffsetPost = (JournalOffsetPostType)StructuralObject.SetValidValue((short)value);
                  ReportPropertyChanged("OffsetPost");
                  OnOffsetPostChanged();
              }
            }
        }
        private JournalOffsetPostType _OffsetPost;
        partial void OnGetOffsetPost(ref JournalOffsetPostType value);
        partial void OnOffsetPostChanging(ref JournalOffsetPostType value);
        partial void OnOffsetPostChanged();
    
        /// <summary>
        /// There are no comments for OutOfBalance in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short OutOfBalance
        {
            get
            {
                short value = _OutOfBalance;
                OnGetOutOfBalance(ref value);
                return value;
            }
            set
            {
                if (_OutOfBalance != value)
                {
                  OnOutOfBalanceChanging(ref value);
                  ReportPropertyChanging("OutOfBalance");
                  _OutOfBalance = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OutOfBalance");
                  OnOutOfBalanceChanged();
              }
            }
        }
        private short _OutOfBalance = 0;
        partial void OnGetOutOfBalance(ref short value);
        partial void OnOutOfBalanceChanging(ref short value);
        partial void OnOutOfBalanceChanged();
    
        /// <summary>
        /// There are no comments for OutOfBalOverride in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short OutOfBalOverride
        {
            get
            {
                short value = _OutOfBalOverride;
                OnGetOutOfBalOverride(ref value);
                return value;
            }
            set
            {
                if (_OutOfBalOverride != value)
                {
                  OnOutOfBalOverrideChanging(ref value);
                  ReportPropertyChanging("OutOfBalOverride");
                  _OutOfBalOverride = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OutOfBalOverride");
                  OnOutOfBalOverrideChanged();
              }
            }
        }
        private short _OutOfBalOverride = 0;
        partial void OnGetOutOfBalOverride(ref short value);
        partial void OnOutOfBalOverrideChanging(ref short value);
        partial void OnOutOfBalOverrideChanged();
    
        /// <summary>
        /// There are no comments for PostCmnt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PostCmnt
        {
            get
            {
                string value = _PostCmnt;
                OnGetPostCmnt(ref value);
                return value;
            }
            set
            {
                if (_PostCmnt != value)
                {
                  OnPostCmntChanging(ref value);
                  ReportPropertyChanging("PostCmnt");
                  _PostCmnt = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PostCmnt");
                  OnPostCmntChanged();
              }
            }
        }
        private string _PostCmnt;
        partial void OnGetPostCmnt(ref string value);
        partial void OnPostCmntChanging(ref string value);
        partial void OnPostCmntChanged();
    
        /// <summary>
        /// There are no comments for RecurJrnlKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? RecurJrnlKey
        {
            get
            {
                int? value = _RecurJrnlKey;
                OnGetRecurJrnlKey(ref value);
                return value;
            }
            set
            {
                if (_RecurJrnlKey != value)
                {
                  OnRecurJrnlKeyChanging(ref value);
                  ReportPropertyChanging("RecurJrnlKey");
                  _RecurJrnlKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RecurJrnlKey");
                  OnRecurJrnlKeyChanged();
              }
            }
        }
        private int? _RecurJrnlKey;
        partial void OnGetRecurJrnlKey(ref int? value);
        partial void OnRecurJrnlKeyChanging(ref int? value);
        partial void OnRecurJrnlKeyChanged();
    
        /// <summary>
        /// There are no comments for ReqOffsetAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ReqOffsetAmt
        {
            get
            {
                short value = _ReqOffsetAmt;
                OnGetReqOffsetAmt(ref value);
                return value;
            }
            set
            {
                if (_ReqOffsetAmt != value)
                {
                  OnReqOffsetAmtChanging(ref value);
                  ReportPropertyChanging("ReqOffsetAmt");
                  _ReqOffsetAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ReqOffsetAmt");
                  OnReqOffsetAmtChanged();
              }
            }
        }
        private short _ReqOffsetAmt = 0;
        partial void OnGetReqOffsetAmt(ref short value);
        partial void OnReqOffsetAmtChanging(ref short value);
        partial void OnReqOffsetAmtChanged();
    
        /// <summary>
        /// There are no comments for ReverseJrnl in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ReverseJrnl
        {
            get
            {
                short value = _ReverseJrnl;
                OnGetReverseJrnl(ref value);
                return value;
            }
            set
            {
                if (_ReverseJrnl != value)
                {
                  OnReverseJrnlChanging(ref value);
                  ReportPropertyChanging("ReverseJrnl");
                  _ReverseJrnl = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ReverseJrnl");
                  OnReverseJrnlChanged();
              }
            }
        }
        private short _ReverseJrnl = 0;
        partial void OnGetReverseJrnl(ref short value);
        partial void OnReverseJrnlChanging(ref short value);
        partial void OnReverseJrnlChanged();
    
        /// <summary>
        /// There are no comments for SourceModule in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string SourceModule
        {
            get
            {
                string value = _SourceModule;
                OnGetSourceModule(ref value);
                return value;
            }
            set
            {
                if (_SourceModule != value)
                {
                  OnSourceModuleChanging(ref value);
                  ReportPropertyChanging("SourceModule");
                  _SourceModule = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("SourceModule");
                  OnSourceModuleChanged();
              }
            }
        }
        private string _SourceModule;
        partial void OnGetSourceModule(ref string value);
        partial void OnSourceModuleChanging(ref string value);
        partial void OnSourceModuleChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual JournalStatus Status
        {
            get
            {
                JournalStatus value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = (JournalStatus)StructuralObject.SetValidValue((short)value);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private JournalStatus _Status;
        partial void OnGetStatus(ref JournalStatus value);
        partial void OnStatusChanging(ref JournalStatus value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// There are no comments for TranDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? TranDate
        {
            get
            {
                global::System.DateTime? value = _TranDate;
                OnGetTranDate(ref value);
                return value;
            }
            set
            {
                if (_TranDate != value)
                {
                  OnTranDateChanging(ref value);
                  ReportPropertyChanging("TranDate");
                  _TranDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranDate");
                  OnTranDateChanged();
              }
            }
        }
        private global::System.DateTime? _TranDate;
        partial void OnGetTranDate(ref global::System.DateTime? value);
        partial void OnTranDateChanging(ref global::System.DateTime? value);
        partial void OnTranDateChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();
    
        /// <summary>
        /// There are no comments for UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? UpdateDate
        {
            get
            {
                global::System.DateTime? value = _UpdateDate;
                OnGetUpdateDate(ref value);
                return value;
            }
            set
            {
                if (_UpdateDate != value)
                {
                  OnUpdateDateChanging(ref value);
                  ReportPropertyChanging("UpdateDate");
                  _UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateDate");
                  OnUpdateDateChanged();
              }
            }
        }
        private global::System.DateTime? _UpdateDate;
        partial void OnGetUpdateDate(ref global::System.DateTime? value);
        partial void OnUpdateDateChanging(ref global::System.DateTime? value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// There are no comments for UpdateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UpdateUserID
        {
            get
            {
                string value = _UpdateUserID;
                OnGetUpdateUserID(ref value);
                return value;
            }
            set
            {
                if (_UpdateUserID != value)
                {
                  OnUpdateUserIDChanging(ref value);
                  ReportPropertyChanging("UpdateUserID");
                  _UpdateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UpdateUserID");
                  OnUpdateUserIDChanged();
              }
            }
        }
        private string _UpdateUserID;
        partial void OnGetUpdateUserID(ref string value);
        partial void OnUpdateUserIDChanging(ref string value);
        partial void OnUpdateUserIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for GLBatch in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "GLBatch_JournalHdr", "GLBatch")]
        public virtual GLBatch GLBatch
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<GLBatch>("Net4Sage.DataAccessModel.GLBatch_JournalHdr", "GLBatch").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<GLBatch>("Net4Sage.DataAccessModel.GLBatch_JournalHdr", "GLBatch").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for GLBatch in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GLBatch> GLBatchReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<GLBatch>("Net4Sage.DataAccessModel.GLBatch_JournalHdr", "GLBatch");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<GLBatch>("Net4Sage.DataAccessModel.GLBatch_JournalHdr", "GLBatch", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<GLBatch>("Net4Sage.DataAccessModel.GLBatch_JournalHdr", "GLBatch").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Details in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "JournalHdr_JournalDetl", "Details")]
        public virtual EntityCollection<JournalDetail> Details
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<JournalDetail>("Net4Sage.DataAccessModel.JournalHdr_JournalDetl", "Details");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<JournalDetail>("Net4Sage.DataAccessModel.JournalHdr_JournalDetl", "Details", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for GLAccount in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "GLAccount_JournalHdr", "GLAccount")]
        public virtual GLAccount GLAccount
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<GLAccount>("Net4Sage.DataAccessModel.GLAccount_JournalHdr", "GLAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<GLAccount>("Net4Sage.DataAccessModel.GLAccount_JournalHdr", "GLAccount").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for GLAccount in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GLAccount> GLAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<GLAccount>("Net4Sage.DataAccessModel.GLAccount_JournalHdr", "GLAccount");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<GLAccount>("Net4Sage.DataAccessModel.GLAccount_JournalHdr", "GLAccount", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<GLAccount>("Net4Sage.DataAccessModel.GLAccount_JournalHdr", "GLAccount").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Currency in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Currency_JournalHdr", "Currency")]
        public virtual Currency Currency
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Currency>("Net4Sage.DataAccessModel.Currency_JournalHdr", "Currency").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Currency>("Net4Sage.DataAccessModel.Currency_JournalHdr", "Currency").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Currency in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Currency> CurrencyReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Currency>("Net4Sage.DataAccessModel.Currency_JournalHdr", "Currency");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Currency>("Net4Sage.DataAccessModel.Currency_JournalHdr", "Currency", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Currency>("Net4Sage.DataAccessModel.Currency_JournalHdr", "Currency").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Journal in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Journal_JournalHdr", "Journal")]
        public virtual Journal Journal
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Journal>("Net4Sage.DataAccessModel.Journal_JournalHdr", "Journal").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Journal>("Net4Sage.DataAccessModel.Journal_JournalHdr", "Journal").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Journal in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Journal> JournalReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Journal>("Net4Sage.DataAccessModel.Journal_JournalHdr", "Journal");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Journal>("Net4Sage.DataAccessModel.Journal_JournalHdr", "Journal", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Journal>("Net4Sage.DataAccessModel.Journal_JournalHdr", "Journal").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.GLAccount in the schema.
    /// </summary>
    /// <KeyProperties>
    /// GLAcctKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="GLAccount")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [Net4Sage.Controls.Lookup.LookupFormTitle(@"Buscar Cuenta")]
    [Net4Sage.Controls.Lookup.LookupAutoShowColumns(false)]
    public partial class GLAccount : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new GLAccount object.
        /// </summary>
        /// <param name="gLAcctKey">Initial value of GLAcctKey.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="createType">Initial value of CreateType.</param>
        /// <param name="currRestriction">Initial value of CurrRestriction.</param>
        /// <param name="gLAcctNo">Initial value of GLAcctNo.</param>
        /// <param name="naturalAcctKey">Initial value of NaturalAcctKey.</param>
        /// <param name="postingType">Initial value of PostingType.</param>
        /// <param name="revalue">Initial value of Revalue.</param>
        /// <param name="status">Initial value of Status.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        public static GLAccount CreateGLAccount(int gLAcctKey, string companyID, short createType, GLAcctCurrRestriction currRestriction, string gLAcctNo, int naturalAcctKey, GLAcctPostingType postingType, short revalue, GLAcctStatus status, int updateCounter)
        {
            GLAccount gLAccount = new GLAccount();
            gLAccount.GLAcctKey = gLAcctKey;
            gLAccount.CompanyID = companyID;
            gLAccount.CreateType = createType;
            gLAccount.CurrRestriction = currRestriction;
            gLAccount.GLAcctNo = gLAcctNo;
            gLAccount.NaturalAcctKey = naturalAcctKey;
            gLAccount.PostingType = postingType;
            gLAccount.Revalue = revalue;
            gLAccount.Status = status;
            gLAccount.UpdateCounter = updateCounter;
            return gLAccount;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for GLAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupKeyReturn]
        public virtual int GLAcctKey
        {
            get
            {
                int value = _GLAcctKey;
                OnGetGLAcctKey(ref value);
                return value;
            }
            set
            {
                if (_GLAcctKey != value)
                {
                  OnGLAcctKeyChanging(ref value);
                  ReportPropertyChanging("GLAcctKey");
                  _GLAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("GLAcctKey");
                  OnGLAcctKeyChanged();
              }
            }
        }
        private int _GLAcctKey;
        partial void OnGetGLAcctKey(ref int value);
        partial void OnGLAcctKeyChanging(ref int value);
        partial void OnGLAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for CreateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CreateDate
        {
            get
            {
                global::System.DateTime? value = _CreateDate;
                OnGetCreateDate(ref value);
                return value;
            }
            set
            {
                if (_CreateDate != value)
                {
                  OnCreateDateChanging(ref value);
                  ReportPropertyChanging("CreateDate");
                  _CreateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateDate");
                  OnCreateDateChanged();
              }
            }
        }
        private global::System.DateTime? _CreateDate;
        partial void OnGetCreateDate(ref global::System.DateTime? value);
        partial void OnCreateDateChanging(ref global::System.DateTime? value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// There are no comments for CreateType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CreateType
        {
            get
            {
                short value = _CreateType;
                OnGetCreateType(ref value);
                return value;
            }
            set
            {
                if (_CreateType != value)
                {
                  OnCreateTypeChanging(ref value);
                  ReportPropertyChanging("CreateType");
                  _CreateType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateType");
                  OnCreateTypeChanged();
              }
            }
        }
        private short _CreateType = 0;
        partial void OnGetCreateType(ref short value);
        partial void OnCreateTypeChanging(ref short value);
        partial void OnCreateTypeChanged();
    
        /// <summary>
        /// There are no comments for CreateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CreateUserID
        {
            get
            {
                string value = _CreateUserID;
                OnGetCreateUserID(ref value);
                return value;
            }
            set
            {
                if (_CreateUserID != value)
                {
                  OnCreateUserIDChanging(ref value);
                  ReportPropertyChanging("CreateUserID");
                  _CreateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CreateUserID");
                  OnCreateUserIDChanged();
              }
            }
        }
        private string _CreateUserID;
        partial void OnGetCreateUserID(ref string value);
        partial void OnCreateUserIDChanging(ref string value);
        partial void OnCreateUserIDChanged();
    
        /// <summary>
        /// There are no comments for CurrRestriction in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual GLAcctCurrRestriction CurrRestriction
        {
            get
            {
                GLAcctCurrRestriction value = _CurrRestriction;
                OnGetCurrRestriction(ref value);
                return value;
            }
            set
            {
                if (_CurrRestriction != value)
                {
                  OnCurrRestrictionChanging(ref value);
                  ReportPropertyChanging("CurrRestriction");
                  _CurrRestriction = (GLAcctCurrRestriction)StructuralObject.SetValidValue((short)value);
                  ReportPropertyChanged("CurrRestriction");
                  OnCurrRestrictionChanged();
              }
            }
        }
        private GLAcctCurrRestriction _CurrRestriction;
        partial void OnGetCurrRestriction(ref GLAcctCurrRestriction value);
        partial void OnCurrRestrictionChanging(ref GLAcctCurrRestriction value);
        partial void OnCurrRestrictionChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"Descripción")]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Descripción")]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for EffEndDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? EffEndDate
        {
            get
            {
                global::System.DateTime? value = _EffEndDate;
                OnGetEffEndDate(ref value);
                return value;
            }
            set
            {
                if (_EffEndDate != value)
                {
                  OnEffEndDateChanging(ref value);
                  ReportPropertyChanging("EffEndDate");
                  _EffEndDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EffEndDate");
                  OnEffEndDateChanged();
              }
            }
        }
        private global::System.DateTime? _EffEndDate;
        partial void OnGetEffEndDate(ref global::System.DateTime? value);
        partial void OnEffEndDateChanging(ref global::System.DateTime? value);
        partial void OnEffEndDateChanged();
    
        /// <summary>
        /// There are no comments for EffStartDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? EffStartDate
        {
            get
            {
                global::System.DateTime? value = _EffStartDate;
                OnGetEffStartDate(ref value);
                return value;
            }
            set
            {
                if (_EffStartDate != value)
                {
                  OnEffStartDateChanging(ref value);
                  ReportPropertyChanging("EffStartDate");
                  _EffStartDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EffStartDate");
                  OnEffStartDateChanged();
              }
            }
        }
        private global::System.DateTime? _EffStartDate;
        partial void OnGetEffStartDate(ref global::System.DateTime? value);
        partial void OnEffStartDateChanging(ref global::System.DateTime? value);
        partial void OnEffStartDateChanged();
    
        /// <summary>
        /// There are no comments for ExtCmnt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ExtCmnt
        {
            get
            {
                string value = _ExtCmnt;
                OnGetExtCmnt(ref value);
                return value;
            }
            set
            {
                if (_ExtCmnt != value)
                {
                  OnExtCmntChanging(ref value);
                  ReportPropertyChanging("ExtCmnt");
                  _ExtCmnt = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ExtCmnt");
                  OnExtCmntChanged();
              }
            }
        }
        private string _ExtCmnt;
        partial void OnGetExtCmnt(ref string value);
        partial void OnExtCmntChanging(ref string value);
        partial void OnExtCmntChanged();
    
        /// <summary>
        /// There are no comments for GLAcctNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"No Cuenta")]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"No Cuenta")]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        [Net4Sage.Controls.Lookup.LookupTextReturn]
        public virtual string GLAcctNo
        {
            get
            {
                string value = _GLAcctNo;
                OnGetGLAcctNo(ref value);
                return value;
            }
            set
            {
                if (_GLAcctNo != value)
                {
                  OnGLAcctNoChanging(ref value);
                  ReportPropertyChanging("GLAcctNo");
                  _GLAcctNo = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("GLAcctNo");
                  OnGLAcctNoChanged();
              }
            }
        }
        private string _GLAcctNo;
        partial void OnGetGLAcctNo(ref string value);
        partial void OnGLAcctNoChanging(ref string value);
        partial void OnGLAcctNoChanged();
    
        /// <summary>
        /// There are no comments for ImportLogKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ImportLogKey
        {
            get
            {
                int? value = _ImportLogKey;
                OnGetImportLogKey(ref value);
                return value;
            }
            set
            {
                if (_ImportLogKey != value)
                {
                  OnImportLogKeyChanging(ref value);
                  ReportPropertyChanging("ImportLogKey");
                  _ImportLogKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ImportLogKey");
                  OnImportLogKeyChanged();
              }
            }
        }
        private int? _ImportLogKey;
        partial void OnGetImportLogKey(ref int? value);
        partial void OnImportLogKeyChanging(ref int? value);
        partial void OnImportLogKeyChanged();
    
        /// <summary>
        /// There are no comments for NaturalAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int NaturalAcctKey
        {
            get
            {
                int value = _NaturalAcctKey;
                OnGetNaturalAcctKey(ref value);
                return value;
            }
            set
            {
                if (_NaturalAcctKey != value)
                {
                  OnNaturalAcctKeyChanging(ref value);
                  ReportPropertyChanging("NaturalAcctKey");
                  _NaturalAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NaturalAcctKey");
                  OnNaturalAcctKeyChanged();
              }
            }
        }
        private int _NaturalAcctKey;
        partial void OnGetNaturalAcctKey(ref int value);
        partial void OnNaturalAcctKeyChanging(ref int value);
        partial void OnNaturalAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for PostingType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual GLAcctPostingType PostingType
        {
            get
            {
                GLAcctPostingType value = _PostingType;
                OnGetPostingType(ref value);
                return value;
            }
            set
            {
                if (_PostingType != value)
                {
                  OnPostingTypeChanging(ref value);
                  ReportPropertyChanging("PostingType");
                  _PostingType = (GLAcctPostingType)StructuralObject.SetValidValue((short)value);
                  ReportPropertyChanged("PostingType");
                  OnPostingTypeChanged();
              }
            }
        }
        private GLAcctPostingType _PostingType;
        partial void OnGetPostingType(ref GLAcctPostingType value);
        partial void OnPostingTypeChanging(ref GLAcctPostingType value);
        partial void OnPostingTypeChanged();
    
        /// <summary>
        /// There are no comments for RestrictedCurrID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string RestrictedCurrID
        {
            get
            {
                string value = _RestrictedCurrID;
                OnGetRestrictedCurrID(ref value);
                return value;
            }
            set
            {
                if (_RestrictedCurrID != value)
                {
                  OnRestrictedCurrIDChanging(ref value);
                  ReportPropertyChanging("RestrictedCurrID");
                  _RestrictedCurrID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("RestrictedCurrID");
                  OnRestrictedCurrIDChanged();
              }
            }
        }
        private string _RestrictedCurrID;
        partial void OnGetRestrictedCurrID(ref string value);
        partial void OnRestrictedCurrIDChanging(ref string value);
        partial void OnRestrictedCurrIDChanged();
    
        /// <summary>
        /// There are no comments for Revalue in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Revalue
        {
            get
            {
                short value = _Revalue;
                OnGetRevalue(ref value);
                return value;
            }
            set
            {
                if (_Revalue != value)
                {
                  OnRevalueChanging(ref value);
                  ReportPropertyChanging("Revalue");
                  _Revalue = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Revalue");
                  OnRevalueChanged();
              }
            }
        }
        private short _Revalue = 0;
        partial void OnGetRevalue(ref short value);
        partial void OnRevalueChanging(ref short value);
        partial void OnRevalueChanged();
    
        /// <summary>
        /// There are no comments for StatUnit in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string StatUnit
        {
            get
            {
                string value = _StatUnit;
                OnGetStatUnit(ref value);
                return value;
            }
            set
            {
                if (_StatUnit != value)
                {
                  OnStatUnitChanging(ref value);
                  ReportPropertyChanging("StatUnit");
                  _StatUnit = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("StatUnit");
                  OnStatUnitChanged();
              }
            }
        }
        private string _StatUnit;
        partial void OnGetStatUnit(ref string value);
        partial void OnStatUnitChanging(ref string value);
        partial void OnStatUnitChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual GLAcctStatus Status
        {
            get
            {
                GLAcctStatus value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = (GLAcctStatus)StructuralObject.SetValidValue((short)value);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private GLAcctStatus _Status;
        partial void OnGetStatus(ref GLAcctStatus value);
        partial void OnStatusChanging(ref GLAcctStatus value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();
    
        /// <summary>
        /// There are no comments for UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? UpdateDate
        {
            get
            {
                global::System.DateTime? value = _UpdateDate;
                OnGetUpdateDate(ref value);
                return value;
            }
            set
            {
                if (_UpdateDate != value)
                {
                  OnUpdateDateChanging(ref value);
                  ReportPropertyChanging("UpdateDate");
                  _UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateDate");
                  OnUpdateDateChanged();
              }
            }
        }
        private global::System.DateTime? _UpdateDate;
        partial void OnGetUpdateDate(ref global::System.DateTime? value);
        partial void OnUpdateDateChanging(ref global::System.DateTime? value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// There are no comments for UpdateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UpdateUserID
        {
            get
            {
                string value = _UpdateUserID;
                OnGetUpdateUserID(ref value);
                return value;
            }
            set
            {
                if (_UpdateUserID != value)
                {
                  OnUpdateUserIDChanging(ref value);
                  ReportPropertyChanging("UpdateUserID");
                  _UpdateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UpdateUserID");
                  OnUpdateUserIDChanged();
              }
            }
        }
        private string _UpdateUserID;
        partial void OnGetUpdateUserID(ref string value);
        partial void OnUpdateUserIDChanging(ref string value);
        partial void OnUpdateUserIDChanged();
    
        /// <summary>
        /// There are no comments for UserFld1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld1
        {
            get
            {
                string value = _UserFld1;
                OnGetUserFld1(ref value);
                return value;
            }
            set
            {
                if (_UserFld1 != value)
                {
                  OnUserFld1Changing(ref value);
                  ReportPropertyChanging("UserFld1");
                  _UserFld1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld1");
                  OnUserFld1Changed();
              }
            }
        }
        private string _UserFld1;
        partial void OnGetUserFld1(ref string value);
        partial void OnUserFld1Changing(ref string value);
        partial void OnUserFld1Changed();
    
        /// <summary>
        /// There are no comments for UserFld2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld2
        {
            get
            {
                string value = _UserFld2;
                OnGetUserFld2(ref value);
                return value;
            }
            set
            {
                if (_UserFld2 != value)
                {
                  OnUserFld2Changing(ref value);
                  ReportPropertyChanging("UserFld2");
                  _UserFld2 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld2");
                  OnUserFld2Changed();
              }
            }
        }
        private string _UserFld2;
        partial void OnGetUserFld2(ref string value);
        partial void OnUserFld2Changing(ref string value);
        partial void OnUserFld2Changed();
    
        /// <summary>
        /// There are no comments for UserFld3 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld3
        {
            get
            {
                string value = _UserFld3;
                OnGetUserFld3(ref value);
                return value;
            }
            set
            {
                if (_UserFld3 != value)
                {
                  OnUserFld3Changing(ref value);
                  ReportPropertyChanging("UserFld3");
                  _UserFld3 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld3");
                  OnUserFld3Changed();
              }
            }
        }
        private string _UserFld3;
        partial void OnGetUserFld3(ref string value);
        partial void OnUserFld3Changing(ref string value);
        partial void OnUserFld3Changed();
    
        /// <summary>
        /// There are no comments for UserFld4 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld4
        {
            get
            {
                string value = _UserFld4;
                OnGetUserFld4(ref value);
                return value;
            }
            set
            {
                if (_UserFld4 != value)
                {
                  OnUserFld4Changing(ref value);
                  ReportPropertyChanging("UserFld4");
                  _UserFld4 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld4");
                  OnUserFld4Changed();
              }
            }
        }
        private string _UserFld4;
        partial void OnGetUserFld4(ref string value);
        partial void OnUserFld4Changing(ref string value);
        partial void OnUserFld4Changed();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for JournalHdrs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "GLAccount_JournalHdr", "JournalHdrs")]
        public virtual EntityCollection<JournalHdr> JournalHdrs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<JournalHdr>("Net4Sage.DataAccessModel.GLAccount_JournalHdr", "JournalHdrs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<JournalHdr>("Net4Sage.DataAccessModel.GLAccount_JournalHdr", "JournalHdrs", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for JournalDetls in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "GLAccount_JournalDetl", "JournalDetls")]
        public virtual EntityCollection<JournalDetail> JournalDetls
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<JournalDetail>("Net4Sage.DataAccessModel.GLAccount_JournalDetl", "JournalDetls");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<JournalDetail>("Net4Sage.DataAccessModel.GLAccount_JournalDetl", "JournalDetls", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for AcctSegments in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "GLAccount_AcctSegment", "AcctSegments")]
        public virtual EntityCollection<AcctSegment> AcctSegments
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<AcctSegment>("Net4Sage.DataAccessModel.GLAccount_AcctSegment", "AcctSegments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<AcctSegment>("Net4Sage.DataAccessModel.GLAccount_AcctSegment", "AcctSegments", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for AcctHists in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "GLAccount_AcctHist", "AcctHists")]
        public virtual EntityCollection<AcctHist> AcctHists
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<AcctHist>("Net4Sage.DataAccessModel.GLAccount_AcctHist", "AcctHists");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<AcctHist>("Net4Sage.DataAccessModel.GLAccount_AcctHist", "AcctHists", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Budgets in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "GLAccount_Budget", "Budgets")]
        public virtual EntityCollection<Budget> Budgets
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Budget>("Net4Sage.DataAccessModel.GLAccount_Budget", "Budgets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Budget>("Net4Sage.DataAccessModel.GLAccount_Budget", "Budgets", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for GLTransactions in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "GLAccount_GLTransaction", "GLTransactions")]
        public virtual EntityCollection<GLTransaction> GLTransactions
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<GLTransaction>("Net4Sage.DataAccessModel.GLAccount_GLTransaction", "GLTransactions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<GLTransaction>("Net4Sage.DataAccessModel.GLAccount_GLTransaction", "GLTransactions", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.ItemDescription in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ItemKey
    /// LanguageID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="ItemDescription")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ItemDescription : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ItemDescription object.
        /// </summary>
        /// <param name="itemKey">Initial value of ItemKey.</param>
        /// <param name="languageID">Initial value of LanguageID.</param>
        /// <param name="longDesc">Initial value of LongDesc.</param>
        /// <param name="shortDesc">Initial value of ShortDesc.</param>
        public static ItemDescription CreateItemDescription(int itemKey, int languageID, string longDesc, string shortDesc)
        {
            ItemDescription itemDescription = new ItemDescription();
            itemDescription.ItemKey = itemKey;
            itemDescription.LanguageID = languageID;
            itemDescription.LongDesc = longDesc;
            itemDescription.ShortDesc = shortDesc;
            return itemDescription;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ItemKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ItemKey
        {
            get
            {
                int value = _ItemKey;
                OnGetItemKey(ref value);
                return value;
            }
            set
            {
                if (_ItemKey != value)
                {
                  OnItemKeyChanging(ref value);
                  ReportPropertyChanging("ItemKey");
                  _ItemKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ItemKey");
                  OnItemKeyChanged();
              }
            }
        }
        private int _ItemKey;
        partial void OnGetItemKey(ref int value);
        partial void OnItemKeyChanging(ref int value);
        partial void OnItemKeyChanged();
    
        /// <summary>
        /// There are no comments for LanguageID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int LanguageID
        {
            get
            {
                int value = _LanguageID;
                OnGetLanguageID(ref value);
                return value;
            }
            set
            {
                if (_LanguageID != value)
                {
                  OnLanguageIDChanging(ref value);
                  ReportPropertyChanging("LanguageID");
                  _LanguageID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LanguageID");
                  OnLanguageIDChanged();
              }
            }
        }
        private int _LanguageID;
        partial void OnGetLanguageID(ref int value);
        partial void OnLanguageIDChanging(ref int value);
        partial void OnLanguageIDChanged();
    
        /// <summary>
        /// There are no comments for LongDesc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string LongDesc
        {
            get
            {
                string value = _LongDesc;
                OnGetLongDesc(ref value);
                return value;
            }
            set
            {
                if (_LongDesc != value)
                {
                  OnLongDescChanging(ref value);
                  ReportPropertyChanging("LongDesc");
                  _LongDesc = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("LongDesc");
                  OnLongDescChanged();
              }
            }
        }
        private string _LongDesc;
        partial void OnGetLongDesc(ref string value);
        partial void OnLongDescChanging(ref string value);
        partial void OnLongDescChanged();
    
        /// <summary>
        /// There are no comments for ShortDesc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string ShortDesc
        {
            get
            {
                string value = _ShortDesc;
                OnGetShortDesc(ref value);
                return value;
            }
            set
            {
                if (_ShortDesc != value)
                {
                  OnShortDescChanging(ref value);
                  ReportPropertyChanging("ShortDesc");
                  _ShortDesc = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ShortDesc");
                  OnShortDescChanged();
              }
            }
        }
        private string _ShortDesc;
        partial void OnGetShortDesc(ref string value);
        partial void OnShortDescChanging(ref string value);
        partial void OnShortDescChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Item in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Item_ItemDescription", "Item")]
        public virtual Item Item
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Item>("Net4Sage.DataAccessModel.Item_ItemDescription", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Item>("Net4Sage.DataAccessModel.Item_ItemDescription", "Item").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Item in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Item>("Net4Sage.DataAccessModel.Item_ItemDescription", "Item");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Item>("Net4Sage.DataAccessModel.Item_ItemDescription", "Item", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Item>("Net4Sage.DataAccessModel.Item_ItemDescription", "Item").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.Currency in the schema.
    /// </summary>
    /// <KeyProperties>
    /// CurrID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="Currency")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Currency : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Currency object.
        /// </summary>
        /// <param name="currID">Initial value of CurrID.</param>
        /// <param name="currLocale">Initial value of CurrLocale.</param>
        /// <param name="currSymbolPosition">Initial value of CurrSymbolPosition.</param>
        /// <param name="decimalSymbol">Initial value of DecimalSymbol.</param>
        /// <param name="digitGroupSymbol">Initial value of DigitGroupSymbol.</param>
        /// <param name="digitsAfterDecimal">Initial value of DigitsAfterDecimal.</param>
        /// <param name="digitsInGroup">Initial value of DigitsInGroup.</param>
        /// <param name="isUsed">Initial value of IsUsed.</param>
        /// <param name="roundMeth">Initial value of RoundMeth.</param>
        /// <param name="roundPrecision">Initial value of RoundPrecision.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        public static Currency CreateCurrency(string currID, int currLocale, short currSymbolPosition, string decimalSymbol, string digitGroupSymbol, short digitsAfterDecimal, short digitsInGroup, short isUsed, short roundMeth, short roundPrecision, int updateCounter)
        {
            Currency currency = new Currency();
            currency.CurrID = currID;
            currency.CurrLocale = currLocale;
            currency.CurrSymbolPosition = currSymbolPosition;
            currency.DecimalSymbol = decimalSymbol;
            currency.DigitGroupSymbol = digitGroupSymbol;
            currency.DigitsAfterDecimal = digitsAfterDecimal;
            currency.DigitsInGroup = digitsInGroup;
            currency.IsUsed = isUsed;
            currency.RoundMeth = roundMeth;
            currency.RoundPrecision = roundPrecision;
            currency.UpdateCounter = updateCounter;
            return currency;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for CurrID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CurrID
        {
            get
            {
                string value = _CurrID;
                OnGetCurrID(ref value);
                return value;
            }
            set
            {
                if (_CurrID != value)
                {
                  OnCurrIDChanging(ref value);
                  ReportPropertyChanging("CurrID");
                  _CurrID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CurrID");
                  OnCurrIDChanged();
              }
            }
        }
        private string _CurrID;
        partial void OnGetCurrID(ref string value);
        partial void OnCurrIDChanging(ref string value);
        partial void OnCurrIDChanged();
    
        /// <summary>
        /// There are no comments for CurrLocale in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CurrLocale
        {
            get
            {
                int value = _CurrLocale;
                OnGetCurrLocale(ref value);
                return value;
            }
            set
            {
                if (_CurrLocale != value)
                {
                  OnCurrLocaleChanging(ref value);
                  ReportPropertyChanging("CurrLocale");
                  _CurrLocale = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CurrLocale");
                  OnCurrLocaleChanged();
              }
            }
        }
        private int _CurrLocale;
        partial void OnGetCurrLocale(ref int value);
        partial void OnCurrLocaleChanging(ref int value);
        partial void OnCurrLocaleChanged();
    
        /// <summary>
        /// There are no comments for CurrSymbol in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CurrSymbol
        {
            get
            {
                string value = _CurrSymbol;
                OnGetCurrSymbol(ref value);
                return value;
            }
            set
            {
                if (_CurrSymbol != value)
                {
                  OnCurrSymbolChanging(ref value);
                  ReportPropertyChanging("CurrSymbol");
                  _CurrSymbol = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CurrSymbol");
                  OnCurrSymbolChanged();
              }
            }
        }
        private string _CurrSymbol;
        partial void OnGetCurrSymbol(ref string value);
        partial void OnCurrSymbolChanging(ref string value);
        partial void OnCurrSymbolChanged();
    
        /// <summary>
        /// There are no comments for CurrSymbolPosition in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CurrSymbolPosition
        {
            get
            {
                short value = _CurrSymbolPosition;
                OnGetCurrSymbolPosition(ref value);
                return value;
            }
            set
            {
                if (_CurrSymbolPosition != value)
                {
                  OnCurrSymbolPositionChanging(ref value);
                  ReportPropertyChanging("CurrSymbolPosition");
                  _CurrSymbolPosition = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CurrSymbolPosition");
                  OnCurrSymbolPositionChanged();
              }
            }
        }
        private short _CurrSymbolPosition = 1;
        partial void OnGetCurrSymbolPosition(ref short value);
        partial void OnCurrSymbolPositionChanging(ref short value);
        partial void OnCurrSymbolPositionChanged();
    
        /// <summary>
        /// There are no comments for DecimalSymbol in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string DecimalSymbol
        {
            get
            {
                string value = _DecimalSymbol;
                OnGetDecimalSymbol(ref value);
                return value;
            }
            set
            {
                if (_DecimalSymbol != value)
                {
                  OnDecimalSymbolChanging(ref value);
                  ReportPropertyChanging("DecimalSymbol");
                  _DecimalSymbol = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("DecimalSymbol");
                  OnDecimalSymbolChanged();
              }
            }
        }
        private string _DecimalSymbol = @".";
        partial void OnGetDecimalSymbol(ref string value);
        partial void OnDecimalSymbolChanging(ref string value);
        partial void OnDecimalSymbolChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for DigitGroupSymbol in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string DigitGroupSymbol
        {
            get
            {
                string value = _DigitGroupSymbol;
                OnGetDigitGroupSymbol(ref value);
                return value;
            }
            set
            {
                if (_DigitGroupSymbol != value)
                {
                  OnDigitGroupSymbolChanging(ref value);
                  ReportPropertyChanging("DigitGroupSymbol");
                  _DigitGroupSymbol = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("DigitGroupSymbol");
                  OnDigitGroupSymbolChanged();
              }
            }
        }
        private string _DigitGroupSymbol = @",";
        partial void OnGetDigitGroupSymbol(ref string value);
        partial void OnDigitGroupSymbolChanging(ref string value);
        partial void OnDigitGroupSymbolChanged();
    
        /// <summary>
        /// There are no comments for DigitsAfterDecimal in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short DigitsAfterDecimal
        {
            get
            {
                short value = _DigitsAfterDecimal;
                OnGetDigitsAfterDecimal(ref value);
                return value;
            }
            set
            {
                if (_DigitsAfterDecimal != value)
                {
                  OnDigitsAfterDecimalChanging(ref value);
                  ReportPropertyChanging("DigitsAfterDecimal");
                  _DigitsAfterDecimal = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DigitsAfterDecimal");
                  OnDigitsAfterDecimalChanged();
              }
            }
        }
        private short _DigitsAfterDecimal = 2;
        partial void OnGetDigitsAfterDecimal(ref short value);
        partial void OnDigitsAfterDecimalChanging(ref short value);
        partial void OnDigitsAfterDecimalChanged();
    
        /// <summary>
        /// There are no comments for DigitsInGroup in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short DigitsInGroup
        {
            get
            {
                short value = _DigitsInGroup;
                OnGetDigitsInGroup(ref value);
                return value;
            }
            set
            {
                if (_DigitsInGroup != value)
                {
                  OnDigitsInGroupChanging(ref value);
                  ReportPropertyChanging("DigitsInGroup");
                  _DigitsInGroup = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DigitsInGroup");
                  OnDigitsInGroupChanged();
              }
            }
        }
        private short _DigitsInGroup = 3;
        partial void OnGetDigitsInGroup(ref short value);
        partial void OnDigitsInGroupChanging(ref short value);
        partial void OnDigitsInGroupChanged();
    
        /// <summary>
        /// There are no comments for IsUsed in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short IsUsed
        {
            get
            {
                short value = _IsUsed;
                OnGetIsUsed(ref value);
                return value;
            }
            set
            {
                if (_IsUsed != value)
                {
                  OnIsUsedChanging(ref value);
                  ReportPropertyChanging("IsUsed");
                  _IsUsed = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IsUsed");
                  OnIsUsedChanged();
              }
            }
        }
        private short _IsUsed = 0;
        partial void OnGetIsUsed(ref short value);
        partial void OnIsUsedChanging(ref short value);
        partial void OnIsUsedChanged();
    
        /// <summary>
        /// There are no comments for RoundMeth in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short RoundMeth
        {
            get
            {
                short value = _RoundMeth;
                OnGetRoundMeth(ref value);
                return value;
            }
            set
            {
                if (_RoundMeth != value)
                {
                  OnRoundMethChanging(ref value);
                  ReportPropertyChanging("RoundMeth");
                  _RoundMeth = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RoundMeth");
                  OnRoundMethChanged();
              }
            }
        }
        private short _RoundMeth = 1;
        partial void OnGetRoundMeth(ref short value);
        partial void OnRoundMethChanging(ref short value);
        partial void OnRoundMethChanged();
    
        /// <summary>
        /// There are no comments for RoundPrecision in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short RoundPrecision
        {
            get
            {
                short value = _RoundPrecision;
                OnGetRoundPrecision(ref value);
                return value;
            }
            set
            {
                if (_RoundPrecision != value)
                {
                  OnRoundPrecisionChanging(ref value);
                  ReportPropertyChanging("RoundPrecision");
                  _RoundPrecision = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RoundPrecision");
                  OnRoundPrecisionChanged();
              }
            }
        }
        private short _RoundPrecision = 1;
        partial void OnGetRoundPrecision(ref short value);
        partial void OnRoundPrecisionChanging(ref short value);
        partial void OnRoundPrecisionChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for JournalHdrs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Currency_JournalHdr", "JournalHdrs")]
        public virtual EntityCollection<JournalHdr> JournalHdrs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<JournalHdr>("Net4Sage.DataAccessModel.Currency_JournalHdr", "JournalHdrs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<JournalHdr>("Net4Sage.DataAccessModel.Currency_JournalHdr", "JournalHdrs", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Companies in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Currency_Company", "Companies")]
        public virtual EntityCollection<Company> Companies
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Company>("Net4Sage.DataAccessModel.Currency_Company", "Companies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Company>("Net4Sage.DataAccessModel.Currency_Company", "Companies", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.Journal in the schema.
    /// </summary>
    /// <KeyProperties>
    /// JrnlKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="Journal")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Journal : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Journal object.
        /// </summary>
        /// <param name="jrnlKey">Initial value of JrnlKey.</param>
        /// <param name="begBalance">Initial value of BegBalance.</param>
        /// <param name="checkNo">Initial value of CheckNo.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="jrnlID">Initial value of JrnlID.</param>
        /// <param name="offsetPost">Initial value of OffsetPost.</param>
        /// <param name="reqOffsetAmt">Initial value of ReqOffsetAmt.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        public static Journal CreateJournal(int jrnlKey, short begBalance, short checkNo, string companyID, string jrnlID, short offsetPost, short reqOffsetAmt, int updateCounter)
        {
            Journal journal = new Journal();
            journal.JrnlKey = jrnlKey;
            journal.BegBalance = begBalance;
            journal.CheckNo = checkNo;
            journal.CompanyID = companyID;
            journal.JrnlID = jrnlID;
            journal.OffsetPost = offsetPost;
            journal.ReqOffsetAmt = reqOffsetAmt;
            journal.UpdateCounter = updateCounter;
            return journal;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for JrnlKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupKeyReturn]
        public virtual int JrnlKey
        {
            get
            {
                int value = _JrnlKey;
                OnGetJrnlKey(ref value);
                return value;
            }
            set
            {
                if (_JrnlKey != value)
                {
                  OnJrnlKeyChanging(ref value);
                  ReportPropertyChanging("JrnlKey");
                  _JrnlKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("JrnlKey");
                  OnJrnlKeyChanged();
              }
            }
        }
        private int _JrnlKey;
        partial void OnGetJrnlKey(ref int value);
        partial void OnJrnlKeyChanging(ref int value);
        partial void OnJrnlKeyChanged();
    
        /// <summary>
        /// There are no comments for BegBalance in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short BegBalance
        {
            get
            {
                short value = _BegBalance;
                OnGetBegBalance(ref value);
                return value;
            }
            set
            {
                if (_BegBalance != value)
                {
                  OnBegBalanceChanging(ref value);
                  ReportPropertyChanging("BegBalance");
                  _BegBalance = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BegBalance");
                  OnBegBalanceChanged();
              }
            }
        }
        private short _BegBalance = 0;
        partial void OnGetBegBalance(ref short value);
        partial void OnBegBalanceChanging(ref short value);
        partial void OnBegBalanceChanged();
    
        /// <summary>
        /// There are no comments for CheckNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CheckNo
        {
            get
            {
                short value = _CheckNo;
                OnGetCheckNo(ref value);
                return value;
            }
            set
            {
                if (_CheckNo != value)
                {
                  OnCheckNoChanging(ref value);
                  ReportPropertyChanging("CheckNo");
                  _CheckNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CheckNo");
                  OnCheckNoChanged();
              }
            }
        }
        private short _CheckNo = 0;
        partial void OnGetCheckNo(ref short value);
        partial void OnCheckNoChanging(ref short value);
        partial void OnCheckNoChanged();
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for GLAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? GLAcctKey
        {
            get
            {
                int? value = _GLAcctKey;
                OnGetGLAcctKey(ref value);
                return value;
            }
            set
            {
                if (_GLAcctKey != value)
                {
                  OnGLAcctKeyChanging(ref value);
                  ReportPropertyChanging("GLAcctKey");
                  _GLAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("GLAcctKey");
                  OnGLAcctKeyChanged();
              }
            }
        }
        private int? _GLAcctKey;
        partial void OnGetGLAcctKey(ref int? value);
        partial void OnGLAcctKeyChanging(ref int? value);
        partial void OnGLAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for JrnlID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupTextReturn]
        public virtual string JrnlID
        {
            get
            {
                string value = _JrnlID;
                OnGetJrnlID(ref value);
                return value;
            }
            set
            {
                if (_JrnlID != value)
                {
                  OnJrnlIDChanging(ref value);
                  ReportPropertyChanging("JrnlID");
                  _JrnlID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("JrnlID");
                  OnJrnlIDChanged();
              }
            }
        }
        private string _JrnlID;
        partial void OnGetJrnlID(ref string value);
        partial void OnJrnlIDChanging(ref string value);
        partial void OnJrnlIDChanged();
    
        /// <summary>
        /// There are no comments for NextJrnlNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? NextJrnlNo
        {
            get
            {
                int? value = _NextJrnlNo;
                OnGetNextJrnlNo(ref value);
                return value;
            }
            set
            {
                if (_NextJrnlNo != value)
                {
                  OnNextJrnlNoChanging(ref value);
                  ReportPropertyChanging("NextJrnlNo");
                  _NextJrnlNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NextJrnlNo");
                  OnNextJrnlNoChanged();
              }
            }
        }
        private int? _NextJrnlNo;
        partial void OnGetNextJrnlNo(ref int? value);
        partial void OnNextJrnlNoChanging(ref int? value);
        partial void OnNextJrnlNoChanged();
    
        /// <summary>
        /// There are no comments for OffsetPost in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short OffsetPost
        {
            get
            {
                short value = _OffsetPost;
                OnGetOffsetPost(ref value);
                return value;
            }
            set
            {
                if (_OffsetPost != value)
                {
                  OnOffsetPostChanging(ref value);
                  ReportPropertyChanging("OffsetPost");
                  _OffsetPost = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OffsetPost");
                  OnOffsetPostChanged();
              }
            }
        }
        private short _OffsetPost = 1;
        partial void OnGetOffsetPost(ref short value);
        partial void OnOffsetPostChanging(ref short value);
        partial void OnOffsetPostChanged();
    
        /// <summary>
        /// There are no comments for ReqOffsetAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ReqOffsetAmt
        {
            get
            {
                short value = _ReqOffsetAmt;
                OnGetReqOffsetAmt(ref value);
                return value;
            }
            set
            {
                if (_ReqOffsetAmt != value)
                {
                  OnReqOffsetAmtChanging(ref value);
                  ReportPropertyChanging("ReqOffsetAmt");
                  _ReqOffsetAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ReqOffsetAmt");
                  OnReqOffsetAmtChanged();
              }
            }
        }
        private short _ReqOffsetAmt = 0;
        partial void OnGetReqOffsetAmt(ref short value);
        partial void OnReqOffsetAmtChanging(ref short value);
        partial void OnReqOffsetAmtChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for JournalHdrs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Journal_JournalHdr", "JournalHdrs")]
        public virtual EntityCollection<JournalHdr> JournalHdrs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<JournalHdr>("Net4Sage.DataAccessModel.Journal_JournalHdr", "JournalHdrs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<JournalHdr>("Net4Sage.DataAccessModel.Journal_JournalHdr", "JournalHdrs", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for JournalLogs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Journal_JournalLog", "JournalLogs")]
        public virtual EntityCollection<JournalLog> JournalLogs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<JournalLog>("Net4Sage.DataAccessModel.Journal_JournalLog", "JournalLogs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<JournalLog>("Net4Sage.DataAccessModel.Journal_JournalLog", "JournalLogs", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.JournalLog in the schema.
    /// </summary>
    /// <KeyProperties>
    /// JrnlKey
    /// JrnlNo
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="JournalLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JournalLog : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new JournalLog object.
        /// </summary>
        /// <param name="jrnlKey">Initial value of JrnlKey.</param>
        /// <param name="jrnlNo">Initial value of JrnlNo.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="postDate">Initial value of PostDate.</param>
        /// <param name="tranStatus">Initial value of TranStatus.</param>
        public static JournalLog CreateJournalLog(int jrnlKey, int jrnlNo, string companyID, global::System.DateTime postDate, short tranStatus)
        {
            JournalLog journalLog = new JournalLog();
            journalLog.JrnlKey = jrnlKey;
            journalLog.JrnlNo = jrnlNo;
            journalLog.CompanyID = companyID;
            journalLog.PostDate = postDate;
            journalLog.TranStatus = tranStatus;
            return journalLog;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for JrnlKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int JrnlKey
        {
            get
            {
                int value = _JrnlKey;
                OnGetJrnlKey(ref value);
                return value;
            }
            set
            {
                if (_JrnlKey != value)
                {
                  OnJrnlKeyChanging(ref value);
                  ReportPropertyChanging("JrnlKey");
                  _JrnlKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("JrnlKey");
                  OnJrnlKeyChanged();
              }
            }
        }
        private int _JrnlKey;
        partial void OnGetJrnlKey(ref int value);
        partial void OnJrnlKeyChanging(ref int value);
        partial void OnJrnlKeyChanged();
    
        /// <summary>
        /// There are no comments for JrnlNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int JrnlNo
        {
            get
            {
                int value = _JrnlNo;
                OnGetJrnlNo(ref value);
                return value;
            }
            set
            {
                if (_JrnlNo != value)
                {
                  OnJrnlNoChanging(ref value);
                  ReportPropertyChanging("JrnlNo");
                  _JrnlNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("JrnlNo");
                  OnJrnlNoChanged();
              }
            }
        }
        private int _JrnlNo;
        partial void OnGetJrnlNo(ref int value);
        partial void OnJrnlNoChanging(ref int value);
        partial void OnJrnlNoChanged();
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for PostDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime PostDate
        {
            get
            {
                global::System.DateTime value = _PostDate;
                OnGetPostDate(ref value);
                return value;
            }
            set
            {
                if (_PostDate != value)
                {
                  OnPostDateChanging(ref value);
                  ReportPropertyChanging("PostDate");
                  _PostDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PostDate");
                  OnPostDateChanged();
              }
            }
        }
        private global::System.DateTime _PostDate;
        partial void OnGetPostDate(ref global::System.DateTime value);
        partial void OnPostDateChanging(ref global::System.DateTime value);
        partial void OnPostDateChanged();
    
        /// <summary>
        /// There are no comments for TranStatus in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short TranStatus
        {
            get
            {
                short value = _TranStatus;
                OnGetTranStatus(ref value);
                return value;
            }
            set
            {
                if (_TranStatus != value)
                {
                  OnTranStatusChanging(ref value);
                  ReportPropertyChanging("TranStatus");
                  _TranStatus = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranStatus");
                  OnTranStatusChanged();
              }
            }
        }
        private short _TranStatus = 1;
        partial void OnGetTranStatus(ref short value);
        partial void OnTranStatusChanging(ref short value);
        partial void OnTranStatusChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Journal in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Journal_JournalLog", "Journal")]
        public virtual Journal Journal
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Journal>("Net4Sage.DataAccessModel.Journal_JournalLog", "Journal").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Journal>("Net4Sage.DataAccessModel.Journal_JournalLog", "Journal").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Journal in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Journal> JournalReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Journal>("Net4Sage.DataAccessModel.Journal_JournalLog", "Journal");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Journal>("Net4Sage.DataAccessModel.Journal_JournalLog", "Journal", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Journal>("Net4Sage.DataAccessModel.Journal_JournalLog", "Journal").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.Company in the schema.
    /// </summary>
    /// <KeyProperties>
    /// CompanyID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="Company")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Company : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Company object.
        /// </summary>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="addrLine1">Initial value of AddrLine1.</param>
        /// <param name="city">Initial value of City.</param>
        /// <param name="companyName">Initial value of CompanyName.</param>
        /// <param name="countryCurrLocale">Initial value of CountryCurrLocale.</param>
        /// <param name="countryID">Initial value of CountryID.</param>
        /// <param name="currID">Initial value of CurrID.</param>
        /// <param name="currLocale">Initial value of CurrLocale.</param>
        /// <param name="fullGL">Initial value of FullGL.</param>
        /// <param name="includeInOLAP">Initial value of IncludeInOLAP.</param>
        /// <param name="stateID">Initial value of StateID.</param>
        /// <param name="useMultLang">Initial value of UseMultLang.</param>
        /// <param name="v1099CombStateFed">Initial value of V1099CombStateFed.</param>
        public static Company CreateCompany(string companyID, string addrLine1, string city, string companyName, int countryCurrLocale, string countryID, string currID, int currLocale, short fullGL, short includeInOLAP, string stateID, short useMultLang, short v1099CombStateFed)
        {
            Company company = new Company();
            company.CompanyID = companyID;
            company.AddrLine1 = addrLine1;
            company.City = city;
            company.CompanyName = companyName;
            company.CountryCurrLocale = countryCurrLocale;
            company.CountryID = countryID;
            company.CurrID = currID;
            company.CurrLocale = currLocale;
            company.FullGL = fullGL;
            company.IncludeInOLAP = includeInOLAP;
            company.StateID = stateID;
            company.UseMultLang = useMultLang;
            company.V1099CombStateFed = v1099CombStateFed;
            return company;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for AddrLine1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string AddrLine1
        {
            get
            {
                string value = _AddrLine1;
                OnGetAddrLine1(ref value);
                return value;
            }
            set
            {
                if (_AddrLine1 != value)
                {
                  OnAddrLine1Changing(ref value);
                  ReportPropertyChanging("AddrLine1");
                  _AddrLine1 = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("AddrLine1");
                  OnAddrLine1Changed();
              }
            }
        }
        private string _AddrLine1 = @" ";
        partial void OnGetAddrLine1(ref string value);
        partial void OnAddrLine1Changing(ref string value);
        partial void OnAddrLine1Changed();
    
        /// <summary>
        /// There are no comments for AddrLine2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string AddrLine2
        {
            get
            {
                string value = _AddrLine2;
                OnGetAddrLine2(ref value);
                return value;
            }
            set
            {
                if (_AddrLine2 != value)
                {
                  OnAddrLine2Changing(ref value);
                  ReportPropertyChanging("AddrLine2");
                  _AddrLine2 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("AddrLine2");
                  OnAddrLine2Changed();
              }
            }
        }
        private string _AddrLine2 = @" ";
        partial void OnGetAddrLine2(ref string value);
        partial void OnAddrLine2Changing(ref string value);
        partial void OnAddrLine2Changed();
    
        /// <summary>
        /// There are no comments for AddrLine3 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string AddrLine3
        {
            get
            {
                string value = _AddrLine3;
                OnGetAddrLine3(ref value);
                return value;
            }
            set
            {
                if (_AddrLine3 != value)
                {
                  OnAddrLine3Changing(ref value);
                  ReportPropertyChanging("AddrLine3");
                  _AddrLine3 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("AddrLine3");
                  OnAddrLine3Changed();
              }
            }
        }
        private string _AddrLine3 = @" ";
        partial void OnGetAddrLine3(ref string value);
        partial void OnAddrLine3Changing(ref string value);
        partial void OnAddrLine3Changed();
    
        /// <summary>
        /// There are no comments for AddrLine4 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string AddrLine4
        {
            get
            {
                string value = _AddrLine4;
                OnGetAddrLine4(ref value);
                return value;
            }
            set
            {
                if (_AddrLine4 != value)
                {
                  OnAddrLine4Changing(ref value);
                  ReportPropertyChanging("AddrLine4");
                  _AddrLine4 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("AddrLine4");
                  OnAddrLine4Changed();
              }
            }
        }
        private string _AddrLine4 = @" ";
        partial void OnGetAddrLine4(ref string value);
        partial void OnAddrLine4Changing(ref string value);
        partial void OnAddrLine4Changed();
    
        /// <summary>
        /// There are no comments for City in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string City
        {
            get
            {
                string value = _City;
                OnGetCity(ref value);
                return value;
            }
            set
            {
                if (_City != value)
                {
                  OnCityChanging(ref value);
                  ReportPropertyChanging("City");
                  _City = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("City");
                  OnCityChanged();
              }
            }
        }
        private string _City;
        partial void OnGetCity(ref string value);
        partial void OnCityChanging(ref string value);
        partial void OnCityChanged();
    
        /// <summary>
        /// There are no comments for CompanyName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyName
        {
            get
            {
                string value = _CompanyName;
                OnGetCompanyName(ref value);
                return value;
            }
            set
            {
                if (_CompanyName != value)
                {
                  OnCompanyNameChanging(ref value);
                  ReportPropertyChanging("CompanyName");
                  _CompanyName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyName");
                  OnCompanyNameChanged();
              }
            }
        }
        private string _CompanyName = @" ";
        partial void OnGetCompanyName(ref string value);
        partial void OnCompanyNameChanging(ref string value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// There are no comments for Contact in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Contact
        {
            get
            {
                string value = _Contact;
                OnGetContact(ref value);
                return value;
            }
            set
            {
                if (_Contact != value)
                {
                  OnContactChanging(ref value);
                  ReportPropertyChanging("Contact");
                  _Contact = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Contact");
                  OnContactChanged();
              }
            }
        }
        private string _Contact = @" ";
        partial void OnGetContact(ref string value);
        partial void OnContactChanging(ref string value);
        partial void OnContactChanged();
    
        /// <summary>
        /// There are no comments for CountryCurrLocale in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CountryCurrLocale
        {
            get
            {
                int value = _CountryCurrLocale;
                OnGetCountryCurrLocale(ref value);
                return value;
            }
            set
            {
                if (_CountryCurrLocale != value)
                {
                  OnCountryCurrLocaleChanging(ref value);
                  ReportPropertyChanging("CountryCurrLocale");
                  _CountryCurrLocale = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CountryCurrLocale");
                  OnCountryCurrLocaleChanged();
              }
            }
        }
        private int _CountryCurrLocale;
        partial void OnGetCountryCurrLocale(ref int value);
        partial void OnCountryCurrLocaleChanging(ref int value);
        partial void OnCountryCurrLocaleChanged();
    
        /// <summary>
        /// There are no comments for CountryID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CountryID
        {
            get
            {
                string value = _CountryID;
                OnGetCountryID(ref value);
                return value;
            }
            set
            {
                if (_CountryID != value)
                {
                  OnCountryIDChanging(ref value);
                  ReportPropertyChanging("CountryID");
                  _CountryID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CountryID");
                  OnCountryIDChanged();
              }
            }
        }
        private string _CountryID;
        partial void OnGetCountryID(ref string value);
        partial void OnCountryIDChanging(ref string value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// There are no comments for CurrID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CurrID
        {
            get
            {
                string value = _CurrID;
                OnGetCurrID(ref value);
                return value;
            }
            set
            {
                if (_CurrID != value)
                {
                  OnCurrIDChanging(ref value);
                  ReportPropertyChanging("CurrID");
                  _CurrID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CurrID");
                  OnCurrIDChanged();
              }
            }
        }
        private string _CurrID;
        partial void OnGetCurrID(ref string value);
        partial void OnCurrIDChanging(ref string value);
        partial void OnCurrIDChanged();
    
        /// <summary>
        /// There are no comments for CurrLocale in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CurrLocale
        {
            get
            {
                int value = _CurrLocale;
                OnGetCurrLocale(ref value);
                return value;
            }
            set
            {
                if (_CurrLocale != value)
                {
                  OnCurrLocaleChanging(ref value);
                  ReportPropertyChanging("CurrLocale");
                  _CurrLocale = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CurrLocale");
                  OnCurrLocaleChanged();
              }
            }
        }
        private int _CurrLocale;
        partial void OnGetCurrLocale(ref int value);
        partial void OnCurrLocaleChanging(ref int value);
        partial void OnCurrLocaleChanged();
    
        /// <summary>
        /// There are no comments for DBServerName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string DBServerName
        {
            get
            {
                string value = _DBServerName;
                OnGetDBServerName(ref value);
                return value;
            }
            set
            {
                if (_DBServerName != value)
                {
                  OnDBServerNameChanging(ref value);
                  ReportPropertyChanging("DBServerName");
                  _DBServerName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DBServerName");
                  OnDBServerNameChanged();
              }
            }
        }
        private string _DBServerName;
        partial void OnGetDBServerName(ref string value);
        partial void OnDBServerNameChanging(ref string value);
        partial void OnDBServerNameChanged();
    
        /// <summary>
        /// There are no comments for DemoData in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string DemoData
        {
            get
            {
                string value = _DemoData;
                OnGetDemoData(ref value);
                return value;
            }
            set
            {
                if (_DemoData != value)
                {
                  OnDemoDataChanging(ref value);
                  ReportPropertyChanging("DemoData");
                  _DemoData = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DemoData");
                  OnDemoDataChanged();
              }
            }
        }
        private string _DemoData;
        partial void OnGetDemoData(ref string value);
        partial void OnDemoDataChanging(ref string value);
        partial void OnDemoDataChanged();
    
        /// <summary>
        /// There are no comments for EMailAddr in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string EMailAddr
        {
            get
            {
                string value = _EMailAddr;
                OnGetEMailAddr(ref value);
                return value;
            }
            set
            {
                if (_EMailAddr != value)
                {
                  OnEMailAddrChanging(ref value);
                  ReportPropertyChanging("EMailAddr");
                  _EMailAddr = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("EMailAddr");
                  OnEMailAddrChanged();
              }
            }
        }
        private string _EMailAddr;
        partial void OnGetEMailAddr(ref string value);
        partial void OnEMailAddrChanging(ref string value);
        partial void OnEMailAddrChanged();
    
        /// <summary>
        /// There are no comments for FAX in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string FAX
        {
            get
            {
                string value = _FAX;
                OnGetFAX(ref value);
                return value;
            }
            set
            {
                if (_FAX != value)
                {
                  OnFAXChanging(ref value);
                  ReportPropertyChanging("FAX");
                  _FAX = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("FAX");
                  OnFAXChanged();
              }
            }
        }
        private string _FAX = @" ";
        partial void OnGetFAX(ref string value);
        partial void OnFAXChanging(ref string value);
        partial void OnFAXChanged();
    
        /// <summary>
        /// There are no comments for FAXExt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string FAXExt
        {
            get
            {
                string value = _FAXExt;
                OnGetFAXExt(ref value);
                return value;
            }
            set
            {
                if (_FAXExt != value)
                {
                  OnFAXExtChanging(ref value);
                  ReportPropertyChanging("FAXExt");
                  _FAXExt = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("FAXExt");
                  OnFAXExtChanged();
              }
            }
        }
        private string _FAXExt = @" ";
        partial void OnGetFAXExt(ref string value);
        partial void OnFAXExtChanging(ref string value);
        partial void OnFAXExtChanged();
    
        /// <summary>
        /// There are no comments for FedID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string FedID
        {
            get
            {
                string value = _FedID;
                OnGetFedID(ref value);
                return value;
            }
            set
            {
                if (_FedID != value)
                {
                  OnFedIDChanging(ref value);
                  ReportPropertyChanging("FedID");
                  _FedID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("FedID");
                  OnFedIDChanged();
              }
            }
        }
        private string _FedID;
        partial void OnGetFedID(ref string value);
        partial void OnFedIDChanging(ref string value);
        partial void OnFedIDChanged();
    
        /// <summary>
        /// There are no comments for FullGL in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short FullGL
        {
            get
            {
                short value = _FullGL;
                OnGetFullGL(ref value);
                return value;
            }
            set
            {
                if (_FullGL != value)
                {
                  OnFullGLChanging(ref value);
                  ReportPropertyChanging("FullGL");
                  _FullGL = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FullGL");
                  OnFullGLChanged();
              }
            }
        }
        private short _FullGL = 0;
        partial void OnGetFullGL(ref short value);
        partial void OnFullGLChanging(ref short value);
        partial void OnFullGLChanged();
    
        /// <summary>
        /// There are no comments for IncludeInOLAP in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short IncludeInOLAP
        {
            get
            {
                short value = _IncludeInOLAP;
                OnGetIncludeInOLAP(ref value);
                return value;
            }
            set
            {
                if (_IncludeInOLAP != value)
                {
                  OnIncludeInOLAPChanging(ref value);
                  ReportPropertyChanging("IncludeInOLAP");
                  _IncludeInOLAP = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IncludeInOLAP");
                  OnIncludeInOLAPChanged();
              }
            }
        }
        private short _IncludeInOLAP = 0;
        partial void OnGetIncludeInOLAP(ref short value);
        partial void OnIncludeInOLAPChanging(ref short value);
        partial void OnIncludeInOLAPChanged();
    
        /// <summary>
        /// There are no comments for LastArchive in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? LastArchive
        {
            get
            {
                global::System.DateTime? value = _LastArchive;
                OnGetLastArchive(ref value);
                return value;
            }
            set
            {
                if (_LastArchive != value)
                {
                  OnLastArchiveChanging(ref value);
                  ReportPropertyChanging("LastArchive");
                  _LastArchive = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LastArchive");
                  OnLastArchiveChanged();
              }
            }
        }
        private global::System.DateTime? _LastArchive;
        partial void OnGetLastArchive(ref global::System.DateTime? value);
        partial void OnLastArchiveChanging(ref global::System.DateTime? value);
        partial void OnLastArchiveChanged();
    
        /// <summary>
        /// There are no comments for LastRecover in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? LastRecover
        {
            get
            {
                global::System.DateTime? value = _LastRecover;
                OnGetLastRecover(ref value);
                return value;
            }
            set
            {
                if (_LastRecover != value)
                {
                  OnLastRecoverChanging(ref value);
                  ReportPropertyChanging("LastRecover");
                  _LastRecover = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LastRecover");
                  OnLastRecoverChanged();
              }
            }
        }
        private global::System.DateTime? _LastRecover;
        partial void OnGetLastRecover(ref global::System.DateTime? value);
        partial void OnLastRecoverChanging(ref global::System.DateTime? value);
        partial void OnLastRecoverChanged();
    
        /// <summary>
        /// There are no comments for LogoBlobKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? LogoBlobKey
        {
            get
            {
                int? value = _LogoBlobKey;
                OnGetLogoBlobKey(ref value);
                return value;
            }
            set
            {
                if (_LogoBlobKey != value)
                {
                  OnLogoBlobKeyChanging(ref value);
                  ReportPropertyChanging("LogoBlobKey");
                  _LogoBlobKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LogoBlobKey");
                  OnLogoBlobKeyChanged();
              }
            }
        }
        private int? _LogoBlobKey;
        partial void OnGetLogoBlobKey(ref int? value);
        partial void OnLogoBlobKeyChanging(ref int? value);
        partial void OnLogoBlobKeyChanged();
    
        /// <summary>
        /// There are no comments for PathToArchive in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PathToArchive
        {
            get
            {
                string value = _PathToArchive;
                OnGetPathToArchive(ref value);
                return value;
            }
            set
            {
                if (_PathToArchive != value)
                {
                  OnPathToArchiveChanging(ref value);
                  ReportPropertyChanging("PathToArchive");
                  _PathToArchive = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PathToArchive");
                  OnPathToArchiveChanged();
              }
            }
        }
        private string _PathToArchive;
        partial void OnGetPathToArchive(ref string value);
        partial void OnPathToArchiveChanging(ref string value);
        partial void OnPathToArchiveChanged();
    
        /// <summary>
        /// There are no comments for PathToDBase in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PathToDBase
        {
            get
            {
                string value = _PathToDBase;
                OnGetPathToDBase(ref value);
                return value;
            }
            set
            {
                if (_PathToDBase != value)
                {
                  OnPathToDBaseChanging(ref value);
                  ReportPropertyChanging("PathToDBase");
                  _PathToDBase = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PathToDBase");
                  OnPathToDBaseChanged();
              }
            }
        }
        private string _PathToDBase;
        partial void OnGetPathToDBase(ref string value);
        partial void OnPathToDBaseChanging(ref string value);
        partial void OnPathToDBaseChanged();
    
        /// <summary>
        /// There are no comments for PathToLog in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PathToLog
        {
            get
            {
                string value = _PathToLog;
                OnGetPathToLog(ref value);
                return value;
            }
            set
            {
                if (_PathToLog != value)
                {
                  OnPathToLogChanging(ref value);
                  ReportPropertyChanging("PathToLog");
                  _PathToLog = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PathToLog");
                  OnPathToLogChanged();
              }
            }
        }
        private string _PathToLog;
        partial void OnGetPathToLog(ref string value);
        partial void OnPathToLogChanging(ref string value);
        partial void OnPathToLogChanged();
    
        /// <summary>
        /// There are no comments for Phone in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Phone
        {
            get
            {
                string value = _Phone;
                OnGetPhone(ref value);
                return value;
            }
            set
            {
                if (_Phone != value)
                {
                  OnPhoneChanging(ref value);
                  ReportPropertyChanging("Phone");
                  _Phone = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Phone");
                  OnPhoneChanged();
              }
            }
        }
        private string _Phone = @" ";
        partial void OnGetPhone(ref string value);
        partial void OnPhoneChanging(ref string value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// There are no comments for PhoneExt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PhoneExt
        {
            get
            {
                string value = _PhoneExt;
                OnGetPhoneExt(ref value);
                return value;
            }
            set
            {
                if (_PhoneExt != value)
                {
                  OnPhoneExtChanging(ref value);
                  ReportPropertyChanging("PhoneExt");
                  _PhoneExt = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PhoneExt");
                  OnPhoneExtChanged();
              }
            }
        }
        private string _PhoneExt = @" ";
        partial void OnGetPhoneExt(ref string value);
        partial void OnPhoneExtChanging(ref string value);
        partial void OnPhoneExtChanged();
    
        /// <summary>
        /// There are no comments for PostalCode in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PostalCode
        {
            get
            {
                string value = _PostalCode;
                OnGetPostalCode(ref value);
                return value;
            }
            set
            {
                if (_PostalCode != value)
                {
                  OnPostalCodeChanging(ref value);
                  ReportPropertyChanging("PostalCode");
                  _PostalCode = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PostalCode");
                  OnPostalCodeChanged();
              }
            }
        }
        private string _PostalCode = @" ";
        partial void OnGetPostalCode(ref string value);
        partial void OnPostalCodeChanging(ref string value);
        partial void OnPostalCodeChanged();
    
        /// <summary>
        /// There are no comments for StateID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string StateID
        {
            get
            {
                string value = _StateID;
                OnGetStateID(ref value);
                return value;
            }
            set
            {
                if (_StateID != value)
                {
                  OnStateIDChanging(ref value);
                  ReportPropertyChanging("StateID");
                  _StateID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("StateID");
                  OnStateIDChanged();
              }
            }
        }
        private string _StateID = @" ";
        partial void OnGetStateID(ref string value);
        partial void OnStateIDChanging(ref string value);
        partial void OnStateIDChanged();
    
        /// <summary>
        /// There are no comments for StateTaxID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string StateTaxID
        {
            get
            {
                string value = _StateTaxID;
                OnGetStateTaxID(ref value);
                return value;
            }
            set
            {
                if (_StateTaxID != value)
                {
                  OnStateTaxIDChanging(ref value);
                  ReportPropertyChanging("StateTaxID");
                  _StateTaxID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("StateTaxID");
                  OnStateTaxIDChanged();
              }
            }
        }
        private string _StateTaxID;
        partial void OnGetStateTaxID(ref string value);
        partial void OnStateTaxIDChanging(ref string value);
        partial void OnStateTaxIDChanged();
    
        /// <summary>
        /// There are no comments for UseMultLang in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short UseMultLang
        {
            get
            {
                short value = _UseMultLang;
                OnGetUseMultLang(ref value);
                return value;
            }
            set
            {
                if (_UseMultLang != value)
                {
                  OnUseMultLangChanging(ref value);
                  ReportPropertyChanging("UseMultLang");
                  _UseMultLang = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UseMultLang");
                  OnUseMultLangChanged();
              }
            }
        }
        private short _UseMultLang = 0;
        partial void OnGetUseMultLang(ref short value);
        partial void OnUseMultLangChanging(ref short value);
        partial void OnUseMultLangChanged();
    
        /// <summary>
        /// There are no comments for V1099CombStateFed in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short V1099CombStateFed
        {
            get
            {
                short value = _V1099CombStateFed;
                OnGetV1099CombStateFed(ref value);
                return value;
            }
            set
            {
                if (_V1099CombStateFed != value)
                {
                  OnV1099CombStateFedChanging(ref value);
                  ReportPropertyChanging("V1099CombStateFed");
                  _V1099CombStateFed = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("V1099CombStateFed");
                  OnV1099CombStateFedChanged();
              }
            }
        }
        private short _V1099CombStateFed = 0;
        partial void OnGetV1099CombStateFed(ref short value);
        partial void OnV1099CombStateFedChanging(ref short value);
        partial void OnV1099CombStateFedChanged();
    
        /// <summary>
        /// There are no comments for V1099PayerNameCtrl in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string V1099PayerNameCtrl
        {
            get
            {
                string value = _V1099PayerNameCtrl;
                OnGetV1099PayerNameCtrl(ref value);
                return value;
            }
            set
            {
                if (_V1099PayerNameCtrl != value)
                {
                  OnV1099PayerNameCtrlChanging(ref value);
                  ReportPropertyChanging("V1099PayerNameCtrl");
                  _V1099PayerNameCtrl = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("V1099PayerNameCtrl");
                  OnV1099PayerNameCtrlChanged();
              }
            }
        }
        private string _V1099PayerNameCtrl;
        partial void OnGetV1099PayerNameCtrl(ref string value);
        partial void OnV1099PayerNameCtrlChanging(ref string value);
        partial void OnV1099PayerNameCtrlChanged();
    
        /// <summary>
        /// There are no comments for V1099XmitCtrlCode in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string V1099XmitCtrlCode
        {
            get
            {
                string value = _V1099XmitCtrlCode;
                OnGetV1099XmitCtrlCode(ref value);
                return value;
            }
            set
            {
                if (_V1099XmitCtrlCode != value)
                {
                  OnV1099XmitCtrlCodeChanging(ref value);
                  ReportPropertyChanging("V1099XmitCtrlCode");
                  _V1099XmitCtrlCode = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("V1099XmitCtrlCode");
                  OnV1099XmitCtrlCodeChanged();
              }
            }
        }
        private string _V1099XmitCtrlCode;
        partial void OnGetV1099XmitCtrlCode(ref string value);
        partial void OnV1099XmitCtrlCodeChanging(ref string value);
        partial void OnV1099XmitCtrlCodeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for HomeCurrency in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Currency_Company", "HomeCurrency")]
        public virtual Currency HomeCurrency
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Currency>("Net4Sage.DataAccessModel.Currency_Company", "HomeCurrency").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Currency>("Net4Sage.DataAccessModel.Currency_Company", "HomeCurrency").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for HomeCurrency in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Currency> HomeCurrencyReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Currency>("Net4Sage.DataAccessModel.Currency_Company", "HomeCurrency");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Currency>("Net4Sage.DataAccessModel.Currency_Company", "HomeCurrency", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Currency>("Net4Sage.DataAccessModel.Currency_Company", "HomeCurrency").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Country in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Country_Company", "Country")]
        public virtual Country Country
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Country>("Net4Sage.DataAccessModel.Country_Company", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Country>("Net4Sage.DataAccessModel.Country_Company", "Country").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Country in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Country>("Net4Sage.DataAccessModel.Country_Company", "Country");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Country>("Net4Sage.DataAccessModel.Country_Company", "Country", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Country>("Net4Sage.DataAccessModel.Country_Company", "Country").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.CustomersClass in the schema.
    /// </summary>
    /// <KeyProperties>
    /// CustClassKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="CustomersClass")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustomersClass : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CustomersClass object.
        /// </summary>
        /// <param name="custClassKey">Initial value of CustClassKey.</param>
        /// <param name="acctsRecAcctKey">Initial value of AcctsRecAcctKey.</param>
        /// <param name="allowCustRefund">Initial value of AllowCustRefund.</param>
        /// <param name="allowInvtSubst">Initial value of AllowInvtSubst.</param>
        /// <param name="allowWriteOff">Initial value of AllowWriteOff.</param>
        /// <param name="badDebtAcctKey">Initial value of BadDebtAcctKey.</param>
        /// <param name="billingType">Initial value of BillingType.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="createType">Initial value of CreateType.</param>
        /// <param name="creditLimit">Initial value of CreditLimit.</param>
        /// <param name="creditLimitAgeCat">Initial value of CreditLimitAgeCat.</param>
        /// <param name="custClassID">Initial value of CustClassID.</param>
        /// <param name="discTakenAcctKey">Initial value of DiscTakenAcctKey.</param>
        /// <param name="finChgFlatAmt">Initial value of FinChgFlatAmt.</param>
        /// <param name="languageID">Initial value of LanguageID.</param>
        /// <param name="printDunnMsg">Initial value of PrintDunnMsg.</param>
        /// <param name="reqPO">Initial value of ReqPO.</param>
        /// <param name="requireSOAck">Initial value of RequireSOAck.</param>
        /// <param name="shipComplete">Initial value of ShipComplete.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        /// <param name="writeOffAcctKey">Initial value of WriteOffAcctKey.</param>
        public static CustomersClass CreateCustomersClass(int custClassKey, int acctsRecAcctKey, short allowCustRefund, short allowInvtSubst, short allowWriteOff, int badDebtAcctKey, short billingType, string companyID, short createType, decimal creditLimit, short creditLimitAgeCat, string custClassID, int discTakenAcctKey, decimal finChgFlatAmt, int languageID, short printDunnMsg, short reqPO, short requireSOAck, short shipComplete, int updateCounter, int writeOffAcctKey)
        {
            CustomersClass customersClass = new CustomersClass();
            customersClass.CustClassKey = custClassKey;
            customersClass.AcctsRecAcctKey = acctsRecAcctKey;
            customersClass.AllowCustRefund = allowCustRefund;
            customersClass.AllowInvtSubst = allowInvtSubst;
            customersClass.AllowWriteOff = allowWriteOff;
            customersClass.BadDebtAcctKey = badDebtAcctKey;
            customersClass.BillingType = billingType;
            customersClass.CompanyID = companyID;
            customersClass.CreateType = createType;
            customersClass.CreditLimit = creditLimit;
            customersClass.CreditLimitAgeCat = creditLimitAgeCat;
            customersClass.CustClassID = custClassID;
            customersClass.DiscTakenAcctKey = discTakenAcctKey;
            customersClass.FinChgFlatAmt = finChgFlatAmt;
            customersClass.LanguageID = languageID;
            customersClass.PrintDunnMsg = printDunnMsg;
            customersClass.ReqPO = reqPO;
            customersClass.RequireSOAck = requireSOAck;
            customersClass.ShipComplete = shipComplete;
            customersClass.UpdateCounter = updateCounter;
            customersClass.WriteOffAcctKey = writeOffAcctKey;
            return customersClass;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for CustClassKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustClassKey
        {
            get
            {
                int value = _CustClassKey;
                OnGetCustClassKey(ref value);
                return value;
            }
            set
            {
                if (_CustClassKey != value)
                {
                  OnCustClassKeyChanging(ref value);
                  ReportPropertyChanging("CustClassKey");
                  _CustClassKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustClassKey");
                  OnCustClassKeyChanged();
              }
            }
        }
        private int _CustClassKey;
        partial void OnGetCustClassKey(ref int value);
        partial void OnCustClassKeyChanging(ref int value);
        partial void OnCustClassKeyChanged();
    
        /// <summary>
        /// There are no comments for AcctsRecAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int AcctsRecAcctKey
        {
            get
            {
                int value = _AcctsRecAcctKey;
                OnGetAcctsRecAcctKey(ref value);
                return value;
            }
            set
            {
                if (_AcctsRecAcctKey != value)
                {
                  OnAcctsRecAcctKeyChanging(ref value);
                  ReportPropertyChanging("AcctsRecAcctKey");
                  _AcctsRecAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AcctsRecAcctKey");
                  OnAcctsRecAcctKeyChanged();
              }
            }
        }
        private int _AcctsRecAcctKey;
        partial void OnGetAcctsRecAcctKey(ref int value);
        partial void OnAcctsRecAcctKeyChanging(ref int value);
        partial void OnAcctsRecAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for AllowCustRefund in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short AllowCustRefund
        {
            get
            {
                short value = _AllowCustRefund;
                OnGetAllowCustRefund(ref value);
                return value;
            }
            set
            {
                if (_AllowCustRefund != value)
                {
                  OnAllowCustRefundChanging(ref value);
                  ReportPropertyChanging("AllowCustRefund");
                  _AllowCustRefund = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AllowCustRefund");
                  OnAllowCustRefundChanged();
              }
            }
        }
        private short _AllowCustRefund = 0;
        partial void OnGetAllowCustRefund(ref short value);
        partial void OnAllowCustRefundChanging(ref short value);
        partial void OnAllowCustRefundChanged();
    
        /// <summary>
        /// There are no comments for AllowInvtSubst in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short AllowInvtSubst
        {
            get
            {
                short value = _AllowInvtSubst;
                OnGetAllowInvtSubst(ref value);
                return value;
            }
            set
            {
                if (_AllowInvtSubst != value)
                {
                  OnAllowInvtSubstChanging(ref value);
                  ReportPropertyChanging("AllowInvtSubst");
                  _AllowInvtSubst = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AllowInvtSubst");
                  OnAllowInvtSubstChanged();
              }
            }
        }
        private short _AllowInvtSubst = 0;
        partial void OnGetAllowInvtSubst(ref short value);
        partial void OnAllowInvtSubstChanging(ref short value);
        partial void OnAllowInvtSubstChanged();
    
        /// <summary>
        /// There are no comments for AllowWriteOff in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short AllowWriteOff
        {
            get
            {
                short value = _AllowWriteOff;
                OnGetAllowWriteOff(ref value);
                return value;
            }
            set
            {
                if (_AllowWriteOff != value)
                {
                  OnAllowWriteOffChanging(ref value);
                  ReportPropertyChanging("AllowWriteOff");
                  _AllowWriteOff = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AllowWriteOff");
                  OnAllowWriteOffChanged();
              }
            }
        }
        private short _AllowWriteOff = 0;
        partial void OnGetAllowWriteOff(ref short value);
        partial void OnAllowWriteOffChanging(ref short value);
        partial void OnAllowWriteOffChanged();
    
        /// <summary>
        /// There are no comments for BadDebtAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int BadDebtAcctKey
        {
            get
            {
                int value = _BadDebtAcctKey;
                OnGetBadDebtAcctKey(ref value);
                return value;
            }
            set
            {
                if (_BadDebtAcctKey != value)
                {
                  OnBadDebtAcctKeyChanging(ref value);
                  ReportPropertyChanging("BadDebtAcctKey");
                  _BadDebtAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BadDebtAcctKey");
                  OnBadDebtAcctKeyChanged();
              }
            }
        }
        private int _BadDebtAcctKey;
        partial void OnGetBadDebtAcctKey(ref int value);
        partial void OnBadDebtAcctKeyChanging(ref int value);
        partial void OnBadDebtAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for BillingType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short BillingType
        {
            get
            {
                short value = _BillingType;
                OnGetBillingType(ref value);
                return value;
            }
            set
            {
                if (_BillingType != value)
                {
                  OnBillingTypeChanging(ref value);
                  ReportPropertyChanging("BillingType");
                  _BillingType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BillingType");
                  OnBillingTypeChanged();
              }
            }
        }
        private short _BillingType = 1;
        partial void OnGetBillingType(ref short value);
        partial void OnBillingTypeChanging(ref short value);
        partial void OnBillingTypeChanged();
    
        /// <summary>
        /// There are no comments for ClassOvrdSegValue in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ClassOvrdSegValue
        {
            get
            {
                string value = _ClassOvrdSegValue;
                OnGetClassOvrdSegValue(ref value);
                return value;
            }
            set
            {
                if (_ClassOvrdSegValue != value)
                {
                  OnClassOvrdSegValueChanging(ref value);
                  ReportPropertyChanging("ClassOvrdSegValue");
                  _ClassOvrdSegValue = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ClassOvrdSegValue");
                  OnClassOvrdSegValueChanged();
              }
            }
        }
        private string _ClassOvrdSegValue;
        partial void OnGetClassOvrdSegValue(ref string value);
        partial void OnClassOvrdSegValueChanging(ref string value);
        partial void OnClassOvrdSegValueChanged();
    
        /// <summary>
        /// There are no comments for CommExpAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CommExpAcctKey
        {
            get
            {
                int? value = _CommExpAcctKey;
                OnGetCommExpAcctKey(ref value);
                return value;
            }
            set
            {
                if (_CommExpAcctKey != value)
                {
                  OnCommExpAcctKeyChanging(ref value);
                  ReportPropertyChanging("CommExpAcctKey");
                  _CommExpAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CommExpAcctKey");
                  OnCommExpAcctKeyChanged();
              }
            }
        }
        private int? _CommExpAcctKey;
        partial void OnGetCommExpAcctKey(ref int? value);
        partial void OnCommExpAcctKeyChanging(ref int? value);
        partial void OnCommExpAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for CommPayableAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CommPayableAcctKey
        {
            get
            {
                int? value = _CommPayableAcctKey;
                OnGetCommPayableAcctKey(ref value);
                return value;
            }
            set
            {
                if (_CommPayableAcctKey != value)
                {
                  OnCommPayableAcctKeyChanging(ref value);
                  ReportPropertyChanging("CommPayableAcctKey");
                  _CommPayableAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CommPayableAcctKey");
                  OnCommPayableAcctKeyChanged();
              }
            }
        }
        private int? _CommPayableAcctKey;
        partial void OnGetCommPayableAcctKey(ref int? value);
        partial void OnCommPayableAcctKeyChanging(ref int? value);
        partial void OnCommPayableAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for CreateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CreateDate
        {
            get
            {
                global::System.DateTime? value = _CreateDate;
                OnGetCreateDate(ref value);
                return value;
            }
            set
            {
                if (_CreateDate != value)
                {
                  OnCreateDateChanging(ref value);
                  ReportPropertyChanging("CreateDate");
                  _CreateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateDate");
                  OnCreateDateChanged();
              }
            }
        }
        private global::System.DateTime? _CreateDate;
        partial void OnGetCreateDate(ref global::System.DateTime? value);
        partial void OnCreateDateChanging(ref global::System.DateTime? value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// There are no comments for CreateType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CreateType
        {
            get
            {
                short value = _CreateType;
                OnGetCreateType(ref value);
                return value;
            }
            set
            {
                if (_CreateType != value)
                {
                  OnCreateTypeChanging(ref value);
                  ReportPropertyChanging("CreateType");
                  _CreateType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateType");
                  OnCreateTypeChanged();
              }
            }
        }
        private short _CreateType = 0;
        partial void OnGetCreateType(ref short value);
        partial void OnCreateTypeChanging(ref short value);
        partial void OnCreateTypeChanged();
    
        /// <summary>
        /// There are no comments for CreateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CreateUserID
        {
            get
            {
                string value = _CreateUserID;
                OnGetCreateUserID(ref value);
                return value;
            }
            set
            {
                if (_CreateUserID != value)
                {
                  OnCreateUserIDChanging(ref value);
                  ReportPropertyChanging("CreateUserID");
                  _CreateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CreateUserID");
                  OnCreateUserIDChanged();
              }
            }
        }
        private string _CreateUserID;
        partial void OnGetCreateUserID(ref string value);
        partial void OnCreateUserIDChanging(ref string value);
        partial void OnCreateUserIDChanged();
    
        /// <summary>
        /// There are no comments for CreditLimit in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal CreditLimit
        {
            get
            {
                decimal value = _CreditLimit;
                OnGetCreditLimit(ref value);
                return value;
            }
            set
            {
                if (_CreditLimit != value)
                {
                  OnCreditLimitChanging(ref value);
                  ReportPropertyChanging("CreditLimit");
                  _CreditLimit = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreditLimit");
                  OnCreditLimitChanged();
              }
            }
        }
        private decimal _CreditLimit = 0m;
        partial void OnGetCreditLimit(ref decimal value);
        partial void OnCreditLimitChanging(ref decimal value);
        partial void OnCreditLimitChanged();
    
        /// <summary>
        /// There are no comments for CreditLimitAgeCat in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CreditLimitAgeCat
        {
            get
            {
                short value = _CreditLimitAgeCat;
                OnGetCreditLimitAgeCat(ref value);
                return value;
            }
            set
            {
                if (_CreditLimitAgeCat != value)
                {
                  OnCreditLimitAgeCatChanging(ref value);
                  ReportPropertyChanging("CreditLimitAgeCat");
                  _CreditLimitAgeCat = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreditLimitAgeCat");
                  OnCreditLimitAgeCatChanged();
              }
            }
        }
        private short _CreditLimitAgeCat = 0;
        partial void OnGetCreditLimitAgeCat(ref short value);
        partial void OnCreditLimitAgeCatChanging(ref short value);
        partial void OnCreditLimitAgeCatChanged();
    
        /// <summary>
        /// There are no comments for CurrID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CurrID
        {
            get
            {
                string value = _CurrID;
                OnGetCurrID(ref value);
                return value;
            }
            set
            {
                if (_CurrID != value)
                {
                  OnCurrIDChanging(ref value);
                  ReportPropertyChanging("CurrID");
                  _CurrID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CurrID");
                  OnCurrIDChanged();
              }
            }
        }
        private string _CurrID;
        partial void OnGetCurrID(ref string value);
        partial void OnCurrIDChanging(ref string value);
        partial void OnCurrIDChanged();
    
        /// <summary>
        /// There are no comments for CustClassID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CustClassID
        {
            get
            {
                string value = _CustClassID;
                OnGetCustClassID(ref value);
                return value;
            }
            set
            {
                if (_CustClassID != value)
                {
                  OnCustClassIDChanging(ref value);
                  ReportPropertyChanging("CustClassID");
                  _CustClassID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CustClassID");
                  OnCustClassIDChanged();
              }
            }
        }
        private string _CustClassID;
        partial void OnGetCustClassID(ref string value);
        partial void OnCustClassIDChanging(ref string value);
        partial void OnCustClassIDChanged();
    
        /// <summary>
        /// There are no comments for CustClassName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CustClassName
        {
            get
            {
                string value = _CustClassName;
                OnGetCustClassName(ref value);
                return value;
            }
            set
            {
                if (_CustClassName != value)
                {
                  OnCustClassNameChanging(ref value);
                  ReportPropertyChanging("CustClassName");
                  _CustClassName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CustClassName");
                  OnCustClassNameChanged();
              }
            }
        }
        private string _CustClassName;
        partial void OnGetCustClassName(ref string value);
        partial void OnCustClassNameChanging(ref string value);
        partial void OnCustClassNameChanged();
    
        /// <summary>
        /// There are no comments for DfltSalesAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? DfltSalesAcctKey
        {
            get
            {
                int? value = _DfltSalesAcctKey;
                OnGetDfltSalesAcctKey(ref value);
                return value;
            }
            set
            {
                if (_DfltSalesAcctKey != value)
                {
                  OnDfltSalesAcctKeyChanging(ref value);
                  ReportPropertyChanging("DfltSalesAcctKey");
                  _DfltSalesAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltSalesAcctKey");
                  OnDfltSalesAcctKeyChanged();
              }
            }
        }
        private int? _DfltSalesAcctKey;
        partial void OnGetDfltSalesAcctKey(ref int? value);
        partial void OnDfltSalesAcctKeyChanging(ref int? value);
        partial void OnDfltSalesAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for DiscTakenAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int DiscTakenAcctKey
        {
            get
            {
                int value = _DiscTakenAcctKey;
                OnGetDiscTakenAcctKey(ref value);
                return value;
            }
            set
            {
                if (_DiscTakenAcctKey != value)
                {
                  OnDiscTakenAcctKeyChanging(ref value);
                  ReportPropertyChanging("DiscTakenAcctKey");
                  _DiscTakenAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DiscTakenAcctKey");
                  OnDiscTakenAcctKeyChanged();
              }
            }
        }
        private int _DiscTakenAcctKey;
        partial void OnGetDiscTakenAcctKey(ref int value);
        partial void OnDiscTakenAcctKeyChanging(ref int value);
        partial void OnDiscTakenAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for FinChgAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? FinChgAcctKey
        {
            get
            {
                int? value = _FinChgAcctKey;
                OnGetFinChgAcctKey(ref value);
                return value;
            }
            set
            {
                if (_FinChgAcctKey != value)
                {
                  OnFinChgAcctKeyChanging(ref value);
                  ReportPropertyChanging("FinChgAcctKey");
                  _FinChgAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FinChgAcctKey");
                  OnFinChgAcctKeyChanged();
              }
            }
        }
        private int? _FinChgAcctKey;
        partial void OnGetFinChgAcctKey(ref int? value);
        partial void OnFinChgAcctKeyChanging(ref int? value);
        partial void OnFinChgAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for FinChgFlatAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal FinChgFlatAmt
        {
            get
            {
                decimal value = _FinChgFlatAmt;
                OnGetFinChgFlatAmt(ref value);
                return value;
            }
            set
            {
                if (_FinChgFlatAmt != value)
                {
                  OnFinChgFlatAmtChanging(ref value);
                  ReportPropertyChanging("FinChgFlatAmt");
                  _FinChgFlatAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FinChgFlatAmt");
                  OnFinChgFlatAmtChanged();
              }
            }
        }
        private decimal _FinChgFlatAmt = 0m;
        partial void OnGetFinChgFlatAmt(ref decimal value);
        partial void OnFinChgFlatAmtChanging(ref decimal value);
        partial void OnFinChgFlatAmtChanged();
    
        /// <summary>
        /// There are no comments for FinChgPct in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? FinChgPct
        {
            get
            {
                decimal? value = _FinChgPct;
                OnGetFinChgPct(ref value);
                return value;
            }
            set
            {
                if (_FinChgPct != value)
                {
                  OnFinChgPctChanging(ref value);
                  ReportPropertyChanging("FinChgPct");
                  _FinChgPct = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FinChgPct");
                  OnFinChgPctChanged();
              }
            }
        }
        private decimal? _FinChgPct = 0m;
        partial void OnGetFinChgPct(ref decimal? value);
        partial void OnFinChgPctChanging(ref decimal? value);
        partial void OnFinChgPctChanged();
    
        /// <summary>
        /// There are no comments for FOBKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? FOBKey
        {
            get
            {
                int? value = _FOBKey;
                OnGetFOBKey(ref value);
                return value;
            }
            set
            {
                if (_FOBKey != value)
                {
                  OnFOBKeyChanging(ref value);
                  ReportPropertyChanging("FOBKey");
                  _FOBKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FOBKey");
                  OnFOBKeyChanged();
              }
            }
        }
        private int? _FOBKey;
        partial void OnGetFOBKey(ref int? value);
        partial void OnFOBKeyChanging(ref int? value);
        partial void OnFOBKeyChanged();
    
        /// <summary>
        /// There are no comments for InvcFormKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? InvcFormKey
        {
            get
            {
                int? value = _InvcFormKey;
                OnGetInvcFormKey(ref value);
                return value;
            }
            set
            {
                if (_InvcFormKey != value)
                {
                  OnInvcFormKeyChanging(ref value);
                  ReportPropertyChanging("InvcFormKey");
                  _InvcFormKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvcFormKey");
                  OnInvcFormKeyChanged();
              }
            }
        }
        private int? _InvcFormKey;
        partial void OnGetInvcFormKey(ref int? value);
        partial void OnInvcFormKeyChanging(ref int? value);
        partial void OnInvcFormKeyChanged();
    
        /// <summary>
        /// There are no comments for InvcMsg in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string InvcMsg
        {
            get
            {
                string value = _InvcMsg;
                OnGetInvcMsg(ref value);
                return value;
            }
            set
            {
                if (_InvcMsg != value)
                {
                  OnInvcMsgChanging(ref value);
                  ReportPropertyChanging("InvcMsg");
                  _InvcMsg = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("InvcMsg");
                  OnInvcMsgChanged();
              }
            }
        }
        private string _InvcMsg;
        partial void OnGetInvcMsg(ref string value);
        partial void OnInvcMsgChanging(ref string value);
        partial void OnInvcMsgChanged();
    
        /// <summary>
        /// There are no comments for LanguageID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int LanguageID
        {
            get
            {
                int value = _LanguageID;
                OnGetLanguageID(ref value);
                return value;
            }
            set
            {
                if (_LanguageID != value)
                {
                  OnLanguageIDChanging(ref value);
                  ReportPropertyChanging("LanguageID");
                  _LanguageID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LanguageID");
                  OnLanguageIDChanged();
              }
            }
        }
        private int _LanguageID;
        partial void OnGetLanguageID(ref int value);
        partial void OnLanguageIDChanging(ref int value);
        partial void OnLanguageIDChanged();
    
        /// <summary>
        /// There are no comments for PmtTermsKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? PmtTermsKey
        {
            get
            {
                int? value = _PmtTermsKey;
                OnGetPmtTermsKey(ref value);
                return value;
            }
            set
            {
                if (_PmtTermsKey != value)
                {
                  OnPmtTermsKeyChanging(ref value);
                  ReportPropertyChanging("PmtTermsKey");
                  _PmtTermsKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PmtTermsKey");
                  OnPmtTermsKeyChanged();
              }
            }
        }
        private int? _PmtTermsKey;
        partial void OnGetPmtTermsKey(ref int? value);
        partial void OnPmtTermsKeyChanging(ref int? value);
        partial void OnPmtTermsKeyChanged();
    
        /// <summary>
        /// There are no comments for PrintDunnMsg in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PrintDunnMsg
        {
            get
            {
                short value = _PrintDunnMsg;
                OnGetPrintDunnMsg(ref value);
                return value;
            }
            set
            {
                if (_PrintDunnMsg != value)
                {
                  OnPrintDunnMsgChanging(ref value);
                  ReportPropertyChanging("PrintDunnMsg");
                  _PrintDunnMsg = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PrintDunnMsg");
                  OnPrintDunnMsgChanged();
              }
            }
        }
        private short _PrintDunnMsg = 0;
        partial void OnGetPrintDunnMsg(ref short value);
        partial void OnPrintDunnMsgChanging(ref short value);
        partial void OnPrintDunnMsgChanged();
    
        /// <summary>
        /// There are no comments for RefundAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? RefundAcctKey
        {
            get
            {
                int? value = _RefundAcctKey;
                OnGetRefundAcctKey(ref value);
                return value;
            }
            set
            {
                if (_RefundAcctKey != value)
                {
                  OnRefundAcctKeyChanging(ref value);
                  ReportPropertyChanging("RefundAcctKey");
                  _RefundAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RefundAcctKey");
                  OnRefundAcctKeyChanged();
              }
            }
        }
        private int? _RefundAcctKey;
        partial void OnGetRefundAcctKey(ref int? value);
        partial void OnRefundAcctKeyChanging(ref int? value);
        partial void OnRefundAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for ReqPO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ReqPO
        {
            get
            {
                short value = _ReqPO;
                OnGetReqPO(ref value);
                return value;
            }
            set
            {
                if (_ReqPO != value)
                {
                  OnReqPOChanging(ref value);
                  ReportPropertyChanging("ReqPO");
                  _ReqPO = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ReqPO");
                  OnReqPOChanged();
              }
            }
        }
        private short _ReqPO = 0;
        partial void OnGetReqPO(ref short value);
        partial void OnReqPOChanging(ref short value);
        partial void OnReqPOChanged();
    
        /// <summary>
        /// There are no comments for RequireSOAck in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short RequireSOAck
        {
            get
            {
                short value = _RequireSOAck;
                OnGetRequireSOAck(ref value);
                return value;
            }
            set
            {
                if (_RequireSOAck != value)
                {
                  OnRequireSOAckChanging(ref value);
                  ReportPropertyChanging("RequireSOAck");
                  _RequireSOAck = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RequireSOAck");
                  OnRequireSOAckChanged();
              }
            }
        }
        private short _RequireSOAck = 0;
        partial void OnGetRequireSOAck(ref short value);
        partial void OnRequireSOAckChanging(ref short value);
        partial void OnRequireSOAckChanged();
    
        /// <summary>
        /// There are no comments for RetntPct in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? RetntPct
        {
            get
            {
                decimal? value = _RetntPct;
                OnGetRetntPct(ref value);
                return value;
            }
            set
            {
                if (_RetntPct != value)
                {
                  OnRetntPctChanging(ref value);
                  ReportPropertyChanging("RetntPct");
                  _RetntPct = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RetntPct");
                  OnRetntPctChanged();
              }
            }
        }
        private decimal? _RetntPct = 0m;
        partial void OnGetRetntPct(ref decimal? value);
        partial void OnRetntPctChanging(ref decimal? value);
        partial void OnRetntPctChanged();
    
        /// <summary>
        /// There are no comments for RetntRecAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? RetntRecAcctKey
        {
            get
            {
                int? value = _RetntRecAcctKey;
                OnGetRetntRecAcctKey(ref value);
                return value;
            }
            set
            {
                if (_RetntRecAcctKey != value)
                {
                  OnRetntRecAcctKeyChanging(ref value);
                  ReportPropertyChanging("RetntRecAcctKey");
                  _RetntRecAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RetntRecAcctKey");
                  OnRetntRecAcctKeyChanged();
              }
            }
        }
        private int? _RetntRecAcctKey;
        partial void OnGetRetntRecAcctKey(ref int? value);
        partial void OnRetntRecAcctKeyChanging(ref int? value);
        partial void OnRetntRecAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for SalesReturnAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? SalesReturnAcctKey
        {
            get
            {
                int? value = _SalesReturnAcctKey;
                OnGetSalesReturnAcctKey(ref value);
                return value;
            }
            set
            {
                if (_SalesReturnAcctKey != value)
                {
                  OnSalesReturnAcctKeyChanging(ref value);
                  ReportPropertyChanging("SalesReturnAcctKey");
                  _SalesReturnAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesReturnAcctKey");
                  OnSalesReturnAcctKeyChanged();
              }
            }
        }
        private int? _SalesReturnAcctKey;
        partial void OnGetSalesReturnAcctKey(ref int? value);
        partial void OnSalesReturnAcctKeyChanging(ref int? value);
        partial void OnSalesReturnAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for ShipComplete in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ShipComplete
        {
            get
            {
                short value = _ShipComplete;
                OnGetShipComplete(ref value);
                return value;
            }
            set
            {
                if (_ShipComplete != value)
                {
                  OnShipCompleteChanging(ref value);
                  ReportPropertyChanging("ShipComplete");
                  _ShipComplete = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipComplete");
                  OnShipCompleteChanged();
              }
            }
        }
        private short _ShipComplete = 0;
        partial void OnGetShipComplete(ref short value);
        partial void OnShipCompleteChanging(ref short value);
        partial void OnShipCompleteChanged();
    
        /// <summary>
        /// There are no comments for ShipLabelFormKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ShipLabelFormKey
        {
            get
            {
                int? value = _ShipLabelFormKey;
                OnGetShipLabelFormKey(ref value);
                return value;
            }
            set
            {
                if (_ShipLabelFormKey != value)
                {
                  OnShipLabelFormKeyChanging(ref value);
                  ReportPropertyChanging("ShipLabelFormKey");
                  _ShipLabelFormKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipLabelFormKey");
                  OnShipLabelFormKeyChanged();
              }
            }
        }
        private int? _ShipLabelFormKey;
        partial void OnGetShipLabelFormKey(ref int? value);
        partial void OnShipLabelFormKeyChanging(ref int? value);
        partial void OnShipLabelFormKeyChanged();
    
        /// <summary>
        /// There are no comments for ShipMethKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ShipMethKey
        {
            get
            {
                int? value = _ShipMethKey;
                OnGetShipMethKey(ref value);
                return value;
            }
            set
            {
                if (_ShipMethKey != value)
                {
                  OnShipMethKeyChanging(ref value);
                  ReportPropertyChanging("ShipMethKey");
                  _ShipMethKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipMethKey");
                  OnShipMethKeyChanged();
              }
            }
        }
        private int? _ShipMethKey;
        partial void OnGetShipMethKey(ref int? value);
        partial void OnShipMethKeyChanging(ref int? value);
        partial void OnShipMethKeyChanged();
    
        /// <summary>
        /// There are no comments for SOAckFormKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? SOAckFormKey
        {
            get
            {
                int? value = _SOAckFormKey;
                OnGetSOAckFormKey(ref value);
                return value;
            }
            set
            {
                if (_SOAckFormKey != value)
                {
                  OnSOAckFormKeyChanging(ref value);
                  ReportPropertyChanging("SOAckFormKey");
                  _SOAckFormKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SOAckFormKey");
                  OnSOAckFormKeyChanged();
              }
            }
        }
        private int? _SOAckFormKey;
        partial void OnGetSOAckFormKey(ref int? value);
        partial void OnSOAckFormKeyChanging(ref int? value);
        partial void OnSOAckFormKeyChanged();
    
        /// <summary>
        /// There are no comments for SperKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? SperKey
        {
            get
            {
                int? value = _SperKey;
                OnGetSperKey(ref value);
                return value;
            }
            set
            {
                if (_SperKey != value)
                {
                  OnSperKeyChanging(ref value);
                  ReportPropertyChanging("SperKey");
                  _SperKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SperKey");
                  OnSperKeyChanged();
              }
            }
        }
        private int? _SperKey;
        partial void OnGetSperKey(ref int? value);
        partial void OnSperKeyChanging(ref int? value);
        partial void OnSperKeyChanged();
    
        /// <summary>
        /// There are no comments for STaxAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? STaxAcctKey
        {
            get
            {
                int? value = _STaxAcctKey;
                OnGetSTaxAcctKey(ref value);
                return value;
            }
            set
            {
                if (_STaxAcctKey != value)
                {
                  OnSTaxAcctKeyChanging(ref value);
                  ReportPropertyChanging("STaxAcctKey");
                  _STaxAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("STaxAcctKey");
                  OnSTaxAcctKeyChanged();
              }
            }
        }
        private int? _STaxAcctKey;
        partial void OnGetSTaxAcctKey(ref int? value);
        partial void OnSTaxAcctKeyChanging(ref int? value);
        partial void OnSTaxAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for STaxSchdKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? STaxSchdKey
        {
            get
            {
                int? value = _STaxSchdKey;
                OnGetSTaxSchdKey(ref value);
                return value;
            }
            set
            {
                if (_STaxSchdKey != value)
                {
                  OnSTaxSchdKeyChanging(ref value);
                  ReportPropertyChanging("STaxSchdKey");
                  _STaxSchdKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("STaxSchdKey");
                  OnSTaxSchdKeyChanged();
              }
            }
        }
        private int? _STaxSchdKey;
        partial void OnGetSTaxSchdKey(ref int? value);
        partial void OnSTaxSchdKeyChanging(ref int? value);
        partial void OnSTaxSchdKeyChanged();
    
        /// <summary>
        /// There are no comments for StmtCycleKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? StmtCycleKey
        {
            get
            {
                int? value = _StmtCycleKey;
                OnGetStmtCycleKey(ref value);
                return value;
            }
            set
            {
                if (_StmtCycleKey != value)
                {
                  OnStmtCycleKeyChanging(ref value);
                  ReportPropertyChanging("StmtCycleKey");
                  _StmtCycleKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("StmtCycleKey");
                  OnStmtCycleKeyChanged();
              }
            }
        }
        private int? _StmtCycleKey;
        partial void OnGetStmtCycleKey(ref int? value);
        partial void OnStmtCycleKeyChanging(ref int? value);
        partial void OnStmtCycleKeyChanged();
    
        /// <summary>
        /// There are no comments for StmtFormKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? StmtFormKey
        {
            get
            {
                int? value = _StmtFormKey;
                OnGetStmtFormKey(ref value);
                return value;
            }
            set
            {
                if (_StmtFormKey != value)
                {
                  OnStmtFormKeyChanging(ref value);
                  ReportPropertyChanging("StmtFormKey");
                  _StmtFormKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("StmtFormKey");
                  OnStmtFormKeyChanged();
              }
            }
        }
        private int? _StmtFormKey;
        partial void OnGetStmtFormKey(ref int? value);
        partial void OnStmtFormKeyChanging(ref int? value);
        partial void OnStmtFormKeyChanged();
    
        /// <summary>
        /// There are no comments for TradeDiscAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? TradeDiscAcctKey
        {
            get
            {
                int? value = _TradeDiscAcctKey;
                OnGetTradeDiscAcctKey(ref value);
                return value;
            }
            set
            {
                if (_TradeDiscAcctKey != value)
                {
                  OnTradeDiscAcctKeyChanging(ref value);
                  ReportPropertyChanging("TradeDiscAcctKey");
                  _TradeDiscAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TradeDiscAcctKey");
                  OnTradeDiscAcctKeyChanged();
              }
            }
        }
        private int? _TradeDiscAcctKey;
        partial void OnGetTradeDiscAcctKey(ref int? value);
        partial void OnTradeDiscAcctKeyChanging(ref int? value);
        partial void OnTradeDiscAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for TradeDiscPct in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? TradeDiscPct
        {
            get
            {
                decimal? value = _TradeDiscPct;
                OnGetTradeDiscPct(ref value);
                return value;
            }
            set
            {
                if (_TradeDiscPct != value)
                {
                  OnTradeDiscPctChanging(ref value);
                  ReportPropertyChanging("TradeDiscPct");
                  _TradeDiscPct = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TradeDiscPct");
                  OnTradeDiscPctChanged();
              }
            }
        }
        private decimal? _TradeDiscPct = 0m;
        partial void OnGetTradeDiscPct(ref decimal? value);
        partial void OnTradeDiscPctChanging(ref decimal? value);
        partial void OnTradeDiscPctChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();
    
        /// <summary>
        /// There are no comments for UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? UpdateDate
        {
            get
            {
                global::System.DateTime? value = _UpdateDate;
                OnGetUpdateDate(ref value);
                return value;
            }
            set
            {
                if (_UpdateDate != value)
                {
                  OnUpdateDateChanging(ref value);
                  ReportPropertyChanging("UpdateDate");
                  _UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateDate");
                  OnUpdateDateChanged();
              }
            }
        }
        private global::System.DateTime? _UpdateDate;
        partial void OnGetUpdateDate(ref global::System.DateTime? value);
        partial void OnUpdateDateChanging(ref global::System.DateTime? value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// There are no comments for UpdateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UpdateUserID
        {
            get
            {
                string value = _UpdateUserID;
                OnGetUpdateUserID(ref value);
                return value;
            }
            set
            {
                if (_UpdateUserID != value)
                {
                  OnUpdateUserIDChanging(ref value);
                  ReportPropertyChanging("UpdateUserID");
                  _UpdateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UpdateUserID");
                  OnUpdateUserIDChanged();
              }
            }
        }
        private string _UpdateUserID;
        partial void OnGetUpdateUserID(ref string value);
        partial void OnUpdateUserIDChanging(ref string value);
        partial void OnUpdateUserIDChanged();
    
        /// <summary>
        /// There are no comments for UserFld1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld1
        {
            get
            {
                string value = _UserFld1;
                OnGetUserFld1(ref value);
                return value;
            }
            set
            {
                if (_UserFld1 != value)
                {
                  OnUserFld1Changing(ref value);
                  ReportPropertyChanging("UserFld1");
                  _UserFld1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld1");
                  OnUserFld1Changed();
              }
            }
        }
        private string _UserFld1;
        partial void OnGetUserFld1(ref string value);
        partial void OnUserFld1Changing(ref string value);
        partial void OnUserFld1Changed();
    
        /// <summary>
        /// There are no comments for UserFld2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld2
        {
            get
            {
                string value = _UserFld2;
                OnGetUserFld2(ref value);
                return value;
            }
            set
            {
                if (_UserFld2 != value)
                {
                  OnUserFld2Changing(ref value);
                  ReportPropertyChanging("UserFld2");
                  _UserFld2 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld2");
                  OnUserFld2Changed();
              }
            }
        }
        private string _UserFld2;
        partial void OnGetUserFld2(ref string value);
        partial void OnUserFld2Changing(ref string value);
        partial void OnUserFld2Changed();
    
        /// <summary>
        /// There are no comments for UserFld3 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld3
        {
            get
            {
                string value = _UserFld3;
                OnGetUserFld3(ref value);
                return value;
            }
            set
            {
                if (_UserFld3 != value)
                {
                  OnUserFld3Changing(ref value);
                  ReportPropertyChanging("UserFld3");
                  _UserFld3 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld3");
                  OnUserFld3Changed();
              }
            }
        }
        private string _UserFld3;
        partial void OnGetUserFld3(ref string value);
        partial void OnUserFld3Changing(ref string value);
        partial void OnUserFld3Changed();
    
        /// <summary>
        /// There are no comments for UserFld4 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld4
        {
            get
            {
                string value = _UserFld4;
                OnGetUserFld4(ref value);
                return value;
            }
            set
            {
                if (_UserFld4 != value)
                {
                  OnUserFld4Changing(ref value);
                  ReportPropertyChanging("UserFld4");
                  _UserFld4 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld4");
                  OnUserFld4Changed();
              }
            }
        }
        private string _UserFld4;
        partial void OnGetUserFld4(ref string value);
        partial void OnUserFld4Changing(ref string value);
        partial void OnUserFld4Changed();
    
        /// <summary>
        /// There are no comments for WriteOffAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int WriteOffAcctKey
        {
            get
            {
                int value = _WriteOffAcctKey;
                OnGetWriteOffAcctKey(ref value);
                return value;
            }
            set
            {
                if (_WriteOffAcctKey != value)
                {
                  OnWriteOffAcctKeyChanging(ref value);
                  ReportPropertyChanging("WriteOffAcctKey");
                  _WriteOffAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WriteOffAcctKey");
                  OnWriteOffAcctKeyChanged();
              }
            }
        }
        private int _WriteOffAcctKey;
        partial void OnGetWriteOffAcctKey(ref int value);
        partial void OnWriteOffAcctKeyChanging(ref int value);
        partial void OnWriteOffAcctKeyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Customers in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "CustomersClass_Customer", "Customers")]
        public virtual EntityCollection<Customer> Customers
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Customer>("Net4Sage.DataAccessModel.CustomersClass_Customer", "Customers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Customer>("Net4Sage.DataAccessModel.CustomersClass_Customer", "Customers", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CustomerPmts in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "CustomersClass_CustomerPmt", "CustomerPmts")]
        public virtual EntityCollection<CustomerPayment> CustomerPmts
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CustomerPayment>("Net4Sage.DataAccessModel.CustomersClass_CustomerPmt", "CustomerPmts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CustomerPayment>("Net4Sage.DataAccessModel.CustomersClass_CustomerPmt", "CustomerPmts", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Invoices in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "CustomersClass_Invoice", "Invoices")]
        public virtual EntityCollection<Invoice> Invoices
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Invoice>("Net4Sage.DataAccessModel.CustomersClass_Invoice", "Invoices");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Invoice>("Net4Sage.DataAccessModel.CustomersClass_Invoice", "Invoices", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for RecAcct in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "GLAccount_CustomersClass", "RecAcct")]
        public virtual GLAccount RecAcct
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<GLAccount>("Net4Sage.DataAccessModel.GLAccount_CustomersClass", "RecAcct").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<GLAccount>("Net4Sage.DataAccessModel.GLAccount_CustomersClass", "RecAcct").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for RecAcct in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GLAccount> RecAcctReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<GLAccount>("Net4Sage.DataAccessModel.GLAccount_CustomersClass", "RecAcct");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<GLAccount>("Net4Sage.DataAccessModel.GLAccount_CustomersClass", "RecAcct", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<GLAccount>("Net4Sage.DataAccessModel.GLAccount_CustomersClass", "RecAcct").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.Customer in the schema.
    /// </summary>
    /// <KeyProperties>
    /// CustKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="Customer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [Net4Sage.Controls.Lookup.LookupAutoShowColumns(false)]
    [Net4Sage.Controls.Lookup.LookupFormTitle(@"Buscar Cliente")]
    public partial class Customer : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Customer object.
        /// </summary>
        /// <param name="custKey">Initial value of CustKey.</param>
        /// <param name="allowCustRefund">Initial value of AllowCustRefund.</param>
        /// <param name="allowWriteOff">Initial value of AllowWriteOff.</param>
        /// <param name="billingType">Initial value of BillingType.</param>
        /// <param name="billToNationalAcctParent">Initial value of BillToNationalAcctParent.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="consolidatedStatement">Initial value of ConsolidatedStatement.</param>
        /// <param name="createType">Initial value of CreateType.</param>
        /// <param name="creditLimit">Initial value of CreditLimit.</param>
        /// <param name="creditLimitAgeCat">Initial value of CreditLimitAgeCat.</param>
        /// <param name="creditLimitUsed">Initial value of CreditLimitUsed.</param>
        /// <param name="custClassKey">Initial value of CustClassKey.</param>
        /// <param name="custID">Initial value of CustID.</param>
        /// <param name="custName">Initial value of CustName.</param>
        /// <param name="dfltBillToAddrKey">Initial value of DfltBillToAddrKey.</param>
        /// <param name="dfltShipToAddrKey">Initial value of DfltShipToAddrKey.</param>
        /// <param name="finChgFlatAmt">Initial value of FinChgFlatAmt.</param>
        /// <param name="hold">Initial value of Hold.</param>
        /// <param name="pmtByNationalAcctParent">Initial value of PmtByNationalAcctParent.</param>
        /// <param name="primaryAddrKey">Initial value of PrimaryAddrKey.</param>
        /// <param name="printDunnMsg">Initial value of PrintDunnMsg.</param>
        /// <param name="reqPO">Initial value of ReqPO.</param>
        /// <param name="shipPriority">Initial value of ShipPriority.</param>
        /// <param name="status">Initial value of Status.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        public static Customer CreateCustomer(int custKey, short allowCustRefund, short allowWriteOff, short billingType, short billToNationalAcctParent, string companyID, short consolidatedStatement, short createType, decimal creditLimit, short creditLimitAgeCat, short creditLimitUsed, int custClassKey, string custID, string custName, int dfltBillToAddrKey, int dfltShipToAddrKey, decimal finChgFlatAmt, short hold, short pmtByNationalAcctParent, int primaryAddrKey, short printDunnMsg, short reqPO, short shipPriority, short status, int updateCounter)
        {
            Customer customer = new Customer();
            customer.CustKey = custKey;
            customer.AllowCustRefund = allowCustRefund;
            customer.AllowWriteOff = allowWriteOff;
            customer.BillingType = billingType;
            customer.BillToNationalAcctParent = billToNationalAcctParent;
            customer.CompanyID = companyID;
            customer.ConsolidatedStatement = consolidatedStatement;
            customer.CreateType = createType;
            customer.CreditLimit = creditLimit;
            customer.CreditLimitAgeCat = creditLimitAgeCat;
            customer.CreditLimitUsed = creditLimitUsed;
            customer.CustClassKey = custClassKey;
            customer.CustID = custID;
            customer.CustName = custName;
            customer.DfltBillToAddrKey = dfltBillToAddrKey;
            customer.DfltShipToAddrKey = dfltShipToAddrKey;
            customer.FinChgFlatAmt = finChgFlatAmt;
            customer.Hold = hold;
            customer.PmtByNationalAcctParent = pmtByNationalAcctParent;
            customer.PrimaryAddrKey = primaryAddrKey;
            customer.PrintDunnMsg = printDunnMsg;
            customer.ReqPO = reqPO;
            customer.ShipPriority = shipPriority;
            customer.Status = status;
            customer.UpdateCounter = updateCounter;
            return customer;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for CustKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupKeyReturn]
        public virtual int CustKey
        {
            get
            {
                int value = _CustKey;
                OnGetCustKey(ref value);
                return value;
            }
            set
            {
                if (_CustKey != value)
                {
                  OnCustKeyChanging(ref value);
                  ReportPropertyChanging("CustKey");
                  _CustKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustKey");
                  OnCustKeyChanged();
              }
            }
        }
        private int _CustKey;
        partial void OnGetCustKey(ref int value);
        partial void OnCustKeyChanging(ref int value);
        partial void OnCustKeyChanged();
    
        /// <summary>
        /// There are no comments for ABANo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ABANo
        {
            get
            {
                string value = _ABANo;
                OnGetABANo(ref value);
                return value;
            }
            set
            {
                if (_ABANo != value)
                {
                  OnABANoChanging(ref value);
                  ReportPropertyChanging("ABANo");
                  _ABANo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ABANo");
                  OnABANoChanged();
              }
            }
        }
        private string _ABANo;
        partial void OnGetABANo(ref string value);
        partial void OnABANoChanging(ref string value);
        partial void OnABANoChanged();
    
        /// <summary>
        /// There are no comments for AllowCustRefund in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short AllowCustRefund
        {
            get
            {
                short value = _AllowCustRefund;
                OnGetAllowCustRefund(ref value);
                return value;
            }
            set
            {
                if (_AllowCustRefund != value)
                {
                  OnAllowCustRefundChanging(ref value);
                  ReportPropertyChanging("AllowCustRefund");
                  _AllowCustRefund = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AllowCustRefund");
                  OnAllowCustRefundChanged();
              }
            }
        }
        private short _AllowCustRefund = 0;
        partial void OnGetAllowCustRefund(ref short value);
        partial void OnAllowCustRefundChanging(ref short value);
        partial void OnAllowCustRefundChanged();
    
        /// <summary>
        /// There are no comments for AllowWriteOff in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short AllowWriteOff
        {
            get
            {
                short value = _AllowWriteOff;
                OnGetAllowWriteOff(ref value);
                return value;
            }
            set
            {
                if (_AllowWriteOff != value)
                {
                  OnAllowWriteOffChanging(ref value);
                  ReportPropertyChanging("AllowWriteOff");
                  _AllowWriteOff = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AllowWriteOff");
                  OnAllowWriteOffChanged();
              }
            }
        }
        private short _AllowWriteOff = 0;
        partial void OnGetAllowWriteOff(ref short value);
        partial void OnAllowWriteOffChanging(ref short value);
        partial void OnAllowWriteOffChanged();
    
        /// <summary>
        /// There are no comments for BillingType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short BillingType
        {
            get
            {
                short value = _BillingType;
                OnGetBillingType(ref value);
                return value;
            }
            set
            {
                if (_BillingType != value)
                {
                  OnBillingTypeChanging(ref value);
                  ReportPropertyChanging("BillingType");
                  _BillingType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BillingType");
                  OnBillingTypeChanged();
              }
            }
        }
        private short _BillingType = 1;
        partial void OnGetBillingType(ref short value);
        partial void OnBillingTypeChanging(ref short value);
        partial void OnBillingTypeChanged();
    
        /// <summary>
        /// There are no comments for BillToNationalAcctParent in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short BillToNationalAcctParent
        {
            get
            {
                short value = _BillToNationalAcctParent;
                OnGetBillToNationalAcctParent(ref value);
                return value;
            }
            set
            {
                if (_BillToNationalAcctParent != value)
                {
                  OnBillToNationalAcctParentChanging(ref value);
                  ReportPropertyChanging("BillToNationalAcctParent");
                  _BillToNationalAcctParent = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BillToNationalAcctParent");
                  OnBillToNationalAcctParentChanged();
              }
            }
        }
        private short _BillToNationalAcctParent = 0;
        partial void OnGetBillToNationalAcctParent(ref short value);
        partial void OnBillToNationalAcctParentChanging(ref short value);
        partial void OnBillToNationalAcctParentChanged();
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for ConsolidatedStatement in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ConsolidatedStatement
        {
            get
            {
                short value = _ConsolidatedStatement;
                OnGetConsolidatedStatement(ref value);
                return value;
            }
            set
            {
                if (_ConsolidatedStatement != value)
                {
                  OnConsolidatedStatementChanging(ref value);
                  ReportPropertyChanging("ConsolidatedStatement");
                  _ConsolidatedStatement = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ConsolidatedStatement");
                  OnConsolidatedStatementChanged();
              }
            }
        }
        private short _ConsolidatedStatement = 0;
        partial void OnGetConsolidatedStatement(ref short value);
        partial void OnConsolidatedStatementChanging(ref short value);
        partial void OnConsolidatedStatementChanged();
    
        /// <summary>
        /// There are no comments for CreateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CreateDate
        {
            get
            {
                global::System.DateTime? value = _CreateDate;
                OnGetCreateDate(ref value);
                return value;
            }
            set
            {
                if (_CreateDate != value)
                {
                  OnCreateDateChanging(ref value);
                  ReportPropertyChanging("CreateDate");
                  _CreateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateDate");
                  OnCreateDateChanged();
              }
            }
        }
        private global::System.DateTime? _CreateDate;
        partial void OnGetCreateDate(ref global::System.DateTime? value);
        partial void OnCreateDateChanging(ref global::System.DateTime? value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// There are no comments for CreateType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CreateType
        {
            get
            {
                short value = _CreateType;
                OnGetCreateType(ref value);
                return value;
            }
            set
            {
                if (_CreateType != value)
                {
                  OnCreateTypeChanging(ref value);
                  ReportPropertyChanging("CreateType");
                  _CreateType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateType");
                  OnCreateTypeChanged();
              }
            }
        }
        private short _CreateType = 0;
        partial void OnGetCreateType(ref short value);
        partial void OnCreateTypeChanging(ref short value);
        partial void OnCreateTypeChanged();
    
        /// <summary>
        /// There are no comments for CreateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CreateUserID
        {
            get
            {
                string value = _CreateUserID;
                OnGetCreateUserID(ref value);
                return value;
            }
            set
            {
                if (_CreateUserID != value)
                {
                  OnCreateUserIDChanging(ref value);
                  ReportPropertyChanging("CreateUserID");
                  _CreateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CreateUserID");
                  OnCreateUserIDChanged();
              }
            }
        }
        private string _CreateUserID;
        partial void OnGetCreateUserID(ref string value);
        partial void OnCreateUserIDChanging(ref string value);
        partial void OnCreateUserIDChanged();
    
        /// <summary>
        /// There are no comments for CreditLimit in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal CreditLimit
        {
            get
            {
                decimal value = _CreditLimit;
                OnGetCreditLimit(ref value);
                return value;
            }
            set
            {
                if (_CreditLimit != value)
                {
                  OnCreditLimitChanging(ref value);
                  ReportPropertyChanging("CreditLimit");
                  _CreditLimit = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreditLimit");
                  OnCreditLimitChanged();
              }
            }
        }
        private decimal _CreditLimit = 0m;
        partial void OnGetCreditLimit(ref decimal value);
        partial void OnCreditLimitChanging(ref decimal value);
        partial void OnCreditLimitChanged();
    
        /// <summary>
        /// There are no comments for CreditLimitAgeCat in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CreditLimitAgeCat
        {
            get
            {
                short value = _CreditLimitAgeCat;
                OnGetCreditLimitAgeCat(ref value);
                return value;
            }
            set
            {
                if (_CreditLimitAgeCat != value)
                {
                  OnCreditLimitAgeCatChanging(ref value);
                  ReportPropertyChanging("CreditLimitAgeCat");
                  _CreditLimitAgeCat = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreditLimitAgeCat");
                  OnCreditLimitAgeCatChanged();
              }
            }
        }
        private short _CreditLimitAgeCat = 0;
        partial void OnGetCreditLimitAgeCat(ref short value);
        partial void OnCreditLimitAgeCatChanging(ref short value);
        partial void OnCreditLimitAgeCatChanged();
    
        /// <summary>
        /// There are no comments for CreditLimitUsed in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CreditLimitUsed
        {
            get
            {
                short value = _CreditLimitUsed;
                OnGetCreditLimitUsed(ref value);
                return value;
            }
            set
            {
                if (_CreditLimitUsed != value)
                {
                  OnCreditLimitUsedChanging(ref value);
                  ReportPropertyChanging("CreditLimitUsed");
                  _CreditLimitUsed = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreditLimitUsed");
                  OnCreditLimitUsedChanged();
              }
            }
        }
        private short _CreditLimitUsed = 0;
        partial void OnGetCreditLimitUsed(ref short value);
        partial void OnCreditLimitUsedChanging(ref short value);
        partial void OnCreditLimitUsedChanged();
    
        /// <summary>
        /// There are no comments for CRMCustID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CRMCustID
        {
            get
            {
                string value = _CRMCustID;
                OnGetCRMCustID(ref value);
                return value;
            }
            set
            {
                if (_CRMCustID != value)
                {
                  OnCRMCustIDChanging(ref value);
                  ReportPropertyChanging("CRMCustID");
                  _CRMCustID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CRMCustID");
                  OnCRMCustIDChanged();
              }
            }
        }
        private string _CRMCustID;
        partial void OnGetCRMCustID(ref string value);
        partial void OnCRMCustIDChanging(ref string value);
        partial void OnCRMCustIDChanged();
    
        /// <summary>
        /// There are no comments for CurrExchSchdKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CurrExchSchdKey
        {
            get
            {
                int? value = _CurrExchSchdKey;
                OnGetCurrExchSchdKey(ref value);
                return value;
            }
            set
            {
                if (_CurrExchSchdKey != value)
                {
                  OnCurrExchSchdKeyChanging(ref value);
                  ReportPropertyChanging("CurrExchSchdKey");
                  _CurrExchSchdKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CurrExchSchdKey");
                  OnCurrExchSchdKeyChanged();
              }
            }
        }
        private int? _CurrExchSchdKey;
        partial void OnGetCurrExchSchdKey(ref int? value);
        partial void OnCurrExchSchdKeyChanging(ref int? value);
        partial void OnCurrExchSchdKeyChanged();
    
        /// <summary>
        /// There are no comments for CustClassKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustClassKey
        {
            get
            {
                int value = _CustClassKey;
                OnGetCustClassKey(ref value);
                return value;
            }
            set
            {
                if (_CustClassKey != value)
                {
                  OnCustClassKeyChanging(ref value);
                  ReportPropertyChanging("CustClassKey");
                  _CustClassKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustClassKey");
                  OnCustClassKeyChanged();
              }
            }
        }
        private int _CustClassKey;
        partial void OnGetCustClassKey(ref int value);
        partial void OnCustClassKeyChanging(ref int value);
        partial void OnCustClassKeyChanged();
    
        /// <summary>
        /// There are no comments for CustID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"ID Cliente")]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"ID Cliente")]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        [Net4Sage.Controls.Lookup.LookupTextReturn]
        public virtual string CustID
        {
            get
            {
                string value = _CustID;
                OnGetCustID(ref value);
                return value;
            }
            set
            {
                if (_CustID != value)
                {
                  OnCustIDChanging(ref value);
                  ReportPropertyChanging("CustID");
                  _CustID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CustID");
                  OnCustIDChanged();
              }
            }
        }
        private string _CustID;
        partial void OnGetCustID(ref string value);
        partial void OnCustIDChanging(ref string value);
        partial void OnCustIDChanged();
    
        /// <summary>
        /// There are no comments for CustName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"Nombre Cliente")]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Nombre Cliente")]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        public virtual string CustName
        {
            get
            {
                string value = _CustName;
                OnGetCustName(ref value);
                return value;
            }
            set
            {
                if (_CustName != value)
                {
                  OnCustNameChanging(ref value);
                  ReportPropertyChanging("CustName");
                  _CustName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CustName");
                  OnCustNameChanged();
              }
            }
        }
        private string _CustName;
        partial void OnGetCustName(ref string value);
        partial void OnCustNameChanging(ref string value);
        partial void OnCustNameChanged();
    
        /// <summary>
        /// There are no comments for CustRefNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CustRefNo
        {
            get
            {
                string value = _CustRefNo;
                OnGetCustRefNo(ref value);
                return value;
            }
            set
            {
                if (_CustRefNo != value)
                {
                  OnCustRefNoChanging(ref value);
                  ReportPropertyChanging("CustRefNo");
                  _CustRefNo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CustRefNo");
                  OnCustRefNoChanged();
              }
            }
        }
        private string _CustRefNo;
        partial void OnGetCustRefNo(ref string value);
        partial void OnCustRefNoChanging(ref string value);
        partial void OnCustRefNoChanged();
    
        /// <summary>
        /// There are no comments for DateEstab in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? DateEstab
        {
            get
            {
                global::System.DateTime? value = _DateEstab;
                OnGetDateEstab(ref value);
                return value;
            }
            set
            {
                if (_DateEstab != value)
                {
                  OnDateEstabChanging(ref value);
                  ReportPropertyChanging("DateEstab");
                  _DateEstab = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DateEstab");
                  OnDateEstabChanged();
              }
            }
        }
        private global::System.DateTime? _DateEstab;
        partial void OnGetDateEstab(ref global::System.DateTime? value);
        partial void OnDateEstabChanging(ref global::System.DateTime? value);
        partial void OnDateEstabChanged();
    
        /// <summary>
        /// There are no comments for DfltBillToAddrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int DfltBillToAddrKey
        {
            get
            {
                int value = _DfltBillToAddrKey;
                OnGetDfltBillToAddrKey(ref value);
                return value;
            }
            set
            {
                if (_DfltBillToAddrKey != value)
                {
                  OnDfltBillToAddrKeyChanging(ref value);
                  ReportPropertyChanging("DfltBillToAddrKey");
                  _DfltBillToAddrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltBillToAddrKey");
                  OnDfltBillToAddrKeyChanged();
              }
            }
        }
        private int _DfltBillToAddrKey;
        partial void OnGetDfltBillToAddrKey(ref int value);
        partial void OnDfltBillToAddrKeyChanging(ref int value);
        partial void OnDfltBillToAddrKeyChanged();
    
        /// <summary>
        /// There are no comments for DfltItemKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? DfltItemKey
        {
            get
            {
                int? value = _DfltItemKey;
                OnGetDfltItemKey(ref value);
                return value;
            }
            set
            {
                if (_DfltItemKey != value)
                {
                  OnDfltItemKeyChanging(ref value);
                  ReportPropertyChanging("DfltItemKey");
                  _DfltItemKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltItemKey");
                  OnDfltItemKeyChanged();
              }
            }
        }
        private int? _DfltItemKey;
        partial void OnGetDfltItemKey(ref int? value);
        partial void OnDfltItemKeyChanging(ref int? value);
        partial void OnDfltItemKeyChanged();
    
        /// <summary>
        /// There are no comments for DfltSalesAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? DfltSalesAcctKey
        {
            get
            {
                int? value = _DfltSalesAcctKey;
                OnGetDfltSalesAcctKey(ref value);
                return value;
            }
            set
            {
                if (_DfltSalesAcctKey != value)
                {
                  OnDfltSalesAcctKeyChanging(ref value);
                  ReportPropertyChanging("DfltSalesAcctKey");
                  _DfltSalesAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltSalesAcctKey");
                  OnDfltSalesAcctKeyChanged();
              }
            }
        }
        private int? _DfltSalesAcctKey;
        partial void OnGetDfltSalesAcctKey(ref int? value);
        partial void OnDfltSalesAcctKeyChanging(ref int? value);
        partial void OnDfltSalesAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for DfltSalesReturnAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? DfltSalesReturnAcctKey
        {
            get
            {
                int? value = _DfltSalesReturnAcctKey;
                OnGetDfltSalesReturnAcctKey(ref value);
                return value;
            }
            set
            {
                if (_DfltSalesReturnAcctKey != value)
                {
                  OnDfltSalesReturnAcctKeyChanging(ref value);
                  ReportPropertyChanging("DfltSalesReturnAcctKey");
                  _DfltSalesReturnAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltSalesReturnAcctKey");
                  OnDfltSalesReturnAcctKeyChanged();
              }
            }
        }
        private int? _DfltSalesReturnAcctKey;
        partial void OnGetDfltSalesReturnAcctKey(ref int? value);
        partial void OnDfltSalesReturnAcctKeyChanging(ref int? value);
        partial void OnDfltSalesReturnAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for DfltShipToAddrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int DfltShipToAddrKey
        {
            get
            {
                int value = _DfltShipToAddrKey;
                OnGetDfltShipToAddrKey(ref value);
                return value;
            }
            set
            {
                if (_DfltShipToAddrKey != value)
                {
                  OnDfltShipToAddrKeyChanging(ref value);
                  ReportPropertyChanging("DfltShipToAddrKey");
                  _DfltShipToAddrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltShipToAddrKey");
                  OnDfltShipToAddrKeyChanged();
              }
            }
        }
        private int _DfltShipToAddrKey;
        partial void OnGetDfltShipToAddrKey(ref int value);
        partial void OnDfltShipToAddrKeyChanging(ref int value);
        partial void OnDfltShipToAddrKeyChanged();
    
        /// <summary>
        /// There are no comments for FinChgFlatAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal FinChgFlatAmt
        {
            get
            {
                decimal value = _FinChgFlatAmt;
                OnGetFinChgFlatAmt(ref value);
                return value;
            }
            set
            {
                if (_FinChgFlatAmt != value)
                {
                  OnFinChgFlatAmtChanging(ref value);
                  ReportPropertyChanging("FinChgFlatAmt");
                  _FinChgFlatAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FinChgFlatAmt");
                  OnFinChgFlatAmtChanged();
              }
            }
        }
        private decimal _FinChgFlatAmt = 0m;
        partial void OnGetFinChgFlatAmt(ref decimal value);
        partial void OnFinChgFlatAmtChanging(ref decimal value);
        partial void OnFinChgFlatAmtChanged();
    
        /// <summary>
        /// There are no comments for FinChgPct in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? FinChgPct
        {
            get
            {
                decimal? value = _FinChgPct;
                OnGetFinChgPct(ref value);
                return value;
            }
            set
            {
                if (_FinChgPct != value)
                {
                  OnFinChgPctChanging(ref value);
                  ReportPropertyChanging("FinChgPct");
                  _FinChgPct = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FinChgPct");
                  OnFinChgPctChanged();
              }
            }
        }
        private decimal? _FinChgPct = 0m;
        partial void OnGetFinChgPct(ref decimal? value);
        partial void OnFinChgPctChanging(ref decimal? value);
        partial void OnFinChgPctChanged();
    
        /// <summary>
        /// There are no comments for Hold in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Hold
        {
            get
            {
                short value = _Hold;
                OnGetHold(ref value);
                return value;
            }
            set
            {
                if (_Hold != value)
                {
                  OnHoldChanging(ref value);
                  ReportPropertyChanging("Hold");
                  _Hold = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Hold");
                  OnHoldChanged();
              }
            }
        }
        private short _Hold = 0;
        partial void OnGetHold(ref short value);
        partial void OnHoldChanging(ref short value);
        partial void OnHoldChanged();
    
        /// <summary>
        /// There are no comments for ImportLogKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ImportLogKey
        {
            get
            {
                int? value = _ImportLogKey;
                OnGetImportLogKey(ref value);
                return value;
            }
            set
            {
                if (_ImportLogKey != value)
                {
                  OnImportLogKeyChanging(ref value);
                  ReportPropertyChanging("ImportLogKey");
                  _ImportLogKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ImportLogKey");
                  OnImportLogKeyChanged();
              }
            }
        }
        private int? _ImportLogKey;
        partial void OnGetImportLogKey(ref int? value);
        partial void OnImportLogKeyChanging(ref int? value);
        partial void OnImportLogKeyChanged();
    
        /// <summary>
        /// There are no comments for NationalAcctLevelKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? NationalAcctLevelKey
        {
            get
            {
                int? value = _NationalAcctLevelKey;
                OnGetNationalAcctLevelKey(ref value);
                return value;
            }
            set
            {
                if (_NationalAcctLevelKey != value)
                {
                  OnNationalAcctLevelKeyChanging(ref value);
                  ReportPropertyChanging("NationalAcctLevelKey");
                  _NationalAcctLevelKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NationalAcctLevelKey");
                  OnNationalAcctLevelKeyChanged();
              }
            }
        }
        private int? _NationalAcctLevelKey;
        partial void OnGetNationalAcctLevelKey(ref int? value);
        partial void OnNationalAcctLevelKeyChanging(ref int? value);
        partial void OnNationalAcctLevelKeyChanged();
    
        /// <summary>
        /// There are no comments for PmtByNationalAcctParent in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PmtByNationalAcctParent
        {
            get
            {
                short value = _PmtByNationalAcctParent;
                OnGetPmtByNationalAcctParent(ref value);
                return value;
            }
            set
            {
                if (_PmtByNationalAcctParent != value)
                {
                  OnPmtByNationalAcctParentChanging(ref value);
                  ReportPropertyChanging("PmtByNationalAcctParent");
                  _PmtByNationalAcctParent = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PmtByNationalAcctParent");
                  OnPmtByNationalAcctParentChanged();
              }
            }
        }
        private short _PmtByNationalAcctParent = 0;
        partial void OnGetPmtByNationalAcctParent(ref short value);
        partial void OnPmtByNationalAcctParentChanging(ref short value);
        partial void OnPmtByNationalAcctParentChanged();
    
        /// <summary>
        /// There are no comments for PrimaryAddrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int PrimaryAddrKey
        {
            get
            {
                int value = _PrimaryAddrKey;
                OnGetPrimaryAddrKey(ref value);
                return value;
            }
            set
            {
                if (_PrimaryAddrKey != value)
                {
                  OnPrimaryAddrKeyChanging(ref value);
                  ReportPropertyChanging("PrimaryAddrKey");
                  _PrimaryAddrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PrimaryAddrKey");
                  OnPrimaryAddrKeyChanged();
              }
            }
        }
        private int _PrimaryAddrKey;
        partial void OnGetPrimaryAddrKey(ref int value);
        partial void OnPrimaryAddrKeyChanging(ref int value);
        partial void OnPrimaryAddrKeyChanged();
    
        /// <summary>
        /// There are no comments for PrimaryCntctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? PrimaryCntctKey
        {
            get
            {
                int? value = _PrimaryCntctKey;
                OnGetPrimaryCntctKey(ref value);
                return value;
            }
            set
            {
                if (_PrimaryCntctKey != value)
                {
                  OnPrimaryCntctKeyChanging(ref value);
                  ReportPropertyChanging("PrimaryCntctKey");
                  _PrimaryCntctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PrimaryCntctKey");
                  OnPrimaryCntctKeyChanged();
              }
            }
        }
        private int? _PrimaryCntctKey;
        partial void OnGetPrimaryCntctKey(ref int? value);
        partial void OnPrimaryCntctKeyChanging(ref int? value);
        partial void OnPrimaryCntctKeyChanged();
    
        /// <summary>
        /// There are no comments for PrintDunnMsg in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PrintDunnMsg
        {
            get
            {
                short value = _PrintDunnMsg;
                OnGetPrintDunnMsg(ref value);
                return value;
            }
            set
            {
                if (_PrintDunnMsg != value)
                {
                  OnPrintDunnMsgChanging(ref value);
                  ReportPropertyChanging("PrintDunnMsg");
                  _PrintDunnMsg = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PrintDunnMsg");
                  OnPrintDunnMsgChanged();
              }
            }
        }
        private short _PrintDunnMsg = 0;
        partial void OnGetPrintDunnMsg(ref short value);
        partial void OnPrintDunnMsgChanging(ref short value);
        partial void OnPrintDunnMsgChanged();
    
        /// <summary>
        /// There are no comments for ReqCreditLimit in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? ReqCreditLimit
        {
            get
            {
                decimal? value = _ReqCreditLimit;
                OnGetReqCreditLimit(ref value);
                return value;
            }
            set
            {
                if (_ReqCreditLimit != value)
                {
                  OnReqCreditLimitChanging(ref value);
                  ReportPropertyChanging("ReqCreditLimit");
                  _ReqCreditLimit = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ReqCreditLimit");
                  OnReqCreditLimitChanged();
              }
            }
        }
        private decimal? _ReqCreditLimit = 0m;
        partial void OnGetReqCreditLimit(ref decimal? value);
        partial void OnReqCreditLimitChanging(ref decimal? value);
        partial void OnReqCreditLimitChanged();
    
        /// <summary>
        /// There are no comments for ReqPO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ReqPO
        {
            get
            {
                short value = _ReqPO;
                OnGetReqPO(ref value);
                return value;
            }
            set
            {
                if (_ReqPO != value)
                {
                  OnReqPOChanging(ref value);
                  ReportPropertyChanging("ReqPO");
                  _ReqPO = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ReqPO");
                  OnReqPOChanged();
              }
            }
        }
        private short _ReqPO = 0;
        partial void OnGetReqPO(ref short value);
        partial void OnReqPOChanging(ref short value);
        partial void OnReqPOChanged();
    
        /// <summary>
        /// There are no comments for RetntPct in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? RetntPct
        {
            get
            {
                decimal? value = _RetntPct;
                OnGetRetntPct(ref value);
                return value;
            }
            set
            {
                if (_RetntPct != value)
                {
                  OnRetntPctChanging(ref value);
                  ReportPropertyChanging("RetntPct");
                  _RetntPct = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RetntPct");
                  OnRetntPctChanged();
              }
            }
        }
        private decimal? _RetntPct = 0m;
        partial void OnGetRetntPct(ref decimal? value);
        partial void OnRetntPctChanging(ref decimal? value);
        partial void OnRetntPctChanged();
    
        /// <summary>
        /// There are no comments for SalesSourceKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? SalesSourceKey
        {
            get
            {
                int? value = _SalesSourceKey;
                OnGetSalesSourceKey(ref value);
                return value;
            }
            set
            {
                if (_SalesSourceKey != value)
                {
                  OnSalesSourceKeyChanging(ref value);
                  ReportPropertyChanging("SalesSourceKey");
                  _SalesSourceKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesSourceKey");
                  OnSalesSourceKeyChanged();
              }
            }
        }
        private int? _SalesSourceKey;
        partial void OnGetSalesSourceKey(ref int? value);
        partial void OnSalesSourceKeyChanging(ref int? value);
        partial void OnSalesSourceKeyChanged();
    
        /// <summary>
        /// There are no comments for ShipPriority in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ShipPriority
        {
            get
            {
                short value = _ShipPriority;
                OnGetShipPriority(ref value);
                return value;
            }
            set
            {
                if (_ShipPriority != value)
                {
                  OnShipPriorityChanging(ref value);
                  ReportPropertyChanging("ShipPriority");
                  _ShipPriority = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipPriority");
                  OnShipPriorityChanged();
              }
            }
        }
        private short _ShipPriority = 3;
        partial void OnGetShipPriority(ref short value);
        partial void OnShipPriorityChanging(ref short value);
        partial void OnShipPriorityChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Status
        {
            get
            {
                short value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private short _Status = 1;
        partial void OnGetStatus(ref short value);
        partial void OnStatusChanging(ref short value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// There are no comments for StdIndusCodeID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string StdIndusCodeID
        {
            get
            {
                string value = _StdIndusCodeID;
                OnGetStdIndusCodeID(ref value);
                return value;
            }
            set
            {
                if (_StdIndusCodeID != value)
                {
                  OnStdIndusCodeIDChanging(ref value);
                  ReportPropertyChanging("StdIndusCodeID");
                  _StdIndusCodeID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("StdIndusCodeID");
                  OnStdIndusCodeIDChanged();
              }
            }
        }
        private string _StdIndusCodeID;
        partial void OnGetStdIndusCodeID(ref string value);
        partial void OnStdIndusCodeIDChanging(ref string value);
        partial void OnStdIndusCodeIDChanged();
    
        /// <summary>
        /// There are no comments for StmtCycleKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? StmtCycleKey
        {
            get
            {
                int? value = _StmtCycleKey;
                OnGetStmtCycleKey(ref value);
                return value;
            }
            set
            {
                if (_StmtCycleKey != value)
                {
                  OnStmtCycleKeyChanging(ref value);
                  ReportPropertyChanging("StmtCycleKey");
                  _StmtCycleKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("StmtCycleKey");
                  OnStmtCycleKeyChanged();
              }
            }
        }
        private int? _StmtCycleKey;
        partial void OnGetStmtCycleKey(ref int? value);
        partial void OnStmtCycleKeyChanging(ref int? value);
        partial void OnStmtCycleKeyChanged();
    
        /// <summary>
        /// There are no comments for StmtFormKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? StmtFormKey
        {
            get
            {
                int? value = _StmtFormKey;
                OnGetStmtFormKey(ref value);
                return value;
            }
            set
            {
                if (_StmtFormKey != value)
                {
                  OnStmtFormKeyChanging(ref value);
                  ReportPropertyChanging("StmtFormKey");
                  _StmtFormKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("StmtFormKey");
                  OnStmtFormKeyChanged();
              }
            }
        }
        private int? _StmtFormKey;
        partial void OnGetStmtFormKey(ref int? value);
        partial void OnStmtFormKeyChanging(ref int? value);
        partial void OnStmtFormKeyChanged();
    
        /// <summary>
        /// There are no comments for TradeDiscPct in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? TradeDiscPct
        {
            get
            {
                decimal? value = _TradeDiscPct;
                OnGetTradeDiscPct(ref value);
                return value;
            }
            set
            {
                if (_TradeDiscPct != value)
                {
                  OnTradeDiscPctChanging(ref value);
                  ReportPropertyChanging("TradeDiscPct");
                  _TradeDiscPct = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TradeDiscPct");
                  OnTradeDiscPctChanged();
              }
            }
        }
        private decimal? _TradeDiscPct = 0m;
        partial void OnGetTradeDiscPct(ref decimal? value);
        partial void OnTradeDiscPctChanging(ref decimal? value);
        partial void OnTradeDiscPctChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();
    
        /// <summary>
        /// There are no comments for UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? UpdateDate
        {
            get
            {
                global::System.DateTime? value = _UpdateDate;
                OnGetUpdateDate(ref value);
                return value;
            }
            set
            {
                if (_UpdateDate != value)
                {
                  OnUpdateDateChanging(ref value);
                  ReportPropertyChanging("UpdateDate");
                  _UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateDate");
                  OnUpdateDateChanged();
              }
            }
        }
        private global::System.DateTime? _UpdateDate;
        partial void OnGetUpdateDate(ref global::System.DateTime? value);
        partial void OnUpdateDateChanging(ref global::System.DateTime? value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// There are no comments for UpdateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UpdateUserID
        {
            get
            {
                string value = _UpdateUserID;
                OnGetUpdateUserID(ref value);
                return value;
            }
            set
            {
                if (_UpdateUserID != value)
                {
                  OnUpdateUserIDChanging(ref value);
                  ReportPropertyChanging("UpdateUserID");
                  _UpdateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UpdateUserID");
                  OnUpdateUserIDChanged();
              }
            }
        }
        private string _UpdateUserID;
        partial void OnGetUpdateUserID(ref string value);
        partial void OnUpdateUserIDChanging(ref string value);
        partial void OnUpdateUserIDChanged();
    
        /// <summary>
        /// There are no comments for UserFld1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld1
        {
            get
            {
                string value = _UserFld1;
                OnGetUserFld1(ref value);
                return value;
            }
            set
            {
                if (_UserFld1 != value)
                {
                  OnUserFld1Changing(ref value);
                  ReportPropertyChanging("UserFld1");
                  _UserFld1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld1");
                  OnUserFld1Changed();
              }
            }
        }
        private string _UserFld1;
        partial void OnGetUserFld1(ref string value);
        partial void OnUserFld1Changing(ref string value);
        partial void OnUserFld1Changed();
    
        /// <summary>
        /// There are no comments for UserFld2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld2
        {
            get
            {
                string value = _UserFld2;
                OnGetUserFld2(ref value);
                return value;
            }
            set
            {
                if (_UserFld2 != value)
                {
                  OnUserFld2Changing(ref value);
                  ReportPropertyChanging("UserFld2");
                  _UserFld2 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld2");
                  OnUserFld2Changed();
              }
            }
        }
        private string _UserFld2;
        partial void OnGetUserFld2(ref string value);
        partial void OnUserFld2Changing(ref string value);
        partial void OnUserFld2Changed();
    
        /// <summary>
        /// There are no comments for UserFld3 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld3
        {
            get
            {
                string value = _UserFld3;
                OnGetUserFld3(ref value);
                return value;
            }
            set
            {
                if (_UserFld3 != value)
                {
                  OnUserFld3Changing(ref value);
                  ReportPropertyChanging("UserFld3");
                  _UserFld3 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld3");
                  OnUserFld3Changed();
              }
            }
        }
        private string _UserFld3;
        partial void OnGetUserFld3(ref string value);
        partial void OnUserFld3Changing(ref string value);
        partial void OnUserFld3Changed();
    
        /// <summary>
        /// There are no comments for UserFld4 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld4
        {
            get
            {
                string value = _UserFld4;
                OnGetUserFld4(ref value);
                return value;
            }
            set
            {
                if (_UserFld4 != value)
                {
                  OnUserFld4Changing(ref value);
                  ReportPropertyChanging("UserFld4");
                  _UserFld4 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld4");
                  OnUserFld4Changed();
              }
            }
        }
        private string _UserFld4;
        partial void OnGetUserFld4(ref string value);
        partial void OnUserFld4Changing(ref string value);
        partial void OnUserFld4Changed();
    
        /// <summary>
        /// There are no comments for VendKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? VendKey
        {
            get
            {
                int? value = _VendKey;
                OnGetVendKey(ref value);
                return value;
            }
            set
            {
                if (_VendKey != value)
                {
                  OnVendKeyChanging(ref value);
                  ReportPropertyChanging("VendKey");
                  _VendKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VendKey");
                  OnVendKeyChanged();
              }
            }
        }
        private int? _VendKey;
        partial void OnGetVendKey(ref int? value);
        partial void OnVendKeyChanging(ref int? value);
        partial void OnVendKeyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CustomersClass in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "CustomersClass_Customer", "CustomersClass")]
        public virtual CustomersClass CustomersClass
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustomersClass>("Net4Sage.DataAccessModel.CustomersClass_Customer", "CustomersClass").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustomersClass>("Net4Sage.DataAccessModel.CustomersClass_Customer", "CustomersClass").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for CustomersClass in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustomersClass> CustomersClassReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustomersClass>("Net4Sage.DataAccessModel.CustomersClass_Customer", "CustomersClass");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CustomersClass>("Net4Sage.DataAccessModel.CustomersClass_Customer", "CustomersClass", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustomersClass>("Net4Sage.DataAccessModel.CustomersClass_Customer", "CustomersClass").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CustomerAddress in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "CustomerAddress_Customer", "CustomerAddress")]
        public virtual CustomerAddress CustomerAddress
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustomerAddress>("Net4Sage.DataAccessModel.CustomerAddress_Customer", "CustomerAddress").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustomerAddress>("Net4Sage.DataAccessModel.CustomerAddress_Customer", "CustomerAddress").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for CustomerAddress in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustomerAddress> CustomerAddressReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustomerAddress>("Net4Sage.DataAccessModel.CustomerAddress_Customer", "CustomerAddress");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CustomerAddress>("Net4Sage.DataAccessModel.CustomerAddress_Customer", "CustomerAddress", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustomerAddress>("Net4Sage.DataAccessModel.CustomerAddress_Customer", "CustomerAddress").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for NationalAccountLevel in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "NationalAccountLevel_Customer", "NationalAccountLevel")]
        public virtual NationalAccountLevel NationalAccountLevel
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<NationalAccountLevel>("Net4Sage.DataAccessModel.NationalAccountLevel_Customer", "NationalAccountLevel").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<NationalAccountLevel>("Net4Sage.DataAccessModel.NationalAccountLevel_Customer", "NationalAccountLevel").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for NationalAccountLevel in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NationalAccountLevel> NationalAccountLevelReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<NationalAccountLevel>("Net4Sage.DataAccessModel.NationalAccountLevel_Customer", "NationalAccountLevel");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<NationalAccountLevel>("Net4Sage.DataAccessModel.NationalAccountLevel_Customer", "NationalAccountLevel", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<NationalAccountLevel>("Net4Sage.DataAccessModel.NationalAccountLevel_Customer", "NationalAccountLevel").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Invoices in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Customer_Invoice", "Invoices")]
        public virtual EntityCollection<Invoice> Invoices
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Invoice>("Net4Sage.DataAccessModel.Customer_Invoice", "Invoices");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Invoice>("Net4Sage.DataAccessModel.Customer_Invoice", "Invoices", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CustomerPmts in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Customer_CustomerPmt", "CustomerPmts")]
        public virtual EntityCollection<CustomerPayment> CustomerPmts
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CustomerPayment>("Net4Sage.DataAccessModel.Customer_CustomerPmt", "CustomerPmts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CustomerPayment>("Net4Sage.DataAccessModel.Customer_CustomerPmt", "CustomerPmts", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SalesOrders in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Customer_SalesOrder", "SalesOrders")]
        public virtual EntityCollection<SalesOrder> SalesOrders
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SalesOrder>("Net4Sage.DataAccessModel.Customer_SalesOrder", "SalesOrders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SalesOrder>("Net4Sage.DataAccessModel.Customer_SalesOrder", "SalesOrders", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.NationalAccount in the schema.
    /// </summary>
    /// <KeyProperties>
    /// NationalAcctKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="NationalAccount")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [Net4Sage.Controls.Lookup.LookupAutoShowColumns(false)]
    [Net4Sage.Controls.Lookup.LookupFormTitle(@"Buscar Cuenta Nacional")]
    public partial class NationalAccount : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new NationalAccount object.
        /// </summary>
        /// <param name="nationalAcctKey">Initial value of NationalAcctKey.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="creditLimit">Initial value of CreditLimit.</param>
        /// <param name="creditLimitUsed">Initial value of CreditLimitUsed.</param>
        /// <param name="description">Initial value of Description.</param>
        /// <param name="hold">Initial value of Hold.</param>
        /// <param name="nationalAcctID">Initial value of NationalAcctID.</param>
        public static NationalAccount CreateNationalAccount(int nationalAcctKey, string companyID, decimal creditLimit, short creditLimitUsed, string description, short hold, string nationalAcctID)
        {
            NationalAccount nationalAccount = new NationalAccount();
            nationalAccount.NationalAcctKey = nationalAcctKey;
            nationalAccount.CompanyID = companyID;
            nationalAccount.CreditLimit = creditLimit;
            nationalAccount.CreditLimitUsed = creditLimitUsed;
            nationalAccount.Description = description;
            nationalAccount.Hold = hold;
            nationalAccount.NationalAcctID = nationalAcctID;
            return nationalAccount;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for NationalAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupKeyReturn]
        public virtual int NationalAcctKey
        {
            get
            {
                int value = _NationalAcctKey;
                OnGetNationalAcctKey(ref value);
                return value;
            }
            set
            {
                if (_NationalAcctKey != value)
                {
                  OnNationalAcctKeyChanging(ref value);
                  ReportPropertyChanging("NationalAcctKey");
                  _NationalAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NationalAcctKey");
                  OnNationalAcctKeyChanged();
              }
            }
        }
        private int _NationalAcctKey;
        partial void OnGetNationalAcctKey(ref int value);
        partial void OnNationalAcctKeyChanging(ref int value);
        partial void OnNationalAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for CreditLimit in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal CreditLimit
        {
            get
            {
                decimal value = _CreditLimit;
                OnGetCreditLimit(ref value);
                return value;
            }
            set
            {
                if (_CreditLimit != value)
                {
                  OnCreditLimitChanging(ref value);
                  ReportPropertyChanging("CreditLimit");
                  _CreditLimit = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreditLimit");
                  OnCreditLimitChanged();
              }
            }
        }
        private decimal _CreditLimit = 0m;
        partial void OnGetCreditLimit(ref decimal value);
        partial void OnCreditLimitChanging(ref decimal value);
        partial void OnCreditLimitChanged();
    
        /// <summary>
        /// There are no comments for CreditLimitUsed in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CreditLimitUsed
        {
            get
            {
                short value = _CreditLimitUsed;
                OnGetCreditLimitUsed(ref value);
                return value;
            }
            set
            {
                if (_CreditLimitUsed != value)
                {
                  OnCreditLimitUsedChanging(ref value);
                  ReportPropertyChanging("CreditLimitUsed");
                  _CreditLimitUsed = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreditLimitUsed");
                  OnCreditLimitUsedChanged();
              }
            }
        }
        private short _CreditLimitUsed = 0;
        partial void OnGetCreditLimitUsed(ref short value);
        partial void OnCreditLimitUsedChanging(ref short value);
        partial void OnCreditLimitUsedChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"Descripción")]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Descripción")]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for Hold in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Hold
        {
            get
            {
                short value = _Hold;
                OnGetHold(ref value);
                return value;
            }
            set
            {
                if (_Hold != value)
                {
                  OnHoldChanging(ref value);
                  ReportPropertyChanging("Hold");
                  _Hold = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Hold");
                  OnHoldChanged();
              }
            }
        }
        private short _Hold = 0;
        partial void OnGetHold(ref short value);
        partial void OnHoldChanging(ref short value);
        partial void OnHoldChanged();
    
        /// <summary>
        /// There are no comments for NationalAcctID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        [Net4Sage.Controls.Lookup.LookupTextReturn]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"ID Cuenta Nacional")]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"ID Cuenta Nacional")]
        public virtual string NationalAcctID
        {
            get
            {
                string value = _NationalAcctID;
                OnGetNationalAcctID(ref value);
                return value;
            }
            set
            {
                if (_NationalAcctID != value)
                {
                  OnNationalAcctIDChanging(ref value);
                  ReportPropertyChanging("NationalAcctID");
                  _NationalAcctID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("NationalAcctID");
                  OnNationalAcctIDChanged();
              }
            }
        }
        private string _NationalAcctID;
        partial void OnGetNationalAcctID(ref string value);
        partial void OnNationalAcctIDChanging(ref string value);
        partial void OnNationalAcctIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for NationalAccountLevels in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "NationalAccount_NationalAccountLevel", "NationalAccountLevels")]
        public virtual EntityCollection<NationalAccountLevel> NationalAccountLevels
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<NationalAccountLevel>("Net4Sage.DataAccessModel.NationalAccount_NationalAccountLevel", "NationalAccountLevels");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<NationalAccountLevel>("Net4Sage.DataAccessModel.NationalAccount_NationalAccountLevel", "NationalAccountLevels", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.NationalAccountLevel in the schema.
    /// </summary>
    /// <KeyProperties>
    /// NationalAcctLevelKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="NationalAccountLevel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NationalAccountLevel : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new NationalAccountLevel object.
        /// </summary>
        /// <param name="nationalAcctLevelKey">Initial value of NationalAcctLevelKey.</param>
        /// <param name="description">Initial value of Description.</param>
        /// <param name="nationalAcctKey">Initial value of NationalAcctKey.</param>
        /// <param name="nationalAcctLevel">Initial value of NationalAcctLevel.</param>
        public static NationalAccountLevel CreateNationalAccountLevel(int nationalAcctLevelKey, string description, int nationalAcctKey, short nationalAcctLevel)
        {
            NationalAccountLevel nationalAccountLevel = new NationalAccountLevel();
            nationalAccountLevel.NationalAcctLevelKey = nationalAcctLevelKey;
            nationalAccountLevel.Description = description;
            nationalAccountLevel.NationalAcctKey = nationalAcctKey;
            nationalAccountLevel.NationalAcctLevel = nationalAcctLevel;
            return nationalAccountLevel;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for NationalAcctLevelKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int NationalAcctLevelKey
        {
            get
            {
                int value = _NationalAcctLevelKey;
                OnGetNationalAcctLevelKey(ref value);
                return value;
            }
            set
            {
                if (_NationalAcctLevelKey != value)
                {
                  OnNationalAcctLevelKeyChanging(ref value);
                  ReportPropertyChanging("NationalAcctLevelKey");
                  _NationalAcctLevelKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NationalAcctLevelKey");
                  OnNationalAcctLevelKeyChanged();
              }
            }
        }
        private int _NationalAcctLevelKey;
        partial void OnGetNationalAcctLevelKey(ref int value);
        partial void OnNationalAcctLevelKeyChanging(ref int value);
        partial void OnNationalAcctLevelKeyChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for NationalAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int NationalAcctKey
        {
            get
            {
                int value = _NationalAcctKey;
                OnGetNationalAcctKey(ref value);
                return value;
            }
            set
            {
                if (_NationalAcctKey != value)
                {
                  OnNationalAcctKeyChanging(ref value);
                  ReportPropertyChanging("NationalAcctKey");
                  _NationalAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NationalAcctKey");
                  OnNationalAcctKeyChanged();
              }
            }
        }
        private int _NationalAcctKey;
        partial void OnGetNationalAcctKey(ref int value);
        partial void OnNationalAcctKeyChanging(ref int value);
        partial void OnNationalAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for NationalAcctLevel in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short NationalAcctLevel
        {
            get
            {
                short value = _NationalAcctLevel;
                OnGetNationalAcctLevel(ref value);
                return value;
            }
            set
            {
                if (_NationalAcctLevel != value)
                {
                  OnNationalAcctLevelChanging(ref value);
                  ReportPropertyChanging("NationalAcctLevel");
                  _NationalAcctLevel = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NationalAcctLevel");
                  OnNationalAcctLevelChanged();
              }
            }
        }
        private short _NationalAcctLevel;
        partial void OnGetNationalAcctLevel(ref short value);
        partial void OnNationalAcctLevelChanging(ref short value);
        partial void OnNationalAcctLevelChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for NationalAccount in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "NationalAccount_NationalAccountLevel", "NationalAccount")]
        public virtual NationalAccount NationalAccount
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<NationalAccount>("Net4Sage.DataAccessModel.NationalAccount_NationalAccountLevel", "NationalAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<NationalAccount>("Net4Sage.DataAccessModel.NationalAccount_NationalAccountLevel", "NationalAccount").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for NationalAccount in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NationalAccount> NationalAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<NationalAccount>("Net4Sage.DataAccessModel.NationalAccount_NationalAccountLevel", "NationalAccount");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<NationalAccount>("Net4Sage.DataAccessModel.NationalAccount_NationalAccountLevel", "NationalAccount", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<NationalAccount>("Net4Sage.DataAccessModel.NationalAccount_NationalAccountLevel", "NationalAccount").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Customers in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "NationalAccountLevel_Customer", "Customers")]
        public virtual EntityCollection<Customer> Customers
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Customer>("Net4Sage.DataAccessModel.NationalAccountLevel_Customer", "Customers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Customer>("Net4Sage.DataAccessModel.NationalAccountLevel_Customer", "Customers", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.SalesTerritory in the schema.
    /// </summary>
    /// <KeyProperties>
    /// SalesTerritoryKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="SalesTerritory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [Net4Sage.Controls.Lookup.LookupAutoShowColumns(false)]
    [Net4Sage.Controls.Lookup.LookupFormTitle(@"Buscar Ruta")]
    public partial class SalesTerritory : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SalesTerritory object.
        /// </summary>
        /// <param name="salesTerritoryKey">Initial value of SalesTerritoryKey.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="salesTerritoryID">Initial value of SalesTerritoryID.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        public static SalesTerritory CreateSalesTerritory(int salesTerritoryKey, string companyID, string salesTerritoryID, int updateCounter)
        {
            SalesTerritory salesTerritory = new SalesTerritory();
            salesTerritory.SalesTerritoryKey = salesTerritoryKey;
            salesTerritory.CompanyID = companyID;
            salesTerritory.SalesTerritoryID = salesTerritoryID;
            salesTerritory.UpdateCounter = updateCounter;
            return salesTerritory;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for SalesTerritoryKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupKeyReturn]
        public virtual int SalesTerritoryKey
        {
            get
            {
                int value = _SalesTerritoryKey;
                OnGetSalesTerritoryKey(ref value);
                return value;
            }
            set
            {
                if (_SalesTerritoryKey != value)
                {
                  OnSalesTerritoryKeyChanging(ref value);
                  ReportPropertyChanging("SalesTerritoryKey");
                  _SalesTerritoryKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesTerritoryKey");
                  OnSalesTerritoryKeyChanged();
              }
            }
        }
        private int _SalesTerritoryKey;
        partial void OnGetSalesTerritoryKey(ref int value);
        partial void OnSalesTerritoryKeyChanging(ref int value);
        partial void OnSalesTerritoryKeyChanged();
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for SalesTerritoryID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"Ruta")]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Ruta")]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        [Net4Sage.Controls.Lookup.LookupTextReturn]
        public virtual string SalesTerritoryID
        {
            get
            {
                string value = _SalesTerritoryID;
                OnGetSalesTerritoryID(ref value);
                return value;
            }
            set
            {
                if (_SalesTerritoryID != value)
                {
                  OnSalesTerritoryIDChanging(ref value);
                  ReportPropertyChanging("SalesTerritoryID");
                  _SalesTerritoryID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("SalesTerritoryID");
                  OnSalesTerritoryIDChanged();
              }
            }
        }
        private string _SalesTerritoryID;
        partial void OnGetSalesTerritoryID(ref string value);
        partial void OnSalesTerritoryIDChanging(ref string value);
        partial void OnSalesTerritoryIDChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CustomerAddresses in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "SalesTerritory_CustomerAddress", "CustomerAddresses")]
        public virtual EntityCollection<CustomerAddress> CustomerAddresses
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CustomerAddress>("Net4Sage.DataAccessModel.SalesTerritory_CustomerAddress", "CustomerAddresses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CustomerAddress>("Net4Sage.DataAccessModel.SalesTerritory_CustomerAddress", "CustomerAddresses", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.CustomerAddress in the schema.
    /// </summary>
    /// <KeyProperties>
    /// AddrKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="CustomerAddress")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustomerAddress : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CustomerAddress object.
        /// </summary>
        /// <param name="addrKey">Initial value of AddrKey.</param>
        /// <param name="allowInvtSubst">Initial value of AllowInvtSubst.</param>
        /// <param name="backOrdPrice">Initial value of BackOrdPrice.</param>
        /// <param name="bOLReqd">Initial value of BOLReqd.</param>
        /// <param name="carrierBillMeth">Initial value of CarrierBillMeth.</param>
        /// <param name="closeSOLineOnFirstShip">Initial value of CloseSOLineOnFirstShip.</param>
        /// <param name="closeSOOnFirstShip">Initial value of CloseSOOnFirstShip.</param>
        /// <param name="createType">Initial value of CreateType.</param>
        /// <param name="currID">Initial value of CurrID.</param>
        /// <param name="custAddrID">Initial value of CustAddrID.</param>
        /// <param name="custKey">Initial value of CustKey.</param>
        /// <param name="freightMethod">Initial value of FreightMethod.</param>
        /// <param name="invoiceReqd">Initial value of InvoiceReqd.</param>
        /// <param name="languageID">Initial value of LanguageID.</param>
        /// <param name="packListContentsReqd">Initial value of PackListContentsReqd.</param>
        /// <param name="packListReqd">Initial value of PackListReqd.</param>
        /// <param name="priceAdj">Initial value of PriceAdj.</param>
        /// <param name="priceBase">Initial value of PriceBase.</param>
        /// <param name="printOrderAck">Initial value of PrintOrderAck.</param>
        /// <param name="requireSOAck">Initial value of RequireSOAck.</param>
        /// <param name="shipComplete">Initial value of ShipComplete.</param>
        /// <param name="shipDays">Initial value of ShipDays.</param>
        /// <param name="shipLabelsReqd">Initial value of ShipLabelsReqd.</param>
        /// <param name="sOAckMeth">Initial value of SOAckMeth.</param>
        /// <param name="usePromoPrice">Initial value of UsePromoPrice.</param>
        public static CustomerAddress CreateCustomerAddress(int addrKey, short allowInvtSubst, short backOrdPrice, short bOLReqd, short carrierBillMeth, short closeSOLineOnFirstShip, short closeSOOnFirstShip, short createType, string currID, string custAddrID, int custKey, short freightMethod, short invoiceReqd, int languageID, short packListContentsReqd, short packListReqd, decimal priceAdj, short priceBase, short printOrderAck, short requireSOAck, short shipComplete, short shipDays, short shipLabelsReqd, short sOAckMeth, short usePromoPrice)
        {
            CustomerAddress customerAddress = new CustomerAddress();
            customerAddress.AddrKey = addrKey;
            customerAddress.AllowInvtSubst = allowInvtSubst;
            customerAddress.BackOrdPrice = backOrdPrice;
            customerAddress.BOLReqd = bOLReqd;
            customerAddress.CarrierBillMeth = carrierBillMeth;
            customerAddress.CloseSOLineOnFirstShip = closeSOLineOnFirstShip;
            customerAddress.CloseSOOnFirstShip = closeSOOnFirstShip;
            customerAddress.CreateType = createType;
            customerAddress.CurrID = currID;
            customerAddress.CustAddrID = custAddrID;
            customerAddress.CustKey = custKey;
            customerAddress.FreightMethod = freightMethod;
            customerAddress.InvoiceReqd = invoiceReqd;
            customerAddress.LanguageID = languageID;
            customerAddress.PackListContentsReqd = packListContentsReqd;
            customerAddress.PackListReqd = packListReqd;
            customerAddress.PriceAdj = priceAdj;
            customerAddress.PriceBase = priceBase;
            customerAddress.PrintOrderAck = printOrderAck;
            customerAddress.RequireSOAck = requireSOAck;
            customerAddress.ShipComplete = shipComplete;
            customerAddress.ShipDays = shipDays;
            customerAddress.ShipLabelsReqd = shipLabelsReqd;
            customerAddress.SOAckMeth = sOAckMeth;
            customerAddress.UsePromoPrice = usePromoPrice;
            return customerAddress;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for AddrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int AddrKey
        {
            get
            {
                int value = _AddrKey;
                OnGetAddrKey(ref value);
                return value;
            }
            set
            {
                if (_AddrKey != value)
                {
                  OnAddrKeyChanging(ref value);
                  ReportPropertyChanging("AddrKey");
                  _AddrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AddrKey");
                  OnAddrKeyChanged();
              }
            }
        }
        private int _AddrKey;
        partial void OnGetAddrKey(ref int value);
        partial void OnAddrKeyChanging(ref int value);
        partial void OnAddrKeyChanged();
    
        /// <summary>
        /// There are no comments for AllowInvtSubst in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short AllowInvtSubst
        {
            get
            {
                short value = _AllowInvtSubst;
                OnGetAllowInvtSubst(ref value);
                return value;
            }
            set
            {
                if (_AllowInvtSubst != value)
                {
                  OnAllowInvtSubstChanging(ref value);
                  ReportPropertyChanging("AllowInvtSubst");
                  _AllowInvtSubst = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AllowInvtSubst");
                  OnAllowInvtSubstChanged();
              }
            }
        }
        private short _AllowInvtSubst = 0;
        partial void OnGetAllowInvtSubst(ref short value);
        partial void OnAllowInvtSubstChanging(ref short value);
        partial void OnAllowInvtSubstChanged();
    
        /// <summary>
        /// There are no comments for BackOrdPrice in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short BackOrdPrice
        {
            get
            {
                short value = _BackOrdPrice;
                OnGetBackOrdPrice(ref value);
                return value;
            }
            set
            {
                if (_BackOrdPrice != value)
                {
                  OnBackOrdPriceChanging(ref value);
                  ReportPropertyChanging("BackOrdPrice");
                  _BackOrdPrice = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BackOrdPrice");
                  OnBackOrdPriceChanged();
              }
            }
        }
        private short _BackOrdPrice = 0;
        partial void OnGetBackOrdPrice(ref short value);
        partial void OnBackOrdPriceChanging(ref short value);
        partial void OnBackOrdPriceChanged();
    
        /// <summary>
        /// There are no comments for BOLReqd in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short BOLReqd
        {
            get
            {
                short value = _BOLReqd;
                OnGetBOLReqd(ref value);
                return value;
            }
            set
            {
                if (_BOLReqd != value)
                {
                  OnBOLReqdChanging(ref value);
                  ReportPropertyChanging("BOLReqd");
                  _BOLReqd = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BOLReqd");
                  OnBOLReqdChanged();
              }
            }
        }
        private short _BOLReqd = 0;
        partial void OnGetBOLReqd(ref short value);
        partial void OnBOLReqdChanging(ref short value);
        partial void OnBOLReqdChanged();
    
        /// <summary>
        /// There are no comments for CarrierAcctNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CarrierAcctNo
        {
            get
            {
                string value = _CarrierAcctNo;
                OnGetCarrierAcctNo(ref value);
                return value;
            }
            set
            {
                if (_CarrierAcctNo != value)
                {
                  OnCarrierAcctNoChanging(ref value);
                  ReportPropertyChanging("CarrierAcctNo");
                  _CarrierAcctNo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CarrierAcctNo");
                  OnCarrierAcctNoChanged();
              }
            }
        }
        private string _CarrierAcctNo;
        partial void OnGetCarrierAcctNo(ref string value);
        partial void OnCarrierAcctNoChanging(ref string value);
        partial void OnCarrierAcctNoChanged();
    
        /// <summary>
        /// There are no comments for CarrierBillMeth in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CarrierBillMeth
        {
            get
            {
                short value = _CarrierBillMeth;
                OnGetCarrierBillMeth(ref value);
                return value;
            }
            set
            {
                if (_CarrierBillMeth != value)
                {
                  OnCarrierBillMethChanging(ref value);
                  ReportPropertyChanging("CarrierBillMeth");
                  _CarrierBillMeth = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CarrierBillMeth");
                  OnCarrierBillMethChanged();
              }
            }
        }
        private short _CarrierBillMeth = 6;
        partial void OnGetCarrierBillMeth(ref short value);
        partial void OnCarrierBillMethChanging(ref short value);
        partial void OnCarrierBillMethChanged();
    
        /// <summary>
        /// There are no comments for CloseSOLineOnFirstShip in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CloseSOLineOnFirstShip
        {
            get
            {
                short value = _CloseSOLineOnFirstShip;
                OnGetCloseSOLineOnFirstShip(ref value);
                return value;
            }
            set
            {
                if (_CloseSOLineOnFirstShip != value)
                {
                  OnCloseSOLineOnFirstShipChanging(ref value);
                  ReportPropertyChanging("CloseSOLineOnFirstShip");
                  _CloseSOLineOnFirstShip = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CloseSOLineOnFirstShip");
                  OnCloseSOLineOnFirstShipChanged();
              }
            }
        }
        private short _CloseSOLineOnFirstShip = 0;
        partial void OnGetCloseSOLineOnFirstShip(ref short value);
        partial void OnCloseSOLineOnFirstShipChanging(ref short value);
        partial void OnCloseSOLineOnFirstShipChanged();
    
        /// <summary>
        /// There are no comments for CloseSOOnFirstShip in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CloseSOOnFirstShip
        {
            get
            {
                short value = _CloseSOOnFirstShip;
                OnGetCloseSOOnFirstShip(ref value);
                return value;
            }
            set
            {
                if (_CloseSOOnFirstShip != value)
                {
                  OnCloseSOOnFirstShipChanging(ref value);
                  ReportPropertyChanging("CloseSOOnFirstShip");
                  _CloseSOOnFirstShip = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CloseSOOnFirstShip");
                  OnCloseSOOnFirstShipChanged();
              }
            }
        }
        private short _CloseSOOnFirstShip = 0;
        partial void OnGetCloseSOOnFirstShip(ref short value);
        partial void OnCloseSOOnFirstShipChanging(ref short value);
        partial void OnCloseSOOnFirstShipChanged();
    
        /// <summary>
        /// There are no comments for CommPlanKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CommPlanKey
        {
            get
            {
                int? value = _CommPlanKey;
                OnGetCommPlanKey(ref value);
                return value;
            }
            set
            {
                if (_CommPlanKey != value)
                {
                  OnCommPlanKeyChanging(ref value);
                  ReportPropertyChanging("CommPlanKey");
                  _CommPlanKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CommPlanKey");
                  OnCommPlanKeyChanged();
              }
            }
        }
        private int? _CommPlanKey;
        partial void OnGetCommPlanKey(ref int? value);
        partial void OnCommPlanKeyChanging(ref int? value);
        partial void OnCommPlanKeyChanged();
    
        /// <summary>
        /// There are no comments for CreateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CreateDate
        {
            get
            {
                global::System.DateTime? value = _CreateDate;
                OnGetCreateDate(ref value);
                return value;
            }
            set
            {
                if (_CreateDate != value)
                {
                  OnCreateDateChanging(ref value);
                  ReportPropertyChanging("CreateDate");
                  _CreateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateDate");
                  OnCreateDateChanged();
              }
            }
        }
        private global::System.DateTime? _CreateDate;
        partial void OnGetCreateDate(ref global::System.DateTime? value);
        partial void OnCreateDateChanging(ref global::System.DateTime? value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// There are no comments for CreateType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CreateType
        {
            get
            {
                short value = _CreateType;
                OnGetCreateType(ref value);
                return value;
            }
            set
            {
                if (_CreateType != value)
                {
                  OnCreateTypeChanging(ref value);
                  ReportPropertyChanging("CreateType");
                  _CreateType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateType");
                  OnCreateTypeChanged();
              }
            }
        }
        private short _CreateType = 0;
        partial void OnGetCreateType(ref short value);
        partial void OnCreateTypeChanging(ref short value);
        partial void OnCreateTypeChanged();
    
        /// <summary>
        /// There are no comments for CreateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CreateUserID
        {
            get
            {
                string value = _CreateUserID;
                OnGetCreateUserID(ref value);
                return value;
            }
            set
            {
                if (_CreateUserID != value)
                {
                  OnCreateUserIDChanging(ref value);
                  ReportPropertyChanging("CreateUserID");
                  _CreateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CreateUserID");
                  OnCreateUserIDChanged();
              }
            }
        }
        private string _CreateUserID;
        partial void OnGetCreateUserID(ref string value);
        partial void OnCreateUserIDChanging(ref string value);
        partial void OnCreateUserIDChanged();
    
        /// <summary>
        /// There are no comments for CreditCardKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CreditCardKey
        {
            get
            {
                int? value = _CreditCardKey;
                OnGetCreditCardKey(ref value);
                return value;
            }
            set
            {
                if (_CreditCardKey != value)
                {
                  OnCreditCardKeyChanging(ref value);
                  ReportPropertyChanging("CreditCardKey");
                  _CreditCardKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreditCardKey");
                  OnCreditCardKeyChanged();
              }
            }
        }
        private int? _CreditCardKey;
        partial void OnGetCreditCardKey(ref int? value);
        partial void OnCreditCardKeyChanging(ref int? value);
        partial void OnCreditCardKeyChanged();
    
        /// <summary>
        /// There are no comments for CurrExchSchdKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CurrExchSchdKey
        {
            get
            {
                int? value = _CurrExchSchdKey;
                OnGetCurrExchSchdKey(ref value);
                return value;
            }
            set
            {
                if (_CurrExchSchdKey != value)
                {
                  OnCurrExchSchdKeyChanging(ref value);
                  ReportPropertyChanging("CurrExchSchdKey");
                  _CurrExchSchdKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CurrExchSchdKey");
                  OnCurrExchSchdKeyChanged();
              }
            }
        }
        private int? _CurrExchSchdKey;
        partial void OnGetCurrExchSchdKey(ref int? value);
        partial void OnCurrExchSchdKeyChanging(ref int? value);
        partial void OnCurrExchSchdKeyChanged();
    
        /// <summary>
        /// There are no comments for CurrID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CurrID
        {
            get
            {
                string value = _CurrID;
                OnGetCurrID(ref value);
                return value;
            }
            set
            {
                if (_CurrID != value)
                {
                  OnCurrIDChanging(ref value);
                  ReportPropertyChanging("CurrID");
                  _CurrID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CurrID");
                  OnCurrIDChanged();
              }
            }
        }
        private string _CurrID;
        partial void OnGetCurrID(ref string value);
        partial void OnCurrIDChanging(ref string value);
        partial void OnCurrIDChanged();
    
        /// <summary>
        /// There are no comments for CustAddrID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CustAddrID
        {
            get
            {
                string value = _CustAddrID;
                OnGetCustAddrID(ref value);
                return value;
            }
            set
            {
                if (_CustAddrID != value)
                {
                  OnCustAddrIDChanging(ref value);
                  ReportPropertyChanging("CustAddrID");
                  _CustAddrID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CustAddrID");
                  OnCustAddrIDChanged();
              }
            }
        }
        private string _CustAddrID;
        partial void OnGetCustAddrID(ref string value);
        partial void OnCustAddrIDChanging(ref string value);
        partial void OnCustAddrIDChanged();
    
        /// <summary>
        /// There are no comments for CustKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustKey
        {
            get
            {
                int value = _CustKey;
                OnGetCustKey(ref value);
                return value;
            }
            set
            {
                if (_CustKey != value)
                {
                  OnCustKeyChanging(ref value);
                  ReportPropertyChanging("CustKey");
                  _CustKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustKey");
                  OnCustKeyChanged();
              }
            }
        }
        private int _CustKey;
        partial void OnGetCustKey(ref int value);
        partial void OnCustKeyChanging(ref int value);
        partial void OnCustKeyChanged();
    
        /// <summary>
        /// There are no comments for CustPriceGroupKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CustPriceGroupKey
        {
            get
            {
                int? value = _CustPriceGroupKey;
                OnGetCustPriceGroupKey(ref value);
                return value;
            }
            set
            {
                if (_CustPriceGroupKey != value)
                {
                  OnCustPriceGroupKeyChanging(ref value);
                  ReportPropertyChanging("CustPriceGroupKey");
                  _CustPriceGroupKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustPriceGroupKey");
                  OnCustPriceGroupKeyChanged();
              }
            }
        }
        private int? _CustPriceGroupKey;
        partial void OnGetCustPriceGroupKey(ref int? value);
        partial void OnCustPriceGroupKeyChanging(ref int? value);
        partial void OnCustPriceGroupKeyChanged();
    
        /// <summary>
        /// There are no comments for DfltCntctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? DfltCntctKey
        {
            get
            {
                int? value = _DfltCntctKey;
                OnGetDfltCntctKey(ref value);
                return value;
            }
            set
            {
                if (_DfltCntctKey != value)
                {
                  OnDfltCntctKeyChanging(ref value);
                  ReportPropertyChanging("DfltCntctKey");
                  _DfltCntctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltCntctKey");
                  OnDfltCntctKeyChanged();
              }
            }
        }
        private int? _DfltCntctKey;
        partial void OnGetDfltCntctKey(ref int? value);
        partial void OnDfltCntctKeyChanging(ref int? value);
        partial void OnDfltCntctKeyChanged();
    
        /// <summary>
        /// There are no comments for FOBKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? FOBKey
        {
            get
            {
                int? value = _FOBKey;
                OnGetFOBKey(ref value);
                return value;
            }
            set
            {
                if (_FOBKey != value)
                {
                  OnFOBKeyChanging(ref value);
                  ReportPropertyChanging("FOBKey");
                  _FOBKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FOBKey");
                  OnFOBKeyChanged();
              }
            }
        }
        private int? _FOBKey;
        partial void OnGetFOBKey(ref int? value);
        partial void OnFOBKeyChanging(ref int? value);
        partial void OnFOBKeyChanged();
    
        /// <summary>
        /// There are no comments for FreightMethod in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short FreightMethod
        {
            get
            {
                short value = _FreightMethod;
                OnGetFreightMethod(ref value);
                return value;
            }
            set
            {
                if (_FreightMethod != value)
                {
                  OnFreightMethodChanging(ref value);
                  ReportPropertyChanging("FreightMethod");
                  _FreightMethod = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FreightMethod");
                  OnFreightMethodChanged();
              }
            }
        }
        private short _FreightMethod = 2;
        partial void OnGetFreightMethod(ref short value);
        partial void OnFreightMethodChanging(ref short value);
        partial void OnFreightMethodChanged();
    
        /// <summary>
        /// There are no comments for ImportLogKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ImportLogKey
        {
            get
            {
                int? value = _ImportLogKey;
                OnGetImportLogKey(ref value);
                return value;
            }
            set
            {
                if (_ImportLogKey != value)
                {
                  OnImportLogKeyChanging(ref value);
                  ReportPropertyChanging("ImportLogKey");
                  _ImportLogKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ImportLogKey");
                  OnImportLogKeyChanged();
              }
            }
        }
        private int? _ImportLogKey;
        partial void OnGetImportLogKey(ref int? value);
        partial void OnImportLogKeyChanging(ref int? value);
        partial void OnImportLogKeyChanged();
    
        /// <summary>
        /// There are no comments for InvcFormKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? InvcFormKey
        {
            get
            {
                int? value = _InvcFormKey;
                OnGetInvcFormKey(ref value);
                return value;
            }
            set
            {
                if (_InvcFormKey != value)
                {
                  OnInvcFormKeyChanging(ref value);
                  ReportPropertyChanging("InvcFormKey");
                  _InvcFormKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvcFormKey");
                  OnInvcFormKeyChanged();
              }
            }
        }
        private int? _InvcFormKey;
        partial void OnGetInvcFormKey(ref int? value);
        partial void OnInvcFormKeyChanging(ref int? value);
        partial void OnInvcFormKeyChanged();
    
        /// <summary>
        /// There are no comments for InvcMsg in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string InvcMsg
        {
            get
            {
                string value = _InvcMsg;
                OnGetInvcMsg(ref value);
                return value;
            }
            set
            {
                if (_InvcMsg != value)
                {
                  OnInvcMsgChanging(ref value);
                  ReportPropertyChanging("InvcMsg");
                  _InvcMsg = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("InvcMsg");
                  OnInvcMsgChanged();
              }
            }
        }
        private string _InvcMsg;
        partial void OnGetInvcMsg(ref string value);
        partial void OnInvcMsgChanging(ref string value);
        partial void OnInvcMsgChanged();
    
        /// <summary>
        /// There are no comments for InvoiceReqd in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short InvoiceReqd
        {
            get
            {
                short value = _InvoiceReqd;
                OnGetInvoiceReqd(ref value);
                return value;
            }
            set
            {
                if (_InvoiceReqd != value)
                {
                  OnInvoiceReqdChanging(ref value);
                  ReportPropertyChanging("InvoiceReqd");
                  _InvoiceReqd = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvoiceReqd");
                  OnInvoiceReqdChanged();
              }
            }
        }
        private short _InvoiceReqd = 0;
        partial void OnGetInvoiceReqd(ref short value);
        partial void OnInvoiceReqdChanging(ref short value);
        partial void OnInvoiceReqdChanged();
    
        /// <summary>
        /// There are no comments for LanguageID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int LanguageID
        {
            get
            {
                int value = _LanguageID;
                OnGetLanguageID(ref value);
                return value;
            }
            set
            {
                if (_LanguageID != value)
                {
                  OnLanguageIDChanging(ref value);
                  ReportPropertyChanging("LanguageID");
                  _LanguageID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LanguageID");
                  OnLanguageIDChanged();
              }
            }
        }
        private int _LanguageID;
        partial void OnGetLanguageID(ref int value);
        partial void OnLanguageIDChanging(ref int value);
        partial void OnLanguageIDChanged();
    
        /// <summary>
        /// There are no comments for PackListContentsReqd in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PackListContentsReqd
        {
            get
            {
                short value = _PackListContentsReqd;
                OnGetPackListContentsReqd(ref value);
                return value;
            }
            set
            {
                if (_PackListContentsReqd != value)
                {
                  OnPackListContentsReqdChanging(ref value);
                  ReportPropertyChanging("PackListContentsReqd");
                  _PackListContentsReqd = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PackListContentsReqd");
                  OnPackListContentsReqdChanged();
              }
            }
        }
        private short _PackListContentsReqd = 0;
        partial void OnGetPackListContentsReqd(ref short value);
        partial void OnPackListContentsReqdChanging(ref short value);
        partial void OnPackListContentsReqdChanged();
    
        /// <summary>
        /// There are no comments for PackListFormKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? PackListFormKey
        {
            get
            {
                int? value = _PackListFormKey;
                OnGetPackListFormKey(ref value);
                return value;
            }
            set
            {
                if (_PackListFormKey != value)
                {
                  OnPackListFormKeyChanging(ref value);
                  ReportPropertyChanging("PackListFormKey");
                  _PackListFormKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PackListFormKey");
                  OnPackListFormKeyChanged();
              }
            }
        }
        private int? _PackListFormKey;
        partial void OnGetPackListFormKey(ref int? value);
        partial void OnPackListFormKeyChanging(ref int? value);
        partial void OnPackListFormKeyChanged();
    
        /// <summary>
        /// There are no comments for PackListReqd in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PackListReqd
        {
            get
            {
                short value = _PackListReqd;
                OnGetPackListReqd(ref value);
                return value;
            }
            set
            {
                if (_PackListReqd != value)
                {
                  OnPackListReqdChanging(ref value);
                  ReportPropertyChanging("PackListReqd");
                  _PackListReqd = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PackListReqd");
                  OnPackListReqdChanged();
              }
            }
        }
        private short _PackListReqd = 0;
        partial void OnGetPackListReqd(ref short value);
        partial void OnPackListReqdChanging(ref short value);
        partial void OnPackListReqdChanged();
    
        /// <summary>
        /// There are no comments for PmtTermsKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? PmtTermsKey
        {
            get
            {
                int? value = _PmtTermsKey;
                OnGetPmtTermsKey(ref value);
                return value;
            }
            set
            {
                if (_PmtTermsKey != value)
                {
                  OnPmtTermsKeyChanging(ref value);
                  ReportPropertyChanging("PmtTermsKey");
                  _PmtTermsKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PmtTermsKey");
                  OnPmtTermsKeyChanged();
              }
            }
        }
        private int? _PmtTermsKey;
        partial void OnGetPmtTermsKey(ref int? value);
        partial void OnPmtTermsKeyChanging(ref int? value);
        partial void OnPmtTermsKeyChanged();
    
        /// <summary>
        /// There are no comments for PriceAdj in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal PriceAdj
        {
            get
            {
                decimal value = _PriceAdj;
                OnGetPriceAdj(ref value);
                return value;
            }
            set
            {
                if (_PriceAdj != value)
                {
                  OnPriceAdjChanging(ref value);
                  ReportPropertyChanging("PriceAdj");
                  _PriceAdj = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PriceAdj");
                  OnPriceAdjChanged();
              }
            }
        }
        private decimal _PriceAdj = 0m;
        partial void OnGetPriceAdj(ref decimal value);
        partial void OnPriceAdjChanging(ref decimal value);
        partial void OnPriceAdjChanged();
    
        /// <summary>
        /// There are no comments for PriceBase in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PriceBase
        {
            get
            {
                short value = _PriceBase;
                OnGetPriceBase(ref value);
                return value;
            }
            set
            {
                if (_PriceBase != value)
                {
                  OnPriceBaseChanging(ref value);
                  ReportPropertyChanging("PriceBase");
                  _PriceBase = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PriceBase");
                  OnPriceBaseChanged();
              }
            }
        }
        private short _PriceBase = 0;
        partial void OnGetPriceBase(ref short value);
        partial void OnPriceBaseChanging(ref short value);
        partial void OnPriceBaseChanged();
    
        /// <summary>
        /// There are no comments for PrintOrderAck in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PrintOrderAck
        {
            get
            {
                short value = _PrintOrderAck;
                OnGetPrintOrderAck(ref value);
                return value;
            }
            set
            {
                if (_PrintOrderAck != value)
                {
                  OnPrintOrderAckChanging(ref value);
                  ReportPropertyChanging("PrintOrderAck");
                  _PrintOrderAck = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PrintOrderAck");
                  OnPrintOrderAckChanged();
              }
            }
        }
        private short _PrintOrderAck = 0;
        partial void OnGetPrintOrderAck(ref short value);
        partial void OnPrintOrderAckChanging(ref short value);
        partial void OnPrintOrderAckChanged();
    
        /// <summary>
        /// There are no comments for RequireSOAck in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short RequireSOAck
        {
            get
            {
                short value = _RequireSOAck;
                OnGetRequireSOAck(ref value);
                return value;
            }
            set
            {
                if (_RequireSOAck != value)
                {
                  OnRequireSOAckChanging(ref value);
                  ReportPropertyChanging("RequireSOAck");
                  _RequireSOAck = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RequireSOAck");
                  OnRequireSOAckChanged();
              }
            }
        }
        private short _RequireSOAck = 0;
        partial void OnGetRequireSOAck(ref short value);
        partial void OnRequireSOAckChanging(ref short value);
        partial void OnRequireSOAckChanged();
    
        /// <summary>
        /// There are no comments for SalesTerritoryKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? SalesTerritoryKey
        {
            get
            {
                int? value = _SalesTerritoryKey;
                OnGetSalesTerritoryKey(ref value);
                return value;
            }
            set
            {
                if (_SalesTerritoryKey != value)
                {
                  OnSalesTerritoryKeyChanging(ref value);
                  ReportPropertyChanging("SalesTerritoryKey");
                  _SalesTerritoryKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesTerritoryKey");
                  OnSalesTerritoryKeyChanged();
              }
            }
        }
        private int? _SalesTerritoryKey;
        partial void OnGetSalesTerritoryKey(ref int? value);
        partial void OnSalesTerritoryKeyChanging(ref int? value);
        partial void OnSalesTerritoryKeyChanged();
    
        /// <summary>
        /// There are no comments for ShipComplete in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ShipComplete
        {
            get
            {
                short value = _ShipComplete;
                OnGetShipComplete(ref value);
                return value;
            }
            set
            {
                if (_ShipComplete != value)
                {
                  OnShipCompleteChanging(ref value);
                  ReportPropertyChanging("ShipComplete");
                  _ShipComplete = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipComplete");
                  OnShipCompleteChanged();
              }
            }
        }
        private short _ShipComplete = 0;
        partial void OnGetShipComplete(ref short value);
        partial void OnShipCompleteChanging(ref short value);
        partial void OnShipCompleteChanged();
    
        /// <summary>
        /// There are no comments for ShipDays in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ShipDays
        {
            get
            {
                short value = _ShipDays;
                OnGetShipDays(ref value);
                return value;
            }
            set
            {
                if (_ShipDays != value)
                {
                  OnShipDaysChanging(ref value);
                  ReportPropertyChanging("ShipDays");
                  _ShipDays = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipDays");
                  OnShipDaysChanged();
              }
            }
        }
        private short _ShipDays = 0;
        partial void OnGetShipDays(ref short value);
        partial void OnShipDaysChanging(ref short value);
        partial void OnShipDaysChanged();
    
        /// <summary>
        /// There are no comments for ShipLabelFormKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ShipLabelFormKey
        {
            get
            {
                int? value = _ShipLabelFormKey;
                OnGetShipLabelFormKey(ref value);
                return value;
            }
            set
            {
                if (_ShipLabelFormKey != value)
                {
                  OnShipLabelFormKeyChanging(ref value);
                  ReportPropertyChanging("ShipLabelFormKey");
                  _ShipLabelFormKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipLabelFormKey");
                  OnShipLabelFormKeyChanged();
              }
            }
        }
        private int? _ShipLabelFormKey;
        partial void OnGetShipLabelFormKey(ref int? value);
        partial void OnShipLabelFormKeyChanging(ref int? value);
        partial void OnShipLabelFormKeyChanged();
    
        /// <summary>
        /// There are no comments for ShipLabelsReqd in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ShipLabelsReqd
        {
            get
            {
                short value = _ShipLabelsReqd;
                OnGetShipLabelsReqd(ref value);
                return value;
            }
            set
            {
                if (_ShipLabelsReqd != value)
                {
                  OnShipLabelsReqdChanging(ref value);
                  ReportPropertyChanging("ShipLabelsReqd");
                  _ShipLabelsReqd = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipLabelsReqd");
                  OnShipLabelsReqdChanged();
              }
            }
        }
        private short _ShipLabelsReqd = 0;
        partial void OnGetShipLabelsReqd(ref short value);
        partial void OnShipLabelsReqdChanging(ref short value);
        partial void OnShipLabelsReqdChanged();
    
        /// <summary>
        /// There are no comments for ShipMethKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ShipMethKey
        {
            get
            {
                int? value = _ShipMethKey;
                OnGetShipMethKey(ref value);
                return value;
            }
            set
            {
                if (_ShipMethKey != value)
                {
                  OnShipMethKeyChanging(ref value);
                  ReportPropertyChanging("ShipMethKey");
                  _ShipMethKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipMethKey");
                  OnShipMethKeyChanged();
              }
            }
        }
        private int? _ShipMethKey;
        partial void OnGetShipMethKey(ref int? value);
        partial void OnShipMethKeyChanging(ref int? value);
        partial void OnShipMethKeyChanged();
    
        /// <summary>
        /// There are no comments for ShipZoneKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ShipZoneKey
        {
            get
            {
                int? value = _ShipZoneKey;
                OnGetShipZoneKey(ref value);
                return value;
            }
            set
            {
                if (_ShipZoneKey != value)
                {
                  OnShipZoneKeyChanging(ref value);
                  ReportPropertyChanging("ShipZoneKey");
                  _ShipZoneKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipZoneKey");
                  OnShipZoneKeyChanged();
              }
            }
        }
        private int? _ShipZoneKey;
        partial void OnGetShipZoneKey(ref int? value);
        partial void OnShipZoneKeyChanging(ref int? value);
        partial void OnShipZoneKeyChanged();
    
        /// <summary>
        /// There are no comments for SOAckFormKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? SOAckFormKey
        {
            get
            {
                int? value = _SOAckFormKey;
                OnGetSOAckFormKey(ref value);
                return value;
            }
            set
            {
                if (_SOAckFormKey != value)
                {
                  OnSOAckFormKeyChanging(ref value);
                  ReportPropertyChanging("SOAckFormKey");
                  _SOAckFormKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SOAckFormKey");
                  OnSOAckFormKeyChanged();
              }
            }
        }
        private int? _SOAckFormKey;
        partial void OnGetSOAckFormKey(ref int? value);
        partial void OnSOAckFormKeyChanging(ref int? value);
        partial void OnSOAckFormKeyChanged();
    
        /// <summary>
        /// There are no comments for SOAckMeth in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short SOAckMeth
        {
            get
            {
                short value = _SOAckMeth;
                OnGetSOAckMeth(ref value);
                return value;
            }
            set
            {
                if (_SOAckMeth != value)
                {
                  OnSOAckMethChanging(ref value);
                  ReportPropertyChanging("SOAckMeth");
                  _SOAckMeth = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SOAckMeth");
                  OnSOAckMethChanged();
              }
            }
        }
        private short _SOAckMeth = 0;
        partial void OnGetSOAckMeth(ref short value);
        partial void OnSOAckMethChanging(ref short value);
        partial void OnSOAckMethChanged();
    
        /// <summary>
        /// There are no comments for SperKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? SperKey
        {
            get
            {
                int? value = _SperKey;
                OnGetSperKey(ref value);
                return value;
            }
            set
            {
                if (_SperKey != value)
                {
                  OnSperKeyChanging(ref value);
                  ReportPropertyChanging("SperKey");
                  _SperKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SperKey");
                  OnSperKeyChanged();
              }
            }
        }
        private int? _SperKey;
        partial void OnGetSperKey(ref int? value);
        partial void OnSperKeyChanging(ref int? value);
        partial void OnSperKeyChanged();
    
        /// <summary>
        /// There are no comments for STaxSchdKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? STaxSchdKey
        {
            get
            {
                int? value = _STaxSchdKey;
                OnGetSTaxSchdKey(ref value);
                return value;
            }
            set
            {
                if (_STaxSchdKey != value)
                {
                  OnSTaxSchdKeyChanging(ref value);
                  ReportPropertyChanging("STaxSchdKey");
                  _STaxSchdKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("STaxSchdKey");
                  OnSTaxSchdKeyChanged();
              }
            }
        }
        private int? _STaxSchdKey;
        partial void OnGetSTaxSchdKey(ref int? value);
        partial void OnSTaxSchdKeyChanging(ref int? value);
        partial void OnSTaxSchdKeyChanged();
    
        /// <summary>
        /// There are no comments for UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? UpdateDate
        {
            get
            {
                global::System.DateTime? value = _UpdateDate;
                OnGetUpdateDate(ref value);
                return value;
            }
            set
            {
                if (_UpdateDate != value)
                {
                  OnUpdateDateChanging(ref value);
                  ReportPropertyChanging("UpdateDate");
                  _UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateDate");
                  OnUpdateDateChanged();
              }
            }
        }
        private global::System.DateTime? _UpdateDate;
        partial void OnGetUpdateDate(ref global::System.DateTime? value);
        partial void OnUpdateDateChanging(ref global::System.DateTime? value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// There are no comments for UpdateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UpdateUserID
        {
            get
            {
                string value = _UpdateUserID;
                OnGetUpdateUserID(ref value);
                return value;
            }
            set
            {
                if (_UpdateUserID != value)
                {
                  OnUpdateUserIDChanging(ref value);
                  ReportPropertyChanging("UpdateUserID");
                  _UpdateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UpdateUserID");
                  OnUpdateUserIDChanged();
              }
            }
        }
        private string _UpdateUserID;
        partial void OnGetUpdateUserID(ref string value);
        partial void OnUpdateUserIDChanging(ref string value);
        partial void OnUpdateUserIDChanged();
    
        /// <summary>
        /// There are no comments for WhseKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? WhseKey
        {
            get
            {
                int? value = _WhseKey;
                OnGetWhseKey(ref value);
                return value;
            }
            set
            {
                if (_WhseKey != value)
                {
                  OnWhseKeyChanging(ref value);
                  ReportPropertyChanging("WhseKey");
                  _WhseKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WhseKey");
                  OnWhseKeyChanged();
              }
            }
        }
        private int? _WhseKey;
        partial void OnGetWhseKey(ref int? value);
        partial void OnWhseKeyChanging(ref int? value);
        partial void OnWhseKeyChanged();
    
        /// <summary>
        /// There are no comments for UsePromoPrice in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short UsePromoPrice
        {
            get
            {
                short value = _UsePromoPrice;
                OnGetUsePromoPrice(ref value);
                return value;
            }
            set
            {
                if (_UsePromoPrice != value)
                {
                  OnUsePromoPriceChanging(ref value);
                  ReportPropertyChanging("UsePromoPrice");
                  _UsePromoPrice = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UsePromoPrice");
                  OnUsePromoPriceChanged();
              }
            }
        }
        private short _UsePromoPrice = 0;
        partial void OnGetUsePromoPrice(ref short value);
        partial void OnUsePromoPriceChanging(ref short value);
        partial void OnUsePromoPriceChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Customers in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "CustomerAddress_Customer", "Customers")]
        public virtual EntityCollection<Customer> Customers
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Customer>("Net4Sage.DataAccessModel.CustomerAddress_Customer", "Customers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Customer>("Net4Sage.DataAccessModel.CustomerAddress_Customer", "Customers", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SalesTerritory in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "SalesTerritory_CustomerAddress", "SalesTerritory")]
        public virtual SalesTerritory SalesTerritory
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesTerritory>("Net4Sage.DataAccessModel.SalesTerritory_CustomerAddress", "SalesTerritory").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesTerritory>("Net4Sage.DataAccessModel.SalesTerritory_CustomerAddress", "SalesTerritory").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SalesTerritory in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SalesTerritory> SalesTerritoryReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesTerritory>("Net4Sage.DataAccessModel.SalesTerritory_CustomerAddress", "SalesTerritory");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SalesTerritory>("Net4Sage.DataAccessModel.SalesTerritory_CustomerAddress", "SalesTerritory", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesTerritory>("Net4Sage.DataAccessModel.SalesTerritory_CustomerAddress", "SalesTerritory").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Address in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "CustomerAddress_Address", "Address")]
        public virtual Address Address
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Address>("Net4Sage.DataAccessModel.CustomerAddress_Address", "Address").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Address>("Net4Sage.DataAccessModel.CustomerAddress_Address", "Address").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Address in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Address> AddressReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Address>("Net4Sage.DataAccessModel.CustomerAddress_Address", "Address");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Address>("Net4Sage.DataAccessModel.CustomerAddress_Address", "Address", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Address>("Net4Sage.DataAccessModel.CustomerAddress_Address", "Address").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SalesPerson in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "SalesPerson_CustomerAddress", "SalesPerson")]
        public virtual SalesPerson SalesPerson
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesPerson>("Net4Sage.DataAccessModel.SalesPerson_CustomerAddress", "SalesPerson").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesPerson>("Net4Sage.DataAccessModel.SalesPerson_CustomerAddress", "SalesPerson").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SalesPerson in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SalesPerson> SalesPersonReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesPerson>("Net4Sage.DataAccessModel.SalesPerson_CustomerAddress", "SalesPerson");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SalesPerson>("Net4Sage.DataAccessModel.SalesPerson_CustomerAddress", "SalesPerson", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesPerson>("Net4Sage.DataAccessModel.SalesPerson_CustomerAddress", "SalesPerson").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.UnitMeasure in the schema.
    /// </summary>
    /// <KeyProperties>
    /// UnitMeasKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="UnitMeasure")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [Net4Sage.Controls.Lookup.LookupAutoShowColumns(false)]
    [Net4Sage.Controls.Lookup.LookupFormTitle(@"Buscar UM")]
    public partial class UnitMeasure : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new UnitMeasure object.
        /// </summary>
        /// <param name="unitMeasKey">Initial value of UnitMeasKey.</param>
        /// <param name="@base">Initial value of Base.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="measType">Initial value of MeasType.</param>
        /// <param name="unitMeasID">Initial value of UnitMeasID.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        public static UnitMeasure CreateUnitMeasure(int unitMeasKey, short @base, string companyID, short measType, string unitMeasID, int updateCounter)
        {
            UnitMeasure unitMeasure = new UnitMeasure();
            unitMeasure.UnitMeasKey = unitMeasKey;
            unitMeasure.Base = @base;
            unitMeasure.CompanyID = companyID;
            unitMeasure.MeasType = measType;
            unitMeasure.UnitMeasID = unitMeasID;
            unitMeasure.UpdateCounter = updateCounter;
            return unitMeasure;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for UnitMeasKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupKeyReturn]
        public virtual int UnitMeasKey
        {
            get
            {
                int value = _UnitMeasKey;
                OnGetUnitMeasKey(ref value);
                return value;
            }
            set
            {
                if (_UnitMeasKey != value)
                {
                  OnUnitMeasKeyChanging(ref value);
                  ReportPropertyChanging("UnitMeasKey");
                  _UnitMeasKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UnitMeasKey");
                  OnUnitMeasKeyChanged();
              }
            }
        }
        private int _UnitMeasKey;
        partial void OnGetUnitMeasKey(ref int value);
        partial void OnUnitMeasKeyChanging(ref int value);
        partial void OnUnitMeasKeyChanged();
    
        /// <summary>
        /// There are no comments for Base in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Base
        {
            get
            {
                short value = _Base;
                OnGetBase(ref value);
                return value;
            }
            set
            {
                if (_Base != value)
                {
                  OnBaseChanging(ref value);
                  ReportPropertyChanging("Base");
                  _Base = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Base");
                  OnBaseChanged();
              }
            }
        }
        private short _Base = 0;
        partial void OnGetBase(ref short value);
        partial void OnBaseChanging(ref short value);
        partial void OnBaseChanged();
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for MeasType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short MeasType
        {
            get
            {
                short value = _MeasType;
                OnGetMeasType(ref value);
                return value;
            }
            set
            {
                if (_MeasType != value)
                {
                  OnMeasTypeChanging(ref value);
                  ReportPropertyChanging("MeasType");
                  _MeasType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MeasType");
                  OnMeasTypeChanged();
              }
            }
        }
        private short _MeasType = 3;
        partial void OnGetMeasType(ref short value);
        partial void OnMeasTypeChanging(ref short value);
        partial void OnMeasTypeChanged();
    
        /// <summary>
        /// There are no comments for UnitMeasID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupTextReturn]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"UM")]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"UM")]
        public virtual string UnitMeasID
        {
            get
            {
                string value = _UnitMeasID;
                OnGetUnitMeasID(ref value);
                return value;
            }
            set
            {
                if (_UnitMeasID != value)
                {
                  OnUnitMeasIDChanging(ref value);
                  ReportPropertyChanging("UnitMeasID");
                  _UnitMeasID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("UnitMeasID");
                  OnUnitMeasIDChanged();
              }
            }
        }
        private string _UnitMeasID;
        partial void OnGetUnitMeasID(ref string value);
        partial void OnUnitMeasIDChanging(ref string value);
        partial void OnUnitMeasIDChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Items in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "UnitMeasure_Item", "Items")]
        public virtual EntityCollection<Item> Items
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Item>("Net4Sage.DataAccessModel.UnitMeasure_Item", "Items");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Item>("Net4Sage.DataAccessModel.UnitMeasure_Item", "Items", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ItemUMs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "UnitMeasure_ItemUM", "ItemUMs")]
        public virtual EntityCollection<ItemUM> ItemUMs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ItemUM>("Net4Sage.DataAccessModel.UnitMeasure_ItemUM", "ItemUMs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ItemUM>("Net4Sage.DataAccessModel.UnitMeasure_ItemUM", "ItemUMs", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SOLines in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "UnitMeasure_SOLine", "SOLines")]
        public virtual EntityCollection<SOLine> SOLines
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SOLine>("Net4Sage.DataAccessModel.UnitMeasure_SOLine", "SOLines");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SOLine>("Net4Sage.DataAccessModel.UnitMeasure_SOLine", "SOLines", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.ItemUM in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ItemKey
    /// TargetUnitMeasKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="ItemUM")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ItemUM : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ItemUM object.
        /// </summary>
        /// <param name="itemKey">Initial value of ItemKey.</param>
        /// <param name="targetUnitMeasKey">Initial value of TargetUnitMeasKey.</param>
        /// <param name="conversionFactor">Initial value of ConversionFactor.</param>
        /// <param name="conversionType">Initial value of ConversionType.</param>
        /// <param name="isSmallestUOM">Initial value of IsSmallestUOM.</param>
        /// <param name="unitVolume">Initial value of UnitVolume.</param>
        /// <param name="unitWeight">Initial value of UnitWeight.</param>
        /// <param name="useStdConv">Initial value of UseStdConv.</param>
        public static ItemUM CreateItemUM(int itemKey, int targetUnitMeasKey, decimal conversionFactor, short conversionType, short isSmallestUOM, double unitVolume, double unitWeight, short useStdConv)
        {
            ItemUM itemUM = new ItemUM();
            itemUM.ItemKey = itemKey;
            itemUM.TargetUnitMeasKey = targetUnitMeasKey;
            itemUM.ConversionFactor = conversionFactor;
            itemUM.ConversionType = conversionType;
            itemUM.IsSmallestUOM = isSmallestUOM;
            itemUM.UnitVolume = unitVolume;
            itemUM.UnitWeight = unitWeight;
            itemUM.UseStdConv = useStdConv;
            return itemUM;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ItemKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ItemKey
        {
            get
            {
                int value = _ItemKey;
                OnGetItemKey(ref value);
                return value;
            }
            set
            {
                if (_ItemKey != value)
                {
                  OnItemKeyChanging(ref value);
                  ReportPropertyChanging("ItemKey");
                  _ItemKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ItemKey");
                  OnItemKeyChanged();
              }
            }
        }
        private int _ItemKey;
        partial void OnGetItemKey(ref int value);
        partial void OnItemKeyChanging(ref int value);
        partial void OnItemKeyChanged();
    
        /// <summary>
        /// There are no comments for TargetUnitMeasKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int TargetUnitMeasKey
        {
            get
            {
                int value = _TargetUnitMeasKey;
                OnGetTargetUnitMeasKey(ref value);
                return value;
            }
            set
            {
                if (_TargetUnitMeasKey != value)
                {
                  OnTargetUnitMeasKeyChanging(ref value);
                  ReportPropertyChanging("TargetUnitMeasKey");
                  _TargetUnitMeasKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TargetUnitMeasKey");
                  OnTargetUnitMeasKeyChanged();
              }
            }
        }
        private int _TargetUnitMeasKey;
        partial void OnGetTargetUnitMeasKey(ref int value);
        partial void OnTargetUnitMeasKeyChanging(ref int value);
        partial void OnTargetUnitMeasKeyChanged();
    
        /// <summary>
        /// There are no comments for ConversionFactor in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal ConversionFactor
        {
            get
            {
                decimal value = _ConversionFactor;
                OnGetConversionFactor(ref value);
                return value;
            }
            set
            {
                if (_ConversionFactor != value)
                {
                  OnConversionFactorChanging(ref value);
                  ReportPropertyChanging("ConversionFactor");
                  _ConversionFactor = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ConversionFactor");
                  OnConversionFactorChanged();
              }
            }
        }
        private decimal _ConversionFactor = 1m;
        partial void OnGetConversionFactor(ref decimal value);
        partial void OnConversionFactorChanging(ref decimal value);
        partial void OnConversionFactorChanged();
    
        /// <summary>
        /// There are no comments for ConversionType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ConversionType
        {
            get
            {
                short value = _ConversionType;
                OnGetConversionType(ref value);
                return value;
            }
            set
            {
                if (_ConversionType != value)
                {
                  OnConversionTypeChanging(ref value);
                  ReportPropertyChanging("ConversionType");
                  _ConversionType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ConversionType");
                  OnConversionTypeChanged();
              }
            }
        }
        private short _ConversionType = 1;
        partial void OnGetConversionType(ref short value);
        partial void OnConversionTypeChanging(ref short value);
        partial void OnConversionTypeChanged();
    
        /// <summary>
        /// There are no comments for IsSmallestUOM in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short IsSmallestUOM
        {
            get
            {
                short value = _IsSmallestUOM;
                OnGetIsSmallestUOM(ref value);
                return value;
            }
            set
            {
                if (_IsSmallestUOM != value)
                {
                  OnIsSmallestUOMChanging(ref value);
                  ReportPropertyChanging("IsSmallestUOM");
                  _IsSmallestUOM = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IsSmallestUOM");
                  OnIsSmallestUOMChanged();
              }
            }
        }
        private short _IsSmallestUOM = 0;
        partial void OnGetIsSmallestUOM(ref short value);
        partial void OnIsSmallestUOMChanging(ref short value);
        partial void OnIsSmallestUOMChanged();
    
        /// <summary>
        /// There are no comments for UnitVolume in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual double UnitVolume
        {
            get
            {
                double value = _UnitVolume;
                OnGetUnitVolume(ref value);
                return value;
            }
            set
            {
                if (_UnitVolume != value)
                {
                  OnUnitVolumeChanging(ref value);
                  ReportPropertyChanging("UnitVolume");
                  _UnitVolume = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UnitVolume");
                  OnUnitVolumeChanged();
              }
            }
        }
        private double _UnitVolume = 0;
        partial void OnGetUnitVolume(ref double value);
        partial void OnUnitVolumeChanging(ref double value);
        partial void OnUnitVolumeChanged();
    
        /// <summary>
        /// There are no comments for UnitWeight in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual double UnitWeight
        {
            get
            {
                double value = _UnitWeight;
                OnGetUnitWeight(ref value);
                return value;
            }
            set
            {
                if (_UnitWeight != value)
                {
                  OnUnitWeightChanging(ref value);
                  ReportPropertyChanging("UnitWeight");
                  _UnitWeight = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UnitWeight");
                  OnUnitWeightChanged();
              }
            }
        }
        private double _UnitWeight = 0;
        partial void OnGetUnitWeight(ref double value);
        partial void OnUnitWeightChanging(ref double value);
        partial void OnUnitWeightChanged();
    
        /// <summary>
        /// There are no comments for UPC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UPC
        {
            get
            {
                string value = _UPC;
                OnGetUPC(ref value);
                return value;
            }
            set
            {
                if (_UPC != value)
                {
                  OnUPCChanging(ref value);
                  ReportPropertyChanging("UPC");
                  _UPC = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UPC");
                  OnUPCChanged();
              }
            }
        }
        private string _UPC;
        partial void OnGetUPC(ref string value);
        partial void OnUPCChanging(ref string value);
        partial void OnUPCChanged();
    
        /// <summary>
        /// There are no comments for UseForPurchases in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual short? UseForPurchases
        {
            get
            {
                short? value = _UseForPurchases;
                OnGetUseForPurchases(ref value);
                return value;
            }
            set
            {
                if (_UseForPurchases != value)
                {
                  OnUseForPurchasesChanging(ref value);
                  ReportPropertyChanging("UseForPurchases");
                  _UseForPurchases = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UseForPurchases");
                  OnUseForPurchasesChanged();
              }
            }
        }
        private short? _UseForPurchases = 1;
        partial void OnGetUseForPurchases(ref short? value);
        partial void OnUseForPurchasesChanging(ref short? value);
        partial void OnUseForPurchasesChanged();
    
        /// <summary>
        /// There are no comments for UseForSales in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual short? UseForSales
        {
            get
            {
                short? value = _UseForSales;
                OnGetUseForSales(ref value);
                return value;
            }
            set
            {
                if (_UseForSales != value)
                {
                  OnUseForSalesChanging(ref value);
                  ReportPropertyChanging("UseForSales");
                  _UseForSales = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UseForSales");
                  OnUseForSalesChanged();
              }
            }
        }
        private short? _UseForSales = 1;
        partial void OnGetUseForSales(ref short? value);
        partial void OnUseForSalesChanging(ref short? value);
        partial void OnUseForSalesChanged();
    
        /// <summary>
        /// There are no comments for UseStdConv in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short UseStdConv
        {
            get
            {
                short value = _UseStdConv;
                OnGetUseStdConv(ref value);
                return value;
            }
            set
            {
                if (_UseStdConv != value)
                {
                  OnUseStdConvChanging(ref value);
                  ReportPropertyChanging("UseStdConv");
                  _UseStdConv = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UseStdConv");
                  OnUseStdConvChanged();
              }
            }
        }
        private short _UseStdConv = 0;
        partial void OnGetUseStdConv(ref short value);
        partial void OnUseStdConvChanging(ref short value);
        partial void OnUseStdConvChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Item in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Item_ItemUM", "Item")]
        public virtual Item Item
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Item>("Net4Sage.DataAccessModel.Item_ItemUM", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Item>("Net4Sage.DataAccessModel.Item_ItemUM", "Item").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Item in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Item>("Net4Sage.DataAccessModel.Item_ItemUM", "Item");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Item>("Net4Sage.DataAccessModel.Item_ItemUM", "Item", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Item>("Net4Sage.DataAccessModel.Item_ItemUM", "Item").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for UnitMeasure in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "UnitMeasure_ItemUM", "UnitMeasure")]
        public virtual UnitMeasure UnitMeasure
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<UnitMeasure>("Net4Sage.DataAccessModel.UnitMeasure_ItemUM", "UnitMeasure").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<UnitMeasure>("Net4Sage.DataAccessModel.UnitMeasure_ItemUM", "UnitMeasure").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for UnitMeasure in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UnitMeasure> UnitMeasureReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<UnitMeasure>("Net4Sage.DataAccessModel.UnitMeasure_ItemUM", "UnitMeasure");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<UnitMeasure>("Net4Sage.DataAccessModel.UnitMeasure_ItemUM", "UnitMeasure", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<UnitMeasure>("Net4Sage.DataAccessModel.UnitMeasure_ItemUM", "UnitMeasure").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.ReasonCode in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ReasonCodeKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="ReasonCode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [Net4Sage.Controls.Lookup.LookupAutoShowColumns(false)]
    [Net4Sage.Controls.Lookup.LookupFormTitle(@"Buscar Código de Razón")]
    public partial class ReasonCode : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ReasonCode object.
        /// </summary>
        /// <param name="reasonCodeKey">Initial value of ReasonCodeKey.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="reasonCodeID">Initial value of ReasonCodeID.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        public static ReasonCode CreateReasonCode(int reasonCodeKey, string companyID, string reasonCodeID, int updateCounter)
        {
            ReasonCode reasonCode = new ReasonCode();
            reasonCode.ReasonCodeKey = reasonCodeKey;
            reasonCode.CompanyID = companyID;
            reasonCode.ReasonCodeID = reasonCodeID;
            reasonCode.UpdateCounter = updateCounter;
            return reasonCode;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ReasonCodeKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupKeyReturn]
        public virtual int ReasonCodeKey
        {
            get
            {
                int value = _ReasonCodeKey;
                OnGetReasonCodeKey(ref value);
                return value;
            }
            set
            {
                if (_ReasonCodeKey != value)
                {
                  OnReasonCodeKeyChanging(ref value);
                  ReportPropertyChanging("ReasonCodeKey");
                  _ReasonCodeKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ReasonCodeKey");
                  OnReasonCodeKeyChanged();
              }
            }
        }
        private int _ReasonCodeKey;
        partial void OnGetReasonCodeKey(ref int value);
        partial void OnReasonCodeKeyChanging(ref int value);
        partial void OnReasonCodeKeyChanged();
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Descripción")]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"Descripción")]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for ReasonCodeID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Código de Razón")]
        [Net4Sage.Controls.Lookup.LookupTextReturn]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        public virtual string ReasonCodeID
        {
            get
            {
                string value = _ReasonCodeID;
                OnGetReasonCodeID(ref value);
                return value;
            }
            set
            {
                if (_ReasonCodeID != value)
                {
                  OnReasonCodeIDChanging(ref value);
                  ReportPropertyChanging("ReasonCodeID");
                  _ReasonCodeID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ReasonCodeID");
                  OnReasonCodeIDChanged();
              }
            }
        }
        private string _ReasonCodeID;
        partial void OnGetReasonCodeID(ref string value);
        partial void OnReasonCodeIDChanging(ref string value);
        partial void OnReasonCodeIDChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();
    
        /// <summary>
        /// There are no comments for ModuleNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ModuleNo
        {
            get
            {
                int? value = _ModuleNo;
                OnGetModuleNo(ref value);
                return value;
            }
            set
            {
                if (_ModuleNo != value)
                {
                  OnModuleNoChanging(ref value);
                  ReportPropertyChanging("ModuleNo");
                  _ModuleNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ModuleNo");
                  OnModuleNoChanged();
              }
            }
        }
        private int? _ModuleNo;
        partial void OnGetModuleNo(ref int? value);
        partial void OnModuleNoChanging(ref int? value);
        partial void OnModuleNoChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.FiscalPeriod in the schema.
    /// </summary>
    /// <KeyProperties>
    /// CompanyID
    /// FiscYear
    /// FiscPer
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="FiscalPeriod")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FiscalPeriod : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new FiscalPeriod object.
        /// </summary>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="fiscYear">Initial value of FiscYear.</param>
        /// <param name="fiscPer">Initial value of FiscPer.</param>
        /// <param name="fiscYearPer">Initial value of FiscYearPer.</param>
        /// <param name="status">Initial value of Status.</param>
        public static FiscalPeriod CreateFiscalPeriod(string companyID, string fiscYear, short fiscPer, string fiscYearPer, short status)
        {
            FiscalPeriod fiscalPeriod = new FiscalPeriod();
            fiscalPeriod.CompanyID = companyID;
            fiscalPeriod.FiscYear = fiscYear;
            fiscalPeriod.FiscPer = fiscPer;
            fiscalPeriod.FiscYearPer = fiscYearPer;
            fiscalPeriod.Status = status;
            return fiscalPeriod;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for FiscYear in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string FiscYear
        {
            get
            {
                string value = _FiscYear;
                OnGetFiscYear(ref value);
                return value;
            }
            set
            {
                if (_FiscYear != value)
                {
                  OnFiscYearChanging(ref value);
                  ReportPropertyChanging("FiscYear");
                  _FiscYear = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("FiscYear");
                  OnFiscYearChanged();
              }
            }
        }
        private string _FiscYear;
        partial void OnGetFiscYear(ref string value);
        partial void OnFiscYearChanging(ref string value);
        partial void OnFiscYearChanged();
    
        /// <summary>
        /// There are no comments for FiscPer in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short FiscPer
        {
            get
            {
                short value = _FiscPer;
                OnGetFiscPer(ref value);
                return value;
            }
            set
            {
                if (_FiscPer != value)
                {
                  OnFiscPerChanging(ref value);
                  ReportPropertyChanging("FiscPer");
                  _FiscPer = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FiscPer");
                  OnFiscPerChanged();
              }
            }
        }
        private short _FiscPer = 0;
        partial void OnGetFiscPer(ref short value);
        partial void OnFiscPerChanging(ref short value);
        partial void OnFiscPerChanged();
    
        /// <summary>
        /// There are no comments for EndDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? EndDate
        {
            get
            {
                global::System.DateTime? value = _EndDate;
                OnGetEndDate(ref value);
                return value;
            }
            set
            {
                if (_EndDate != value)
                {
                  OnEndDateChanging(ref value);
                  ReportPropertyChanging("EndDate");
                  _EndDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EndDate");
                  OnEndDateChanged();
              }
            }
        }
        private global::System.DateTime? _EndDate;
        partial void OnGetEndDate(ref global::System.DateTime? value);
        partial void OnEndDateChanging(ref global::System.DateTime? value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// There are no comments for FiscYearPer in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string FiscYearPer
        {
            get
            {
                string value = _FiscYearPer;
                OnGetFiscYearPer(ref value);
                return value;
            }
            set
            {
                if (_FiscYearPer != value)
                {
                  OnFiscYearPerChanging(ref value);
                  ReportPropertyChanging("FiscYearPer");
                  _FiscYearPer = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("FiscYearPer");
                  OnFiscYearPerChanged();
              }
            }
        }
        private string _FiscYearPer;
        partial void OnGetFiscYearPer(ref string value);
        partial void OnFiscYearPerChanging(ref string value);
        partial void OnFiscYearPerChanged();
    
        /// <summary>
        /// There are no comments for StartDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? StartDate
        {
            get
            {
                global::System.DateTime? value = _StartDate;
                OnGetStartDate(ref value);
                return value;
            }
            set
            {
                if (_StartDate != value)
                {
                  OnStartDateChanging(ref value);
                  ReportPropertyChanging("StartDate");
                  _StartDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("StartDate");
                  OnStartDateChanged();
              }
            }
        }
        private global::System.DateTime? _StartDate;
        partial void OnGetStartDate(ref global::System.DateTime? value);
        partial void OnStartDateChanging(ref global::System.DateTime? value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Status
        {
            get
            {
                short value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private short _Status = 1;
        partial void OnGetStatus(ref short value);
        partial void OnStatusChanging(ref short value);
        partial void OnStatusChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for FiscalYear in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "FiscalYear_FiscalPeriod", "FiscalYear")]
        public virtual FiscalYear FiscalYear
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<FiscalYear>("Net4Sage.DataAccessModel.FiscalYear_FiscalPeriod", "FiscalYear").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<FiscalYear>("Net4Sage.DataAccessModel.FiscalYear_FiscalPeriod", "FiscalYear").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for FiscalYear in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FiscalYear> FiscalYearReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<FiscalYear>("Net4Sage.DataAccessModel.FiscalYear_FiscalPeriod", "FiscalYear");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<FiscalYear>("Net4Sage.DataAccessModel.FiscalYear_FiscalPeriod", "FiscalYear", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<FiscalYear>("Net4Sage.DataAccessModel.FiscalYear_FiscalPeriod", "FiscalYear").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.FiscalYear in the schema.
    /// </summary>
    /// <KeyProperties>
    /// CompanyID
    /// FiscYear
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="FiscalYear")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FiscalYear : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new FiscalYear object.
        /// </summary>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="fiscYear">Initial value of FiscYear.</param>
        /// <param name="purged">Initial value of Purged.</param>
        /// <param name="status">Initial value of Status.</param>
        public static FiscalYear CreateFiscalYear(string companyID, string fiscYear, short purged, short status)
        {
            FiscalYear fiscalYear = new FiscalYear();
            fiscalYear.CompanyID = companyID;
            fiscalYear.FiscYear = fiscYear;
            fiscalYear.Purged = purged;
            fiscalYear.Status = status;
            return fiscalYear;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for FiscYear in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string FiscYear
        {
            get
            {
                string value = _FiscYear;
                OnGetFiscYear(ref value);
                return value;
            }
            set
            {
                if (_FiscYear != value)
                {
                  OnFiscYearChanging(ref value);
                  ReportPropertyChanging("FiscYear");
                  _FiscYear = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("FiscYear");
                  OnFiscYearChanged();
              }
            }
        }
        private string _FiscYear;
        partial void OnGetFiscYear(ref string value);
        partial void OnFiscYearChanging(ref string value);
        partial void OnFiscYearChanged();
    
        /// <summary>
        /// There are no comments for NoOfPeriods in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual short? NoOfPeriods
        {
            get
            {
                short? value = _NoOfPeriods;
                OnGetNoOfPeriods(ref value);
                return value;
            }
            set
            {
                if (_NoOfPeriods != value)
                {
                  OnNoOfPeriodsChanging(ref value);
                  ReportPropertyChanging("NoOfPeriods");
                  _NoOfPeriods = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NoOfPeriods");
                  OnNoOfPeriodsChanged();
              }
            }
        }
        private short? _NoOfPeriods = 0;
        partial void OnGetNoOfPeriods(ref short? value);
        partial void OnNoOfPeriodsChanging(ref short? value);
        partial void OnNoOfPeriodsChanged();
    
        /// <summary>
        /// There are no comments for Purged in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Purged
        {
            get
            {
                short value = _Purged;
                OnGetPurged(ref value);
                return value;
            }
            set
            {
                if (_Purged != value)
                {
                  OnPurgedChanging(ref value);
                  ReportPropertyChanging("Purged");
                  _Purged = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Purged");
                  OnPurgedChanged();
              }
            }
        }
        private short _Purged = 0;
        partial void OnGetPurged(ref short value);
        partial void OnPurgedChanging(ref short value);
        partial void OnPurgedChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Status
        {
            get
            {
                short value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private short _Status = 1;
        partial void OnGetStatus(ref short value);
        partial void OnStatusChanging(ref short value);
        partial void OnStatusChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for FiscalPeriods in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "FiscalYear_FiscalPeriod", "FiscalPeriods")]
        public virtual EntityCollection<FiscalPeriod> FiscalPeriods
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<FiscalPeriod>("Net4Sage.DataAccessModel.FiscalYear_FiscalPeriod", "FiscalPeriods");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<FiscalPeriod>("Net4Sage.DataAccessModel.FiscalYear_FiscalPeriod", "FiscalPeriods", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.SalesProductLine in the schema.
    /// </summary>
    /// <KeyProperties>
    /// SalesProdLineKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="SalesProductLine")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [Net4Sage.Controls.Lookup.LookupFormTitle(@"Buscar Linea de Venta")]
    [Net4Sage.Controls.Lookup.LookupAutoShowColumns(false)]
    public partial class SalesProductLine : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SalesProductLine object.
        /// </summary>
        /// <param name="salesProdLineKey">Initial value of SalesProdLineKey.</param>
        /// <param name="allowPriceOvrd">Initial value of AllowPriceOvrd.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="minGrossProfitPct">Initial value of MinGrossProfitPct.</param>
        /// <param name="salesProdLineID">Initial value of SalesProdLineID.</param>
        /// <param name="subjToTradeDisc">Initial value of SubjToTradeDisc.</param>
        /// <param name="targetMargin">Initial value of TargetMargin.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        public static SalesProductLine CreateSalesProductLine(int salesProdLineKey, short allowPriceOvrd, string companyID, decimal minGrossProfitPct, string salesProdLineID, short subjToTradeDisc, decimal targetMargin, int updateCounter)
        {
            SalesProductLine salesProductLine = new SalesProductLine();
            salesProductLine.SalesProdLineKey = salesProdLineKey;
            salesProductLine.AllowPriceOvrd = allowPriceOvrd;
            salesProductLine.CompanyID = companyID;
            salesProductLine.MinGrossProfitPct = minGrossProfitPct;
            salesProductLine.SalesProdLineID = salesProdLineID;
            salesProductLine.SubjToTradeDisc = subjToTradeDisc;
            salesProductLine.TargetMargin = targetMargin;
            salesProductLine.UpdateCounter = updateCounter;
            return salesProductLine;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for SalesProdLineKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupKeyReturn]
        public virtual int SalesProdLineKey
        {
            get
            {
                int value = _SalesProdLineKey;
                OnGetSalesProdLineKey(ref value);
                return value;
            }
            set
            {
                if (_SalesProdLineKey != value)
                {
                  OnSalesProdLineKeyChanging(ref value);
                  ReportPropertyChanging("SalesProdLineKey");
                  _SalesProdLineKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesProdLineKey");
                  OnSalesProdLineKeyChanged();
              }
            }
        }
        private int _SalesProdLineKey;
        partial void OnGetSalesProdLineKey(ref int value);
        partial void OnSalesProdLineKeyChanging(ref int value);
        partial void OnSalesProdLineKeyChanged();
    
        /// <summary>
        /// There are no comments for AllowPriceOvrd in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short AllowPriceOvrd
        {
            get
            {
                short value = _AllowPriceOvrd;
                OnGetAllowPriceOvrd(ref value);
                return value;
            }
            set
            {
                if (_AllowPriceOvrd != value)
                {
                  OnAllowPriceOvrdChanging(ref value);
                  ReportPropertyChanging("AllowPriceOvrd");
                  _AllowPriceOvrd = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AllowPriceOvrd");
                  OnAllowPriceOvrdChanged();
              }
            }
        }
        private short _AllowPriceOvrd = 0;
        partial void OnGetAllowPriceOvrd(ref short value);
        partial void OnAllowPriceOvrdChanging(ref short value);
        partial void OnAllowPriceOvrdChanged();
    
        /// <summary>
        /// There are no comments for CommClassKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CommClassKey
        {
            get
            {
                int? value = _CommClassKey;
                OnGetCommClassKey(ref value);
                return value;
            }
            set
            {
                if (_CommClassKey != value)
                {
                  OnCommClassKeyChanging(ref value);
                  ReportPropertyChanging("CommClassKey");
                  _CommClassKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CommClassKey");
                  OnCommClassKeyChanged();
              }
            }
        }
        private int? _CommClassKey;
        partial void OnGetCommClassKey(ref int? value);
        partial void OnCommClassKeyChanging(ref int? value);
        partial void OnCommClassKeyChanged();
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Descripción")]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for MinGrossProfitPct in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal MinGrossProfitPct
        {
            get
            {
                decimal value = _MinGrossProfitPct;
                OnGetMinGrossProfitPct(ref value);
                return value;
            }
            set
            {
                if (_MinGrossProfitPct != value)
                {
                  OnMinGrossProfitPctChanging(ref value);
                  ReportPropertyChanging("MinGrossProfitPct");
                  _MinGrossProfitPct = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MinGrossProfitPct");
                  OnMinGrossProfitPctChanged();
              }
            }
        }
        private decimal _MinGrossProfitPct = 0m;
        partial void OnGetMinGrossProfitPct(ref decimal value);
        partial void OnMinGrossProfitPctChanging(ref decimal value);
        partial void OnMinGrossProfitPctChanged();
    
        /// <summary>
        /// There are no comments for SalesProdLineID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        [Net4Sage.Controls.Lookup.LookupTextReturn]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"Linea de Venta")]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Linea de Venta")]
        public virtual string SalesProdLineID
        {
            get
            {
                string value = _SalesProdLineID;
                OnGetSalesProdLineID(ref value);
                return value;
            }
            set
            {
                if (_SalesProdLineID != value)
                {
                  OnSalesProdLineIDChanging(ref value);
                  ReportPropertyChanging("SalesProdLineID");
                  _SalesProdLineID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("SalesProdLineID");
                  OnSalesProdLineIDChanged();
              }
            }
        }
        private string _SalesProdLineID;
        partial void OnGetSalesProdLineID(ref string value);
        partial void OnSalesProdLineIDChanging(ref string value);
        partial void OnSalesProdLineIDChanged();
    
        /// <summary>
        /// There are no comments for SPLineOvrdSegValue in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string SPLineOvrdSegValue
        {
            get
            {
                string value = _SPLineOvrdSegValue;
                OnGetSPLineOvrdSegValue(ref value);
                return value;
            }
            set
            {
                if (_SPLineOvrdSegValue != value)
                {
                  OnSPLineOvrdSegValueChanging(ref value);
                  ReportPropertyChanging("SPLineOvrdSegValue");
                  _SPLineOvrdSegValue = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("SPLineOvrdSegValue");
                  OnSPLineOvrdSegValueChanged();
              }
            }
        }
        private string _SPLineOvrdSegValue;
        partial void OnGetSPLineOvrdSegValue(ref string value);
        partial void OnSPLineOvrdSegValueChanging(ref string value);
        partial void OnSPLineOvrdSegValueChanged();
    
        /// <summary>
        /// There are no comments for SubjToTradeDisc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short SubjToTradeDisc
        {
            get
            {
                short value = _SubjToTradeDisc;
                OnGetSubjToTradeDisc(ref value);
                return value;
            }
            set
            {
                if (_SubjToTradeDisc != value)
                {
                  OnSubjToTradeDiscChanging(ref value);
                  ReportPropertyChanging("SubjToTradeDisc");
                  _SubjToTradeDisc = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SubjToTradeDisc");
                  OnSubjToTradeDiscChanged();
              }
            }
        }
        private short _SubjToTradeDisc = 0;
        partial void OnGetSubjToTradeDisc(ref short value);
        partial void OnSubjToTradeDiscChanging(ref short value);
        partial void OnSubjToTradeDiscChanged();
    
        /// <summary>
        /// There are no comments for TargetMargin in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal TargetMargin
        {
            get
            {
                decimal value = _TargetMargin;
                OnGetTargetMargin(ref value);
                return value;
            }
            set
            {
                if (_TargetMargin != value)
                {
                  OnTargetMarginChanging(ref value);
                  ReportPropertyChanging("TargetMargin");
                  _TargetMargin = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TargetMargin");
                  OnTargetMarginChanged();
              }
            }
        }
        private decimal _TargetMargin = 0m;
        partial void OnGetTargetMargin(ref decimal value);
        partial void OnTargetMarginChanging(ref decimal value);
        partial void OnTargetMarginChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Items in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "SalesProductLine_Item", "Items")]
        public virtual EntityCollection<Item> Items
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Item>("Net4Sage.DataAccessModel.SalesProductLine_Item", "Items");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Item>("Net4Sage.DataAccessModel.SalesProductLine_Item", "Items", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.ProductCategory in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ProdCategoryKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="ProductCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [Net4Sage.Controls.Lookup.LookupAutoShowColumns(false)]
    [Net4Sage.Controls.Lookup.LookupFormTitle(@"Buscar Categorías de Productos")]
    public partial class ProductCategory : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ProductCategory object.
        /// </summary>
        /// <param name="prodCategoryKey">Initial value of ProdCategoryKey.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="prodCategoryID">Initial value of ProdCategoryID.</param>
        /// <param name="seqNo">Initial value of SeqNo.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        public static ProductCategory CreateProductCategory(int prodCategoryKey, string companyID, string prodCategoryID, int seqNo, int updateCounter)
        {
            ProductCategory productCategory = new ProductCategory();
            productCategory.ProdCategoryKey = prodCategoryKey;
            productCategory.CompanyID = companyID;
            productCategory.ProdCategoryID = prodCategoryID;
            productCategory.SeqNo = seqNo;
            productCategory.UpdateCounter = updateCounter;
            return productCategory;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ProdCategoryKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupKeyReturn]
        public virtual int ProdCategoryKey
        {
            get
            {
                int value = _ProdCategoryKey;
                OnGetProdCategoryKey(ref value);
                return value;
            }
            set
            {
                if (_ProdCategoryKey != value)
                {
                  OnProdCategoryKeyChanging(ref value);
                  ReportPropertyChanging("ProdCategoryKey");
                  _ProdCategoryKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ProdCategoryKey");
                  OnProdCategoryKeyChanged();
              }
            }
        }
        private int _ProdCategoryKey;
        partial void OnGetProdCategoryKey(ref int value);
        partial void OnProdCategoryKeyChanging(ref int value);
        partial void OnProdCategoryKeyChanged();
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for ParentProdCatKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ParentProdCatKey
        {
            get
            {
                int? value = _ParentProdCatKey;
                OnGetParentProdCatKey(ref value);
                return value;
            }
            set
            {
                if (_ParentProdCatKey != value)
                {
                  OnParentProdCatKeyChanging(ref value);
                  ReportPropertyChanging("ParentProdCatKey");
                  _ParentProdCatKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ParentProdCatKey");
                  OnParentProdCatKeyChanged();
              }
            }
        }
        private int? _ParentProdCatKey;
        partial void OnGetParentProdCatKey(ref int? value);
        partial void OnParentProdCatKeyChanging(ref int? value);
        partial void OnParentProdCatKeyChanged();
    
        /// <summary>
        /// There are no comments for ProdCategoryID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        [Net4Sage.Controls.Lookup.LookupTextReturn]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"Categoría")]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Categoría")]
        public virtual string ProdCategoryID
        {
            get
            {
                string value = _ProdCategoryID;
                OnGetProdCategoryID(ref value);
                return value;
            }
            set
            {
                if (_ProdCategoryID != value)
                {
                  OnProdCategoryIDChanging(ref value);
                  ReportPropertyChanging("ProdCategoryID");
                  _ProdCategoryID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ProdCategoryID");
                  OnProdCategoryIDChanged();
              }
            }
        }
        private string _ProdCategoryID;
        partial void OnGetProdCategoryID(ref string value);
        partial void OnProdCategoryIDChanging(ref string value);
        partial void OnProdCategoryIDChanged();
    
        /// <summary>
        /// There are no comments for SeqNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SeqNo
        {
            get
            {
                int value = _SeqNo;
                OnGetSeqNo(ref value);
                return value;
            }
            set
            {
                if (_SeqNo != value)
                {
                  OnSeqNoChanging(ref value);
                  ReportPropertyChanging("SeqNo");
                  _SeqNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SeqNo");
                  OnSeqNoChanged();
              }
            }
        }
        private int _SeqNo;
        partial void OnGetSeqNo(ref int value);
        partial void OnSeqNoChanging(ref int value);
        partial void OnSeqNoChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ProductCategoryItems in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "ProductCategory_ProductCategoryItem", "ProductCategoryItems")]
        public virtual EntityCollection<ProductCategoryItem> ProductCategoryItems
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ProductCategoryItem>("Net4Sage.DataAccessModel.ProductCategory_ProductCategoryItem", "ProductCategoryItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ProductCategoryItem>("Net4Sage.DataAccessModel.ProductCategory_ProductCategoryItem", "ProductCategoryItems", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.ProductCategoryItem in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ProdCategoryKey
    /// ItemKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="ProductCategoryItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductCategoryItem : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ProductCategoryItem object.
        /// </summary>
        /// <param name="prodCategoryKey">Initial value of ProdCategoryKey.</param>
        /// <param name="itemKey">Initial value of ItemKey.</param>
        public static ProductCategoryItem CreateProductCategoryItem(int prodCategoryKey, int itemKey)
        {
            ProductCategoryItem productCategoryItem = new ProductCategoryItem();
            productCategoryItem.ProdCategoryKey = prodCategoryKey;
            productCategoryItem.ItemKey = itemKey;
            return productCategoryItem;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ProdCategoryKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ProdCategoryKey
        {
            get
            {
                int value = _ProdCategoryKey;
                OnGetProdCategoryKey(ref value);
                return value;
            }
            set
            {
                if (_ProdCategoryKey != value)
                {
                  OnProdCategoryKeyChanging(ref value);
                  ReportPropertyChanging("ProdCategoryKey");
                  _ProdCategoryKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ProdCategoryKey");
                  OnProdCategoryKeyChanged();
              }
            }
        }
        private int _ProdCategoryKey;
        partial void OnGetProdCategoryKey(ref int value);
        partial void OnProdCategoryKeyChanging(ref int value);
        partial void OnProdCategoryKeyChanged();
    
        /// <summary>
        /// There are no comments for ItemKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ItemKey
        {
            get
            {
                int value = _ItemKey;
                OnGetItemKey(ref value);
                return value;
            }
            set
            {
                if (_ItemKey != value)
                {
                  OnItemKeyChanging(ref value);
                  ReportPropertyChanging("ItemKey");
                  _ItemKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ItemKey");
                  OnItemKeyChanged();
              }
            }
        }
        private int _ItemKey;
        partial void OnGetItemKey(ref int value);
        partial void OnItemKeyChanging(ref int value);
        partial void OnItemKeyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ProductCategory in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "ProductCategory_ProductCategoryItem", "ProductCategory")]
        public virtual ProductCategory ProductCategory
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ProductCategory>("Net4Sage.DataAccessModel.ProductCategory_ProductCategoryItem", "ProductCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ProductCategory>("Net4Sage.DataAccessModel.ProductCategory_ProductCategoryItem", "ProductCategory").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for ProductCategory in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductCategory> ProductCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ProductCategory>("Net4Sage.DataAccessModel.ProductCategory_ProductCategoryItem", "ProductCategory");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<ProductCategory>("Net4Sage.DataAccessModel.ProductCategory_ProductCategoryItem", "ProductCategory", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ProductCategory>("Net4Sage.DataAccessModel.ProductCategory_ProductCategoryItem", "ProductCategory").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Item in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Item_ProductCategoryItem", "Item")]
        public virtual Item Item
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Item>("Net4Sage.DataAccessModel.Item_ProductCategoryItem", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Item>("Net4Sage.DataAccessModel.Item_ProductCategoryItem", "Item").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Item in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Item>("Net4Sage.DataAccessModel.Item_ProductCategoryItem", "Item");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Item>("Net4Sage.DataAccessModel.Item_ProductCategoryItem", "Item", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Item>("Net4Sage.DataAccessModel.Item_ProductCategoryItem", "Item").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.SalesPerson in the schema.
    /// </summary>
    /// <KeyProperties>
    /// SperKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="SalesPerson")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [Net4Sage.Controls.Lookup.LookupAutoShowColumns(false)]
    [Net4Sage.Controls.Lookup.LookupFormTitle(@"Buscar Vendedor")]
    public partial class SalesPerson : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SalesPerson object.
        /// </summary>
        /// <param name="sperKey">Initial value of SperKey.</param>
        /// <param name="addrKey">Initial value of AddrKey.</param>
        /// <param name="commPmtMeth">Initial value of CommPmtMeth.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="sperID">Initial value of SperID.</param>
        /// <param name="sperName">Initial value of SperName.</param>
        /// <param name="status">Initial value of Status.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        public static SalesPerson CreateSalesPerson(int sperKey, int addrKey, short commPmtMeth, string companyID, string sperID, string sperName, short status, int updateCounter)
        {
            SalesPerson salesPerson = new SalesPerson();
            salesPerson.SperKey = sperKey;
            salesPerson.AddrKey = addrKey;
            salesPerson.CommPmtMeth = commPmtMeth;
            salesPerson.CompanyID = companyID;
            salesPerson.SperID = sperID;
            salesPerson.SperName = sperName;
            salesPerson.Status = status;
            salesPerson.UpdateCounter = updateCounter;
            return salesPerson;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for SperKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupKeyReturn]
        public virtual int SperKey
        {
            get
            {
                int value = _SperKey;
                OnGetSperKey(ref value);
                return value;
            }
            set
            {
                if (_SperKey != value)
                {
                  OnSperKeyChanging(ref value);
                  ReportPropertyChanging("SperKey");
                  _SperKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SperKey");
                  OnSperKeyChanged();
              }
            }
        }
        private int _SperKey;
        partial void OnGetSperKey(ref int value);
        partial void OnSperKeyChanging(ref int value);
        partial void OnSperKeyChanged();
    
        /// <summary>
        /// There are no comments for AddrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int AddrKey
        {
            get
            {
                int value = _AddrKey;
                OnGetAddrKey(ref value);
                return value;
            }
            set
            {
                if (_AddrKey != value)
                {
                  OnAddrKeyChanging(ref value);
                  ReportPropertyChanging("AddrKey");
                  _AddrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AddrKey");
                  OnAddrKeyChanged();
              }
            }
        }
        private int _AddrKey;
        partial void OnGetAddrKey(ref int value);
        partial void OnAddrKeyChanging(ref int value);
        partial void OnAddrKeyChanged();
    
        /// <summary>
        /// There are no comments for CommPlanKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CommPlanKey
        {
            get
            {
                int? value = _CommPlanKey;
                OnGetCommPlanKey(ref value);
                return value;
            }
            set
            {
                if (_CommPlanKey != value)
                {
                  OnCommPlanKeyChanging(ref value);
                  ReportPropertyChanging("CommPlanKey");
                  _CommPlanKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CommPlanKey");
                  OnCommPlanKeyChanged();
              }
            }
        }
        private int? _CommPlanKey;
        partial void OnGetCommPlanKey(ref int? value);
        partial void OnCommPlanKeyChanging(ref int? value);
        partial void OnCommPlanKeyChanged();
    
        /// <summary>
        /// There are no comments for CommPmtMeth in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CommPmtMeth
        {
            get
            {
                short value = _CommPmtMeth;
                OnGetCommPmtMeth(ref value);
                return value;
            }
            set
            {
                if (_CommPmtMeth != value)
                {
                  OnCommPmtMethChanging(ref value);
                  ReportPropertyChanging("CommPmtMeth");
                  _CommPmtMeth = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CommPmtMeth");
                  OnCommPmtMethChanged();
              }
            }
        }
        private short _CommPmtMeth = 1;
        partial void OnGetCommPmtMeth(ref short value);
        partial void OnCommPmtMethChanging(ref short value);
        partial void OnCommPmtMethChanged();
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for CRMUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CRMUserID
        {
            get
            {
                string value = _CRMUserID;
                OnGetCRMUserID(ref value);
                return value;
            }
            set
            {
                if (_CRMUserID != value)
                {
                  OnCRMUserIDChanging(ref value);
                  ReportPropertyChanging("CRMUserID");
                  _CRMUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CRMUserID");
                  OnCRMUserIDChanged();
              }
            }
        }
        private string _CRMUserID;
        partial void OnGetCRMUserID(ref string value);
        partial void OnCRMUserIDChanging(ref string value);
        partial void OnCRMUserIDChanged();
    
        /// <summary>
        /// There are no comments for EMailAddr in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string EMailAddr
        {
            get
            {
                string value = _EMailAddr;
                OnGetEMailAddr(ref value);
                return value;
            }
            set
            {
                if (_EMailAddr != value)
                {
                  OnEMailAddrChanging(ref value);
                  ReportPropertyChanging("EMailAddr");
                  _EMailAddr = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("EMailAddr");
                  OnEMailAddrChanged();
              }
            }
        }
        private string _EMailAddr;
        partial void OnGetEMailAddr(ref string value);
        partial void OnEMailAddrChanging(ref string value);
        partial void OnEMailAddrChanged();
    
        /// <summary>
        /// There are no comments for SalesMgrSperKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? SalesMgrSperKey
        {
            get
            {
                int? value = _SalesMgrSperKey;
                OnGetSalesMgrSperKey(ref value);
                return value;
            }
            set
            {
                if (_SalesMgrSperKey != value)
                {
                  OnSalesMgrSperKeyChanging(ref value);
                  ReportPropertyChanging("SalesMgrSperKey");
                  _SalesMgrSperKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesMgrSperKey");
                  OnSalesMgrSperKeyChanged();
              }
            }
        }
        private int? _SalesMgrSperKey;
        partial void OnGetSalesMgrSperKey(ref int? value);
        partial void OnSalesMgrSperKeyChanging(ref int? value);
        partial void OnSalesMgrSperKeyChanged();
    
        /// <summary>
        /// There are no comments for SperID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        [Net4Sage.Controls.Lookup.LookupTextReturn]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"ID Vendedor")]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"ID Vendedor")]
        public virtual string SperID
        {
            get
            {
                string value = _SperID;
                OnGetSperID(ref value);
                return value;
            }
            set
            {
                if (_SperID != value)
                {
                  OnSperIDChanging(ref value);
                  ReportPropertyChanging("SperID");
                  _SperID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("SperID");
                  OnSperIDChanged();
              }
            }
        }
        private string _SperID;
        partial void OnGetSperID(ref string value);
        partial void OnSperIDChanging(ref string value);
        partial void OnSperIDChanged();
    
        /// <summary>
        /// There are no comments for SperName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Nombre del Vendedor")]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"Nombre del Vendedor")]
        public virtual string SperName
        {
            get
            {
                string value = _SperName;
                OnGetSperName(ref value);
                return value;
            }
            set
            {
                if (_SperName != value)
                {
                  OnSperNameChanging(ref value);
                  ReportPropertyChanging("SperName");
                  _SperName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("SperName");
                  OnSperNameChanged();
              }
            }
        }
        private string _SperName;
        partial void OnGetSperName(ref string value);
        partial void OnSperNameChanging(ref string value);
        partial void OnSperNameChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Status
        {
            get
            {
                short value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private short _Status = 1;
        partial void OnGetStatus(ref short value);
        partial void OnStatusChanging(ref short value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();
    
        /// <summary>
        /// There are no comments for UserFld1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld1
        {
            get
            {
                string value = _UserFld1;
                OnGetUserFld1(ref value);
                return value;
            }
            set
            {
                if (_UserFld1 != value)
                {
                  OnUserFld1Changing(ref value);
                  ReportPropertyChanging("UserFld1");
                  _UserFld1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld1");
                  OnUserFld1Changed();
              }
            }
        }
        private string _UserFld1;
        partial void OnGetUserFld1(ref string value);
        partial void OnUserFld1Changing(ref string value);
        partial void OnUserFld1Changed();
    
        /// <summary>
        /// There are no comments for UserFld2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld2
        {
            get
            {
                string value = _UserFld2;
                OnGetUserFld2(ref value);
                return value;
            }
            set
            {
                if (_UserFld2 != value)
                {
                  OnUserFld2Changing(ref value);
                  ReportPropertyChanging("UserFld2");
                  _UserFld2 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld2");
                  OnUserFld2Changed();
              }
            }
        }
        private string _UserFld2;
        partial void OnGetUserFld2(ref string value);
        partial void OnUserFld2Changing(ref string value);
        partial void OnUserFld2Changed();
    
        /// <summary>
        /// There are no comments for UserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserID
        {
            get
            {
                string value = _UserID;
                OnGetUserID(ref value);
                return value;
            }
            set
            {
                if (_UserID != value)
                {
                  OnUserIDChanging(ref value);
                  ReportPropertyChanging("UserID");
                  _UserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserID");
                  OnUserIDChanged();
              }
            }
        }
        private string _UserID;
        partial void OnGetUserID(ref string value);
        partial void OnUserIDChanging(ref string value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// There are no comments for VendKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? VendKey
        {
            get
            {
                int? value = _VendKey;
                OnGetVendKey(ref value);
                return value;
            }
            set
            {
                if (_VendKey != value)
                {
                  OnVendKeyChanging(ref value);
                  ReportPropertyChanging("VendKey");
                  _VendKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VendKey");
                  OnVendKeyChanged();
              }
            }
        }
        private int? _VendKey;
        partial void OnGetVendKey(ref int? value);
        partial void OnVendKeyChanging(ref int? value);
        partial void OnVendKeyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SalesOrders in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "SalesPerson_SalesOrder", "SalesOrders")]
        public virtual EntityCollection<SalesOrder> SalesOrders
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SalesOrder>("Net4Sage.DataAccessModel.SalesPerson_SalesOrder", "SalesOrders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SalesOrder>("Net4Sage.DataAccessModel.SalesPerson_SalesOrder", "SalesOrders", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CustomerAddresses in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "SalesPerson_CustomerAddress", "CustomerAddresses")]
        public virtual EntityCollection<CustomerAddress> CustomerAddresses
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CustomerAddress>("Net4Sage.DataAccessModel.SalesPerson_CustomerAddress", "CustomerAddresses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CustomerAddress>("Net4Sage.DataAccessModel.SalesPerson_CustomerAddress", "CustomerAddresses", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.SalesTeam in the schema.
    /// </summary>
    /// <KeyProperties>
    /// SalesTeamKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="SalesTeam")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesTeam : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SalesTeam object.
        /// </summary>
        /// <param name="salesTeamKey">Initial value of SalesTeamKey.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="salesTeamID">Initial value of SalesTeamID.</param>
        /// <param name="description">Initial value of Description.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        public static SalesTeam CreateSalesTeam(int salesTeamKey, string companyID, string salesTeamID, string description, int updateCounter)
        {
            SalesTeam salesTeam = new SalesTeam();
            salesTeam.SalesTeamKey = salesTeamKey;
            salesTeam.CompanyID = companyID;
            salesTeam.SalesTeamID = salesTeamID;
            salesTeam.Description = description;
            salesTeam.UpdateCounter = updateCounter;
            return salesTeam;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for SalesTeamKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SalesTeamKey
        {
            get
            {
                int value = _SalesTeamKey;
                OnGetSalesTeamKey(ref value);
                return value;
            }
            set
            {
                if (_SalesTeamKey != value)
                {
                  OnSalesTeamKeyChanging(ref value);
                  ReportPropertyChanging("SalesTeamKey");
                  _SalesTeamKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesTeamKey");
                  OnSalesTeamKeyChanged();
              }
            }
        }
        private int _SalesTeamKey;
        partial void OnGetSalesTeamKey(ref int value);
        partial void OnSalesTeamKeyChanging(ref int value);
        partial void OnSalesTeamKeyChanged();
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for SalesTeamID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string SalesTeamID
        {
            get
            {
                string value = _SalesTeamID;
                OnGetSalesTeamID(ref value);
                return value;
            }
            set
            {
                if (_SalesTeamID != value)
                {
                  OnSalesTeamIDChanging(ref value);
                  ReportPropertyChanging("SalesTeamID");
                  _SalesTeamID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("SalesTeamID");
                  OnSalesTeamIDChanged();
              }
            }
        }
        private string _SalesTeamID;
        partial void OnGetSalesTeamID(ref string value);
        partial void OnSalesTeamIDChanging(ref string value);
        partial void OnSalesTeamIDChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.SalesOrder in the schema.
    /// </summary>
    /// <KeyProperties>
    /// SOKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="SalesOrder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [Net4Sage.Controls.Lookup.LookupAutoShowColumns(false)]
    [Net4Sage.Controls.Lookup.LookupFormTitle(@"Buscar Orden de Venta")]
    public partial class SalesOrder : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SalesOrder object.
        /// </summary>
        /// <param name="sOKey">Initial value of SOKey.</param>
        /// <param name="billToCustAddrKey">Initial value of BillToCustAddrKey.</param>
        /// <param name="blnktRelNo">Initial value of BlnktRelNo.</param>
        /// <param name="chngOrdNo">Initial value of ChngOrdNo.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="createType">Initial value of CreateType.</param>
        /// <param name="creditApprovedAmt">Initial value of CreditApprovedAmt.</param>
        /// <param name="crHold">Initial value of CrHold.</param>
        /// <param name="currExchRate">Initial value of CurrExchRate.</param>
        /// <param name="currID">Initial value of CurrID.</param>
        /// <param name="custClassKey">Initial value of CustClassKey.</param>
        /// <param name="custKey">Initial value of CustKey.</param>
        /// <param name="dfltCreatePO">Initial value of DfltCreatePO.</param>
        /// <param name="dfltDeliveryMeth">Initial value of DfltDeliveryMeth.</param>
        /// <param name="fixedCurrExchRate">Initial value of FixedCurrExchRate.</param>
        /// <param name="freightAmt">Initial value of FreightAmt.</param>
        /// <param name="freightMethod">Initial value of FreightMethod.</param>
        /// <param name="hold">Initial value of Hold.</param>
        /// <param name="nextLineNo">Initial value of NextLineNo.</param>
        /// <param name="openAmt">Initial value of OpenAmt.</param>
        /// <param name="openAmtHC">Initial value of OpenAmtHC.</param>
        /// <param name="requireSOAck">Initial value of RequireSOAck.</param>
        /// <param name="salesAmt">Initial value of SalesAmt.</param>
        /// <param name="salesAmtHC">Initial value of SalesAmtHC.</param>
        /// <param name="status">Initial value of Status.</param>
        /// <param name="sTaxAmt">Initial value of STaxAmt.</param>
        /// <param name="sTaxCalc">Initial value of STaxCalc.</param>
        /// <param name="tradeDiscAmt">Initial value of TradeDiscAmt.</param>
        /// <param name="tranAmt">Initial value of TranAmt.</param>
        /// <param name="tranAmtHC">Initial value of TranAmtHC.</param>
        /// <param name="tranDate">Initial value of TranDate.</param>
        /// <param name="tranID">Initial value of TranID.</param>
        /// <param name="tranNo">Initial value of TranNo.</param>
        /// <param name="tranNoChngOrd">Initial value of TranNoChngOrd.</param>
        /// <param name="tranNoRel">Initial value of TranNoRel.</param>
        /// <param name="tranNoRelChngOrd">Initial value of TranNoRelChngOrd.</param>
        /// <param name="tranType">Initial value of TranType.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        public static SalesOrder CreateSalesOrder(int sOKey, int billToCustAddrKey, short blnktRelNo, short chngOrdNo, string companyID, short createType, decimal creditApprovedAmt, short crHold, double currExchRate, string currID, int custClassKey, int custKey, short dfltCreatePO, short dfltDeliveryMeth, short fixedCurrExchRate, decimal freightAmt, short freightMethod, short hold, int nextLineNo, decimal openAmt, decimal openAmtHC, short requireSOAck, decimal salesAmt, decimal salesAmtHC, short status, decimal sTaxAmt, short sTaxCalc, decimal tradeDiscAmt, decimal tranAmt, decimal tranAmtHC, global::System.DateTime tranDate, string tranID, string tranNo, string tranNoChngOrd, string tranNoRel, string tranNoRelChngOrd, int tranType, int updateCounter)
        {
            SalesOrder salesOrder = new SalesOrder();
            salesOrder.SOKey = sOKey;
            salesOrder.BillToCustAddrKey = billToCustAddrKey;
            salesOrder.BlnktRelNo = blnktRelNo;
            salesOrder.ChngOrdNo = chngOrdNo;
            salesOrder.CompanyID = companyID;
            salesOrder.CreateType = createType;
            salesOrder.CreditApprovedAmt = creditApprovedAmt;
            salesOrder.CrHold = crHold;
            salesOrder.CurrExchRate = currExchRate;
            salesOrder.CurrID = currID;
            salesOrder.CustClassKey = custClassKey;
            salesOrder.CustKey = custKey;
            salesOrder.DfltCreatePO = dfltCreatePO;
            salesOrder.DfltDeliveryMeth = dfltDeliveryMeth;
            salesOrder.FixedCurrExchRate = fixedCurrExchRate;
            salesOrder.FreightAmt = freightAmt;
            salesOrder.FreightMethod = freightMethod;
            salesOrder.Hold = hold;
            salesOrder.NextLineNo = nextLineNo;
            salesOrder.OpenAmt = openAmt;
            salesOrder.OpenAmtHC = openAmtHC;
            salesOrder.RequireSOAck = requireSOAck;
            salesOrder.SalesAmt = salesAmt;
            salesOrder.SalesAmtHC = salesAmtHC;
            salesOrder.Status = status;
            salesOrder.STaxAmt = sTaxAmt;
            salesOrder.STaxCalc = sTaxCalc;
            salesOrder.TradeDiscAmt = tradeDiscAmt;
            salesOrder.TranAmt = tranAmt;
            salesOrder.TranAmtHC = tranAmtHC;
            salesOrder.TranDate = tranDate;
            salesOrder.TranID = tranID;
            salesOrder.TranNo = tranNo;
            salesOrder.TranNoChngOrd = tranNoChngOrd;
            salesOrder.TranNoRel = tranNoRel;
            salesOrder.TranNoRelChngOrd = tranNoRelChngOrd;
            salesOrder.TranType = tranType;
            salesOrder.UpdateCounter = updateCounter;
            return salesOrder;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for SOKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupKeyReturn]
        public virtual int SOKey
        {
            get
            {
                int value = _SOKey;
                OnGetSOKey(ref value);
                return value;
            }
            set
            {
                if (_SOKey != value)
                {
                  OnSOKeyChanging(ref value);
                  ReportPropertyChanging("SOKey");
                  _SOKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SOKey");
                  OnSOKeyChanged();
              }
            }
        }
        private int _SOKey;
        partial void OnGetSOKey(ref int value);
        partial void OnSOKeyChanging(ref int value);
        partial void OnSOKeyChanged();
    
        /// <summary>
        /// There are no comments for AckDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? AckDate
        {
            get
            {
                global::System.DateTime? value = _AckDate;
                OnGetAckDate(ref value);
                return value;
            }
            set
            {
                if (_AckDate != value)
                {
                  OnAckDateChanging(ref value);
                  ReportPropertyChanging("AckDate");
                  _AckDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AckDate");
                  OnAckDateChanged();
              }
            }
        }
        private global::System.DateTime? _AckDate;
        partial void OnGetAckDate(ref global::System.DateTime? value);
        partial void OnAckDateChanging(ref global::System.DateTime? value);
        partial void OnAckDateChanged();
    
        /// <summary>
        /// There are no comments for BillToAddrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? BillToAddrKey
        {
            get
            {
                int? value = _BillToAddrKey;
                OnGetBillToAddrKey(ref value);
                return value;
            }
            set
            {
                if (_BillToAddrKey != value)
                {
                  OnBillToAddrKeyChanging(ref value);
                  ReportPropertyChanging("BillToAddrKey");
                  _BillToAddrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BillToAddrKey");
                  OnBillToAddrKeyChanged();
              }
            }
        }
        private int? _BillToAddrKey;
        partial void OnGetBillToAddrKey(ref int? value);
        partial void OnBillToAddrKeyChanging(ref int? value);
        partial void OnBillToAddrKeyChanged();
    
        /// <summary>
        /// There are no comments for BillToCustAddrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int BillToCustAddrKey
        {
            get
            {
                int value = _BillToCustAddrKey;
                OnGetBillToCustAddrKey(ref value);
                return value;
            }
            set
            {
                if (_BillToCustAddrKey != value)
                {
                  OnBillToCustAddrKeyChanging(ref value);
                  ReportPropertyChanging("BillToCustAddrKey");
                  _BillToCustAddrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BillToCustAddrKey");
                  OnBillToCustAddrKeyChanged();
              }
            }
        }
        private int _BillToCustAddrKey;
        partial void OnGetBillToCustAddrKey(ref int value);
        partial void OnBillToCustAddrKeyChanging(ref int value);
        partial void OnBillToCustAddrKeyChanged();
    
        /// <summary>
        /// There are no comments for BlnktRelNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short BlnktRelNo
        {
            get
            {
                short value = _BlnktRelNo;
                OnGetBlnktRelNo(ref value);
                return value;
            }
            set
            {
                if (_BlnktRelNo != value)
                {
                  OnBlnktRelNoChanging(ref value);
                  ReportPropertyChanging("BlnktRelNo");
                  _BlnktRelNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BlnktRelNo");
                  OnBlnktRelNoChanged();
              }
            }
        }
        private short _BlnktRelNo = 0;
        partial void OnGetBlnktRelNo(ref short value);
        partial void OnBlnktRelNoChanging(ref short value);
        partial void OnBlnktRelNoChanged();
    
        /// <summary>
        /// There are no comments for BlnktSOKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? BlnktSOKey
        {
            get
            {
                int? value = _BlnktSOKey;
                OnGetBlnktSOKey(ref value);
                return value;
            }
            set
            {
                if (_BlnktSOKey != value)
                {
                  OnBlnktSOKeyChanging(ref value);
                  ReportPropertyChanging("BlnktSOKey");
                  _BlnktSOKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BlnktSOKey");
                  OnBlnktSOKeyChanged();
              }
            }
        }
        private int? _BlnktSOKey;
        partial void OnGetBlnktSOKey(ref int? value);
        partial void OnBlnktSOKeyChanging(ref int? value);
        partial void OnBlnktSOKeyChanged();
    
        /// <summary>
        /// There are no comments for ChngOrdDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? ChngOrdDate
        {
            get
            {
                global::System.DateTime? value = _ChngOrdDate;
                OnGetChngOrdDate(ref value);
                return value;
            }
            set
            {
                if (_ChngOrdDate != value)
                {
                  OnChngOrdDateChanging(ref value);
                  ReportPropertyChanging("ChngOrdDate");
                  _ChngOrdDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ChngOrdDate");
                  OnChngOrdDateChanged();
              }
            }
        }
        private global::System.DateTime? _ChngOrdDate;
        partial void OnGetChngOrdDate(ref global::System.DateTime? value);
        partial void OnChngOrdDateChanging(ref global::System.DateTime? value);
        partial void OnChngOrdDateChanged();
    
        /// <summary>
        /// There are no comments for ChngOrdNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ChngOrdNo
        {
            get
            {
                short value = _ChngOrdNo;
                OnGetChngOrdNo(ref value);
                return value;
            }
            set
            {
                if (_ChngOrdNo != value)
                {
                  OnChngOrdNoChanging(ref value);
                  ReportPropertyChanging("ChngOrdNo");
                  _ChngOrdNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ChngOrdNo");
                  OnChngOrdNoChanged();
              }
            }
        }
        private short _ChngOrdNo = 0;
        partial void OnGetChngOrdNo(ref short value);
        partial void OnChngOrdNoChanging(ref short value);
        partial void OnChngOrdNoChanged();
    
        /// <summary>
        /// There are no comments for ChngReason in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ChngReason
        {
            get
            {
                string value = _ChngReason;
                OnGetChngReason(ref value);
                return value;
            }
            set
            {
                if (_ChngReason != value)
                {
                  OnChngReasonChanging(ref value);
                  ReportPropertyChanging("ChngReason");
                  _ChngReason = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ChngReason");
                  OnChngReasonChanged();
              }
            }
        }
        private string _ChngReason;
        partial void OnGetChngReason(ref string value);
        partial void OnChngReasonChanging(ref string value);
        partial void OnChngReasonChanged();
    
        /// <summary>
        /// There are no comments for ChngUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ChngUserID
        {
            get
            {
                string value = _ChngUserID;
                OnGetChngUserID(ref value);
                return value;
            }
            set
            {
                if (_ChngUserID != value)
                {
                  OnChngUserIDChanging(ref value);
                  ReportPropertyChanging("ChngUserID");
                  _ChngUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ChngUserID");
                  OnChngUserIDChanged();
              }
            }
        }
        private string _ChngUserID;
        partial void OnGetChngUserID(ref string value);
        partial void OnChngUserIDChanging(ref string value);
        partial void OnChngUserIDChanged();
    
        /// <summary>
        /// There are no comments for CloseDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CloseDate
        {
            get
            {
                global::System.DateTime? value = _CloseDate;
                OnGetCloseDate(ref value);
                return value;
            }
            set
            {
                if (_CloseDate != value)
                {
                  OnCloseDateChanging(ref value);
                  ReportPropertyChanging("CloseDate");
                  _CloseDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CloseDate");
                  OnCloseDateChanged();
              }
            }
        }
        private global::System.DateTime? _CloseDate;
        partial void OnGetCloseDate(ref global::System.DateTime? value);
        partial void OnCloseDateChanging(ref global::System.DateTime? value);
        partial void OnCloseDateChanged();
    
        /// <summary>
        /// There are no comments for CntctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CntctKey
        {
            get
            {
                int? value = _CntctKey;
                OnGetCntctKey(ref value);
                return value;
            }
            set
            {
                if (_CntctKey != value)
                {
                  OnCntctKeyChanging(ref value);
                  ReportPropertyChanging("CntctKey");
                  _CntctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CntctKey");
                  OnCntctKeyChanged();
              }
            }
        }
        private int? _CntctKey;
        partial void OnGetCntctKey(ref int? value);
        partial void OnCntctKeyChanging(ref int? value);
        partial void OnCntctKeyChanged();
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for ConfirmNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ConfirmNo
        {
            get
            {
                string value = _ConfirmNo;
                OnGetConfirmNo(ref value);
                return value;
            }
            set
            {
                if (_ConfirmNo != value)
                {
                  OnConfirmNoChanging(ref value);
                  ReportPropertyChanging("ConfirmNo");
                  _ConfirmNo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ConfirmNo");
                  OnConfirmNoChanged();
              }
            }
        }
        private string _ConfirmNo;
        partial void OnGetConfirmNo(ref string value);
        partial void OnConfirmNoChanging(ref string value);
        partial void OnConfirmNoChanged();
    
        /// <summary>
        /// There are no comments for CreateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CreateDate
        {
            get
            {
                global::System.DateTime? value = _CreateDate;
                OnGetCreateDate(ref value);
                return value;
            }
            set
            {
                if (_CreateDate != value)
                {
                  OnCreateDateChanging(ref value);
                  ReportPropertyChanging("CreateDate");
                  _CreateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateDate");
                  OnCreateDateChanged();
              }
            }
        }
        private global::System.DateTime? _CreateDate;
        partial void OnGetCreateDate(ref global::System.DateTime? value);
        partial void OnCreateDateChanging(ref global::System.DateTime? value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// There are no comments for CreateType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CreateType
        {
            get
            {
                short value = _CreateType;
                OnGetCreateType(ref value);
                return value;
            }
            set
            {
                if (_CreateType != value)
                {
                  OnCreateTypeChanging(ref value);
                  ReportPropertyChanging("CreateType");
                  _CreateType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateType");
                  OnCreateTypeChanged();
              }
            }
        }
        private short _CreateType = 0;
        partial void OnGetCreateType(ref short value);
        partial void OnCreateTypeChanging(ref short value);
        partial void OnCreateTypeChanged();
    
        /// <summary>
        /// There are no comments for CreateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CreateUserID
        {
            get
            {
                string value = _CreateUserID;
                OnGetCreateUserID(ref value);
                return value;
            }
            set
            {
                if (_CreateUserID != value)
                {
                  OnCreateUserIDChanging(ref value);
                  ReportPropertyChanging("CreateUserID");
                  _CreateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CreateUserID");
                  OnCreateUserIDChanged();
              }
            }
        }
        private string _CreateUserID;
        partial void OnGetCreateUserID(ref string value);
        partial void OnCreateUserIDChanging(ref string value);
        partial void OnCreateUserIDChanged();
    
        /// <summary>
        /// There are no comments for CreditApprovedAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal CreditApprovedAmt
        {
            get
            {
                decimal value = _CreditApprovedAmt;
                OnGetCreditApprovedAmt(ref value);
                return value;
            }
            set
            {
                if (_CreditApprovedAmt != value)
                {
                  OnCreditApprovedAmtChanging(ref value);
                  ReportPropertyChanging("CreditApprovedAmt");
                  _CreditApprovedAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreditApprovedAmt");
                  OnCreditApprovedAmtChanged();
              }
            }
        }
        private decimal _CreditApprovedAmt = 0m;
        partial void OnGetCreditApprovedAmt(ref decimal value);
        partial void OnCreditApprovedAmtChanging(ref decimal value);
        partial void OnCreditApprovedAmtChanged();
    
        /// <summary>
        /// There are no comments for CreditAuthUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CreditAuthUserID
        {
            get
            {
                string value = _CreditAuthUserID;
                OnGetCreditAuthUserID(ref value);
                return value;
            }
            set
            {
                if (_CreditAuthUserID != value)
                {
                  OnCreditAuthUserIDChanging(ref value);
                  ReportPropertyChanging("CreditAuthUserID");
                  _CreditAuthUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CreditAuthUserID");
                  OnCreditAuthUserIDChanged();
              }
            }
        }
        private string _CreditAuthUserID;
        partial void OnGetCreditAuthUserID(ref string value);
        partial void OnCreditAuthUserIDChanging(ref string value);
        partial void OnCreditAuthUserIDChanged();
    
        /// <summary>
        /// There are no comments for CrHold in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CrHold
        {
            get
            {
                short value = _CrHold;
                OnGetCrHold(ref value);
                return value;
            }
            set
            {
                if (_CrHold != value)
                {
                  OnCrHoldChanging(ref value);
                  ReportPropertyChanging("CrHold");
                  _CrHold = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CrHold");
                  OnCrHoldChanged();
              }
            }
        }
        private short _CrHold = 0;
        partial void OnGetCrHold(ref short value);
        partial void OnCrHoldChanging(ref short value);
        partial void OnCrHoldChanged();
    
        /// <summary>
        /// There are no comments for CRMOpportunityID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CRMOpportunityID
        {
            get
            {
                string value = _CRMOpportunityID;
                OnGetCRMOpportunityID(ref value);
                return value;
            }
            set
            {
                if (_CRMOpportunityID != value)
                {
                  OnCRMOpportunityIDChanging(ref value);
                  ReportPropertyChanging("CRMOpportunityID");
                  _CRMOpportunityID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CRMOpportunityID");
                  OnCRMOpportunityIDChanged();
              }
            }
        }
        private string _CRMOpportunityID;
        partial void OnGetCRMOpportunityID(ref string value);
        partial void OnCRMOpportunityIDChanging(ref string value);
        partial void OnCRMOpportunityIDChanged();
    
        /// <summary>
        /// There are no comments for CurrExchRate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual double CurrExchRate
        {
            get
            {
                double value = _CurrExchRate;
                OnGetCurrExchRate(ref value);
                return value;
            }
            set
            {
                if (_CurrExchRate != value)
                {
                  OnCurrExchRateChanging(ref value);
                  ReportPropertyChanging("CurrExchRate");
                  _CurrExchRate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CurrExchRate");
                  OnCurrExchRateChanged();
              }
            }
        }
        private double _CurrExchRate = 1;
        partial void OnGetCurrExchRate(ref double value);
        partial void OnCurrExchRateChanging(ref double value);
        partial void OnCurrExchRateChanged();
    
        /// <summary>
        /// There are no comments for CurrExchSchdKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CurrExchSchdKey
        {
            get
            {
                int? value = _CurrExchSchdKey;
                OnGetCurrExchSchdKey(ref value);
                return value;
            }
            set
            {
                if (_CurrExchSchdKey != value)
                {
                  OnCurrExchSchdKeyChanging(ref value);
                  ReportPropertyChanging("CurrExchSchdKey");
                  _CurrExchSchdKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CurrExchSchdKey");
                  OnCurrExchSchdKeyChanged();
              }
            }
        }
        private int? _CurrExchSchdKey;
        partial void OnGetCurrExchSchdKey(ref int? value);
        partial void OnCurrExchSchdKeyChanging(ref int? value);
        partial void OnCurrExchSchdKeyChanged();
    
        /// <summary>
        /// There are no comments for CurrID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"Moneda")]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Moneda")]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        public virtual string CurrID
        {
            get
            {
                string value = _CurrID;
                OnGetCurrID(ref value);
                return value;
            }
            set
            {
                if (_CurrID != value)
                {
                  OnCurrIDChanging(ref value);
                  ReportPropertyChanging("CurrID");
                  _CurrID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CurrID");
                  OnCurrIDChanged();
              }
            }
        }
        private string _CurrID;
        partial void OnGetCurrID(ref string value);
        partial void OnCurrIDChanging(ref string value);
        partial void OnCurrIDChanged();
    
        /// <summary>
        /// There are no comments for CustClassKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustClassKey
        {
            get
            {
                int value = _CustClassKey;
                OnGetCustClassKey(ref value);
                return value;
            }
            set
            {
                if (_CustClassKey != value)
                {
                  OnCustClassKeyChanging(ref value);
                  ReportPropertyChanging("CustClassKey");
                  _CustClassKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustClassKey");
                  OnCustClassKeyChanged();
              }
            }
        }
        private int _CustClassKey;
        partial void OnGetCustClassKey(ref int value);
        partial void OnCustClassKeyChanging(ref int value);
        partial void OnCustClassKeyChanged();
    
        /// <summary>
        /// There are no comments for CustKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustKey
        {
            get
            {
                int value = _CustKey;
                OnGetCustKey(ref value);
                return value;
            }
            set
            {
                if (_CustKey != value)
                {
                  OnCustKeyChanging(ref value);
                  ReportPropertyChanging("CustKey");
                  _CustKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustKey");
                  OnCustKeyChanged();
              }
            }
        }
        private int _CustKey;
        partial void OnGetCustKey(ref int value);
        partial void OnCustKeyChanging(ref int value);
        partial void OnCustKeyChanged();
    
        /// <summary>
        /// There are no comments for CustPONo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CustPONo
        {
            get
            {
                string value = _CustPONo;
                OnGetCustPONo(ref value);
                return value;
            }
            set
            {
                if (_CustPONo != value)
                {
                  OnCustPONoChanging(ref value);
                  ReportPropertyChanging("CustPONo");
                  _CustPONo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CustPONo");
                  OnCustPONoChanged();
              }
            }
        }
        private string _CustPONo;
        partial void OnGetCustPONo(ref string value);
        partial void OnCustPONoChanging(ref string value);
        partial void OnCustPONoChanged();
    
        /// <summary>
        /// There are no comments for CustQuoteKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CustQuoteKey
        {
            get
            {
                int? value = _CustQuoteKey;
                OnGetCustQuoteKey(ref value);
                return value;
            }
            set
            {
                if (_CustQuoteKey != value)
                {
                  OnCustQuoteKeyChanging(ref value);
                  ReportPropertyChanging("CustQuoteKey");
                  _CustQuoteKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustQuoteKey");
                  OnCustQuoteKeyChanged();
              }
            }
        }
        private int? _CustQuoteKey;
        partial void OnGetCustQuoteKey(ref int? value);
        partial void OnCustQuoteKeyChanging(ref int? value);
        partial void OnCustQuoteKeyChanged();
    
        /// <summary>
        /// There are no comments for DfltAcctRefKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? DfltAcctRefKey
        {
            get
            {
                int? value = _DfltAcctRefKey;
                OnGetDfltAcctRefKey(ref value);
                return value;
            }
            set
            {
                if (_DfltAcctRefKey != value)
                {
                  OnDfltAcctRefKeyChanging(ref value);
                  ReportPropertyChanging("DfltAcctRefKey");
                  _DfltAcctRefKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltAcctRefKey");
                  OnDfltAcctRefKeyChanged();
              }
            }
        }
        private int? _DfltAcctRefKey;
        partial void OnGetDfltAcctRefKey(ref int? value);
        partial void OnDfltAcctRefKeyChanging(ref int? value);
        partial void OnDfltAcctRefKeyChanged();
    
        /// <summary>
        /// There are no comments for DfltCommPlanKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? DfltCommPlanKey
        {
            get
            {
                int? value = _DfltCommPlanKey;
                OnGetDfltCommPlanKey(ref value);
                return value;
            }
            set
            {
                if (_DfltCommPlanKey != value)
                {
                  OnDfltCommPlanKeyChanging(ref value);
                  ReportPropertyChanging("DfltCommPlanKey");
                  _DfltCommPlanKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltCommPlanKey");
                  OnDfltCommPlanKeyChanged();
              }
            }
        }
        private int? _DfltCommPlanKey;
        partial void OnGetDfltCommPlanKey(ref int? value);
        partial void OnDfltCommPlanKeyChanging(ref int? value);
        partial void OnDfltCommPlanKeyChanged();
    
        /// <summary>
        /// There are no comments for DfltCreatePO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short DfltCreatePO
        {
            get
            {
                short value = _DfltCreatePO;
                OnGetDfltCreatePO(ref value);
                return value;
            }
            set
            {
                if (_DfltCreatePO != value)
                {
                  OnDfltCreatePOChanging(ref value);
                  ReportPropertyChanging("DfltCreatePO");
                  _DfltCreatePO = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltCreatePO");
                  OnDfltCreatePOChanged();
              }
            }
        }
        private short _DfltCreatePO = 0;
        partial void OnGetDfltCreatePO(ref short value);
        partial void OnDfltCreatePOChanging(ref short value);
        partial void OnDfltCreatePOChanged();
    
        /// <summary>
        /// There are no comments for DfltDeliveryMeth in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short DfltDeliveryMeth
        {
            get
            {
                short value = _DfltDeliveryMeth;
                OnGetDfltDeliveryMeth(ref value);
                return value;
            }
            set
            {
                if (_DfltDeliveryMeth != value)
                {
                  OnDfltDeliveryMethChanging(ref value);
                  ReportPropertyChanging("DfltDeliveryMeth");
                  _DfltDeliveryMeth = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltDeliveryMeth");
                  OnDfltDeliveryMethChanged();
              }
            }
        }
        private short _DfltDeliveryMeth = 1;
        partial void OnGetDfltDeliveryMeth(ref short value);
        partial void OnDfltDeliveryMethChanging(ref short value);
        partial void OnDfltDeliveryMethChanged();
    
        /// <summary>
        /// There are no comments for DfltFOBKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? DfltFOBKey
        {
            get
            {
                int? value = _DfltFOBKey;
                OnGetDfltFOBKey(ref value);
                return value;
            }
            set
            {
                if (_DfltFOBKey != value)
                {
                  OnDfltFOBKeyChanging(ref value);
                  ReportPropertyChanging("DfltFOBKey");
                  _DfltFOBKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltFOBKey");
                  OnDfltFOBKeyChanged();
              }
            }
        }
        private int? _DfltFOBKey;
        partial void OnGetDfltFOBKey(ref int? value);
        partial void OnDfltFOBKeyChanging(ref int? value);
        partial void OnDfltFOBKeyChanged();
    
        /// <summary>
        /// There are no comments for DfltPromDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? DfltPromDate
        {
            get
            {
                global::System.DateTime? value = _DfltPromDate;
                OnGetDfltPromDate(ref value);
                return value;
            }
            set
            {
                if (_DfltPromDate != value)
                {
                  OnDfltPromDateChanging(ref value);
                  ReportPropertyChanging("DfltPromDate");
                  _DfltPromDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltPromDate");
                  OnDfltPromDateChanged();
              }
            }
        }
        private global::System.DateTime? _DfltPromDate;
        partial void OnGetDfltPromDate(ref global::System.DateTime? value);
        partial void OnDfltPromDateChanging(ref global::System.DateTime? value);
        partial void OnDfltPromDateChanged();
    
        /// <summary>
        /// There are no comments for DfltPurchVAddrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? DfltPurchVAddrKey
        {
            get
            {
                int? value = _DfltPurchVAddrKey;
                OnGetDfltPurchVAddrKey(ref value);
                return value;
            }
            set
            {
                if (_DfltPurchVAddrKey != value)
                {
                  OnDfltPurchVAddrKeyChanging(ref value);
                  ReportPropertyChanging("DfltPurchVAddrKey");
                  _DfltPurchVAddrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltPurchVAddrKey");
                  OnDfltPurchVAddrKeyChanged();
              }
            }
        }
        private int? _DfltPurchVAddrKey;
        partial void OnGetDfltPurchVAddrKey(ref int? value);
        partial void OnDfltPurchVAddrKeyChanging(ref int? value);
        partial void OnDfltPurchVAddrKeyChanged();
    
        /// <summary>
        /// There are no comments for DfltRequestDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? DfltRequestDate
        {
            get
            {
                global::System.DateTime? value = _DfltRequestDate;
                OnGetDfltRequestDate(ref value);
                return value;
            }
            set
            {
                if (_DfltRequestDate != value)
                {
                  OnDfltRequestDateChanging(ref value);
                  ReportPropertyChanging("DfltRequestDate");
                  _DfltRequestDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltRequestDate");
                  OnDfltRequestDateChanged();
              }
            }
        }
        private global::System.DateTime? _DfltRequestDate;
        partial void OnGetDfltRequestDate(ref global::System.DateTime? value);
        partial void OnDfltRequestDateChanging(ref global::System.DateTime? value);
        partial void OnDfltRequestDateChanged();
    
        /// <summary>
        /// There are no comments for DfltShipDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? DfltShipDate
        {
            get
            {
                global::System.DateTime? value = _DfltShipDate;
                OnGetDfltShipDate(ref value);
                return value;
            }
            set
            {
                if (_DfltShipDate != value)
                {
                  OnDfltShipDateChanging(ref value);
                  ReportPropertyChanging("DfltShipDate");
                  _DfltShipDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltShipDate");
                  OnDfltShipDateChanged();
              }
            }
        }
        private global::System.DateTime? _DfltShipDate;
        partial void OnGetDfltShipDate(ref global::System.DateTime? value);
        partial void OnDfltShipDateChanging(ref global::System.DateTime? value);
        partial void OnDfltShipDateChanged();
    
        /// <summary>
        /// There are no comments for DfltShipMethKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? DfltShipMethKey
        {
            get
            {
                int? value = _DfltShipMethKey;
                OnGetDfltShipMethKey(ref value);
                return value;
            }
            set
            {
                if (_DfltShipMethKey != value)
                {
                  OnDfltShipMethKeyChanging(ref value);
                  ReportPropertyChanging("DfltShipMethKey");
                  _DfltShipMethKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltShipMethKey");
                  OnDfltShipMethKeyChanged();
              }
            }
        }
        private int? _DfltShipMethKey;
        partial void OnGetDfltShipMethKey(ref int? value);
        partial void OnDfltShipMethKeyChanging(ref int? value);
        partial void OnDfltShipMethKeyChanged();
    
        /// <summary>
        /// There are no comments for DfltShipPriority in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual short? DfltShipPriority
        {
            get
            {
                short? value = _DfltShipPriority;
                OnGetDfltShipPriority(ref value);
                return value;
            }
            set
            {
                if (_DfltShipPriority != value)
                {
                  OnDfltShipPriorityChanging(ref value);
                  ReportPropertyChanging("DfltShipPriority");
                  _DfltShipPriority = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltShipPriority");
                  OnDfltShipPriorityChanged();
              }
            }
        }
        private short? _DfltShipPriority = 3;
        partial void OnGetDfltShipPriority(ref short? value);
        partial void OnDfltShipPriorityChanging(ref short? value);
        partial void OnDfltShipPriorityChanged();
    
        /// <summary>
        /// There are no comments for DfltShipToAddrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? DfltShipToAddrKey
        {
            get
            {
                int? value = _DfltShipToAddrKey;
                OnGetDfltShipToAddrKey(ref value);
                return value;
            }
            set
            {
                if (_DfltShipToAddrKey != value)
                {
                  OnDfltShipToAddrKeyChanging(ref value);
                  ReportPropertyChanging("DfltShipToAddrKey");
                  _DfltShipToAddrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltShipToAddrKey");
                  OnDfltShipToAddrKeyChanged();
              }
            }
        }
        private int? _DfltShipToAddrKey;
        partial void OnGetDfltShipToAddrKey(ref int? value);
        partial void OnDfltShipToAddrKeyChanging(ref int? value);
        partial void OnDfltShipToAddrKeyChanged();
    
        /// <summary>
        /// There are no comments for DfltShipToCAddrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? DfltShipToCAddrKey
        {
            get
            {
                int? value = _DfltShipToCAddrKey;
                OnGetDfltShipToCAddrKey(ref value);
                return value;
            }
            set
            {
                if (_DfltShipToCAddrKey != value)
                {
                  OnDfltShipToCAddrKeyChanging(ref value);
                  ReportPropertyChanging("DfltShipToCAddrKey");
                  _DfltShipToCAddrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltShipToCAddrKey");
                  OnDfltShipToCAddrKeyChanged();
              }
            }
        }
        private int? _DfltShipToCAddrKey;
        partial void OnGetDfltShipToCAddrKey(ref int? value);
        partial void OnDfltShipToCAddrKeyChanging(ref int? value);
        partial void OnDfltShipToCAddrKeyChanged();
    
        /// <summary>
        /// There are no comments for DfltShipZoneKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? DfltShipZoneKey
        {
            get
            {
                int? value = _DfltShipZoneKey;
                OnGetDfltShipZoneKey(ref value);
                return value;
            }
            set
            {
                if (_DfltShipZoneKey != value)
                {
                  OnDfltShipZoneKeyChanging(ref value);
                  ReportPropertyChanging("DfltShipZoneKey");
                  _DfltShipZoneKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltShipZoneKey");
                  OnDfltShipZoneKeyChanged();
              }
            }
        }
        private int? _DfltShipZoneKey;
        partial void OnGetDfltShipZoneKey(ref int? value);
        partial void OnDfltShipZoneKeyChanging(ref int? value);
        partial void OnDfltShipZoneKeyChanged();
    
        /// <summary>
        /// There are no comments for DfltVendKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? DfltVendKey
        {
            get
            {
                int? value = _DfltVendKey;
                OnGetDfltVendKey(ref value);
                return value;
            }
            set
            {
                if (_DfltVendKey != value)
                {
                  OnDfltVendKeyChanging(ref value);
                  ReportPropertyChanging("DfltVendKey");
                  _DfltVendKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltVendKey");
                  OnDfltVendKeyChanged();
              }
            }
        }
        private int? _DfltVendKey;
        partial void OnGetDfltVendKey(ref int? value);
        partial void OnDfltVendKeyChanging(ref int? value);
        partial void OnDfltVendKeyChanged();
    
        /// <summary>
        /// There are no comments for DfltWhseKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? DfltWhseKey
        {
            get
            {
                int? value = _DfltWhseKey;
                OnGetDfltWhseKey(ref value);
                return value;
            }
            set
            {
                if (_DfltWhseKey != value)
                {
                  OnDfltWhseKeyChanging(ref value);
                  ReportPropertyChanging("DfltWhseKey");
                  _DfltWhseKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltWhseKey");
                  OnDfltWhseKeyChanged();
              }
            }
        }
        private int? _DfltWhseKey;
        partial void OnGetDfltWhseKey(ref int? value);
        partial void OnDfltWhseKeyChanging(ref int? value);
        partial void OnDfltWhseKeyChanged();
    
        /// <summary>
        /// There are no comments for Expiration in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? Expiration
        {
            get
            {
                global::System.DateTime? value = _Expiration;
                OnGetExpiration(ref value);
                return value;
            }
            set
            {
                if (_Expiration != value)
                {
                  OnExpirationChanging(ref value);
                  ReportPropertyChanging("Expiration");
                  _Expiration = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Expiration");
                  OnExpirationChanged();
              }
            }
        }
        private global::System.DateTime? _Expiration;
        partial void OnGetExpiration(ref global::System.DateTime? value);
        partial void OnExpirationChanging(ref global::System.DateTime? value);
        partial void OnExpirationChanged();
    
        /// <summary>
        /// There are no comments for FixedCurrExchRate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short FixedCurrExchRate
        {
            get
            {
                short value = _FixedCurrExchRate;
                OnGetFixedCurrExchRate(ref value);
                return value;
            }
            set
            {
                if (_FixedCurrExchRate != value)
                {
                  OnFixedCurrExchRateChanging(ref value);
                  ReportPropertyChanging("FixedCurrExchRate");
                  _FixedCurrExchRate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FixedCurrExchRate");
                  OnFixedCurrExchRateChanged();
              }
            }
        }
        private short _FixedCurrExchRate = 0;
        partial void OnGetFixedCurrExchRate(ref short value);
        partial void OnFixedCurrExchRateChanging(ref short value);
        partial void OnFixedCurrExchRateChanged();
    
        /// <summary>
        /// There are no comments for FreightAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal FreightAmt
        {
            get
            {
                decimal value = _FreightAmt;
                OnGetFreightAmt(ref value);
                return value;
            }
            set
            {
                if (_FreightAmt != value)
                {
                  OnFreightAmtChanging(ref value);
                  ReportPropertyChanging("FreightAmt");
                  _FreightAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FreightAmt");
                  OnFreightAmtChanged();
              }
            }
        }
        private decimal _FreightAmt = 0m;
        partial void OnGetFreightAmt(ref decimal value);
        partial void OnFreightAmtChanging(ref decimal value);
        partial void OnFreightAmtChanged();
    
        /// <summary>
        /// There are no comments for FreightMethod in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short FreightMethod
        {
            get
            {
                short value = _FreightMethod;
                OnGetFreightMethod(ref value);
                return value;
            }
            set
            {
                if (_FreightMethod != value)
                {
                  OnFreightMethodChanging(ref value);
                  ReportPropertyChanging("FreightMethod");
                  _FreightMethod = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FreightMethod");
                  OnFreightMethodChanged();
              }
            }
        }
        private short _FreightMethod = 2;
        partial void OnGetFreightMethod(ref short value);
        partial void OnFreightMethodChanging(ref short value);
        partial void OnFreightMethodChanged();
    
        /// <summary>
        /// There are no comments for Hold in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Hold
        {
            get
            {
                short value = _Hold;
                OnGetHold(ref value);
                return value;
            }
            set
            {
                if (_Hold != value)
                {
                  OnHoldChanging(ref value);
                  ReportPropertyChanging("Hold");
                  _Hold = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Hold");
                  OnHoldChanged();
              }
            }
        }
        private short _Hold = 0;
        partial void OnGetHold(ref short value);
        partial void OnHoldChanging(ref short value);
        partial void OnHoldChanged();
    
        /// <summary>
        /// There are no comments for HoldReason in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string HoldReason
        {
            get
            {
                string value = _HoldReason;
                OnGetHoldReason(ref value);
                return value;
            }
            set
            {
                if (_HoldReason != value)
                {
                  OnHoldReasonChanging(ref value);
                  ReportPropertyChanging("HoldReason");
                  _HoldReason = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("HoldReason");
                  OnHoldReasonChanged();
              }
            }
        }
        private string _HoldReason;
        partial void OnGetHoldReason(ref string value);
        partial void OnHoldReasonChanging(ref string value);
        partial void OnHoldReasonChanged();
    
        /// <summary>
        /// There are no comments for ImportLogKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ImportLogKey
        {
            get
            {
                int? value = _ImportLogKey;
                OnGetImportLogKey(ref value);
                return value;
            }
            set
            {
                if (_ImportLogKey != value)
                {
                  OnImportLogKeyChanging(ref value);
                  ReportPropertyChanging("ImportLogKey");
                  _ImportLogKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ImportLogKey");
                  OnImportLogKeyChanged();
              }
            }
        }
        private int? _ImportLogKey;
        partial void OnGetImportLogKey(ref int? value);
        partial void OnImportLogKeyChanging(ref int? value);
        partial void OnImportLogKeyChanged();
    
        /// <summary>
        /// There are no comments for NextLineNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int NextLineNo
        {
            get
            {
                int value = _NextLineNo;
                OnGetNextLineNo(ref value);
                return value;
            }
            set
            {
                if (_NextLineNo != value)
                {
                  OnNextLineNoChanging(ref value);
                  ReportPropertyChanging("NextLineNo");
                  _NextLineNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NextLineNo");
                  OnNextLineNoChanged();
              }
            }
        }
        private int _NextLineNo = 1;
        partial void OnGetNextLineNo(ref int value);
        partial void OnNextLineNoChanging(ref int value);
        partial void OnNextLineNoChanged();
    
        /// <summary>
        /// There are no comments for OpenAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal OpenAmt
        {
            get
            {
                decimal value = _OpenAmt;
                OnGetOpenAmt(ref value);
                return value;
            }
            set
            {
                if (_OpenAmt != value)
                {
                  OnOpenAmtChanging(ref value);
                  ReportPropertyChanging("OpenAmt");
                  _OpenAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OpenAmt");
                  OnOpenAmtChanged();
              }
            }
        }
        private decimal _OpenAmt = 0m;
        partial void OnGetOpenAmt(ref decimal value);
        partial void OnOpenAmtChanging(ref decimal value);
        partial void OnOpenAmtChanged();
    
        /// <summary>
        /// There are no comments for OpenAmtHC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal OpenAmtHC
        {
            get
            {
                decimal value = _OpenAmtHC;
                OnGetOpenAmtHC(ref value);
                return value;
            }
            set
            {
                if (_OpenAmtHC != value)
                {
                  OnOpenAmtHCChanging(ref value);
                  ReportPropertyChanging("OpenAmtHC");
                  _OpenAmtHC = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OpenAmtHC");
                  OnOpenAmtHCChanged();
              }
            }
        }
        private decimal _OpenAmtHC = 0m;
        partial void OnGetOpenAmtHC(ref decimal value);
        partial void OnOpenAmtHCChanging(ref decimal value);
        partial void OnOpenAmtHCChanged();
    
        /// <summary>
        /// There are no comments for PmtTermsKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? PmtTermsKey
        {
            get
            {
                int? value = _PmtTermsKey;
                OnGetPmtTermsKey(ref value);
                return value;
            }
            set
            {
                if (_PmtTermsKey != value)
                {
                  OnPmtTermsKeyChanging(ref value);
                  ReportPropertyChanging("PmtTermsKey");
                  _PmtTermsKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PmtTermsKey");
                  OnPmtTermsKeyChanged();
              }
            }
        }
        private int? _PmtTermsKey;
        partial void OnGetPmtTermsKey(ref int? value);
        partial void OnPmtTermsKeyChanging(ref int? value);
        partial void OnPmtTermsKeyChanged();
    
        /// <summary>
        /// There are no comments for PrimarySperKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? PrimarySperKey
        {
            get
            {
                int? value = _PrimarySperKey;
                OnGetPrimarySperKey(ref value);
                return value;
            }
            set
            {
                if (_PrimarySperKey != value)
                {
                  OnPrimarySperKeyChanging(ref value);
                  ReportPropertyChanging("PrimarySperKey");
                  _PrimarySperKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PrimarySperKey");
                  OnPrimarySperKeyChanged();
              }
            }
        }
        private int? _PrimarySperKey;
        partial void OnGetPrimarySperKey(ref int? value);
        partial void OnPrimarySperKeyChanging(ref int? value);
        partial void OnPrimarySperKeyChanged();
    
        /// <summary>
        /// There are no comments for QuoteFormKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? QuoteFormKey
        {
            get
            {
                int? value = _QuoteFormKey;
                OnGetQuoteFormKey(ref value);
                return value;
            }
            set
            {
                if (_QuoteFormKey != value)
                {
                  OnQuoteFormKeyChanging(ref value);
                  ReportPropertyChanging("QuoteFormKey");
                  _QuoteFormKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QuoteFormKey");
                  OnQuoteFormKeyChanged();
              }
            }
        }
        private int? _QuoteFormKey;
        partial void OnGetQuoteFormKey(ref int? value);
        partial void OnQuoteFormKeyChanging(ref int? value);
        partial void OnQuoteFormKeyChanged();
    
        /// <summary>
        /// There are no comments for RecurSOKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? RecurSOKey
        {
            get
            {
                int? value = _RecurSOKey;
                OnGetRecurSOKey(ref value);
                return value;
            }
            set
            {
                if (_RecurSOKey != value)
                {
                  OnRecurSOKeyChanging(ref value);
                  ReportPropertyChanging("RecurSOKey");
                  _RecurSOKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RecurSOKey");
                  OnRecurSOKeyChanged();
              }
            }
        }
        private int? _RecurSOKey;
        partial void OnGetRecurSOKey(ref int? value);
        partial void OnRecurSOKeyChanging(ref int? value);
        partial void OnRecurSOKeyChanged();
    
        /// <summary>
        /// There are no comments for RequireSOAck in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short RequireSOAck
        {
            get
            {
                short value = _RequireSOAck;
                OnGetRequireSOAck(ref value);
                return value;
            }
            set
            {
                if (_RequireSOAck != value)
                {
                  OnRequireSOAckChanging(ref value);
                  ReportPropertyChanging("RequireSOAck");
                  _RequireSOAck = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RequireSOAck");
                  OnRequireSOAckChanged();
              }
            }
        }
        private short _RequireSOAck = 0;
        partial void OnGetRequireSOAck(ref short value);
        partial void OnRequireSOAckChanging(ref short value);
        partial void OnRequireSOAckChanged();
    
        /// <summary>
        /// There are no comments for SalesAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Importe de Venta")]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        public virtual decimal SalesAmt
        {
            get
            {
                decimal value = _SalesAmt;
                OnGetSalesAmt(ref value);
                return value;
            }
            set
            {
                if (_SalesAmt != value)
                {
                  OnSalesAmtChanging(ref value);
                  ReportPropertyChanging("SalesAmt");
                  _SalesAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesAmt");
                  OnSalesAmtChanged();
              }
            }
        }
        private decimal _SalesAmt = 0m;
        partial void OnGetSalesAmt(ref decimal value);
        partial void OnSalesAmtChanging(ref decimal value);
        partial void OnSalesAmtChanged();
    
        /// <summary>
        /// There are no comments for SalesAmtHC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal SalesAmtHC
        {
            get
            {
                decimal value = _SalesAmtHC;
                OnGetSalesAmtHC(ref value);
                return value;
            }
            set
            {
                if (_SalesAmtHC != value)
                {
                  OnSalesAmtHCChanging(ref value);
                  ReportPropertyChanging("SalesAmtHC");
                  _SalesAmtHC = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesAmtHC");
                  OnSalesAmtHCChanged();
              }
            }
        }
        private decimal _SalesAmtHC = 0m;
        partial void OnGetSalesAmtHC(ref decimal value);
        partial void OnSalesAmtHCChanging(ref decimal value);
        partial void OnSalesAmtHCChanged();
    
        /// <summary>
        /// There are no comments for SalesSourceKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? SalesSourceKey
        {
            get
            {
                int? value = _SalesSourceKey;
                OnGetSalesSourceKey(ref value);
                return value;
            }
            set
            {
                if (_SalesSourceKey != value)
                {
                  OnSalesSourceKeyChanging(ref value);
                  ReportPropertyChanging("SalesSourceKey");
                  _SalesSourceKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesSourceKey");
                  OnSalesSourceKeyChanged();
              }
            }
        }
        private int? _SalesSourceKey;
        partial void OnGetSalesSourceKey(ref int? value);
        partial void OnSalesSourceKeyChanging(ref int? value);
        partial void OnSalesSourceKeyChanged();
    
        /// <summary>
        /// There are no comments for SOAckFormKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? SOAckFormKey
        {
            get
            {
                int? value = _SOAckFormKey;
                OnGetSOAckFormKey(ref value);
                return value;
            }
            set
            {
                if (_SOAckFormKey != value)
                {
                  OnSOAckFormKeyChanging(ref value);
                  ReportPropertyChanging("SOAckFormKey");
                  _SOAckFormKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SOAckFormKey");
                  OnSOAckFormKeyChanged();
              }
            }
        }
        private int? _SOAckFormKey;
        partial void OnGetSOAckFormKey(ref int? value);
        partial void OnSOAckFormKeyChanging(ref int? value);
        partial void OnSOAckFormKeyChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Status
        {
            get
            {
                short value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private short _Status = 0;
        partial void OnGetStatus(ref short value);
        partial void OnStatusChanging(ref short value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// There are no comments for STaxAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal STaxAmt
        {
            get
            {
                decimal value = _STaxAmt;
                OnGetSTaxAmt(ref value);
                return value;
            }
            set
            {
                if (_STaxAmt != value)
                {
                  OnSTaxAmtChanging(ref value);
                  ReportPropertyChanging("STaxAmt");
                  _STaxAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("STaxAmt");
                  OnSTaxAmtChanged();
              }
            }
        }
        private decimal _STaxAmt = 0m;
        partial void OnGetSTaxAmt(ref decimal value);
        partial void OnSTaxAmtChanging(ref decimal value);
        partial void OnSTaxAmtChanged();
    
        /// <summary>
        /// There are no comments for STaxCalc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short STaxCalc
        {
            get
            {
                short value = _STaxCalc;
                OnGetSTaxCalc(ref value);
                return value;
            }
            set
            {
                if (_STaxCalc != value)
                {
                  OnSTaxCalcChanging(ref value);
                  ReportPropertyChanging("STaxCalc");
                  _STaxCalc = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("STaxCalc");
                  OnSTaxCalcChanged();
              }
            }
        }
        private short _STaxCalc = 1;
        partial void OnGetSTaxCalc(ref short value);
        partial void OnSTaxCalcChanging(ref short value);
        partial void OnSTaxCalcChanged();
    
        /// <summary>
        /// There are no comments for STaxTranKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? STaxTranKey
        {
            get
            {
                int? value = _STaxTranKey;
                OnGetSTaxTranKey(ref value);
                return value;
            }
            set
            {
                if (_STaxTranKey != value)
                {
                  OnSTaxTranKeyChanging(ref value);
                  ReportPropertyChanging("STaxTranKey");
                  _STaxTranKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("STaxTranKey");
                  OnSTaxTranKeyChanged();
              }
            }
        }
        private int? _STaxTranKey;
        partial void OnGetSTaxTranKey(ref int? value);
        partial void OnSTaxTranKeyChanging(ref int? value);
        partial void OnSTaxTranKeyChanged();
    
        /// <summary>
        /// There are no comments for TradeDiscAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal TradeDiscAmt
        {
            get
            {
                decimal value = _TradeDiscAmt;
                OnGetTradeDiscAmt(ref value);
                return value;
            }
            set
            {
                if (_TradeDiscAmt != value)
                {
                  OnTradeDiscAmtChanging(ref value);
                  ReportPropertyChanging("TradeDiscAmt");
                  _TradeDiscAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TradeDiscAmt");
                  OnTradeDiscAmtChanged();
              }
            }
        }
        private decimal _TradeDiscAmt = 0m;
        partial void OnGetTradeDiscAmt(ref decimal value);
        partial void OnTradeDiscAmtChanging(ref decimal value);
        partial void OnTradeDiscAmtChanged();
    
        /// <summary>
        /// There are no comments for TranAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal TranAmt
        {
            get
            {
                decimal value = _TranAmt;
                OnGetTranAmt(ref value);
                return value;
            }
            set
            {
                if (_TranAmt != value)
                {
                  OnTranAmtChanging(ref value);
                  ReportPropertyChanging("TranAmt");
                  _TranAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranAmt");
                  OnTranAmtChanged();
              }
            }
        }
        private decimal _TranAmt = 0m;
        partial void OnGetTranAmt(ref decimal value);
        partial void OnTranAmtChanging(ref decimal value);
        partial void OnTranAmtChanged();
    
        /// <summary>
        /// There are no comments for TranAmtHC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal TranAmtHC
        {
            get
            {
                decimal value = _TranAmtHC;
                OnGetTranAmtHC(ref value);
                return value;
            }
            set
            {
                if (_TranAmtHC != value)
                {
                  OnTranAmtHCChanging(ref value);
                  ReportPropertyChanging("TranAmtHC");
                  _TranAmtHC = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranAmtHC");
                  OnTranAmtHCChanged();
              }
            }
        }
        private decimal _TranAmtHC = 0m;
        partial void OnGetTranAmtHC(ref decimal value);
        partial void OnTranAmtHCChanging(ref decimal value);
        partial void OnTranAmtHCChanged();
    
        /// <summary>
        /// There are no comments for TranCmnt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string TranCmnt
        {
            get
            {
                string value = _TranCmnt;
                OnGetTranCmnt(ref value);
                return value;
            }
            set
            {
                if (_TranCmnt != value)
                {
                  OnTranCmntChanging(ref value);
                  ReportPropertyChanging("TranCmnt");
                  _TranCmnt = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TranCmnt");
                  OnTranCmntChanged();
              }
            }
        }
        private string _TranCmnt;
        partial void OnGetTranCmnt(ref string value);
        partial void OnTranCmntChanging(ref string value);
        partial void OnTranCmntChanged();
    
        /// <summary>
        /// There are no comments for TranDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Fecha")]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        public virtual global::System.DateTime TranDate
        {
            get
            {
                global::System.DateTime value = _TranDate;
                OnGetTranDate(ref value);
                return value;
            }
            set
            {
                if (_TranDate != value)
                {
                  OnTranDateChanging(ref value);
                  ReportPropertyChanging("TranDate");
                  _TranDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranDate");
                  OnTranDateChanged();
              }
            }
        }
        private global::System.DateTime _TranDate;
        partial void OnGetTranDate(ref global::System.DateTime value);
        partial void OnTranDateChanging(ref global::System.DateTime value);
        partial void OnTranDateChanged();
    
        /// <summary>
        /// There are no comments for TranID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string TranID
        {
            get
            {
                string value = _TranID;
                OnGetTranID(ref value);
                return value;
            }
            set
            {
                if (_TranID != value)
                {
                  OnTranIDChanging(ref value);
                  ReportPropertyChanging("TranID");
                  _TranID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TranID");
                  OnTranIDChanged();
              }
            }
        }
        private string _TranID;
        partial void OnGetTranID(ref string value);
        partial void OnTranIDChanging(ref string value);
        partial void OnTranIDChanged();
    
        /// <summary>
        /// There are no comments for TranNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupTextReturn]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"No Orden")]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"No Orden")]
        public virtual string TranNo
        {
            get
            {
                string value = _TranNo;
                OnGetTranNo(ref value);
                return value;
            }
            set
            {
                if (_TranNo != value)
                {
                  OnTranNoChanging(ref value);
                  ReportPropertyChanging("TranNo");
                  _TranNo = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TranNo");
                  OnTranNoChanged();
              }
            }
        }
        private string _TranNo;
        partial void OnGetTranNo(ref string value);
        partial void OnTranNoChanging(ref string value);
        partial void OnTranNoChanged();
    
        /// <summary>
        /// There are no comments for TranNoChngOrd in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string TranNoChngOrd
        {
            get
            {
                string value = _TranNoChngOrd;
                OnGetTranNoChngOrd(ref value);
                return value;
            }
            set
            {
                if (_TranNoChngOrd != value)
                {
                  OnTranNoChngOrdChanging(ref value);
                  ReportPropertyChanging("TranNoChngOrd");
                  _TranNoChngOrd = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TranNoChngOrd");
                  OnTranNoChngOrdChanged();
              }
            }
        }
        private string _TranNoChngOrd;
        partial void OnGetTranNoChngOrd(ref string value);
        partial void OnTranNoChngOrdChanging(ref string value);
        partial void OnTranNoChngOrdChanged();
    
        /// <summary>
        /// There are no comments for TranNoRel in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string TranNoRel
        {
            get
            {
                string value = _TranNoRel;
                OnGetTranNoRel(ref value);
                return value;
            }
            set
            {
                if (_TranNoRel != value)
                {
                  OnTranNoRelChanging(ref value);
                  ReportPropertyChanging("TranNoRel");
                  _TranNoRel = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TranNoRel");
                  OnTranNoRelChanged();
              }
            }
        }
        private string _TranNoRel;
        partial void OnGetTranNoRel(ref string value);
        partial void OnTranNoRelChanging(ref string value);
        partial void OnTranNoRelChanged();
    
        /// <summary>
        /// There are no comments for TranNoRelChngOrd in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string TranNoRelChngOrd
        {
            get
            {
                string value = _TranNoRelChngOrd;
                OnGetTranNoRelChngOrd(ref value);
                return value;
            }
            set
            {
                if (_TranNoRelChngOrd != value)
                {
                  OnTranNoRelChngOrdChanging(ref value);
                  ReportPropertyChanging("TranNoRelChngOrd");
                  _TranNoRelChngOrd = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TranNoRelChngOrd");
                  OnTranNoRelChngOrdChanged();
              }
            }
        }
        private string _TranNoRelChngOrd;
        partial void OnGetTranNoRelChngOrd(ref string value);
        partial void OnTranNoRelChngOrdChanging(ref string value);
        partial void OnTranNoRelChngOrdChanged();
    
        /// <summary>
        /// There are no comments for TranType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int TranType
        {
            get
            {
                int value = _TranType;
                OnGetTranType(ref value);
                return value;
            }
            set
            {
                if (_TranType != value)
                {
                  OnTranTypeChanging(ref value);
                  ReportPropertyChanging("TranType");
                  _TranType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranType");
                  OnTranTypeChanged();
              }
            }
        }
        private int _TranType;
        partial void OnGetTranType(ref int value);
        partial void OnTranTypeChanging(ref int value);
        partial void OnTranTypeChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();
    
        /// <summary>
        /// There are no comments for UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? UpdateDate
        {
            get
            {
                global::System.DateTime? value = _UpdateDate;
                OnGetUpdateDate(ref value);
                return value;
            }
            set
            {
                if (_UpdateDate != value)
                {
                  OnUpdateDateChanging(ref value);
                  ReportPropertyChanging("UpdateDate");
                  _UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateDate");
                  OnUpdateDateChanged();
              }
            }
        }
        private global::System.DateTime? _UpdateDate;
        partial void OnGetUpdateDate(ref global::System.DateTime? value);
        partial void OnUpdateDateChanging(ref global::System.DateTime? value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// There are no comments for UpdateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UpdateUserID
        {
            get
            {
                string value = _UpdateUserID;
                OnGetUpdateUserID(ref value);
                return value;
            }
            set
            {
                if (_UpdateUserID != value)
                {
                  OnUpdateUserIDChanging(ref value);
                  ReportPropertyChanging("UpdateUserID");
                  _UpdateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UpdateUserID");
                  OnUpdateUserIDChanged();
              }
            }
        }
        private string _UpdateUserID;
        partial void OnGetUpdateUserID(ref string value);
        partial void OnUpdateUserIDChanging(ref string value);
        partial void OnUpdateUserIDChanged();
    
        /// <summary>
        /// There are no comments for UserFld1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld1
        {
            get
            {
                string value = _UserFld1;
                OnGetUserFld1(ref value);
                return value;
            }
            set
            {
                if (_UserFld1 != value)
                {
                  OnUserFld1Changing(ref value);
                  ReportPropertyChanging("UserFld1");
                  _UserFld1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld1");
                  OnUserFld1Changed();
              }
            }
        }
        private string _UserFld1;
        partial void OnGetUserFld1(ref string value);
        partial void OnUserFld1Changing(ref string value);
        partial void OnUserFld1Changed();
    
        /// <summary>
        /// There are no comments for UserFld2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld2
        {
            get
            {
                string value = _UserFld2;
                OnGetUserFld2(ref value);
                return value;
            }
            set
            {
                if (_UserFld2 != value)
                {
                  OnUserFld2Changing(ref value);
                  ReportPropertyChanging("UserFld2");
                  _UserFld2 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld2");
                  OnUserFld2Changed();
              }
            }
        }
        private string _UserFld2;
        partial void OnGetUserFld2(ref string value);
        partial void OnUserFld2Changing(ref string value);
        partial void OnUserFld2Changed();
    
        /// <summary>
        /// There are no comments for UserFld3 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld3
        {
            get
            {
                string value = _UserFld3;
                OnGetUserFld3(ref value);
                return value;
            }
            set
            {
                if (_UserFld3 != value)
                {
                  OnUserFld3Changing(ref value);
                  ReportPropertyChanging("UserFld3");
                  _UserFld3 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld3");
                  OnUserFld3Changed();
              }
            }
        }
        private string _UserFld3;
        partial void OnGetUserFld3(ref string value);
        partial void OnUserFld3Changing(ref string value);
        partial void OnUserFld3Changed();
    
        /// <summary>
        /// There are no comments for UserFld4 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld4
        {
            get
            {
                string value = _UserFld4;
                OnGetUserFld4(ref value);
                return value;
            }
            set
            {
                if (_UserFld4 != value)
                {
                  OnUserFld4Changing(ref value);
                  ReportPropertyChanging("UserFld4");
                  _UserFld4 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld4");
                  OnUserFld4Changed();
              }
            }
        }
        private string _UserFld4;
        partial void OnGetUserFld4(ref string value);
        partial void OnUserFld4Changing(ref string value);
        partial void OnUserFld4Changed();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Lines in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "SalesOrder_SOLine", "Lines")]
        public virtual EntityCollection<SOLine> Lines
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SOLine>("Net4Sage.DataAccessModel.SalesOrder_SOLine", "Lines");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SOLine>("Net4Sage.DataAccessModel.SalesOrder_SOLine", "Lines", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SalesPerson in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "SalesPerson_SalesOrder", "SalesPerson")]
        public virtual SalesPerson SalesPerson
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesPerson>("Net4Sage.DataAccessModel.SalesPerson_SalesOrder", "SalesPerson").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesPerson>("Net4Sage.DataAccessModel.SalesPerson_SalesOrder", "SalesPerson").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SalesPerson in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SalesPerson> SalesPersonReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesPerson>("Net4Sage.DataAccessModel.SalesPerson_SalesOrder", "SalesPerson");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SalesPerson>("Net4Sage.DataAccessModel.SalesPerson_SalesOrder", "SalesPerson", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesPerson>("Net4Sage.DataAccessModel.SalesPerson_SalesOrder", "SalesPerson").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Customer in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Customer_SalesOrder", "Customer")]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Cliente")]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"Cliente")]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        public virtual Customer Customer
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customer>("Net4Sage.DataAccessModel.Customer_SalesOrder", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customer>("Net4Sage.DataAccessModel.Customer_SalesOrder", "Customer").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Customer in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customer>("Net4Sage.DataAccessModel.Customer_SalesOrder", "Customer");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Customer>("Net4Sage.DataAccessModel.Customer_SalesOrder", "Customer", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customer>("Net4Sage.DataAccessModel.Customer_SalesOrder", "Customer").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.SOLine in the schema.
    /// </summary>
    /// <KeyProperties>
    /// SOLineKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="SOLine")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SOLine : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SOLine object.
        /// </summary>
        /// <param name="sOLineKey">Initial value of SOLineKey.</param>
        /// <param name="cmntOnly">Initial value of CmntOnly.</param>
        /// <param name="inclOnPackList">Initial value of InclOnPackList.</param>
        /// <param name="inclOnPickList">Initial value of InclOnPickList.</param>
        /// <param name="reqCert">Initial value of ReqCert.</param>
        /// <param name="sOKey">Initial value of SOKey.</param>
        /// <param name="sOLineNo">Initial value of SOLineNo.</param>
        /// <param name="status">Initial value of Status.</param>
        /// <param name="systemPriceDetermination">Initial value of SystemPriceDetermination.</param>
        /// <param name="unitPrice">Initial value of UnitPrice.</param>
        /// <param name="unitPriceFromSalesPromo">Initial value of UnitPriceFromSalesPromo.</param>
        /// <param name="unitPriceFromSchedule">Initial value of UnitPriceFromSchedule.</param>
        /// <param name="unitPriceOvrd">Initial value of UnitPriceOvrd.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        public static SOLine CreateSOLine(int sOLineKey, short cmntOnly, short inclOnPackList, short inclOnPickList, short reqCert, int sOKey, int sOLineNo, short status, short systemPriceDetermination, decimal unitPrice, decimal unitPriceFromSalesPromo, decimal unitPriceFromSchedule, short unitPriceOvrd, int updateCounter)
        {
            SOLine sOLine = new SOLine();
            sOLine.SOLineKey = sOLineKey;
            sOLine.CmntOnly = cmntOnly;
            sOLine.InclOnPackList = inclOnPackList;
            sOLine.InclOnPickList = inclOnPickList;
            sOLine.ReqCert = reqCert;
            sOLine.SOKey = sOKey;
            sOLine.SOLineNo = sOLineNo;
            sOLine.Status = status;
            sOLine.SystemPriceDetermination = systemPriceDetermination;
            sOLine.UnitPrice = unitPrice;
            sOLine.UnitPriceFromSalesPromo = unitPriceFromSalesPromo;
            sOLine.UnitPriceFromSchedule = unitPriceFromSchedule;
            sOLine.UnitPriceOvrd = unitPriceOvrd;
            sOLine.UpdateCounter = updateCounter;
            return sOLine;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for SOLineKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SOLineKey
        {
            get
            {
                int value = _SOLineKey;
                OnGetSOLineKey(ref value);
                return value;
            }
            set
            {
                if (_SOLineKey != value)
                {
                  OnSOLineKeyChanging(ref value);
                  ReportPropertyChanging("SOLineKey");
                  _SOLineKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SOLineKey");
                  OnSOLineKeyChanged();
              }
            }
        }
        private int _SOLineKey;
        partial void OnGetSOLineKey(ref int value);
        partial void OnSOLineKeyChanging(ref int value);
        partial void OnSOLineKeyChanged();
    
        /// <summary>
        /// There are no comments for CloseDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CloseDate
        {
            get
            {
                global::System.DateTime? value = _CloseDate;
                OnGetCloseDate(ref value);
                return value;
            }
            set
            {
                if (_CloseDate != value)
                {
                  OnCloseDateChanging(ref value);
                  ReportPropertyChanging("CloseDate");
                  _CloseDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CloseDate");
                  OnCloseDateChanged();
              }
            }
        }
        private global::System.DateTime? _CloseDate;
        partial void OnGetCloseDate(ref global::System.DateTime? value);
        partial void OnCloseDateChanging(ref global::System.DateTime? value);
        partial void OnCloseDateChanged();
    
        /// <summary>
        /// There are no comments for CmntOnly in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CmntOnly
        {
            get
            {
                short value = _CmntOnly;
                OnGetCmntOnly(ref value);
                return value;
            }
            set
            {
                if (_CmntOnly != value)
                {
                  OnCmntOnlyChanging(ref value);
                  ReportPropertyChanging("CmntOnly");
                  _CmntOnly = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CmntOnly");
                  OnCmntOnlyChanged();
              }
            }
        }
        private short _CmntOnly = 0;
        partial void OnGetCmntOnly(ref short value);
        partial void OnCmntOnlyChanging(ref short value);
        partial void OnCmntOnlyChanged();
    
        /// <summary>
        /// There are no comments for CommClassKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CommClassKey
        {
            get
            {
                int? value = _CommClassKey;
                OnGetCommClassKey(ref value);
                return value;
            }
            set
            {
                if (_CommClassKey != value)
                {
                  OnCommClassKeyChanging(ref value);
                  ReportPropertyChanging("CommClassKey");
                  _CommClassKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CommClassKey");
                  OnCommClassKeyChanged();
              }
            }
        }
        private int? _CommClassKey;
        partial void OnGetCommClassKey(ref int? value);
        partial void OnCommClassKeyChanging(ref int? value);
        partial void OnCommClassKeyChanged();
    
        /// <summary>
        /// There are no comments for CommPlanKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CommPlanKey
        {
            get
            {
                int? value = _CommPlanKey;
                OnGetCommPlanKey(ref value);
                return value;
            }
            set
            {
                if (_CommPlanKey != value)
                {
                  OnCommPlanKeyChanging(ref value);
                  ReportPropertyChanging("CommPlanKey");
                  _CommPlanKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CommPlanKey");
                  OnCommPlanKeyChanged();
              }
            }
        }
        private int? _CommPlanKey;
        partial void OnGetCommPlanKey(ref int? value);
        partial void OnCommPlanKeyChanging(ref int? value);
        partial void OnCommPlanKeyChanged();
    
        /// <summary>
        /// There are no comments for CustomBTOKit in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual short? CustomBTOKit
        {
            get
            {
                short? value = _CustomBTOKit;
                OnGetCustomBTOKit(ref value);
                return value;
            }
            set
            {
                if (_CustomBTOKit != value)
                {
                  OnCustomBTOKitChanging(ref value);
                  ReportPropertyChanging("CustomBTOKit");
                  _CustomBTOKit = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustomBTOKit");
                  OnCustomBTOKitChanged();
              }
            }
        }
        private short? _CustomBTOKit = 0;
        partial void OnGetCustomBTOKit(ref short? value);
        partial void OnCustomBTOKitChanging(ref short? value);
        partial void OnCustomBTOKitChanged();
    
        /// <summary>
        /// There are no comments for CustQuoteLineKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CustQuoteLineKey
        {
            get
            {
                int? value = _CustQuoteLineKey;
                OnGetCustQuoteLineKey(ref value);
                return value;
            }
            set
            {
                if (_CustQuoteLineKey != value)
                {
                  OnCustQuoteLineKeyChanging(ref value);
                  ReportPropertyChanging("CustQuoteLineKey");
                  _CustQuoteLineKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustQuoteLineKey");
                  OnCustQuoteLineKeyChanged();
              }
            }
        }
        private int? _CustQuoteLineKey;
        partial void OnGetCustQuoteLineKey(ref int? value);
        partial void OnCustQuoteLineKeyChanging(ref int? value);
        partial void OnCustQuoteLineKeyChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for EstimateKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? EstimateKey
        {
            get
            {
                int? value = _EstimateKey;
                OnGetEstimateKey(ref value);
                return value;
            }
            set
            {
                if (_EstimateKey != value)
                {
                  OnEstimateKeyChanging(ref value);
                  ReportPropertyChanging("EstimateKey");
                  _EstimateKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EstimateKey");
                  OnEstimateKeyChanged();
              }
            }
        }
        private int? _EstimateKey;
        partial void OnGetEstimateKey(ref int? value);
        partial void OnEstimateKeyChanging(ref int? value);
        partial void OnEstimateKeyChanged();
    
        /// <summary>
        /// There are no comments for ExtCmnt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ExtCmnt
        {
            get
            {
                string value = _ExtCmnt;
                OnGetExtCmnt(ref value);
                return value;
            }
            set
            {
                if (_ExtCmnt != value)
                {
                  OnExtCmntChanging(ref value);
                  ReportPropertyChanging("ExtCmnt");
                  _ExtCmnt = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ExtCmnt");
                  OnExtCmntChanged();
              }
            }
        }
        private string _ExtCmnt;
        partial void OnGetExtCmnt(ref string value);
        partial void OnExtCmntChanging(ref string value);
        partial void OnExtCmntChanged();
    
        /// <summary>
        /// There are no comments for InclOnPackList in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short InclOnPackList
        {
            get
            {
                short value = _InclOnPackList;
                OnGetInclOnPackList(ref value);
                return value;
            }
            set
            {
                if (_InclOnPackList != value)
                {
                  OnInclOnPackListChanging(ref value);
                  ReportPropertyChanging("InclOnPackList");
                  _InclOnPackList = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InclOnPackList");
                  OnInclOnPackListChanged();
              }
            }
        }
        private short _InclOnPackList = 1;
        partial void OnGetInclOnPackList(ref short value);
        partial void OnInclOnPackListChanging(ref short value);
        partial void OnInclOnPackListChanged();
    
        /// <summary>
        /// There are no comments for InclOnPickList in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short InclOnPickList
        {
            get
            {
                short value = _InclOnPickList;
                OnGetInclOnPickList(ref value);
                return value;
            }
            set
            {
                if (_InclOnPickList != value)
                {
                  OnInclOnPickListChanging(ref value);
                  ReportPropertyChanging("InclOnPickList");
                  _InclOnPickList = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InclOnPickList");
                  OnInclOnPickListChanged();
              }
            }
        }
        private short _InclOnPickList = 0;
        partial void OnGetInclOnPickList(ref short value);
        partial void OnInclOnPickListChanging(ref short value);
        partial void OnInclOnPickListChanged();
    
        /// <summary>
        /// There are no comments for ItemAliasKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ItemAliasKey
        {
            get
            {
                int? value = _ItemAliasKey;
                OnGetItemAliasKey(ref value);
                return value;
            }
            set
            {
                if (_ItemAliasKey != value)
                {
                  OnItemAliasKeyChanging(ref value);
                  ReportPropertyChanging("ItemAliasKey");
                  _ItemAliasKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ItemAliasKey");
                  OnItemAliasKeyChanged();
              }
            }
        }
        private int? _ItemAliasKey;
        partial void OnGetItemAliasKey(ref int? value);
        partial void OnItemAliasKeyChanging(ref int? value);
        partial void OnItemAliasKeyChanged();
    
        /// <summary>
        /// There are no comments for ItemKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ItemKey
        {
            get
            {
                int? value = _ItemKey;
                OnGetItemKey(ref value);
                return value;
            }
            set
            {
                if (_ItemKey != value)
                {
                  OnItemKeyChanging(ref value);
                  ReportPropertyChanging("ItemKey");
                  _ItemKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ItemKey");
                  OnItemKeyChanged();
              }
            }
        }
        private int? _ItemKey;
        partial void OnGetItemKey(ref int? value);
        partial void OnItemKeyChanging(ref int? value);
        partial void OnItemKeyChanged();
    
        /// <summary>
        /// There are no comments for OrigItemKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? OrigItemKey
        {
            get
            {
                int? value = _OrigItemKey;
                OnGetOrigItemKey(ref value);
                return value;
            }
            set
            {
                if (_OrigItemKey != value)
                {
                  OnOrigItemKeyChanging(ref value);
                  ReportPropertyChanging("OrigItemKey");
                  _OrigItemKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OrigItemKey");
                  OnOrigItemKeyChanged();
              }
            }
        }
        private int? _OrigItemKey;
        partial void OnGetOrigItemKey(ref int? value);
        partial void OnOrigItemKeyChanging(ref int? value);
        partial void OnOrigItemKeyChanged();
    
        /// <summary>
        /// There are no comments for POLineKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? POLineKey
        {
            get
            {
                int? value = _POLineKey;
                OnGetPOLineKey(ref value);
                return value;
            }
            set
            {
                if (_POLineKey != value)
                {
                  OnPOLineKeyChanging(ref value);
                  ReportPropertyChanging("POLineKey");
                  _POLineKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("POLineKey");
                  OnPOLineKeyChanged();
              }
            }
        }
        private int? _POLineKey;
        partial void OnGetPOLineKey(ref int? value);
        partial void OnPOLineKeyChanging(ref int? value);
        partial void OnPOLineKeyChanged();
    
        /// <summary>
        /// There are no comments for ReqCert in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ReqCert
        {
            get
            {
                short value = _ReqCert;
                OnGetReqCert(ref value);
                return value;
            }
            set
            {
                if (_ReqCert != value)
                {
                  OnReqCertChanging(ref value);
                  ReportPropertyChanging("ReqCert");
                  _ReqCert = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ReqCert");
                  OnReqCertChanged();
              }
            }
        }
        private short _ReqCert = 0;
        partial void OnGetReqCert(ref short value);
        partial void OnReqCertChanging(ref short value);
        partial void OnReqCertChanged();
    
        /// <summary>
        /// There are no comments for SalesPromotionID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string SalesPromotionID
        {
            get
            {
                string value = _SalesPromotionID;
                OnGetSalesPromotionID(ref value);
                return value;
            }
            set
            {
                if (_SalesPromotionID != value)
                {
                  OnSalesPromotionIDChanging(ref value);
                  ReportPropertyChanging("SalesPromotionID");
                  _SalesPromotionID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("SalesPromotionID");
                  OnSalesPromotionIDChanged();
              }
            }
        }
        private string _SalesPromotionID;
        partial void OnGetSalesPromotionID(ref string value);
        partial void OnSalesPromotionIDChanging(ref string value);
        partial void OnSalesPromotionIDChanged();
    
        /// <summary>
        /// There are no comments for SalesPromotionKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? SalesPromotionKey
        {
            get
            {
                int? value = _SalesPromotionKey;
                OnGetSalesPromotionKey(ref value);
                return value;
            }
            set
            {
                if (_SalesPromotionKey != value)
                {
                  OnSalesPromotionKeyChanging(ref value);
                  ReportPropertyChanging("SalesPromotionKey");
                  _SalesPromotionKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesPromotionKey");
                  OnSalesPromotionKeyChanged();
              }
            }
        }
        private int? _SalesPromotionKey;
        partial void OnGetSalesPromotionKey(ref int? value);
        partial void OnSalesPromotionKeyChanging(ref int? value);
        partial void OnSalesPromotionKeyChanged();
    
        /// <summary>
        /// There are no comments for SOKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SOKey
        {
            get
            {
                int value = _SOKey;
                OnGetSOKey(ref value);
                return value;
            }
            set
            {
                if (_SOKey != value)
                {
                  OnSOKeyChanging(ref value);
                  ReportPropertyChanging("SOKey");
                  _SOKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SOKey");
                  OnSOKeyChanged();
              }
            }
        }
        private int _SOKey;
        partial void OnGetSOKey(ref int value);
        partial void OnSOKeyChanging(ref int value);
        partial void OnSOKeyChanged();
    
        /// <summary>
        /// There are no comments for SOLineNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SOLineNo
        {
            get
            {
                int value = _SOLineNo;
                OnGetSOLineNo(ref value);
                return value;
            }
            set
            {
                if (_SOLineNo != value)
                {
                  OnSOLineNoChanging(ref value);
                  ReportPropertyChanging("SOLineNo");
                  _SOLineNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SOLineNo");
                  OnSOLineNoChanged();
              }
            }
        }
        private int _SOLineNo;
        partial void OnGetSOLineNo(ref int value);
        partial void OnSOLineNoChanging(ref int value);
        partial void OnSOLineNoChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Status
        {
            get
            {
                short value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private short _Status = 1;
        partial void OnGetStatus(ref short value);
        partial void OnStatusChanging(ref short value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// There are no comments for STaxClassKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? STaxClassKey
        {
            get
            {
                int? value = _STaxClassKey;
                OnGetSTaxClassKey(ref value);
                return value;
            }
            set
            {
                if (_STaxClassKey != value)
                {
                  OnSTaxClassKeyChanging(ref value);
                  ReportPropertyChanging("STaxClassKey");
                  _STaxClassKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("STaxClassKey");
                  OnSTaxClassKeyChanged();
              }
            }
        }
        private int? _STaxClassKey;
        partial void OnGetSTaxClassKey(ref int? value);
        partial void OnSTaxClassKeyChanging(ref int? value);
        partial void OnSTaxClassKeyChanged();
    
        /// <summary>
        /// There are no comments for SystemPriceDetermination in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short SystemPriceDetermination
        {
            get
            {
                short value = _SystemPriceDetermination;
                OnGetSystemPriceDetermination(ref value);
                return value;
            }
            set
            {
                if (_SystemPriceDetermination != value)
                {
                  OnSystemPriceDeterminationChanging(ref value);
                  ReportPropertyChanging("SystemPriceDetermination");
                  _SystemPriceDetermination = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SystemPriceDetermination");
                  OnSystemPriceDeterminationChanged();
              }
            }
        }
        private short _SystemPriceDetermination = 0;
        partial void OnGetSystemPriceDetermination(ref short value);
        partial void OnSystemPriceDeterminationChanging(ref short value);
        partial void OnSystemPriceDeterminationChanged();
    
        /// <summary>
        /// There are no comments for UnitMeasKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? UnitMeasKey
        {
            get
            {
                int? value = _UnitMeasKey;
                OnGetUnitMeasKey(ref value);
                return value;
            }
            set
            {
                if (_UnitMeasKey != value)
                {
                  OnUnitMeasKeyChanging(ref value);
                  ReportPropertyChanging("UnitMeasKey");
                  _UnitMeasKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UnitMeasKey");
                  OnUnitMeasKeyChanged();
              }
            }
        }
        private int? _UnitMeasKey;
        partial void OnGetUnitMeasKey(ref int? value);
        partial void OnUnitMeasKeyChanging(ref int? value);
        partial void OnUnitMeasKeyChanged();
    
        /// <summary>
        /// There are no comments for UnitPrice in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal UnitPrice
        {
            get
            {
                decimal value = _UnitPrice;
                OnGetUnitPrice(ref value);
                return value;
            }
            set
            {
                if (_UnitPrice != value)
                {
                  OnUnitPriceChanging(ref value);
                  ReportPropertyChanging("UnitPrice");
                  _UnitPrice = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UnitPrice");
                  OnUnitPriceChanged();
              }
            }
        }
        private decimal _UnitPrice = 0m;
        partial void OnGetUnitPrice(ref decimal value);
        partial void OnUnitPriceChanging(ref decimal value);
        partial void OnUnitPriceChanged();
    
        /// <summary>
        /// There are no comments for UnitPriceFromSalesPromo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal UnitPriceFromSalesPromo
        {
            get
            {
                decimal value = _UnitPriceFromSalesPromo;
                OnGetUnitPriceFromSalesPromo(ref value);
                return value;
            }
            set
            {
                if (_UnitPriceFromSalesPromo != value)
                {
                  OnUnitPriceFromSalesPromoChanging(ref value);
                  ReportPropertyChanging("UnitPriceFromSalesPromo");
                  _UnitPriceFromSalesPromo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UnitPriceFromSalesPromo");
                  OnUnitPriceFromSalesPromoChanged();
              }
            }
        }
        private decimal _UnitPriceFromSalesPromo = 0m;
        partial void OnGetUnitPriceFromSalesPromo(ref decimal value);
        partial void OnUnitPriceFromSalesPromoChanging(ref decimal value);
        partial void OnUnitPriceFromSalesPromoChanged();
    
        /// <summary>
        /// There are no comments for UnitPriceFromSchedule in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal UnitPriceFromSchedule
        {
            get
            {
                decimal value = _UnitPriceFromSchedule;
                OnGetUnitPriceFromSchedule(ref value);
                return value;
            }
            set
            {
                if (_UnitPriceFromSchedule != value)
                {
                  OnUnitPriceFromScheduleChanging(ref value);
                  ReportPropertyChanging("UnitPriceFromSchedule");
                  _UnitPriceFromSchedule = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UnitPriceFromSchedule");
                  OnUnitPriceFromScheduleChanged();
              }
            }
        }
        private decimal _UnitPriceFromSchedule = 0m;
        partial void OnGetUnitPriceFromSchedule(ref decimal value);
        partial void OnUnitPriceFromScheduleChanging(ref decimal value);
        partial void OnUnitPriceFromScheduleChanged();
    
        /// <summary>
        /// There are no comments for UnitPriceOvrd in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short UnitPriceOvrd
        {
            get
            {
                short value = _UnitPriceOvrd;
                OnGetUnitPriceOvrd(ref value);
                return value;
            }
            set
            {
                if (_UnitPriceOvrd != value)
                {
                  OnUnitPriceOvrdChanging(ref value);
                  ReportPropertyChanging("UnitPriceOvrd");
                  _UnitPriceOvrd = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UnitPriceOvrd");
                  OnUnitPriceOvrdChanged();
              }
            }
        }
        private short _UnitPriceOvrd = 0;
        partial void OnGetUnitPriceOvrd(ref short value);
        partial void OnUnitPriceOvrdChanging(ref short value);
        partial void OnUnitPriceOvrdChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();
    
        /// <summary>
        /// There are no comments for UserFld1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld1
        {
            get
            {
                string value = _UserFld1;
                OnGetUserFld1(ref value);
                return value;
            }
            set
            {
                if (_UserFld1 != value)
                {
                  OnUserFld1Changing(ref value);
                  ReportPropertyChanging("UserFld1");
                  _UserFld1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld1");
                  OnUserFld1Changed();
              }
            }
        }
        private string _UserFld1;
        partial void OnGetUserFld1(ref string value);
        partial void OnUserFld1Changing(ref string value);
        partial void OnUserFld1Changed();
    
        /// <summary>
        /// There are no comments for UserFld2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld2
        {
            get
            {
                string value = _UserFld2;
                OnGetUserFld2(ref value);
                return value;
            }
            set
            {
                if (_UserFld2 != value)
                {
                  OnUserFld2Changing(ref value);
                  ReportPropertyChanging("UserFld2");
                  _UserFld2 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld2");
                  OnUserFld2Changed();
              }
            }
        }
        private string _UserFld2;
        partial void OnGetUserFld2(ref string value);
        partial void OnUserFld2Changing(ref string value);
        partial void OnUserFld2Changed();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for LineDist in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "SOLine_SOLineDist", "LineDist")]
        public virtual EntityCollection<SOLineDist> LineDist
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SOLineDist>("Net4Sage.DataAccessModel.SOLine_SOLineDist", "LineDist");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SOLineDist>("Net4Sage.DataAccessModel.SOLine_SOLineDist", "LineDist", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SalesOrder in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "SalesOrder_SOLine", "SalesOrder")]
        public virtual SalesOrder SalesOrder
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesOrder>("Net4Sage.DataAccessModel.SalesOrder_SOLine", "SalesOrder").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesOrder>("Net4Sage.DataAccessModel.SalesOrder_SOLine", "SalesOrder").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SalesOrder in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SalesOrder> SalesOrderReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesOrder>("Net4Sage.DataAccessModel.SalesOrder_SOLine", "SalesOrder");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SalesOrder>("Net4Sage.DataAccessModel.SalesOrder_SOLine", "SalesOrder", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesOrder>("Net4Sage.DataAccessModel.SalesOrder_SOLine", "SalesOrder").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ShipLines in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "SOLine_ShipLine", "ShipLines")]
        public virtual EntityCollection<ShipLine> ShipLines
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ShipLine>("Net4Sage.DataAccessModel.SOLine_ShipLine", "ShipLines");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ShipLine>("Net4Sage.DataAccessModel.SOLine_ShipLine", "ShipLines", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Item in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Item_SOLine", "Item")]
        public virtual Item Item
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Item>("Net4Sage.DataAccessModel.Item_SOLine", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Item>("Net4Sage.DataAccessModel.Item_SOLine", "Item").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Item in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Item>("Net4Sage.DataAccessModel.Item_SOLine", "Item");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Item>("Net4Sage.DataAccessModel.Item_SOLine", "Item", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Item>("Net4Sage.DataAccessModel.Item_SOLine", "Item").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for UnitMeasure in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "UnitMeasure_SOLine", "UnitMeasure")]
        public virtual UnitMeasure UnitMeasure
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<UnitMeasure>("Net4Sage.DataAccessModel.UnitMeasure_SOLine", "UnitMeasure").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<UnitMeasure>("Net4Sage.DataAccessModel.UnitMeasure_SOLine", "UnitMeasure").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for UnitMeasure in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UnitMeasure> UnitMeasureReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<UnitMeasure>("Net4Sage.DataAccessModel.UnitMeasure_SOLine", "UnitMeasure");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<UnitMeasure>("Net4Sage.DataAccessModel.UnitMeasure_SOLine", "UnitMeasure", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<UnitMeasure>("Net4Sage.DataAccessModel.UnitMeasure_SOLine", "UnitMeasure").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.SOLineDist in the schema.
    /// </summary>
    /// <KeyProperties>
    /// SOLineDistKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="SOLineDist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SOLineDist : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SOLineDist object.
        /// </summary>
        /// <param name="sOLineDistKey">Initial value of SOLineDistKey.</param>
        /// <param name="amtInvcd">Initial value of AmtInvcd.</param>
        /// <param name="createPO">Initial value of CreatePO.</param>
        /// <param name="deliveryMeth">Initial value of DeliveryMeth.</param>
        /// <param name="extAmt">Initial value of ExtAmt.</param>
        /// <param name="freightAmt">Initial value of FreightAmt.</param>
        /// <param name="gLAcctKey">Initial value of GLAcctKey.</param>
        /// <param name="hold">Initial value of Hold.</param>
        /// <param name="origOrdered">Initial value of OrigOrdered.</param>
        /// <param name="promiseDate">Initial value of PromiseDate.</param>
        /// <param name="qtyInvcd">Initial value of QtyInvcd.</param>
        /// <param name="qtyOnBO">Initial value of QtyOnBO.</param>
        /// <param name="qtyOpenToShip">Initial value of QtyOpenToShip.</param>
        /// <param name="qtyOrd">Initial value of QtyOrd.</param>
        /// <param name="qtyRtrnCredit">Initial value of QtyRtrnCredit.</param>
        /// <param name="qtyRtrnReplacement">Initial value of QtyRtrnReplacement.</param>
        /// <param name="qtyShip">Initial value of QtyShip.</param>
        /// <param name="requestDate">Initial value of RequestDate.</param>
        /// <param name="shipDate">Initial value of ShipDate.</param>
        /// <param name="shipPriority">Initial value of ShipPriority.</param>
        /// <param name="shipToCustAddrKey">Initial value of ShipToCustAddrKey.</param>
        /// <param name="shipToCustAddrUpdateCntr">Initial value of ShipToCustAddrUpdateCntr.</param>
        /// <param name="sOLineKey">Initial value of SOLineKey.</param>
        /// <param name="status">Initial value of Status.</param>
        /// <param name="tradeDiscAmt">Initial value of TradeDiscAmt.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        public static SOLineDist CreateSOLineDist(int sOLineDistKey, decimal amtInvcd, short createPO, short deliveryMeth, decimal extAmt, decimal freightAmt, int gLAcctKey, short hold, decimal origOrdered, global::System.DateTime promiseDate, decimal qtyInvcd, decimal qtyOnBO, decimal qtyOpenToShip, decimal qtyOrd, decimal qtyRtrnCredit, decimal qtyRtrnReplacement, decimal qtyShip, global::System.DateTime requestDate, global::System.DateTime shipDate, short shipPriority, int shipToCustAddrKey, int shipToCustAddrUpdateCntr, int sOLineKey, short status, decimal tradeDiscAmt, int updateCounter)
        {
            SOLineDist sOLineDist = new SOLineDist();
            sOLineDist.SOLineDistKey = sOLineDistKey;
            sOLineDist.AmtInvcd = amtInvcd;
            sOLineDist.CreatePO = createPO;
            sOLineDist.DeliveryMeth = deliveryMeth;
            sOLineDist.ExtAmt = extAmt;
            sOLineDist.FreightAmt = freightAmt;
            sOLineDist.GLAcctKey = gLAcctKey;
            sOLineDist.Hold = hold;
            sOLineDist.OrigOrdered = origOrdered;
            sOLineDist.PromiseDate = promiseDate;
            sOLineDist.QtyInvcd = qtyInvcd;
            sOLineDist.QtyOnBO = qtyOnBO;
            sOLineDist.QtyOpenToShip = qtyOpenToShip;
            sOLineDist.QtyOrd = qtyOrd;
            sOLineDist.QtyRtrnCredit = qtyRtrnCredit;
            sOLineDist.QtyRtrnReplacement = qtyRtrnReplacement;
            sOLineDist.QtyShip = qtyShip;
            sOLineDist.RequestDate = requestDate;
            sOLineDist.ShipDate = shipDate;
            sOLineDist.ShipPriority = shipPriority;
            sOLineDist.ShipToCustAddrKey = shipToCustAddrKey;
            sOLineDist.ShipToCustAddrUpdateCntr = shipToCustAddrUpdateCntr;
            sOLineDist.SOLineKey = sOLineKey;
            sOLineDist.Status = status;
            sOLineDist.TradeDiscAmt = tradeDiscAmt;
            sOLineDist.UpdateCounter = updateCounter;
            return sOLineDist;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for SOLineDistKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SOLineDistKey
        {
            get
            {
                int value = _SOLineDistKey;
                OnGetSOLineDistKey(ref value);
                return value;
            }
            set
            {
                if (_SOLineDistKey != value)
                {
                  OnSOLineDistKeyChanging(ref value);
                  ReportPropertyChanging("SOLineDistKey");
                  _SOLineDistKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SOLineDistKey");
                  OnSOLineDistKeyChanged();
              }
            }
        }
        private int _SOLineDistKey;
        partial void OnGetSOLineDistKey(ref int value);
        partial void OnSOLineDistKeyChanging(ref int value);
        partial void OnSOLineDistKeyChanged();
    
        /// <summary>
        /// There are no comments for AcctRefKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? AcctRefKey
        {
            get
            {
                int? value = _AcctRefKey;
                OnGetAcctRefKey(ref value);
                return value;
            }
            set
            {
                if (_AcctRefKey != value)
                {
                  OnAcctRefKeyChanging(ref value);
                  ReportPropertyChanging("AcctRefKey");
                  _AcctRefKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AcctRefKey");
                  OnAcctRefKeyChanged();
              }
            }
        }
        private int? _AcctRefKey;
        partial void OnGetAcctRefKey(ref int? value);
        partial void OnAcctRefKeyChanging(ref int? value);
        partial void OnAcctRefKeyChanged();
    
        /// <summary>
        /// There are no comments for AmtInvcd in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal AmtInvcd
        {
            get
            {
                decimal value = _AmtInvcd;
                OnGetAmtInvcd(ref value);
                return value;
            }
            set
            {
                if (_AmtInvcd != value)
                {
                  OnAmtInvcdChanging(ref value);
                  ReportPropertyChanging("AmtInvcd");
                  _AmtInvcd = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AmtInvcd");
                  OnAmtInvcdChanged();
              }
            }
        }
        private decimal _AmtInvcd = 0m;
        partial void OnGetAmtInvcd(ref decimal value);
        partial void OnAmtInvcdChanging(ref decimal value);
        partial void OnAmtInvcdChanged();
    
        /// <summary>
        /// There are no comments for BlnktSOLineDistKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? BlnktSOLineDistKey
        {
            get
            {
                int? value = _BlnktSOLineDistKey;
                OnGetBlnktSOLineDistKey(ref value);
                return value;
            }
            set
            {
                if (_BlnktSOLineDistKey != value)
                {
                  OnBlnktSOLineDistKeyChanging(ref value);
                  ReportPropertyChanging("BlnktSOLineDistKey");
                  _BlnktSOLineDistKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BlnktSOLineDistKey");
                  OnBlnktSOLineDistKeyChanged();
              }
            }
        }
        private int? _BlnktSOLineDistKey;
        partial void OnGetBlnktSOLineDistKey(ref int? value);
        partial void OnBlnktSOLineDistKeyChanging(ref int? value);
        partial void OnBlnktSOLineDistKeyChanged();
    
        /// <summary>
        /// There are no comments for CreatePO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CreatePO
        {
            get
            {
                short value = _CreatePO;
                OnGetCreatePO(ref value);
                return value;
            }
            set
            {
                if (_CreatePO != value)
                {
                  OnCreatePOChanging(ref value);
                  ReportPropertyChanging("CreatePO");
                  _CreatePO = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreatePO");
                  OnCreatePOChanged();
              }
            }
        }
        private short _CreatePO = 0;
        partial void OnGetCreatePO(ref short value);
        partial void OnCreatePOChanging(ref short value);
        partial void OnCreatePOChanged();
    
        /// <summary>
        /// There are no comments for DeliveryMeth in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short DeliveryMeth
        {
            get
            {
                short value = _DeliveryMeth;
                OnGetDeliveryMeth(ref value);
                return value;
            }
            set
            {
                if (_DeliveryMeth != value)
                {
                  OnDeliveryMethChanging(ref value);
                  ReportPropertyChanging("DeliveryMeth");
                  _DeliveryMeth = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DeliveryMeth");
                  OnDeliveryMethChanged();
              }
            }
        }
        private short _DeliveryMeth = 1;
        partial void OnGetDeliveryMeth(ref short value);
        partial void OnDeliveryMethChanging(ref short value);
        partial void OnDeliveryMethChanged();
    
        /// <summary>
        /// There are no comments for ExtAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal ExtAmt
        {
            get
            {
                decimal value = _ExtAmt;
                OnGetExtAmt(ref value);
                return value;
            }
            set
            {
                if (_ExtAmt != value)
                {
                  OnExtAmtChanging(ref value);
                  ReportPropertyChanging("ExtAmt");
                  _ExtAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ExtAmt");
                  OnExtAmtChanged();
              }
            }
        }
        private decimal _ExtAmt = 0m;
        partial void OnGetExtAmt(ref decimal value);
        partial void OnExtAmtChanging(ref decimal value);
        partial void OnExtAmtChanged();
    
        /// <summary>
        /// There are no comments for FOBKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? FOBKey
        {
            get
            {
                int? value = _FOBKey;
                OnGetFOBKey(ref value);
                return value;
            }
            set
            {
                if (_FOBKey != value)
                {
                  OnFOBKeyChanging(ref value);
                  ReportPropertyChanging("FOBKey");
                  _FOBKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FOBKey");
                  OnFOBKeyChanged();
              }
            }
        }
        private int? _FOBKey;
        partial void OnGetFOBKey(ref int? value);
        partial void OnFOBKeyChanging(ref int? value);
        partial void OnFOBKeyChanged();
    
        /// <summary>
        /// There are no comments for FreightAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal FreightAmt
        {
            get
            {
                decimal value = _FreightAmt;
                OnGetFreightAmt(ref value);
                return value;
            }
            set
            {
                if (_FreightAmt != value)
                {
                  OnFreightAmtChanging(ref value);
                  ReportPropertyChanging("FreightAmt");
                  _FreightAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FreightAmt");
                  OnFreightAmtChanged();
              }
            }
        }
        private decimal _FreightAmt = 0m;
        partial void OnGetFreightAmt(ref decimal value);
        partial void OnFreightAmtChanging(ref decimal value);
        partial void OnFreightAmtChanged();
    
        /// <summary>
        /// There are no comments for GLAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int GLAcctKey
        {
            get
            {
                int value = _GLAcctKey;
                OnGetGLAcctKey(ref value);
                return value;
            }
            set
            {
                if (_GLAcctKey != value)
                {
                  OnGLAcctKeyChanging(ref value);
                  ReportPropertyChanging("GLAcctKey");
                  _GLAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("GLAcctKey");
                  OnGLAcctKeyChanged();
              }
            }
        }
        private int _GLAcctKey;
        partial void OnGetGLAcctKey(ref int value);
        partial void OnGLAcctKeyChanging(ref int value);
        partial void OnGLAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for Hold in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Hold
        {
            get
            {
                short value = _Hold;
                OnGetHold(ref value);
                return value;
            }
            set
            {
                if (_Hold != value)
                {
                  OnHoldChanging(ref value);
                  ReportPropertyChanging("Hold");
                  _Hold = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Hold");
                  OnHoldChanged();
              }
            }
        }
        private short _Hold = 0;
        partial void OnGetHold(ref short value);
        partial void OnHoldChanging(ref short value);
        partial void OnHoldChanged();
    
        /// <summary>
        /// There are no comments for HoldReason in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string HoldReason
        {
            get
            {
                string value = _HoldReason;
                OnGetHoldReason(ref value);
                return value;
            }
            set
            {
                if (_HoldReason != value)
                {
                  OnHoldReasonChanging(ref value);
                  ReportPropertyChanging("HoldReason");
                  _HoldReason = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("HoldReason");
                  OnHoldReasonChanged();
              }
            }
        }
        private string _HoldReason;
        partial void OnGetHoldReason(ref string value);
        partial void OnHoldReasonChanging(ref string value);
        partial void OnHoldReasonChanged();
    
        /// <summary>
        /// There are no comments for OrigOrdered in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal OrigOrdered
        {
            get
            {
                decimal value = _OrigOrdered;
                OnGetOrigOrdered(ref value);
                return value;
            }
            set
            {
                if (_OrigOrdered != value)
                {
                  OnOrigOrderedChanging(ref value);
                  ReportPropertyChanging("OrigOrdered");
                  _OrigOrdered = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OrigOrdered");
                  OnOrigOrderedChanged();
              }
            }
        }
        private decimal _OrigOrdered = 0m;
        partial void OnGetOrigOrdered(ref decimal value);
        partial void OnOrigOrderedChanging(ref decimal value);
        partial void OnOrigOrderedChanged();
    
        /// <summary>
        /// There are no comments for OrigPromiseDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? OrigPromiseDate
        {
            get
            {
                global::System.DateTime? value = _OrigPromiseDate;
                OnGetOrigPromiseDate(ref value);
                return value;
            }
            set
            {
                if (_OrigPromiseDate != value)
                {
                  OnOrigPromiseDateChanging(ref value);
                  ReportPropertyChanging("OrigPromiseDate");
                  _OrigPromiseDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OrigPromiseDate");
                  OnOrigPromiseDateChanged();
              }
            }
        }
        private global::System.DateTime? _OrigPromiseDate;
        partial void OnGetOrigPromiseDate(ref global::System.DateTime? value);
        partial void OnOrigPromiseDateChanging(ref global::System.DateTime? value);
        partial void OnOrigPromiseDateChanged();
    
        /// <summary>
        /// There are no comments for OrigWhseKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? OrigWhseKey
        {
            get
            {
                int? value = _OrigWhseKey;
                OnGetOrigWhseKey(ref value);
                return value;
            }
            set
            {
                if (_OrigWhseKey != value)
                {
                  OnOrigWhseKeyChanging(ref value);
                  ReportPropertyChanging("OrigWhseKey");
                  _OrigWhseKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OrigWhseKey");
                  OnOrigWhseKeyChanged();
              }
            }
        }
        private int? _OrigWhseKey;
        partial void OnGetOrigWhseKey(ref int? value);
        partial void OnOrigWhseKeyChanging(ref int? value);
        partial void OnOrigWhseKeyChanged();
    
        /// <summary>
        /// There are no comments for PromiseDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime PromiseDate
        {
            get
            {
                global::System.DateTime value = _PromiseDate;
                OnGetPromiseDate(ref value);
                return value;
            }
            set
            {
                if (_PromiseDate != value)
                {
                  OnPromiseDateChanging(ref value);
                  ReportPropertyChanging("PromiseDate");
                  _PromiseDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PromiseDate");
                  OnPromiseDateChanged();
              }
            }
        }
        private global::System.DateTime _PromiseDate;
        partial void OnGetPromiseDate(ref global::System.DateTime value);
        partial void OnPromiseDateChanging(ref global::System.DateTime value);
        partial void OnPromiseDateChanged();
    
        /// <summary>
        /// There are no comments for PurchVendAddrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? PurchVendAddrKey
        {
            get
            {
                int? value = _PurchVendAddrKey;
                OnGetPurchVendAddrKey(ref value);
                return value;
            }
            set
            {
                if (_PurchVendAddrKey != value)
                {
                  OnPurchVendAddrKeyChanging(ref value);
                  ReportPropertyChanging("PurchVendAddrKey");
                  _PurchVendAddrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PurchVendAddrKey");
                  OnPurchVendAddrKeyChanged();
              }
            }
        }
        private int? _PurchVendAddrKey;
        partial void OnGetPurchVendAddrKey(ref int? value);
        partial void OnPurchVendAddrKeyChanging(ref int? value);
        partial void OnPurchVendAddrKeyChanged();
    
        /// <summary>
        /// There are no comments for QtyInvcd in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal QtyInvcd
        {
            get
            {
                decimal value = _QtyInvcd;
                OnGetQtyInvcd(ref value);
                return value;
            }
            set
            {
                if (_QtyInvcd != value)
                {
                  OnQtyInvcdChanging(ref value);
                  ReportPropertyChanging("QtyInvcd");
                  _QtyInvcd = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QtyInvcd");
                  OnQtyInvcdChanged();
              }
            }
        }
        private decimal _QtyInvcd = 0m;
        partial void OnGetQtyInvcd(ref decimal value);
        partial void OnQtyInvcdChanging(ref decimal value);
        partial void OnQtyInvcdChanged();
    
        /// <summary>
        /// There are no comments for QtyOnBO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal QtyOnBO
        {
            get
            {
                decimal value = _QtyOnBO;
                OnGetQtyOnBO(ref value);
                return value;
            }
            set
            {
                if (_QtyOnBO != value)
                {
                  OnQtyOnBOChanging(ref value);
                  ReportPropertyChanging("QtyOnBO");
                  _QtyOnBO = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QtyOnBO");
                  OnQtyOnBOChanged();
              }
            }
        }
        private decimal _QtyOnBO = 0m;
        partial void OnGetQtyOnBO(ref decimal value);
        partial void OnQtyOnBOChanging(ref decimal value);
        partial void OnQtyOnBOChanged();
    
        /// <summary>
        /// There are no comments for QtyOpenToShip in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal QtyOpenToShip
        {
            get
            {
                decimal value = _QtyOpenToShip;
                OnGetQtyOpenToShip(ref value);
                return value;
            }
            set
            {
                if (_QtyOpenToShip != value)
                {
                  OnQtyOpenToShipChanging(ref value);
                  ReportPropertyChanging("QtyOpenToShip");
                  _QtyOpenToShip = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QtyOpenToShip");
                  OnQtyOpenToShipChanged();
              }
            }
        }
        private decimal _QtyOpenToShip = 0m;
        partial void OnGetQtyOpenToShip(ref decimal value);
        partial void OnQtyOpenToShipChanging(ref decimal value);
        partial void OnQtyOpenToShipChanged();
    
        /// <summary>
        /// There are no comments for QtyOrd in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal QtyOrd
        {
            get
            {
                decimal value = _QtyOrd;
                OnGetQtyOrd(ref value);
                return value;
            }
            set
            {
                if (_QtyOrd != value)
                {
                  OnQtyOrdChanging(ref value);
                  ReportPropertyChanging("QtyOrd");
                  _QtyOrd = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QtyOrd");
                  OnQtyOrdChanged();
              }
            }
        }
        private decimal _QtyOrd = 0m;
        partial void OnGetQtyOrd(ref decimal value);
        partial void OnQtyOrdChanging(ref decimal value);
        partial void OnQtyOrdChanged();
    
        /// <summary>
        /// There are no comments for QtyRtrnCredit in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal QtyRtrnCredit
        {
            get
            {
                decimal value = _QtyRtrnCredit;
                OnGetQtyRtrnCredit(ref value);
                return value;
            }
            set
            {
                if (_QtyRtrnCredit != value)
                {
                  OnQtyRtrnCreditChanging(ref value);
                  ReportPropertyChanging("QtyRtrnCredit");
                  _QtyRtrnCredit = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QtyRtrnCredit");
                  OnQtyRtrnCreditChanged();
              }
            }
        }
        private decimal _QtyRtrnCredit = 0m;
        partial void OnGetQtyRtrnCredit(ref decimal value);
        partial void OnQtyRtrnCreditChanging(ref decimal value);
        partial void OnQtyRtrnCreditChanged();
    
        /// <summary>
        /// There are no comments for QtyRtrnReplacement in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal QtyRtrnReplacement
        {
            get
            {
                decimal value = _QtyRtrnReplacement;
                OnGetQtyRtrnReplacement(ref value);
                return value;
            }
            set
            {
                if (_QtyRtrnReplacement != value)
                {
                  OnQtyRtrnReplacementChanging(ref value);
                  ReportPropertyChanging("QtyRtrnReplacement");
                  _QtyRtrnReplacement = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QtyRtrnReplacement");
                  OnQtyRtrnReplacementChanged();
              }
            }
        }
        private decimal _QtyRtrnReplacement = 0m;
        partial void OnGetQtyRtrnReplacement(ref decimal value);
        partial void OnQtyRtrnReplacementChanging(ref decimal value);
        partial void OnQtyRtrnReplacementChanged();
    
        /// <summary>
        /// There are no comments for QtyShip in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal QtyShip
        {
            get
            {
                decimal value = _QtyShip;
                OnGetQtyShip(ref value);
                return value;
            }
            set
            {
                if (_QtyShip != value)
                {
                  OnQtyShipChanging(ref value);
                  ReportPropertyChanging("QtyShip");
                  _QtyShip = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QtyShip");
                  OnQtyShipChanged();
              }
            }
        }
        private decimal _QtyShip = 0m;
        partial void OnGetQtyShip(ref decimal value);
        partial void OnQtyShipChanging(ref decimal value);
        partial void OnQtyShipChanged();
    
        /// <summary>
        /// There are no comments for RequestDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime RequestDate
        {
            get
            {
                global::System.DateTime value = _RequestDate;
                OnGetRequestDate(ref value);
                return value;
            }
            set
            {
                if (_RequestDate != value)
                {
                  OnRequestDateChanging(ref value);
                  ReportPropertyChanging("RequestDate");
                  _RequestDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RequestDate");
                  OnRequestDateChanged();
              }
            }
        }
        private global::System.DateTime _RequestDate;
        partial void OnGetRequestDate(ref global::System.DateTime value);
        partial void OnRequestDateChanging(ref global::System.DateTime value);
        partial void OnRequestDateChanged();
    
        /// <summary>
        /// There are no comments for ShipDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime ShipDate
        {
            get
            {
                global::System.DateTime value = _ShipDate;
                OnGetShipDate(ref value);
                return value;
            }
            set
            {
                if (_ShipDate != value)
                {
                  OnShipDateChanging(ref value);
                  ReportPropertyChanging("ShipDate");
                  _ShipDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipDate");
                  OnShipDateChanged();
              }
            }
        }
        private global::System.DateTime _ShipDate;
        partial void OnGetShipDate(ref global::System.DateTime value);
        partial void OnShipDateChanging(ref global::System.DateTime value);
        partial void OnShipDateChanged();
    
        /// <summary>
        /// There are no comments for ShipMethKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ShipMethKey
        {
            get
            {
                int? value = _ShipMethKey;
                OnGetShipMethKey(ref value);
                return value;
            }
            set
            {
                if (_ShipMethKey != value)
                {
                  OnShipMethKeyChanging(ref value);
                  ReportPropertyChanging("ShipMethKey");
                  _ShipMethKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipMethKey");
                  OnShipMethKeyChanged();
              }
            }
        }
        private int? _ShipMethKey;
        partial void OnGetShipMethKey(ref int? value);
        partial void OnShipMethKeyChanging(ref int? value);
        partial void OnShipMethKeyChanged();
    
        /// <summary>
        /// There are no comments for ShipPriority in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ShipPriority
        {
            get
            {
                short value = _ShipPriority;
                OnGetShipPriority(ref value);
                return value;
            }
            set
            {
                if (_ShipPriority != value)
                {
                  OnShipPriorityChanging(ref value);
                  ReportPropertyChanging("ShipPriority");
                  _ShipPriority = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipPriority");
                  OnShipPriorityChanged();
              }
            }
        }
        private short _ShipPriority = 3;
        partial void OnGetShipPriority(ref short value);
        partial void OnShipPriorityChanging(ref short value);
        partial void OnShipPriorityChanged();
    
        /// <summary>
        /// There are no comments for ShipToAddrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ShipToAddrKey
        {
            get
            {
                int? value = _ShipToAddrKey;
                OnGetShipToAddrKey(ref value);
                return value;
            }
            set
            {
                if (_ShipToAddrKey != value)
                {
                  OnShipToAddrKeyChanging(ref value);
                  ReportPropertyChanging("ShipToAddrKey");
                  _ShipToAddrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipToAddrKey");
                  OnShipToAddrKeyChanged();
              }
            }
        }
        private int? _ShipToAddrKey;
        partial void OnGetShipToAddrKey(ref int? value);
        partial void OnShipToAddrKeyChanging(ref int? value);
        partial void OnShipToAddrKeyChanged();
    
        /// <summary>
        /// There are no comments for ShipToCustAddrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ShipToCustAddrKey
        {
            get
            {
                int value = _ShipToCustAddrKey;
                OnGetShipToCustAddrKey(ref value);
                return value;
            }
            set
            {
                if (_ShipToCustAddrKey != value)
                {
                  OnShipToCustAddrKeyChanging(ref value);
                  ReportPropertyChanging("ShipToCustAddrKey");
                  _ShipToCustAddrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipToCustAddrKey");
                  OnShipToCustAddrKeyChanged();
              }
            }
        }
        private int _ShipToCustAddrKey;
        partial void OnGetShipToCustAddrKey(ref int value);
        partial void OnShipToCustAddrKeyChanging(ref int value);
        partial void OnShipToCustAddrKeyChanged();
    
        /// <summary>
        /// There are no comments for ShipToCustAddrUpdateCntr in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ShipToCustAddrUpdateCntr
        {
            get
            {
                int value = _ShipToCustAddrUpdateCntr;
                OnGetShipToCustAddrUpdateCntr(ref value);
                return value;
            }
            set
            {
                if (_ShipToCustAddrUpdateCntr != value)
                {
                  OnShipToCustAddrUpdateCntrChanging(ref value);
                  ReportPropertyChanging("ShipToCustAddrUpdateCntr");
                  _ShipToCustAddrUpdateCntr = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipToCustAddrUpdateCntr");
                  OnShipToCustAddrUpdateCntrChanged();
              }
            }
        }
        private int _ShipToCustAddrUpdateCntr = 0;
        partial void OnGetShipToCustAddrUpdateCntr(ref int value);
        partial void OnShipToCustAddrUpdateCntrChanging(ref int value);
        partial void OnShipToCustAddrUpdateCntrChanged();
    
        /// <summary>
        /// There are no comments for ShipZoneKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ShipZoneKey
        {
            get
            {
                int? value = _ShipZoneKey;
                OnGetShipZoneKey(ref value);
                return value;
            }
            set
            {
                if (_ShipZoneKey != value)
                {
                  OnShipZoneKeyChanging(ref value);
                  ReportPropertyChanging("ShipZoneKey");
                  _ShipZoneKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipZoneKey");
                  OnShipZoneKeyChanged();
              }
            }
        }
        private int? _ShipZoneKey;
        partial void OnGetShipZoneKey(ref int? value);
        partial void OnShipZoneKeyChanging(ref int? value);
        partial void OnShipZoneKeyChanged();
    
        /// <summary>
        /// There are no comments for SOLineKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SOLineKey
        {
            get
            {
                int value = _SOLineKey;
                OnGetSOLineKey(ref value);
                return value;
            }
            set
            {
                if (_SOLineKey != value)
                {
                  OnSOLineKeyChanging(ref value);
                  ReportPropertyChanging("SOLineKey");
                  _SOLineKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SOLineKey");
                  OnSOLineKeyChanged();
              }
            }
        }
        private int _SOLineKey;
        partial void OnGetSOLineKey(ref int value);
        partial void OnSOLineKeyChanging(ref int value);
        partial void OnSOLineKeyChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Status
        {
            get
            {
                short value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private short _Status = 1;
        partial void OnGetStatus(ref short value);
        partial void OnStatusChanging(ref short value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// There are no comments for STaxTranKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? STaxTranKey
        {
            get
            {
                int? value = _STaxTranKey;
                OnGetSTaxTranKey(ref value);
                return value;
            }
            set
            {
                if (_STaxTranKey != value)
                {
                  OnSTaxTranKeyChanging(ref value);
                  ReportPropertyChanging("STaxTranKey");
                  _STaxTranKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("STaxTranKey");
                  OnSTaxTranKeyChanged();
              }
            }
        }
        private int? _STaxTranKey;
        partial void OnGetSTaxTranKey(ref int? value);
        partial void OnSTaxTranKeyChanging(ref int? value);
        partial void OnSTaxTranKeyChanged();
    
        /// <summary>
        /// There are no comments for TradeDiscAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal TradeDiscAmt
        {
            get
            {
                decimal value = _TradeDiscAmt;
                OnGetTradeDiscAmt(ref value);
                return value;
            }
            set
            {
                if (_TradeDiscAmt != value)
                {
                  OnTradeDiscAmtChanging(ref value);
                  ReportPropertyChanging("TradeDiscAmt");
                  _TradeDiscAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TradeDiscAmt");
                  OnTradeDiscAmtChanged();
              }
            }
        }
        private decimal _TradeDiscAmt = 0m;
        partial void OnGetTradeDiscAmt(ref decimal value);
        partial void OnTradeDiscAmtChanging(ref decimal value);
        partial void OnTradeDiscAmtChanged();
    
        /// <summary>
        /// There are no comments for TradeDiscPct in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? TradeDiscPct
        {
            get
            {
                decimal? value = _TradeDiscPct;
                OnGetTradeDiscPct(ref value);
                return value;
            }
            set
            {
                if (_TradeDiscPct != value)
                {
                  OnTradeDiscPctChanging(ref value);
                  ReportPropertyChanging("TradeDiscPct");
                  _TradeDiscPct = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TradeDiscPct");
                  OnTradeDiscPctChanged();
              }
            }
        }
        private decimal? _TradeDiscPct = 0m;
        partial void OnGetTradeDiscPct(ref decimal? value);
        partial void OnTradeDiscPctChanging(ref decimal? value);
        partial void OnTradeDiscPctChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();
    
        /// <summary>
        /// There are no comments for VendKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? VendKey
        {
            get
            {
                int? value = _VendKey;
                OnGetVendKey(ref value);
                return value;
            }
            set
            {
                if (_VendKey != value)
                {
                  OnVendKeyChanging(ref value);
                  ReportPropertyChanging("VendKey");
                  _VendKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VendKey");
                  OnVendKeyChanged();
              }
            }
        }
        private int? _VendKey;
        partial void OnGetVendKey(ref int? value);
        partial void OnVendKeyChanging(ref int? value);
        partial void OnVendKeyChanged();
    
        /// <summary>
        /// There are no comments for WhseKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? WhseKey
        {
            get
            {
                int? value = _WhseKey;
                OnGetWhseKey(ref value);
                return value;
            }
            set
            {
                if (_WhseKey != value)
                {
                  OnWhseKeyChanging(ref value);
                  ReportPropertyChanging("WhseKey");
                  _WhseKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WhseKey");
                  OnWhseKeyChanged();
              }
            }
        }
        private int? _WhseKey;
        partial void OnGetWhseKey(ref int? value);
        partial void OnWhseKeyChanging(ref int? value);
        partial void OnWhseKeyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Line in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "SOLine_SOLineDist", "Line")]
        public virtual SOLine Line
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SOLine>("Net4Sage.DataAccessModel.SOLine_SOLineDist", "Line").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SOLine>("Net4Sage.DataAccessModel.SOLine_SOLineDist", "Line").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Line in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SOLine> LineReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SOLine>("Net4Sage.DataAccessModel.SOLine_SOLineDist", "Line");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SOLine>("Net4Sage.DataAccessModel.SOLine_SOLineDist", "Line", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SOLine>("Net4Sage.DataAccessModel.SOLine_SOLineDist", "Line").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.Address in the schema.
    /// </summary>
    /// <KeyProperties>
    /// AddrKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="Address")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Address : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Address object.
        /// </summary>
        /// <param name="addrKey">Initial value of AddrKey.</param>
        /// <param name="residential">Initial value of Residential.</param>
        /// <param name="transactionOverride">Initial value of TransactionOverride.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        public static Address CreateAddress(int addrKey, short residential, short transactionOverride, int updateCounter)
        {
            Address address = new Address();
            address.AddrKey = addrKey;
            address.Residential = residential;
            address.TransactionOverride = transactionOverride;
            address.UpdateCounter = updateCounter;
            return address;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for AddrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int AddrKey
        {
            get
            {
                int value = _AddrKey;
                OnGetAddrKey(ref value);
                return value;
            }
            set
            {
                if (_AddrKey != value)
                {
                  OnAddrKeyChanging(ref value);
                  ReportPropertyChanging("AddrKey");
                  _AddrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AddrKey");
                  OnAddrKeyChanged();
              }
            }
        }
        private int _AddrKey;
        partial void OnGetAddrKey(ref int value);
        partial void OnAddrKeyChanging(ref int value);
        partial void OnAddrKeyChanged();
    
        /// <summary>
        /// There are no comments for AddrLine1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string AddrLine1
        {
            get
            {
                string value = _AddrLine1;
                OnGetAddrLine1(ref value);
                return value;
            }
            set
            {
                if (_AddrLine1 != value)
                {
                  OnAddrLine1Changing(ref value);
                  ReportPropertyChanging("AddrLine1");
                  _AddrLine1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("AddrLine1");
                  OnAddrLine1Changed();
              }
            }
        }
        private string _AddrLine1;
        partial void OnGetAddrLine1(ref string value);
        partial void OnAddrLine1Changing(ref string value);
        partial void OnAddrLine1Changed();
    
        /// <summary>
        /// There are no comments for AddrLine2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string AddrLine2
        {
            get
            {
                string value = _AddrLine2;
                OnGetAddrLine2(ref value);
                return value;
            }
            set
            {
                if (_AddrLine2 != value)
                {
                  OnAddrLine2Changing(ref value);
                  ReportPropertyChanging("AddrLine2");
                  _AddrLine2 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("AddrLine2");
                  OnAddrLine2Changed();
              }
            }
        }
        private string _AddrLine2;
        partial void OnGetAddrLine2(ref string value);
        partial void OnAddrLine2Changing(ref string value);
        partial void OnAddrLine2Changed();
    
        /// <summary>
        /// There are no comments for AddrLine3 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string AddrLine3
        {
            get
            {
                string value = _AddrLine3;
                OnGetAddrLine3(ref value);
                return value;
            }
            set
            {
                if (_AddrLine3 != value)
                {
                  OnAddrLine3Changing(ref value);
                  ReportPropertyChanging("AddrLine3");
                  _AddrLine3 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("AddrLine3");
                  OnAddrLine3Changed();
              }
            }
        }
        private string _AddrLine3;
        partial void OnGetAddrLine3(ref string value);
        partial void OnAddrLine3Changing(ref string value);
        partial void OnAddrLine3Changed();
    
        /// <summary>
        /// There are no comments for AddrLine4 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string AddrLine4
        {
            get
            {
                string value = _AddrLine4;
                OnGetAddrLine4(ref value);
                return value;
            }
            set
            {
                if (_AddrLine4 != value)
                {
                  OnAddrLine4Changing(ref value);
                  ReportPropertyChanging("AddrLine4");
                  _AddrLine4 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("AddrLine4");
                  OnAddrLine4Changed();
              }
            }
        }
        private string _AddrLine4;
        partial void OnGetAddrLine4(ref string value);
        partial void OnAddrLine4Changing(ref string value);
        partial void OnAddrLine4Changed();
    
        /// <summary>
        /// There are no comments for AddrLine5 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string AddrLine5
        {
            get
            {
                string value = _AddrLine5;
                OnGetAddrLine5(ref value);
                return value;
            }
            set
            {
                if (_AddrLine5 != value)
                {
                  OnAddrLine5Changing(ref value);
                  ReportPropertyChanging("AddrLine5");
                  _AddrLine5 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("AddrLine5");
                  OnAddrLine5Changed();
              }
            }
        }
        private string _AddrLine5;
        partial void OnGetAddrLine5(ref string value);
        partial void OnAddrLine5Changing(ref string value);
        partial void OnAddrLine5Changed();
    
        /// <summary>
        /// There are no comments for AddrName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string AddrName
        {
            get
            {
                string value = _AddrName;
                OnGetAddrName(ref value);
                return value;
            }
            set
            {
                if (_AddrName != value)
                {
                  OnAddrNameChanging(ref value);
                  ReportPropertyChanging("AddrName");
                  _AddrName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("AddrName");
                  OnAddrNameChanged();
              }
            }
        }
        private string _AddrName;
        partial void OnGetAddrName(ref string value);
        partial void OnAddrNameChanging(ref string value);
        partial void OnAddrNameChanged();
    
        /// <summary>
        /// There are no comments for City in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string City
        {
            get
            {
                string value = _City;
                OnGetCity(ref value);
                return value;
            }
            set
            {
                if (_City != value)
                {
                  OnCityChanging(ref value);
                  ReportPropertyChanging("City");
                  _City = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("City");
                  OnCityChanged();
              }
            }
        }
        private string _City;
        partial void OnGetCity(ref string value);
        partial void OnCityChanging(ref string value);
        partial void OnCityChanged();
    
        /// <summary>
        /// There are no comments for CountryID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CountryID
        {
            get
            {
                string value = _CountryID;
                OnGetCountryID(ref value);
                return value;
            }
            set
            {
                if (_CountryID != value)
                {
                  OnCountryIDChanging(ref value);
                  ReportPropertyChanging("CountryID");
                  _CountryID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CountryID");
                  OnCountryIDChanged();
              }
            }
        }
        private string _CountryID;
        partial void OnGetCountryID(ref string value);
        partial void OnCountryIDChanging(ref string value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// There are no comments for CRMAddrID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CRMAddrID
        {
            get
            {
                string value = _CRMAddrID;
                OnGetCRMAddrID(ref value);
                return value;
            }
            set
            {
                if (_CRMAddrID != value)
                {
                  OnCRMAddrIDChanging(ref value);
                  ReportPropertyChanging("CRMAddrID");
                  _CRMAddrID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CRMAddrID");
                  OnCRMAddrIDChanged();
              }
            }
        }
        private string _CRMAddrID;
        partial void OnGetCRMAddrID(ref string value);
        partial void OnCRMAddrIDChanging(ref string value);
        partial void OnCRMAddrIDChanged();
    
        /// <summary>
        /// There are no comments for Fax in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Fax
        {
            get
            {
                string value = _Fax;
                OnGetFax(ref value);
                return value;
            }
            set
            {
                if (_Fax != value)
                {
                  OnFaxChanging(ref value);
                  ReportPropertyChanging("Fax");
                  _Fax = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Fax");
                  OnFaxChanged();
              }
            }
        }
        private string _Fax;
        partial void OnGetFax(ref string value);
        partial void OnFaxChanging(ref string value);
        partial void OnFaxChanged();
    
        /// <summary>
        /// There are no comments for FaxExt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string FaxExt
        {
            get
            {
                string value = _FaxExt;
                OnGetFaxExt(ref value);
                return value;
            }
            set
            {
                if (_FaxExt != value)
                {
                  OnFaxExtChanging(ref value);
                  ReportPropertyChanging("FaxExt");
                  _FaxExt = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("FaxExt");
                  OnFaxExtChanged();
              }
            }
        }
        private string _FaxExt;
        partial void OnGetFaxExt(ref string value);
        partial void OnFaxExtChanging(ref string value);
        partial void OnFaxExtChanged();
    
        /// <summary>
        /// There are no comments for Latitude in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? Latitude
        {
            get
            {
                decimal? value = _Latitude;
                OnGetLatitude(ref value);
                return value;
            }
            set
            {
                if (_Latitude != value)
                {
                  OnLatitudeChanging(ref value);
                  ReportPropertyChanging("Latitude");
                  _Latitude = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Latitude");
                  OnLatitudeChanged();
              }
            }
        }
        private decimal? _Latitude;
        partial void OnGetLatitude(ref decimal? value);
        partial void OnLatitudeChanging(ref decimal? value);
        partial void OnLatitudeChanged();
    
        /// <summary>
        /// There are no comments for Longitude in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? Longitude
        {
            get
            {
                decimal? value = _Longitude;
                OnGetLongitude(ref value);
                return value;
            }
            set
            {
                if (_Longitude != value)
                {
                  OnLongitudeChanging(ref value);
                  ReportPropertyChanging("Longitude");
                  _Longitude = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Longitude");
                  OnLongitudeChanged();
              }
            }
        }
        private decimal? _Longitude;
        partial void OnGetLongitude(ref decimal? value);
        partial void OnLongitudeChanging(ref decimal? value);
        partial void OnLongitudeChanged();
    
        /// <summary>
        /// There are no comments for MobilePhone in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string MobilePhone
        {
            get
            {
                string value = _MobilePhone;
                OnGetMobilePhone(ref value);
                return value;
            }
            set
            {
                if (_MobilePhone != value)
                {
                  OnMobilePhoneChanging(ref value);
                  ReportPropertyChanging("MobilePhone");
                  _MobilePhone = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("MobilePhone");
                  OnMobilePhoneChanged();
              }
            }
        }
        private string _MobilePhone;
        partial void OnGetMobilePhone(ref string value);
        partial void OnMobilePhoneChanging(ref string value);
        partial void OnMobilePhoneChanged();
    
        /// <summary>
        /// There are no comments for Phone in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Phone
        {
            get
            {
                string value = _Phone;
                OnGetPhone(ref value);
                return value;
            }
            set
            {
                if (_Phone != value)
                {
                  OnPhoneChanging(ref value);
                  ReportPropertyChanging("Phone");
                  _Phone = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Phone");
                  OnPhoneChanged();
              }
            }
        }
        private string _Phone;
        partial void OnGetPhone(ref string value);
        partial void OnPhoneChanging(ref string value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// There are no comments for PhoneExt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PhoneExt
        {
            get
            {
                string value = _PhoneExt;
                OnGetPhoneExt(ref value);
                return value;
            }
            set
            {
                if (_PhoneExt != value)
                {
                  OnPhoneExtChanging(ref value);
                  ReportPropertyChanging("PhoneExt");
                  _PhoneExt = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PhoneExt");
                  OnPhoneExtChanged();
              }
            }
        }
        private string _PhoneExt;
        partial void OnGetPhoneExt(ref string value);
        partial void OnPhoneExtChanging(ref string value);
        partial void OnPhoneExtChanged();
    
        /// <summary>
        /// There are no comments for PostalCode in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PostalCode
        {
            get
            {
                string value = _PostalCode;
                OnGetPostalCode(ref value);
                return value;
            }
            set
            {
                if (_PostalCode != value)
                {
                  OnPostalCodeChanging(ref value);
                  ReportPropertyChanging("PostalCode");
                  _PostalCode = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PostalCode");
                  OnPostalCodeChanged();
              }
            }
        }
        private string _PostalCode;
        partial void OnGetPostalCode(ref string value);
        partial void OnPostalCodeChanging(ref string value);
        partial void OnPostalCodeChanged();
    
        /// <summary>
        /// There are no comments for Residential in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Residential
        {
            get
            {
                short value = _Residential;
                OnGetResidential(ref value);
                return value;
            }
            set
            {
                if (_Residential != value)
                {
                  OnResidentialChanging(ref value);
                  ReportPropertyChanging("Residential");
                  _Residential = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Residential");
                  OnResidentialChanged();
              }
            }
        }
        private short _Residential = 0;
        partial void OnGetResidential(ref short value);
        partial void OnResidentialChanging(ref short value);
        partial void OnResidentialChanged();
    
        /// <summary>
        /// There are no comments for StateID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string StateID
        {
            get
            {
                string value = _StateID;
                OnGetStateID(ref value);
                return value;
            }
            set
            {
                if (_StateID != value)
                {
                  OnStateIDChanging(ref value);
                  ReportPropertyChanging("StateID");
                  _StateID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("StateID");
                  OnStateIDChanged();
              }
            }
        }
        private string _StateID;
        partial void OnGetStateID(ref string value);
        partial void OnStateIDChanging(ref string value);
        partial void OnStateIDChanged();
    
        /// <summary>
        /// There are no comments for TransactionOverride in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short TransactionOverride
        {
            get
            {
                short value = _TransactionOverride;
                OnGetTransactionOverride(ref value);
                return value;
            }
            set
            {
                if (_TransactionOverride != value)
                {
                  OnTransactionOverrideChanging(ref value);
                  ReportPropertyChanging("TransactionOverride");
                  _TransactionOverride = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TransactionOverride");
                  OnTransactionOverrideChanged();
              }
            }
        }
        private short _TransactionOverride = 0;
        partial void OnGetTransactionOverride(ref short value);
        partial void OnTransactionOverrideChanging(ref short value);
        partial void OnTransactionOverrideChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CustomerAddress in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "CustomerAddress_Address", "CustomerAddress")]
        public virtual CustomerAddress CustomerAddress
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustomerAddress>("Net4Sage.DataAccessModel.CustomerAddress_Address", "CustomerAddress").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustomerAddress>("Net4Sage.DataAccessModel.CustomerAddress_Address", "CustomerAddress").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for CustomerAddress in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustomerAddress> CustomerAddressReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustomerAddress>("Net4Sage.DataAccessModel.CustomerAddress_Address", "CustomerAddress");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CustomerAddress>("Net4Sage.DataAccessModel.CustomerAddress_Address", "CustomerAddress", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustomerAddress>("Net4Sage.DataAccessModel.CustomerAddress_Address", "CustomerAddress").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Warehouses in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Address_Warehouse", "Warehouses")]
        public virtual EntityCollection<Warehouse> Warehouses
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Warehouse>("Net4Sage.DataAccessModel.Address_Warehouse", "Warehouses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Warehouse>("Net4Sage.DataAccessModel.Address_Warehouse", "Warehouses", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.AcctSegment in the schema.
    /// </summary>
    /// <KeyProperties>
    /// GLAcctKey
    /// SegmentKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="AcctSegment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AcctSegment : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new AcctSegment object.
        /// </summary>
        /// <param name="gLAcctKey">Initial value of GLAcctKey.</param>
        /// <param name="segmentKey">Initial value of SegmentKey.</param>
        /// <param name="acctSegValue">Initial value of AcctSegValue.</param>
        public static AcctSegment CreateAcctSegment(int gLAcctKey, int segmentKey, string acctSegValue)
        {
            AcctSegment acctSegment = new AcctSegment();
            acctSegment.GLAcctKey = gLAcctKey;
            acctSegment.SegmentKey = segmentKey;
            acctSegment.AcctSegValue = acctSegValue;
            return acctSegment;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for GLAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int GLAcctKey
        {
            get
            {
                int value = _GLAcctKey;
                OnGetGLAcctKey(ref value);
                return value;
            }
            set
            {
                if (_GLAcctKey != value)
                {
                  OnGLAcctKeyChanging(ref value);
                  ReportPropertyChanging("GLAcctKey");
                  _GLAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("GLAcctKey");
                  OnGLAcctKeyChanged();
              }
            }
        }
        private int _GLAcctKey;
        partial void OnGetGLAcctKey(ref int value);
        partial void OnGLAcctKeyChanging(ref int value);
        partial void OnGLAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for SegmentKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SegmentKey
        {
            get
            {
                int value = _SegmentKey;
                OnGetSegmentKey(ref value);
                return value;
            }
            set
            {
                if (_SegmentKey != value)
                {
                  OnSegmentKeyChanging(ref value);
                  ReportPropertyChanging("SegmentKey");
                  _SegmentKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SegmentKey");
                  OnSegmentKeyChanged();
              }
            }
        }
        private int _SegmentKey;
        partial void OnGetSegmentKey(ref int value);
        partial void OnSegmentKeyChanging(ref int value);
        partial void OnSegmentKeyChanged();
    
        /// <summary>
        /// There are no comments for AcctSegValue in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string AcctSegValue
        {
            get
            {
                string value = _AcctSegValue;
                OnGetAcctSegValue(ref value);
                return value;
            }
            set
            {
                if (_AcctSegValue != value)
                {
                  OnAcctSegValueChanging(ref value);
                  ReportPropertyChanging("AcctSegValue");
                  _AcctSegValue = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("AcctSegValue");
                  OnAcctSegValueChanged();
              }
            }
        }
        private string _AcctSegValue;
        partial void OnGetAcctSegValue(ref string value);
        partial void OnAcctSegValueChanging(ref string value);
        partial void OnAcctSegValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Segment in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Segment_AcctSegment", "Segment")]
        public virtual Segment Segment
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Segment>("Net4Sage.DataAccessModel.Segment_AcctSegment", "Segment").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Segment>("Net4Sage.DataAccessModel.Segment_AcctSegment", "Segment").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Segment in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Segment> SegmentReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Segment>("Net4Sage.DataAccessModel.Segment_AcctSegment", "Segment");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Segment>("Net4Sage.DataAccessModel.Segment_AcctSegment", "Segment", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Segment>("Net4Sage.DataAccessModel.Segment_AcctSegment", "Segment").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for GLAccount in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "GLAccount_AcctSegment", "GLAccount")]
        public virtual GLAccount GLAccount
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<GLAccount>("Net4Sage.DataAccessModel.GLAccount_AcctSegment", "GLAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<GLAccount>("Net4Sage.DataAccessModel.GLAccount_AcctSegment", "GLAccount").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for GLAccount in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GLAccount> GLAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<GLAccount>("Net4Sage.DataAccessModel.GLAccount_AcctSegment", "GLAccount");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<GLAccount>("Net4Sage.DataAccessModel.GLAccount_AcctSegment", "GLAccount", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<GLAccount>("Net4Sage.DataAccessModel.GLAccount_AcctSegment", "GLAccount").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.Segment in the schema.
    /// </summary>
    /// <KeyProperties>
    /// SegmentKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="Segment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Segment : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Segment object.
        /// </summary>
        /// <param name="segmentKey">Initial value of SegmentKey.</param>
        /// <param name="acctSegID">Initial value of AcctSegID.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="description">Initial value of Description.</param>
        /// <param name="number">Initial value of Number.</param>
        /// <param name="segmentType">Initial value of SegmentType.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        public static Segment CreateSegment(int segmentKey, short acctSegID, string companyID, string description, short number, short segmentType, int updateCounter)
        {
            Segment segment = new Segment();
            segment.SegmentKey = segmentKey;
            segment.AcctSegID = acctSegID;
            segment.CompanyID = companyID;
            segment.Description = description;
            segment.Number = number;
            segment.SegmentType = segmentType;
            segment.UpdateCounter = updateCounter;
            return segment;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for SegmentKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SegmentKey
        {
            get
            {
                int value = _SegmentKey;
                OnGetSegmentKey(ref value);
                return value;
            }
            set
            {
                if (_SegmentKey != value)
                {
                  OnSegmentKeyChanging(ref value);
                  ReportPropertyChanging("SegmentKey");
                  _SegmentKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SegmentKey");
                  OnSegmentKeyChanged();
              }
            }
        }
        private int _SegmentKey;
        partial void OnGetSegmentKey(ref int value);
        partial void OnSegmentKeyChanging(ref int value);
        partial void OnSegmentKeyChanged();
    
        /// <summary>
        /// There are no comments for AcctSegID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short AcctSegID
        {
            get
            {
                short value = _AcctSegID;
                OnGetAcctSegID(ref value);
                return value;
            }
            set
            {
                if (_AcctSegID != value)
                {
                  OnAcctSegIDChanging(ref value);
                  ReportPropertyChanging("AcctSegID");
                  _AcctSegID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AcctSegID");
                  OnAcctSegIDChanged();
              }
            }
        }
        private short _AcctSegID;
        partial void OnGetAcctSegID(ref short value);
        partial void OnAcctSegIDChanging(ref short value);
        partial void OnAcctSegIDChanged();
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for Mask in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Mask
        {
            get
            {
                string value = _Mask;
                OnGetMask(ref value);
                return value;
            }
            set
            {
                if (_Mask != value)
                {
                  OnMaskChanging(ref value);
                  ReportPropertyChanging("Mask");
                  _Mask = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Mask");
                  OnMaskChanged();
              }
            }
        }
        private string _Mask;
        partial void OnGetMask(ref string value);
        partial void OnMaskChanging(ref string value);
        partial void OnMaskChanged();
    
        /// <summary>
        /// There are no comments for Number in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Number
        {
            get
            {
                short value = _Number;
                OnGetNumber(ref value);
                return value;
            }
            set
            {
                if (_Number != value)
                {
                  OnNumberChanging(ref value);
                  ReportPropertyChanging("Number");
                  _Number = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Number");
                  OnNumberChanged();
              }
            }
        }
        private short _Number = 0;
        partial void OnGetNumber(ref short value);
        partial void OnNumberChanging(ref short value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// There are no comments for SegmentType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short SegmentType
        {
            get
            {
                short value = _SegmentType;
                OnGetSegmentType(ref value);
                return value;
            }
            set
            {
                if (_SegmentType != value)
                {
                  OnSegmentTypeChanging(ref value);
                  ReportPropertyChanging("SegmentType");
                  _SegmentType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SegmentType");
                  OnSegmentTypeChanged();
              }
            }
        }
        private short _SegmentType = 1;
        partial void OnGetSegmentType(ref short value);
        partial void OnSegmentTypeChanging(ref short value);
        partial void OnSegmentTypeChanged();
    
        /// <summary>
        /// There are no comments for Size in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual short? Size
        {
            get
            {
                short? value = _Size;
                OnGetSize(ref value);
                return value;
            }
            set
            {
                if (_Size != value)
                {
                  OnSizeChanging(ref value);
                  ReportPropertyChanging("Size");
                  _Size = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Size");
                  OnSizeChanged();
              }
            }
        }
        private short? _Size = 0;
        partial void OnGetSize(ref short? value);
        partial void OnSizeChanging(ref short? value);
        partial void OnSizeChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for AcctSegments in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Segment_AcctSegment", "AcctSegments")]
        public virtual EntityCollection<AcctSegment> AcctSegments
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<AcctSegment>("Net4Sage.DataAccessModel.Segment_AcctSegment", "AcctSegments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<AcctSegment>("Net4Sage.DataAccessModel.Segment_AcctSegment", "AcctSegments", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SegmentCodes in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Segment_SegmentCode", "SegmentCodes")]
        public virtual EntityCollection<SegmentCode> SegmentCodes
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SegmentCode>("Net4Sage.DataAccessModel.Segment_SegmentCode", "SegmentCodes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SegmentCode>("Net4Sage.DataAccessModel.Segment_SegmentCode", "SegmentCodes", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.SegmentCode in the schema.
    /// </summary>
    /// <KeyProperties>
    /// SegmentKey
    /// AcctSegValue
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="SegmentCode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SegmentCode : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SegmentCode object.
        /// </summary>
        /// <param name="segmentKey">Initial value of SegmentKey.</param>
        /// <param name="acctSegValue">Initial value of AcctSegValue.</param>
        /// <param name="createType">Initial value of CreateType.</param>
        /// <param name="description">Initial value of Description.</param>
        /// <param name="shortDesc">Initial value of ShortDesc.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        public static SegmentCode CreateSegmentCode(int segmentKey, string acctSegValue, short createType, string description, string shortDesc, int updateCounter)
        {
            SegmentCode segmentCode = new SegmentCode();
            segmentCode.SegmentKey = segmentKey;
            segmentCode.AcctSegValue = acctSegValue;
            segmentCode.CreateType = createType;
            segmentCode.Description = description;
            segmentCode.ShortDesc = shortDesc;
            segmentCode.UpdateCounter = updateCounter;
            return segmentCode;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for SegmentKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SegmentKey
        {
            get
            {
                int value = _SegmentKey;
                OnGetSegmentKey(ref value);
                return value;
            }
            set
            {
                if (_SegmentKey != value)
                {
                  OnSegmentKeyChanging(ref value);
                  ReportPropertyChanging("SegmentKey");
                  _SegmentKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SegmentKey");
                  OnSegmentKeyChanged();
              }
            }
        }
        private int _SegmentKey;
        partial void OnGetSegmentKey(ref int value);
        partial void OnSegmentKeyChanging(ref int value);
        partial void OnSegmentKeyChanged();
    
        /// <summary>
        /// There are no comments for AcctSegValue in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string AcctSegValue
        {
            get
            {
                string value = _AcctSegValue;
                OnGetAcctSegValue(ref value);
                return value;
            }
            set
            {
                if (_AcctSegValue != value)
                {
                  OnAcctSegValueChanging(ref value);
                  ReportPropertyChanging("AcctSegValue");
                  _AcctSegValue = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("AcctSegValue");
                  OnAcctSegValueChanged();
              }
            }
        }
        private string _AcctSegValue;
        partial void OnGetAcctSegValue(ref string value);
        partial void OnAcctSegValueChanging(ref string value);
        partial void OnAcctSegValueChanged();
    
        /// <summary>
        /// There are no comments for ConsolAcctSegValue in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ConsolAcctSegValue
        {
            get
            {
                string value = _ConsolAcctSegValue;
                OnGetConsolAcctSegValue(ref value);
                return value;
            }
            set
            {
                if (_ConsolAcctSegValue != value)
                {
                  OnConsolAcctSegValueChanging(ref value);
                  ReportPropertyChanging("ConsolAcctSegValue");
                  _ConsolAcctSegValue = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ConsolAcctSegValue");
                  OnConsolAcctSegValueChanged();
              }
            }
        }
        private string _ConsolAcctSegValue;
        partial void OnGetConsolAcctSegValue(ref string value);
        partial void OnConsolAcctSegValueChanging(ref string value);
        partial void OnConsolAcctSegValueChanged();
    
        /// <summary>
        /// There are no comments for ConsolSegKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ConsolSegKey
        {
            get
            {
                int? value = _ConsolSegKey;
                OnGetConsolSegKey(ref value);
                return value;
            }
            set
            {
                if (_ConsolSegKey != value)
                {
                  OnConsolSegKeyChanging(ref value);
                  ReportPropertyChanging("ConsolSegKey");
                  _ConsolSegKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ConsolSegKey");
                  OnConsolSegKeyChanged();
              }
            }
        }
        private int? _ConsolSegKey;
        partial void OnGetConsolSegKey(ref int? value);
        partial void OnConsolSegKeyChanging(ref int? value);
        partial void OnConsolSegKeyChanged();
    
        /// <summary>
        /// There are no comments for CreateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CreateDate
        {
            get
            {
                global::System.DateTime? value = _CreateDate;
                OnGetCreateDate(ref value);
                return value;
            }
            set
            {
                if (_CreateDate != value)
                {
                  OnCreateDateChanging(ref value);
                  ReportPropertyChanging("CreateDate");
                  _CreateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateDate");
                  OnCreateDateChanged();
              }
            }
        }
        private global::System.DateTime? _CreateDate;
        partial void OnGetCreateDate(ref global::System.DateTime? value);
        partial void OnCreateDateChanging(ref global::System.DateTime? value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// There are no comments for CreateType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CreateType
        {
            get
            {
                short value = _CreateType;
                OnGetCreateType(ref value);
                return value;
            }
            set
            {
                if (_CreateType != value)
                {
                  OnCreateTypeChanging(ref value);
                  ReportPropertyChanging("CreateType");
                  _CreateType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateType");
                  OnCreateTypeChanged();
              }
            }
        }
        private short _CreateType = 0;
        partial void OnGetCreateType(ref short value);
        partial void OnCreateTypeChanging(ref short value);
        partial void OnCreateTypeChanged();
    
        /// <summary>
        /// There are no comments for CreateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CreateUserID
        {
            get
            {
                string value = _CreateUserID;
                OnGetCreateUserID(ref value);
                return value;
            }
            set
            {
                if (_CreateUserID != value)
                {
                  OnCreateUserIDChanging(ref value);
                  ReportPropertyChanging("CreateUserID");
                  _CreateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CreateUserID");
                  OnCreateUserIDChanged();
              }
            }
        }
        private string _CreateUserID;
        partial void OnGetCreateUserID(ref string value);
        partial void OnCreateUserIDChanging(ref string value);
        partial void OnCreateUserIDChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for EffEndDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? EffEndDate
        {
            get
            {
                global::System.DateTime? value = _EffEndDate;
                OnGetEffEndDate(ref value);
                return value;
            }
            set
            {
                if (_EffEndDate != value)
                {
                  OnEffEndDateChanging(ref value);
                  ReportPropertyChanging("EffEndDate");
                  _EffEndDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EffEndDate");
                  OnEffEndDateChanged();
              }
            }
        }
        private global::System.DateTime? _EffEndDate;
        partial void OnGetEffEndDate(ref global::System.DateTime? value);
        partial void OnEffEndDateChanging(ref global::System.DateTime? value);
        partial void OnEffEndDateChanged();
    
        /// <summary>
        /// There are no comments for EffStartDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? EffStartDate
        {
            get
            {
                global::System.DateTime? value = _EffStartDate;
                OnGetEffStartDate(ref value);
                return value;
            }
            set
            {
                if (_EffStartDate != value)
                {
                  OnEffStartDateChanging(ref value);
                  ReportPropertyChanging("EffStartDate");
                  _EffStartDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EffStartDate");
                  OnEffStartDateChanged();
              }
            }
        }
        private global::System.DateTime? _EffStartDate;
        partial void OnGetEffStartDate(ref global::System.DateTime? value);
        partial void OnEffStartDateChanging(ref global::System.DateTime? value);
        partial void OnEffStartDateChanged();
    
        /// <summary>
        /// There are no comments for ImportLogKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ImportLogKey
        {
            get
            {
                int? value = _ImportLogKey;
                OnGetImportLogKey(ref value);
                return value;
            }
            set
            {
                if (_ImportLogKey != value)
                {
                  OnImportLogKeyChanging(ref value);
                  ReportPropertyChanging("ImportLogKey");
                  _ImportLogKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ImportLogKey");
                  OnImportLogKeyChanged();
              }
            }
        }
        private int? _ImportLogKey;
        partial void OnGetImportLogKey(ref int? value);
        partial void OnImportLogKeyChanging(ref int? value);
        partial void OnImportLogKeyChanged();
    
        /// <summary>
        /// There are no comments for ShortDesc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string ShortDesc
        {
            get
            {
                string value = _ShortDesc;
                OnGetShortDesc(ref value);
                return value;
            }
            set
            {
                if (_ShortDesc != value)
                {
                  OnShortDescChanging(ref value);
                  ReportPropertyChanging("ShortDesc");
                  _ShortDesc = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ShortDesc");
                  OnShortDescChanged();
              }
            }
        }
        private string _ShortDesc;
        partial void OnGetShortDesc(ref string value);
        partial void OnShortDescChanging(ref string value);
        partial void OnShortDescChanged();
    
        /// <summary>
        /// There are no comments for SubsidCurrID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string SubsidCurrID
        {
            get
            {
                string value = _SubsidCurrID;
                OnGetSubsidCurrID(ref value);
                return value;
            }
            set
            {
                if (_SubsidCurrID != value)
                {
                  OnSubsidCurrIDChanging(ref value);
                  ReportPropertyChanging("SubsidCurrID");
                  _SubsidCurrID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("SubsidCurrID");
                  OnSubsidCurrIDChanged();
              }
            }
        }
        private string _SubsidCurrID;
        partial void OnGetSubsidCurrID(ref string value);
        partial void OnSubsidCurrIDChanging(ref string value);
        partial void OnSubsidCurrIDChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();
    
        /// <summary>
        /// There are no comments for UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? UpdateDate
        {
            get
            {
                global::System.DateTime? value = _UpdateDate;
                OnGetUpdateDate(ref value);
                return value;
            }
            set
            {
                if (_UpdateDate != value)
                {
                  OnUpdateDateChanging(ref value);
                  ReportPropertyChanging("UpdateDate");
                  _UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateDate");
                  OnUpdateDateChanged();
              }
            }
        }
        private global::System.DateTime? _UpdateDate;
        partial void OnGetUpdateDate(ref global::System.DateTime? value);
        partial void OnUpdateDateChanging(ref global::System.DateTime? value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// There are no comments for UpdateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UpdateUserID
        {
            get
            {
                string value = _UpdateUserID;
                OnGetUpdateUserID(ref value);
                return value;
            }
            set
            {
                if (_UpdateUserID != value)
                {
                  OnUpdateUserIDChanging(ref value);
                  ReportPropertyChanging("UpdateUserID");
                  _UpdateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UpdateUserID");
                  OnUpdateUserIDChanged();
              }
            }
        }
        private string _UpdateUserID;
        partial void OnGetUpdateUserID(ref string value);
        partial void OnUpdateUserIDChanging(ref string value);
        partial void OnUpdateUserIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Segment in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Segment_SegmentCode", "Segment")]
        public virtual Segment Segment
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Segment>("Net4Sage.DataAccessModel.Segment_SegmentCode", "Segment").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Segment>("Net4Sage.DataAccessModel.Segment_SegmentCode", "Segment").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Segment in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Segment> SegmentReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Segment>("Net4Sage.DataAccessModel.Segment_SegmentCode", "Segment");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Segment>("Net4Sage.DataAccessModel.Segment_SegmentCode", "Segment", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Segment>("Net4Sage.DataAccessModel.Segment_SegmentCode", "Segment").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.AcctHist in the schema.
    /// </summary>
    /// <KeyProperties>
    /// FiscYear
    /// FiscPer
    /// GLAcctKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="AcctHist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AcctHist : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new AcctHist object.
        /// </summary>
        /// <param name="fiscYear">Initial value of FiscYear.</param>
        /// <param name="fiscPer">Initial value of FiscPer.</param>
        /// <param name="gLAcctKey">Initial value of GLAcctKey.</param>
        /// <param name="begBal">Initial value of BegBal.</param>
        /// <param name="creditAmt">Initial value of CreditAmt.</param>
        /// <param name="debitAmt">Initial value of DebitAmt.</param>
        /// <param name="statBegBal">Initial value of StatBegBal.</param>
        /// <param name="statQty">Initial value of StatQty.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        public static AcctHist CreateAcctHist(string fiscYear, short fiscPer, int gLAcctKey, decimal begBal, decimal creditAmt, decimal debitAmt, decimal statBegBal, decimal statQty, int updateCounter)
        {
            AcctHist acctHist = new AcctHist();
            acctHist.FiscYear = fiscYear;
            acctHist.FiscPer = fiscPer;
            acctHist.GLAcctKey = gLAcctKey;
            acctHist.BegBal = begBal;
            acctHist.CreditAmt = creditAmt;
            acctHist.DebitAmt = debitAmt;
            acctHist.StatBegBal = statBegBal;
            acctHist.StatQty = statQty;
            acctHist.UpdateCounter = updateCounter;
            return acctHist;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for FiscYear in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string FiscYear
        {
            get
            {
                string value = _FiscYear;
                OnGetFiscYear(ref value);
                return value;
            }
            set
            {
                if (_FiscYear != value)
                {
                  OnFiscYearChanging(ref value);
                  ReportPropertyChanging("FiscYear");
                  _FiscYear = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("FiscYear");
                  OnFiscYearChanged();
              }
            }
        }
        private string _FiscYear;
        partial void OnGetFiscYear(ref string value);
        partial void OnFiscYearChanging(ref string value);
        partial void OnFiscYearChanged();
    
        /// <summary>
        /// There are no comments for FiscPer in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short FiscPer
        {
            get
            {
                short value = _FiscPer;
                OnGetFiscPer(ref value);
                return value;
            }
            set
            {
                if (_FiscPer != value)
                {
                  OnFiscPerChanging(ref value);
                  ReportPropertyChanging("FiscPer");
                  _FiscPer = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FiscPer");
                  OnFiscPerChanged();
              }
            }
        }
        private short _FiscPer = 0;
        partial void OnGetFiscPer(ref short value);
        partial void OnFiscPerChanging(ref short value);
        partial void OnFiscPerChanged();
    
        /// <summary>
        /// There are no comments for GLAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int GLAcctKey
        {
            get
            {
                int value = _GLAcctKey;
                OnGetGLAcctKey(ref value);
                return value;
            }
            set
            {
                if (_GLAcctKey != value)
                {
                  OnGLAcctKeyChanging(ref value);
                  ReportPropertyChanging("GLAcctKey");
                  _GLAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("GLAcctKey");
                  OnGLAcctKeyChanged();
              }
            }
        }
        private int _GLAcctKey;
        partial void OnGetGLAcctKey(ref int value);
        partial void OnGLAcctKeyChanging(ref int value);
        partial void OnGLAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for BegBal in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal BegBal
        {
            get
            {
                decimal value = _BegBal;
                OnGetBegBal(ref value);
                return value;
            }
            set
            {
                if (_BegBal != value)
                {
                  OnBegBalChanging(ref value);
                  ReportPropertyChanging("BegBal");
                  _BegBal = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BegBal");
                  OnBegBalChanged();
              }
            }
        }
        private decimal _BegBal = 0m;
        partial void OnGetBegBal(ref decimal value);
        partial void OnBegBalChanging(ref decimal value);
        partial void OnBegBalChanged();
    
        /// <summary>
        /// There are no comments for CreditAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal CreditAmt
        {
            get
            {
                decimal value = _CreditAmt;
                OnGetCreditAmt(ref value);
                return value;
            }
            set
            {
                if (_CreditAmt != value)
                {
                  OnCreditAmtChanging(ref value);
                  ReportPropertyChanging("CreditAmt");
                  _CreditAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreditAmt");
                  OnCreditAmtChanged();
              }
            }
        }
        private decimal _CreditAmt = 0m;
        partial void OnGetCreditAmt(ref decimal value);
        partial void OnCreditAmtChanging(ref decimal value);
        partial void OnCreditAmtChanged();
    
        /// <summary>
        /// There are no comments for DebitAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal DebitAmt
        {
            get
            {
                decimal value = _DebitAmt;
                OnGetDebitAmt(ref value);
                return value;
            }
            set
            {
                if (_DebitAmt != value)
                {
                  OnDebitAmtChanging(ref value);
                  ReportPropertyChanging("DebitAmt");
                  _DebitAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DebitAmt");
                  OnDebitAmtChanged();
              }
            }
        }
        private decimal _DebitAmt = 0m;
        partial void OnGetDebitAmt(ref decimal value);
        partial void OnDebitAmtChanging(ref decimal value);
        partial void OnDebitAmtChanged();
    
        /// <summary>
        /// There are no comments for StatBegBal in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal StatBegBal
        {
            get
            {
                decimal value = _StatBegBal;
                OnGetStatBegBal(ref value);
                return value;
            }
            set
            {
                if (_StatBegBal != value)
                {
                  OnStatBegBalChanging(ref value);
                  ReportPropertyChanging("StatBegBal");
                  _StatBegBal = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("StatBegBal");
                  OnStatBegBalChanged();
              }
            }
        }
        private decimal _StatBegBal = 0m;
        partial void OnGetStatBegBal(ref decimal value);
        partial void OnStatBegBalChanging(ref decimal value);
        partial void OnStatBegBalChanged();
    
        /// <summary>
        /// There are no comments for StatQty in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal StatQty
        {
            get
            {
                decimal value = _StatQty;
                OnGetStatQty(ref value);
                return value;
            }
            set
            {
                if (_StatQty != value)
                {
                  OnStatQtyChanging(ref value);
                  ReportPropertyChanging("StatQty");
                  _StatQty = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("StatQty");
                  OnStatQtyChanged();
              }
            }
        }
        private decimal _StatQty = 0m;
        partial void OnGetStatQty(ref decimal value);
        partial void OnStatQtyChanging(ref decimal value);
        partial void OnStatQtyChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for GLAccount in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "GLAccount_AcctHist", "GLAccount")]
        public virtual GLAccount GLAccount
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<GLAccount>("Net4Sage.DataAccessModel.GLAccount_AcctHist", "GLAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<GLAccount>("Net4Sage.DataAccessModel.GLAccount_AcctHist", "GLAccount").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for GLAccount in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GLAccount> GLAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<GLAccount>("Net4Sage.DataAccessModel.GLAccount_AcctHist", "GLAccount");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<GLAccount>("Net4Sage.DataAccessModel.GLAccount_AcctHist", "GLAccount", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<GLAccount>("Net4Sage.DataAccessModel.GLAccount_AcctHist", "GLAccount").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.Budget in the schema.
    /// </summary>
    /// <KeyProperties>
    /// FiscYear
    /// FiscPer
    /// BudgetTypeKey
    /// GLAcctKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="Budget")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Budget : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Budget object.
        /// </summary>
        /// <param name="fiscYear">Initial value of FiscYear.</param>
        /// <param name="fiscPer">Initial value of FiscPer.</param>
        /// <param name="budgetTypeKey">Initial value of BudgetTypeKey.</param>
        /// <param name="gLAcctKey">Initial value of GLAcctKey.</param>
        /// <param name="budgetAmt">Initial value of BudgetAmt.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        public static Budget CreateBudget(string fiscYear, short fiscPer, int budgetTypeKey, int gLAcctKey, decimal budgetAmt, int updateCounter)
        {
            Budget budget = new Budget();
            budget.FiscYear = fiscYear;
            budget.FiscPer = fiscPer;
            budget.BudgetTypeKey = budgetTypeKey;
            budget.GLAcctKey = gLAcctKey;
            budget.BudgetAmt = budgetAmt;
            budget.UpdateCounter = updateCounter;
            return budget;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for FiscYear in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string FiscYear
        {
            get
            {
                string value = _FiscYear;
                OnGetFiscYear(ref value);
                return value;
            }
            set
            {
                if (_FiscYear != value)
                {
                  OnFiscYearChanging(ref value);
                  ReportPropertyChanging("FiscYear");
                  _FiscYear = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("FiscYear");
                  OnFiscYearChanged();
              }
            }
        }
        private string _FiscYear;
        partial void OnGetFiscYear(ref string value);
        partial void OnFiscYearChanging(ref string value);
        partial void OnFiscYearChanged();
    
        /// <summary>
        /// There are no comments for FiscPer in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short FiscPer
        {
            get
            {
                short value = _FiscPer;
                OnGetFiscPer(ref value);
                return value;
            }
            set
            {
                if (_FiscPer != value)
                {
                  OnFiscPerChanging(ref value);
                  ReportPropertyChanging("FiscPer");
                  _FiscPer = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FiscPer");
                  OnFiscPerChanged();
              }
            }
        }
        private short _FiscPer = 0;
        partial void OnGetFiscPer(ref short value);
        partial void OnFiscPerChanging(ref short value);
        partial void OnFiscPerChanged();
    
        /// <summary>
        /// There are no comments for BudgetTypeKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int BudgetTypeKey
        {
            get
            {
                int value = _BudgetTypeKey;
                OnGetBudgetTypeKey(ref value);
                return value;
            }
            set
            {
                if (_BudgetTypeKey != value)
                {
                  OnBudgetTypeKeyChanging(ref value);
                  ReportPropertyChanging("BudgetTypeKey");
                  _BudgetTypeKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BudgetTypeKey");
                  OnBudgetTypeKeyChanged();
              }
            }
        }
        private int _BudgetTypeKey;
        partial void OnGetBudgetTypeKey(ref int value);
        partial void OnBudgetTypeKeyChanging(ref int value);
        partial void OnBudgetTypeKeyChanged();
    
        /// <summary>
        /// There are no comments for GLAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int GLAcctKey
        {
            get
            {
                int value = _GLAcctKey;
                OnGetGLAcctKey(ref value);
                return value;
            }
            set
            {
                if (_GLAcctKey != value)
                {
                  OnGLAcctKeyChanging(ref value);
                  ReportPropertyChanging("GLAcctKey");
                  _GLAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("GLAcctKey");
                  OnGLAcctKeyChanged();
              }
            }
        }
        private int _GLAcctKey;
        partial void OnGetGLAcctKey(ref int value);
        partial void OnGLAcctKeyChanging(ref int value);
        partial void OnGLAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for BudgetAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal BudgetAmt
        {
            get
            {
                decimal value = _BudgetAmt;
                OnGetBudgetAmt(ref value);
                return value;
            }
            set
            {
                if (_BudgetAmt != value)
                {
                  OnBudgetAmtChanging(ref value);
                  ReportPropertyChanging("BudgetAmt");
                  _BudgetAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BudgetAmt");
                  OnBudgetAmtChanged();
              }
            }
        }
        private decimal _BudgetAmt = 0m;
        partial void OnGetBudgetAmt(ref decimal value);
        partial void OnBudgetAmtChanging(ref decimal value);
        partial void OnBudgetAmtChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for GLAccount in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "GLAccount_Budget", "GLAccount")]
        public virtual GLAccount GLAccount
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<GLAccount>("Net4Sage.DataAccessModel.GLAccount_Budget", "GLAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<GLAccount>("Net4Sage.DataAccessModel.GLAccount_Budget", "GLAccount").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for GLAccount in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GLAccount> GLAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<GLAccount>("Net4Sage.DataAccessModel.GLAccount_Budget", "GLAccount");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<GLAccount>("Net4Sage.DataAccessModel.GLAccount_Budget", "GLAccount", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<GLAccount>("Net4Sage.DataAccessModel.GLAccount_Budget", "GLAccount").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.CommodityCode in the schema.
    /// </summary>
    /// <KeyProperties>
    /// CommodityCodeKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="CommodityCode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [Net4Sage.Controls.Lookup.LookupAutoShowColumns(false)]
    [Net4Sage.Controls.Lookup.LookupFormTitle(@"Buscar Código de Mercancía")]
    public partial class CommodityCode : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CommodityCode object.
        /// </summary>
        /// <param name="commodityCodeKey">Initial value of CommodityCodeKey.</param>
        /// <param name="commodityCodeID">Initial value of CommodityCodeID.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        public static CommodityCode CreateCommodityCode(int commodityCodeKey, string commodityCodeID, int updateCounter)
        {
            CommodityCode commodityCode = new CommodityCode();
            commodityCode.CommodityCodeKey = commodityCodeKey;
            commodityCode.CommodityCodeID = commodityCodeID;
            commodityCode.UpdateCounter = updateCounter;
            return commodityCode;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for CommodityCodeKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupKeyReturn]
        public virtual int CommodityCodeKey
        {
            get
            {
                int value = _CommodityCodeKey;
                OnGetCommodityCodeKey(ref value);
                return value;
            }
            set
            {
                if (_CommodityCodeKey != value)
                {
                  OnCommodityCodeKeyChanging(ref value);
                  ReportPropertyChanging("CommodityCodeKey");
                  _CommodityCodeKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CommodityCodeKey");
                  OnCommodityCodeKeyChanged();
              }
            }
        }
        private int _CommodityCodeKey;
        partial void OnGetCommodityCodeKey(ref int value);
        partial void OnCommodityCodeKeyChanging(ref int value);
        partial void OnCommodityCodeKeyChanged();
    
        /// <summary>
        /// There are no comments for CommodityCodeID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"Código de Mercancía")]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Código de Mercancía")]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        [Net4Sage.Controls.Lookup.LookupTextReturn]
        public virtual string CommodityCodeID
        {
            get
            {
                string value = _CommodityCodeID;
                OnGetCommodityCodeID(ref value);
                return value;
            }
            set
            {
                if (_CommodityCodeID != value)
                {
                  OnCommodityCodeIDChanging(ref value);
                  ReportPropertyChanging("CommodityCodeID");
                  _CommodityCodeID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CommodityCodeID");
                  OnCommodityCodeIDChanged();
              }
            }
        }
        private string _CommodityCodeID;
        partial void OnGetCommodityCodeID(ref string value);
        partial void OnCommodityCodeIDChanging(ref string value);
        partial void OnCommodityCodeIDChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"Descripción")]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Descripción")]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for STaxClassKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? STaxClassKey
        {
            get
            {
                int? value = _STaxClassKey;
                OnGetSTaxClassKey(ref value);
                return value;
            }
            set
            {
                if (_STaxClassKey != value)
                {
                  OnSTaxClassKeyChanging(ref value);
                  ReportPropertyChanging("STaxClassKey");
                  _STaxClassKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("STaxClassKey");
                  OnSTaxClassKeyChanged();
              }
            }
        }
        private int? _STaxClassKey;
        partial void OnGetSTaxClassKey(ref int? value);
        partial void OnSTaxClassKeyChanging(ref int? value);
        partial void OnSTaxClassKeyChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Items in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "CommodityCode_Item", "Items")]
        public virtual EntityCollection<Item> Items
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Item>("Net4Sage.DataAccessModel.CommodityCode_Item", "Items");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Item>("Net4Sage.DataAccessModel.CommodityCode_Item", "Items", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.RcvrLine in the schema.
    /// </summary>
    /// <KeyProperties>
    /// RcvrLineKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="RcvrLine")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RcvrLine : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new RcvrLine object.
        /// </summary>
        /// <param name="rcvrLineKey">Initial value of RcvrLineKey.</param>
        /// <param name="closeSrcLine">Initial value of CloseSrcLine.</param>
        /// <param name="discAmt">Initial value of DiscAmt.</param>
        /// <param name="matchStatus">Initial value of MatchStatus.</param>
        /// <param name="otherAmt">Initial value of OtherAmt.</param>
        /// <param name="rcvrKey">Initial value of RcvrKey.</param>
        /// <param name="rtrnType">Initial value of RtrnType.</param>
        /// <param name="seqNo">Initial value of SeqNo.</param>
        /// <param name="taxAmt">Initial value of TaxAmt.</param>
        /// <param name="unitCost">Initial value of UnitCost.</param>
        /// <param name="unitCostExact">Initial value of UnitCostExact.</param>
        /// <param name="unitMeasKey">Initial value of UnitMeasKey.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        /// <param name="vendPerfCarrierDamage">Initial value of VendPerfCarrierDamage.</param>
        /// <param name="vendPerfDamagedGoods">Initial value of VendPerfDamagedGoods.</param>
        /// <param name="vendPerfDefectiveGoods">Initial value of VendPerfDefectiveGoods.</param>
        /// <param name="vendPerfImproperLabeling">Initial value of VendPerfImproperLabeling.</param>
        /// <param name="vendPerfImproperPackaging">Initial value of VendPerfImproperPackaging.</param>
        /// <param name="vendPerfMissingDoc">Initial value of VendPerfMissingDoc.</param>
        /// <param name="vendPerfNotToSpec">Initial value of VendPerfNotToSpec.</param>
        /// <param name="vendPerfOtherProblem">Initial value of VendPerfOtherProblem.</param>
        public static RcvrLine CreateRcvrLine(int rcvrLineKey, short closeSrcLine, decimal discAmt, short matchStatus, decimal otherAmt, int rcvrKey, short rtrnType, int seqNo, decimal taxAmt, decimal unitCost, decimal unitCostExact, int unitMeasKey, int updateCounter, short vendPerfCarrierDamage, short vendPerfDamagedGoods, short vendPerfDefectiveGoods, short vendPerfImproperLabeling, short vendPerfImproperPackaging, short vendPerfMissingDoc, short vendPerfNotToSpec, short vendPerfOtherProblem)
        {
            RcvrLine rcvrLine = new RcvrLine();
            rcvrLine.RcvrLineKey = rcvrLineKey;
            rcvrLine.CloseSrcLine = closeSrcLine;
            rcvrLine.DiscAmt = discAmt;
            rcvrLine.MatchStatus = matchStatus;
            rcvrLine.OtherAmt = otherAmt;
            rcvrLine.RcvrKey = rcvrKey;
            rcvrLine.RtrnType = rtrnType;
            rcvrLine.SeqNo = seqNo;
            rcvrLine.TaxAmt = taxAmt;
            rcvrLine.UnitCost = unitCost;
            rcvrLine.UnitCostExact = unitCostExact;
            rcvrLine.UnitMeasKey = unitMeasKey;
            rcvrLine.UpdateCounter = updateCounter;
            rcvrLine.VendPerfCarrierDamage = vendPerfCarrierDamage;
            rcvrLine.VendPerfDamagedGoods = vendPerfDamagedGoods;
            rcvrLine.VendPerfDefectiveGoods = vendPerfDefectiveGoods;
            rcvrLine.VendPerfImproperLabeling = vendPerfImproperLabeling;
            rcvrLine.VendPerfImproperPackaging = vendPerfImproperPackaging;
            rcvrLine.VendPerfMissingDoc = vendPerfMissingDoc;
            rcvrLine.VendPerfNotToSpec = vendPerfNotToSpec;
            rcvrLine.VendPerfOtherProblem = vendPerfOtherProblem;
            return rcvrLine;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for RcvrLineKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int RcvrLineKey
        {
            get
            {
                int value = _RcvrLineKey;
                OnGetRcvrLineKey(ref value);
                return value;
            }
            set
            {
                if (_RcvrLineKey != value)
                {
                  OnRcvrLineKeyChanging(ref value);
                  ReportPropertyChanging("RcvrLineKey");
                  _RcvrLineKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RcvrLineKey");
                  OnRcvrLineKeyChanged();
              }
            }
        }
        private int _RcvrLineKey;
        partial void OnGetRcvrLineKey(ref int value);
        partial void OnRcvrLineKeyChanging(ref int value);
        partial void OnRcvrLineKeyChanged();
    
        /// <summary>
        /// There are no comments for CloseSrcLine in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CloseSrcLine
        {
            get
            {
                short value = _CloseSrcLine;
                OnGetCloseSrcLine(ref value);
                return value;
            }
            set
            {
                if (_CloseSrcLine != value)
                {
                  OnCloseSrcLineChanging(ref value);
                  ReportPropertyChanging("CloseSrcLine");
                  _CloseSrcLine = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CloseSrcLine");
                  OnCloseSrcLineChanged();
              }
            }
        }
        private short _CloseSrcLine = 0;
        partial void OnGetCloseSrcLine(ref short value);
        partial void OnCloseSrcLineChanging(ref short value);
        partial void OnCloseSrcLineChanged();
    
        /// <summary>
        /// There are no comments for DiscAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal DiscAmt
        {
            get
            {
                decimal value = _DiscAmt;
                OnGetDiscAmt(ref value);
                return value;
            }
            set
            {
                if (_DiscAmt != value)
                {
                  OnDiscAmtChanging(ref value);
                  ReportPropertyChanging("DiscAmt");
                  _DiscAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DiscAmt");
                  OnDiscAmtChanged();
              }
            }
        }
        private decimal _DiscAmt = 0m;
        partial void OnGetDiscAmt(ref decimal value);
        partial void OnDiscAmtChanging(ref decimal value);
        partial void OnDiscAmtChanged();
    
        /// <summary>
        /// There are no comments for InvtTranKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? InvtTranKey
        {
            get
            {
                int? value = _InvtTranKey;
                OnGetInvtTranKey(ref value);
                return value;
            }
            set
            {
                if (_InvtTranKey != value)
                {
                  OnInvtTranKeyChanging(ref value);
                  ReportPropertyChanging("InvtTranKey");
                  _InvtTranKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvtTranKey");
                  OnInvtTranKeyChanged();
              }
            }
        }
        private int? _InvtTranKey;
        partial void OnGetInvtTranKey(ref int? value);
        partial void OnInvtTranKeyChanging(ref int? value);
        partial void OnInvtTranKeyChanged();
    
        /// <summary>
        /// There are no comments for ItemRcvdKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ItemRcvdKey
        {
            get
            {
                int? value = _ItemRcvdKey;
                OnGetItemRcvdKey(ref value);
                return value;
            }
            set
            {
                if (_ItemRcvdKey != value)
                {
                  OnItemRcvdKeyChanging(ref value);
                  ReportPropertyChanging("ItemRcvdKey");
                  _ItemRcvdKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ItemRcvdKey");
                  OnItemRcvdKeyChanged();
              }
            }
        }
        private int? _ItemRcvdKey;
        partial void OnGetItemRcvdKey(ref int? value);
        partial void OnItemRcvdKeyChanging(ref int? value);
        partial void OnItemRcvdKeyChanged();
    
        /// <summary>
        /// There are no comments for ItemVol in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual double? ItemVol
        {
            get
            {
                double? value = _ItemVol;
                OnGetItemVol(ref value);
                return value;
            }
            set
            {
                if (_ItemVol != value)
                {
                  OnItemVolChanging(ref value);
                  ReportPropertyChanging("ItemVol");
                  _ItemVol = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ItemVol");
                  OnItemVolChanged();
              }
            }
        }
        private double? _ItemVol = 0;
        partial void OnGetItemVol(ref double? value);
        partial void OnItemVolChanging(ref double? value);
        partial void OnItemVolChanged();
    
        /// <summary>
        /// There are no comments for ItemWght in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual double? ItemWght
        {
            get
            {
                double? value = _ItemWght;
                OnGetItemWght(ref value);
                return value;
            }
            set
            {
                if (_ItemWght != value)
                {
                  OnItemWghtChanging(ref value);
                  ReportPropertyChanging("ItemWght");
                  _ItemWght = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ItemWght");
                  OnItemWghtChanged();
              }
            }
        }
        private double? _ItemWght = 0;
        partial void OnGetItemWght(ref double? value);
        partial void OnItemWghtChanging(ref double? value);
        partial void OnItemWghtChanged();
    
        /// <summary>
        /// There are no comments for MatchStatus in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short MatchStatus
        {
            get
            {
                short value = _MatchStatus;
                OnGetMatchStatus(ref value);
                return value;
            }
            set
            {
                if (_MatchStatus != value)
                {
                  OnMatchStatusChanging(ref value);
                  ReportPropertyChanging("MatchStatus");
                  _MatchStatus = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MatchStatus");
                  OnMatchStatusChanged();
              }
            }
        }
        private short _MatchStatus = 1;
        partial void OnGetMatchStatus(ref short value);
        partial void OnMatchStatusChanging(ref short value);
        partial void OnMatchStatusChanged();
    
        /// <summary>
        /// There are no comments for OtherAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal OtherAmt
        {
            get
            {
                decimal value = _OtherAmt;
                OnGetOtherAmt(ref value);
                return value;
            }
            set
            {
                if (_OtherAmt != value)
                {
                  OnOtherAmtChanging(ref value);
                  ReportPropertyChanging("OtherAmt");
                  _OtherAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OtherAmt");
                  OnOtherAmtChanged();
              }
            }
        }
        private decimal _OtherAmt = 0m;
        partial void OnGetOtherAmt(ref decimal value);
        partial void OnOtherAmtChanging(ref decimal value);
        partial void OnOtherAmtChanged();
    
        /// <summary>
        /// There are no comments for POLineKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? POLineKey
        {
            get
            {
                int? value = _POLineKey;
                OnGetPOLineKey(ref value);
                return value;
            }
            set
            {
                if (_POLineKey != value)
                {
                  OnPOLineKeyChanging(ref value);
                  ReportPropertyChanging("POLineKey");
                  _POLineKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("POLineKey");
                  OnPOLineKeyChanged();
              }
            }
        }
        private int? _POLineKey;
        partial void OnGetPOLineKey(ref int? value);
        partial void OnPOLineKeyChanging(ref int? value);
        partial void OnPOLineKeyChanged();
    
        /// <summary>
        /// There are no comments for RcvrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int RcvrKey
        {
            get
            {
                int value = _RcvrKey;
                OnGetRcvrKey(ref value);
                return value;
            }
            set
            {
                if (_RcvrKey != value)
                {
                  OnRcvrKeyChanging(ref value);
                  ReportPropertyChanging("RcvrKey");
                  _RcvrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RcvrKey");
                  OnRcvrKeyChanged();
              }
            }
        }
        private int _RcvrKey;
        partial void OnGetRcvrKey(ref int value);
        partial void OnRcvrKeyChanging(ref int value);
        partial void OnRcvrKeyChanged();
    
        /// <summary>
        /// There are no comments for RtrnRcvrLineKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? RtrnRcvrLineKey
        {
            get
            {
                int? value = _RtrnRcvrLineKey;
                OnGetRtrnRcvrLineKey(ref value);
                return value;
            }
            set
            {
                if (_RtrnRcvrLineKey != value)
                {
                  OnRtrnRcvrLineKeyChanging(ref value);
                  ReportPropertyChanging("RtrnRcvrLineKey");
                  _RtrnRcvrLineKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RtrnRcvrLineKey");
                  OnRtrnRcvrLineKeyChanged();
              }
            }
        }
        private int? _RtrnRcvrLineKey;
        partial void OnGetRtrnRcvrLineKey(ref int? value);
        partial void OnRtrnRcvrLineKeyChanging(ref int? value);
        partial void OnRtrnRcvrLineKeyChanged();
    
        /// <summary>
        /// There are no comments for RtrnReasonCodeKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? RtrnReasonCodeKey
        {
            get
            {
                int? value = _RtrnReasonCodeKey;
                OnGetRtrnReasonCodeKey(ref value);
                return value;
            }
            set
            {
                if (_RtrnReasonCodeKey != value)
                {
                  OnRtrnReasonCodeKeyChanging(ref value);
                  ReportPropertyChanging("RtrnReasonCodeKey");
                  _RtrnReasonCodeKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RtrnReasonCodeKey");
                  OnRtrnReasonCodeKeyChanged();
              }
            }
        }
        private int? _RtrnReasonCodeKey;
        partial void OnGetRtrnReasonCodeKey(ref int? value);
        partial void OnRtrnReasonCodeKeyChanging(ref int? value);
        partial void OnRtrnReasonCodeKeyChanged();
    
        /// <summary>
        /// There are no comments for RtrnType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short RtrnType
        {
            get
            {
                short value = _RtrnType;
                OnGetRtrnType(ref value);
                return value;
            }
            set
            {
                if (_RtrnType != value)
                {
                  OnRtrnTypeChanging(ref value);
                  ReportPropertyChanging("RtrnType");
                  _RtrnType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RtrnType");
                  OnRtrnTypeChanged();
              }
            }
        }
        private short _RtrnType = 0;
        partial void OnGetRtrnType(ref short value);
        partial void OnRtrnTypeChanging(ref short value);
        partial void OnRtrnTypeChanged();
    
        /// <summary>
        /// There are no comments for SeqNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SeqNo
        {
            get
            {
                int value = _SeqNo;
                OnGetSeqNo(ref value);
                return value;
            }
            set
            {
                if (_SeqNo != value)
                {
                  OnSeqNoChanging(ref value);
                  ReportPropertyChanging("SeqNo");
                  _SeqNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SeqNo");
                  OnSeqNoChanged();
              }
            }
        }
        private int _SeqNo;
        partial void OnGetSeqNo(ref int value);
        partial void OnSeqNoChanging(ref int value);
        partial void OnSeqNoChanged();
    
        /// <summary>
        /// There are no comments for TaxAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal TaxAmt
        {
            get
            {
                decimal value = _TaxAmt;
                OnGetTaxAmt(ref value);
                return value;
            }
            set
            {
                if (_TaxAmt != value)
                {
                  OnTaxAmtChanging(ref value);
                  ReportPropertyChanging("TaxAmt");
                  _TaxAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TaxAmt");
                  OnTaxAmtChanged();
              }
            }
        }
        private decimal _TaxAmt = 0m;
        partial void OnGetTaxAmt(ref decimal value);
        partial void OnTaxAmtChanging(ref decimal value);
        partial void OnTaxAmtChanged();
    
        /// <summary>
        /// There are no comments for TranCmnt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string TranCmnt
        {
            get
            {
                string value = _TranCmnt;
                OnGetTranCmnt(ref value);
                return value;
            }
            set
            {
                if (_TranCmnt != value)
                {
                  OnTranCmntChanging(ref value);
                  ReportPropertyChanging("TranCmnt");
                  _TranCmnt = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TranCmnt");
                  OnTranCmntChanged();
              }
            }
        }
        private string _TranCmnt;
        partial void OnGetTranCmnt(ref string value);
        partial void OnTranCmntChanging(ref string value);
        partial void OnTranCmntChanged();
    
        /// <summary>
        /// There are no comments for TransitInvtTranKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? TransitInvtTranKey
        {
            get
            {
                int? value = _TransitInvtTranKey;
                OnGetTransitInvtTranKey(ref value);
                return value;
            }
            set
            {
                if (_TransitInvtTranKey != value)
                {
                  OnTransitInvtTranKeyChanging(ref value);
                  ReportPropertyChanging("TransitInvtTranKey");
                  _TransitInvtTranKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TransitInvtTranKey");
                  OnTransitInvtTranKeyChanged();
              }
            }
        }
        private int? _TransitInvtTranKey;
        partial void OnGetTransitInvtTranKey(ref int? value);
        partial void OnTransitInvtTranKeyChanging(ref int? value);
        partial void OnTransitInvtTranKeyChanged();
    
        /// <summary>
        /// There are no comments for TrnsfrOrderLineKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? TrnsfrOrderLineKey
        {
            get
            {
                int? value = _TrnsfrOrderLineKey;
                OnGetTrnsfrOrderLineKey(ref value);
                return value;
            }
            set
            {
                if (_TrnsfrOrderLineKey != value)
                {
                  OnTrnsfrOrderLineKeyChanging(ref value);
                  ReportPropertyChanging("TrnsfrOrderLineKey");
                  _TrnsfrOrderLineKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TrnsfrOrderLineKey");
                  OnTrnsfrOrderLineKeyChanged();
              }
            }
        }
        private int? _TrnsfrOrderLineKey;
        partial void OnGetTrnsfrOrderLineKey(ref int? value);
        partial void OnTrnsfrOrderLineKeyChanging(ref int? value);
        partial void OnTrnsfrOrderLineKeyChanged();
    
        /// <summary>
        /// There are no comments for UnitCost in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal UnitCost
        {
            get
            {
                decimal value = _UnitCost;
                OnGetUnitCost(ref value);
                return value;
            }
            set
            {
                if (_UnitCost != value)
                {
                  OnUnitCostChanging(ref value);
                  ReportPropertyChanging("UnitCost");
                  _UnitCost = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UnitCost");
                  OnUnitCostChanged();
              }
            }
        }
        private decimal _UnitCost = 0m;
        partial void OnGetUnitCost(ref decimal value);
        partial void OnUnitCostChanging(ref decimal value);
        partial void OnUnitCostChanged();
    
        /// <summary>
        /// There are no comments for UnitCostExact in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal UnitCostExact
        {
            get
            {
                decimal value = _UnitCostExact;
                OnGetUnitCostExact(ref value);
                return value;
            }
            set
            {
                if (_UnitCostExact != value)
                {
                  OnUnitCostExactChanging(ref value);
                  ReportPropertyChanging("UnitCostExact");
                  _UnitCostExact = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UnitCostExact");
                  OnUnitCostExactChanged();
              }
            }
        }
        private decimal _UnitCostExact = 0m;
        partial void OnGetUnitCostExact(ref decimal value);
        partial void OnUnitCostExactChanging(ref decimal value);
        partial void OnUnitCostExactChanged();
    
        /// <summary>
        /// There are no comments for UnitMeasKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UnitMeasKey
        {
            get
            {
                int value = _UnitMeasKey;
                OnGetUnitMeasKey(ref value);
                return value;
            }
            set
            {
                if (_UnitMeasKey != value)
                {
                  OnUnitMeasKeyChanging(ref value);
                  ReportPropertyChanging("UnitMeasKey");
                  _UnitMeasKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UnitMeasKey");
                  OnUnitMeasKeyChanged();
              }
            }
        }
        private int _UnitMeasKey;
        partial void OnGetUnitMeasKey(ref int value);
        partial void OnUnitMeasKeyChanging(ref int value);
        partial void OnUnitMeasKeyChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();
    
        /// <summary>
        /// There are no comments for VendPerfCarrierDamage in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short VendPerfCarrierDamage
        {
            get
            {
                short value = _VendPerfCarrierDamage;
                OnGetVendPerfCarrierDamage(ref value);
                return value;
            }
            set
            {
                if (_VendPerfCarrierDamage != value)
                {
                  OnVendPerfCarrierDamageChanging(ref value);
                  ReportPropertyChanging("VendPerfCarrierDamage");
                  _VendPerfCarrierDamage = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VendPerfCarrierDamage");
                  OnVendPerfCarrierDamageChanged();
              }
            }
        }
        private short _VendPerfCarrierDamage = 0;
        partial void OnGetVendPerfCarrierDamage(ref short value);
        partial void OnVendPerfCarrierDamageChanging(ref short value);
        partial void OnVendPerfCarrierDamageChanged();
    
        /// <summary>
        /// There are no comments for VendPerfComment in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string VendPerfComment
        {
            get
            {
                string value = _VendPerfComment;
                OnGetVendPerfComment(ref value);
                return value;
            }
            set
            {
                if (_VendPerfComment != value)
                {
                  OnVendPerfCommentChanging(ref value);
                  ReportPropertyChanging("VendPerfComment");
                  _VendPerfComment = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("VendPerfComment");
                  OnVendPerfCommentChanged();
              }
            }
        }
        private string _VendPerfComment;
        partial void OnGetVendPerfComment(ref string value);
        partial void OnVendPerfCommentChanging(ref string value);
        partial void OnVendPerfCommentChanged();
    
        /// <summary>
        /// There are no comments for VendPerfDamagedGoods in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short VendPerfDamagedGoods
        {
            get
            {
                short value = _VendPerfDamagedGoods;
                OnGetVendPerfDamagedGoods(ref value);
                return value;
            }
            set
            {
                if (_VendPerfDamagedGoods != value)
                {
                  OnVendPerfDamagedGoodsChanging(ref value);
                  ReportPropertyChanging("VendPerfDamagedGoods");
                  _VendPerfDamagedGoods = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VendPerfDamagedGoods");
                  OnVendPerfDamagedGoodsChanged();
              }
            }
        }
        private short _VendPerfDamagedGoods = 0;
        partial void OnGetVendPerfDamagedGoods(ref short value);
        partial void OnVendPerfDamagedGoodsChanging(ref short value);
        partial void OnVendPerfDamagedGoodsChanged();
    
        /// <summary>
        /// There are no comments for VendPerfDefectiveGoods in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short VendPerfDefectiveGoods
        {
            get
            {
                short value = _VendPerfDefectiveGoods;
                OnGetVendPerfDefectiveGoods(ref value);
                return value;
            }
            set
            {
                if (_VendPerfDefectiveGoods != value)
                {
                  OnVendPerfDefectiveGoodsChanging(ref value);
                  ReportPropertyChanging("VendPerfDefectiveGoods");
                  _VendPerfDefectiveGoods = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VendPerfDefectiveGoods");
                  OnVendPerfDefectiveGoodsChanged();
              }
            }
        }
        private short _VendPerfDefectiveGoods = 0;
        partial void OnGetVendPerfDefectiveGoods(ref short value);
        partial void OnVendPerfDefectiveGoodsChanging(ref short value);
        partial void OnVendPerfDefectiveGoodsChanged();
    
        /// <summary>
        /// There are no comments for VendPerfImproperLabeling in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short VendPerfImproperLabeling
        {
            get
            {
                short value = _VendPerfImproperLabeling;
                OnGetVendPerfImproperLabeling(ref value);
                return value;
            }
            set
            {
                if (_VendPerfImproperLabeling != value)
                {
                  OnVendPerfImproperLabelingChanging(ref value);
                  ReportPropertyChanging("VendPerfImproperLabeling");
                  _VendPerfImproperLabeling = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VendPerfImproperLabeling");
                  OnVendPerfImproperLabelingChanged();
              }
            }
        }
        private short _VendPerfImproperLabeling = 0;
        partial void OnGetVendPerfImproperLabeling(ref short value);
        partial void OnVendPerfImproperLabelingChanging(ref short value);
        partial void OnVendPerfImproperLabelingChanged();
    
        /// <summary>
        /// There are no comments for VendPerfImproperPackaging in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short VendPerfImproperPackaging
        {
            get
            {
                short value = _VendPerfImproperPackaging;
                OnGetVendPerfImproperPackaging(ref value);
                return value;
            }
            set
            {
                if (_VendPerfImproperPackaging != value)
                {
                  OnVendPerfImproperPackagingChanging(ref value);
                  ReportPropertyChanging("VendPerfImproperPackaging");
                  _VendPerfImproperPackaging = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VendPerfImproperPackaging");
                  OnVendPerfImproperPackagingChanged();
              }
            }
        }
        private short _VendPerfImproperPackaging = 0;
        partial void OnGetVendPerfImproperPackaging(ref short value);
        partial void OnVendPerfImproperPackagingChanging(ref short value);
        partial void OnVendPerfImproperPackagingChanged();
    
        /// <summary>
        /// There are no comments for VendPerfMissingDoc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short VendPerfMissingDoc
        {
            get
            {
                short value = _VendPerfMissingDoc;
                OnGetVendPerfMissingDoc(ref value);
                return value;
            }
            set
            {
                if (_VendPerfMissingDoc != value)
                {
                  OnVendPerfMissingDocChanging(ref value);
                  ReportPropertyChanging("VendPerfMissingDoc");
                  _VendPerfMissingDoc = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VendPerfMissingDoc");
                  OnVendPerfMissingDocChanged();
              }
            }
        }
        private short _VendPerfMissingDoc = 0;
        partial void OnGetVendPerfMissingDoc(ref short value);
        partial void OnVendPerfMissingDocChanging(ref short value);
        partial void OnVendPerfMissingDocChanged();
    
        /// <summary>
        /// There are no comments for VendPerfNotToSpec in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short VendPerfNotToSpec
        {
            get
            {
                short value = _VendPerfNotToSpec;
                OnGetVendPerfNotToSpec(ref value);
                return value;
            }
            set
            {
                if (_VendPerfNotToSpec != value)
                {
                  OnVendPerfNotToSpecChanging(ref value);
                  ReportPropertyChanging("VendPerfNotToSpec");
                  _VendPerfNotToSpec = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VendPerfNotToSpec");
                  OnVendPerfNotToSpecChanged();
              }
            }
        }
        private short _VendPerfNotToSpec = 0;
        partial void OnGetVendPerfNotToSpec(ref short value);
        partial void OnVendPerfNotToSpecChanging(ref short value);
        partial void OnVendPerfNotToSpecChanged();
    
        /// <summary>
        /// There are no comments for VendPerfOtherProblem in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short VendPerfOtherProblem
        {
            get
            {
                short value = _VendPerfOtherProblem;
                OnGetVendPerfOtherProblem(ref value);
                return value;
            }
            set
            {
                if (_VendPerfOtherProblem != value)
                {
                  OnVendPerfOtherProblemChanging(ref value);
                  ReportPropertyChanging("VendPerfOtherProblem");
                  _VendPerfOtherProblem = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VendPerfOtherProblem");
                  OnVendPerfOtherProblemChanged();
              }
            }
        }
        private short _VendPerfOtherProblem = 0;
        partial void OnGetVendPerfOtherProblem(ref short value);
        partial void OnVendPerfOtherProblemChanging(ref short value);
        partial void OnVendPerfOtherProblemChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for RcvrLineDists in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "RcvrLine_RcvrLineDist", "RcvrLineDists")]
        public virtual EntityCollection<RcvrLineDist> RcvrLineDists
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<RcvrLineDist>("Net4Sage.DataAccessModel.RcvrLine_RcvrLineDist", "RcvrLineDists");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<RcvrLineDist>("Net4Sage.DataAccessModel.RcvrLine_RcvrLineDist", "RcvrLineDists", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Item in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Item_RcvrLine", "Item")]
        public virtual Item Item
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Item>("Net4Sage.DataAccessModel.Item_RcvrLine", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Item>("Net4Sage.DataAccessModel.Item_RcvrLine", "Item").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Item in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Item>("Net4Sage.DataAccessModel.Item_RcvrLine", "Item");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Item>("Net4Sage.DataAccessModel.Item_RcvrLine", "Item", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Item>("Net4Sage.DataAccessModel.Item_RcvrLine", "Item").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvtTran in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "InvtTran_RcvrLine", "InvtTran")]
        public virtual InvtTran InvtTran
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvtTran>("Net4Sage.DataAccessModel.InvtTran_RcvrLine", "InvtTran").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvtTran>("Net4Sage.DataAccessModel.InvtTran_RcvrLine", "InvtTran").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvtTran in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvtTran> InvtTranReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvtTran>("Net4Sage.DataAccessModel.InvtTran_RcvrLine", "InvtTran");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvtTran>("Net4Sage.DataAccessModel.InvtTran_RcvrLine", "InvtTran", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvtTran>("Net4Sage.DataAccessModel.InvtTran_RcvrLine", "InvtTran").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ReceiverLog in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "ReceiverLog_RcvrLine", "ReceiverLog")]
        public virtual ReceiverLog ReceiverLog
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ReceiverLog>("Net4Sage.DataAccessModel.ReceiverLog_RcvrLine", "ReceiverLog").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ReceiverLog>("Net4Sage.DataAccessModel.ReceiverLog_RcvrLine", "ReceiverLog").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for ReceiverLog in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ReceiverLog> ReceiverLogReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ReceiverLog>("Net4Sage.DataAccessModel.ReceiverLog_RcvrLine", "ReceiverLog");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<ReceiverLog>("Net4Sage.DataAccessModel.ReceiverLog_RcvrLine", "ReceiverLog", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ReceiverLog>("Net4Sage.DataAccessModel.ReceiverLog_RcvrLine", "ReceiverLog").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.RcvrLineDist in the schema.
    /// </summary>
    /// <KeyProperties>
    /// RcvrLineDistKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="RcvrLineDist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RcvrLineDist : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new RcvrLineDist object.
        /// </summary>
        /// <param name="rcvrLineDistKey">Initial value of RcvrLineDistKey.</param>
        /// <param name="freightAmt">Initial value of FreightAmt.</param>
        /// <param name="qtyRcvd">Initial value of QtyRcvd.</param>
        /// <param name="qtyRcvdInSrcUOM">Initial value of QtyRcvdInSrcUOM.</param>
        /// <param name="rcvrLineKey">Initial value of RcvrLineKey.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        public static RcvrLineDist CreateRcvrLineDist(int rcvrLineDistKey, decimal freightAmt, decimal qtyRcvd, decimal qtyRcvdInSrcUOM, int rcvrLineKey, int updateCounter)
        {
            RcvrLineDist rcvrLineDist = new RcvrLineDist();
            rcvrLineDist.RcvrLineDistKey = rcvrLineDistKey;
            rcvrLineDist.FreightAmt = freightAmt;
            rcvrLineDist.QtyRcvd = qtyRcvd;
            rcvrLineDist.QtyRcvdInSrcUOM = qtyRcvdInSrcUOM;
            rcvrLineDist.RcvrLineKey = rcvrLineKey;
            rcvrLineDist.UpdateCounter = updateCounter;
            return rcvrLineDist;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for RcvrLineDistKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int RcvrLineDistKey
        {
            get
            {
                int value = _RcvrLineDistKey;
                OnGetRcvrLineDistKey(ref value);
                return value;
            }
            set
            {
                if (_RcvrLineDistKey != value)
                {
                  OnRcvrLineDistKeyChanging(ref value);
                  ReportPropertyChanging("RcvrLineDistKey");
                  _RcvrLineDistKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RcvrLineDistKey");
                  OnRcvrLineDistKeyChanged();
              }
            }
        }
        private int _RcvrLineDistKey;
        partial void OnGetRcvrLineDistKey(ref int value);
        partial void OnRcvrLineDistKeyChanging(ref int value);
        partial void OnRcvrLineDistKeyChanged();
    
        /// <summary>
        /// There are no comments for AcctRefKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? AcctRefKey
        {
            get
            {
                int? value = _AcctRefKey;
                OnGetAcctRefKey(ref value);
                return value;
            }
            set
            {
                if (_AcctRefKey != value)
                {
                  OnAcctRefKeyChanging(ref value);
                  ReportPropertyChanging("AcctRefKey");
                  _AcctRefKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AcctRefKey");
                  OnAcctRefKeyChanged();
              }
            }
        }
        private int? _AcctRefKey;
        partial void OnGetAcctRefKey(ref int? value);
        partial void OnAcctRefKeyChanging(ref int? value);
        partial void OnAcctRefKeyChanged();
    
        /// <summary>
        /// There are no comments for FreightAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal FreightAmt
        {
            get
            {
                decimal value = _FreightAmt;
                OnGetFreightAmt(ref value);
                return value;
            }
            set
            {
                if (_FreightAmt != value)
                {
                  OnFreightAmtChanging(ref value);
                  ReportPropertyChanging("FreightAmt");
                  _FreightAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FreightAmt");
                  OnFreightAmtChanged();
              }
            }
        }
        private decimal _FreightAmt = 0m;
        partial void OnGetFreightAmt(ref decimal value);
        partial void OnFreightAmtChanging(ref decimal value);
        partial void OnFreightAmtChanged();
    
        /// <summary>
        /// There are no comments for GLAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? GLAcctKey
        {
            get
            {
                int? value = _GLAcctKey;
                OnGetGLAcctKey(ref value);
                return value;
            }
            set
            {
                if (_GLAcctKey != value)
                {
                  OnGLAcctKeyChanging(ref value);
                  ReportPropertyChanging("GLAcctKey");
                  _GLAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("GLAcctKey");
                  OnGLAcctKeyChanged();
              }
            }
        }
        private int? _GLAcctKey;
        partial void OnGetGLAcctKey(ref int? value);
        partial void OnGLAcctKeyChanging(ref int? value);
        partial void OnGLAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for POLineDistKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? POLineDistKey
        {
            get
            {
                int? value = _POLineDistKey;
                OnGetPOLineDistKey(ref value);
                return value;
            }
            set
            {
                if (_POLineDistKey != value)
                {
                  OnPOLineDistKeyChanging(ref value);
                  ReportPropertyChanging("POLineDistKey");
                  _POLineDistKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("POLineDistKey");
                  OnPOLineDistKeyChanged();
              }
            }
        }
        private int? _POLineDistKey;
        partial void OnGetPOLineDistKey(ref int? value);
        partial void OnPOLineDistKeyChanging(ref int? value);
        partial void OnPOLineDistKeyChanged();
    
        /// <summary>
        /// There are no comments for QtyRcvd in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal QtyRcvd
        {
            get
            {
                decimal value = _QtyRcvd;
                OnGetQtyRcvd(ref value);
                return value;
            }
            set
            {
                if (_QtyRcvd != value)
                {
                  OnQtyRcvdChanging(ref value);
                  ReportPropertyChanging("QtyRcvd");
                  _QtyRcvd = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QtyRcvd");
                  OnQtyRcvdChanged();
              }
            }
        }
        private decimal _QtyRcvd = 0m;
        partial void OnGetQtyRcvd(ref decimal value);
        partial void OnQtyRcvdChanging(ref decimal value);
        partial void OnQtyRcvdChanged();
    
        /// <summary>
        /// There are no comments for QtyRcvdInSrcUOM in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal QtyRcvdInSrcUOM
        {
            get
            {
                decimal value = _QtyRcvdInSrcUOM;
                OnGetQtyRcvdInSrcUOM(ref value);
                return value;
            }
            set
            {
                if (_QtyRcvdInSrcUOM != value)
                {
                  OnQtyRcvdInSrcUOMChanging(ref value);
                  ReportPropertyChanging("QtyRcvdInSrcUOM");
                  _QtyRcvdInSrcUOM = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QtyRcvdInSrcUOM");
                  OnQtyRcvdInSrcUOMChanged();
              }
            }
        }
        private decimal _QtyRcvdInSrcUOM = 0m;
        partial void OnGetQtyRcvdInSrcUOM(ref decimal value);
        partial void OnQtyRcvdInSrcUOMChanging(ref decimal value);
        partial void OnQtyRcvdInSrcUOMChanged();
    
        /// <summary>
        /// There are no comments for RcvrLineKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int RcvrLineKey
        {
            get
            {
                int value = _RcvrLineKey;
                OnGetRcvrLineKey(ref value);
                return value;
            }
            set
            {
                if (_RcvrLineKey != value)
                {
                  OnRcvrLineKeyChanging(ref value);
                  ReportPropertyChanging("RcvrLineKey");
                  _RcvrLineKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RcvrLineKey");
                  OnRcvrLineKeyChanged();
              }
            }
        }
        private int _RcvrLineKey;
        partial void OnGetRcvrLineKey(ref int value);
        partial void OnRcvrLineKeyChanging(ref int value);
        partial void OnRcvrLineKeyChanged();
    
        /// <summary>
        /// There are no comments for RtrnRcvrLineDstKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? RtrnRcvrLineDstKey
        {
            get
            {
                int? value = _RtrnRcvrLineDstKey;
                OnGetRtrnRcvrLineDstKey(ref value);
                return value;
            }
            set
            {
                if (_RtrnRcvrLineDstKey != value)
                {
                  OnRtrnRcvrLineDstKeyChanging(ref value);
                  ReportPropertyChanging("RtrnRcvrLineDstKey");
                  _RtrnRcvrLineDstKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RtrnRcvrLineDstKey");
                  OnRtrnRcvrLineDstKeyChanged();
              }
            }
        }
        private int? _RtrnRcvrLineDstKey;
        partial void OnGetRtrnRcvrLineDstKey(ref int? value);
        partial void OnRtrnRcvrLineDstKeyChanging(ref int? value);
        partial void OnRtrnRcvrLineDstKeyChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for RcvrLine in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "RcvrLine_RcvrLineDist", "RcvrLine")]
        public virtual RcvrLine RcvrLine
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<RcvrLine>("Net4Sage.DataAccessModel.RcvrLine_RcvrLineDist", "RcvrLine").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<RcvrLine>("Net4Sage.DataAccessModel.RcvrLine_RcvrLineDist", "RcvrLine").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for RcvrLine in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RcvrLine> RcvrLineReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<RcvrLine>("Net4Sage.DataAccessModel.RcvrLine_RcvrLineDist", "RcvrLine");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<RcvrLine>("Net4Sage.DataAccessModel.RcvrLine_RcvrLineDist", "RcvrLine", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<RcvrLine>("Net4Sage.DataAccessModel.RcvrLine_RcvrLineDist", "RcvrLine").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.Receiver in the schema.
    /// </summary>
    /// <KeyProperties>
    /// RcvrKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="Receiver")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [Net4Sage.Controls.Lookup.LookupFormTitle(@"Buscar Recepción")]
    [Net4Sage.Controls.Lookup.LookupAutoShowColumns(false)]
    public partial class Receiver : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Receiver object.
        /// </summary>
        /// <param name="rcvrKey">Initial value of RcvrKey.</param>
        /// <param name="batchKey">Initial value of BatchKey.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="createType">Initial value of CreateType.</param>
        /// <param name="currExchRate">Initial value of CurrExchRate.</param>
        /// <param name="currID">Initial value of CurrID.</param>
        /// <param name="postDate">Initial value of PostDate.</param>
        /// <param name="purchCompanyID">Initial value of PurchCompanyID.</param>
        /// <param name="tranDate">Initial value of TranDate.</param>
        /// <param name="tranID">Initial value of TranID.</param>
        /// <param name="tranNo">Initial value of TranNo.</param>
        /// <param name="tranType">Initial value of TranType.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        /// <param name="vendPerfDeliveryWrongDate">Initial value of VendPerfDeliveryWrongDate.</param>
        /// <param name="vendPerfDeliveryWrongDest">Initial value of VendPerfDeliveryWrongDest.</param>
        /// <param name="vendPerfDeliveryWrongTime">Initial value of VendPerfDeliveryWrongTime.</param>
        /// <param name="vendPerfExceptional">Initial value of VendPerfExceptional.</param>
        /// <param name="vendPerfOtherProblem">Initial value of VendPerfOtherProblem.</param>
        /// <param name="vendPerfPoorCustService">Initial value of VendPerfPoorCustService.</param>
        /// <param name="vendPerfUpgradeSubstItem">Initial value of VendPerfUpgradeSubstItem.</param>
        /// <param name="vendPerfUnauthSubstItem">Initial value of VendPerfUnauthSubstItem.</param>
        public static Receiver CreateReceiver(int rcvrKey, int batchKey, string companyID, short createType, double currExchRate, string currID, global::System.DateTime postDate, string purchCompanyID, global::System.DateTime tranDate, string tranID, string tranNo, int tranType, int updateCounter, short vendPerfDeliveryWrongDate, short vendPerfDeliveryWrongDest, short vendPerfDeliveryWrongTime, short vendPerfExceptional, short vendPerfOtherProblem, short vendPerfPoorCustService, short vendPerfUpgradeSubstItem, short vendPerfUnauthSubstItem)
        {
            Receiver receiver = new Receiver();
            receiver.RcvrKey = rcvrKey;
            receiver.BatchKey = batchKey;
            receiver.CompanyID = companyID;
            receiver.CreateType = createType;
            receiver.CurrExchRate = currExchRate;
            receiver.CurrID = currID;
            receiver.PostDate = postDate;
            receiver.PurchCompanyID = purchCompanyID;
            receiver.TranDate = tranDate;
            receiver.TranID = tranID;
            receiver.TranNo = tranNo;
            receiver.TranType = tranType;
            receiver.UpdateCounter = updateCounter;
            receiver.VendPerfDeliveryWrongDate = vendPerfDeliveryWrongDate;
            receiver.VendPerfDeliveryWrongDest = vendPerfDeliveryWrongDest;
            receiver.VendPerfDeliveryWrongTime = vendPerfDeliveryWrongTime;
            receiver.VendPerfExceptional = vendPerfExceptional;
            receiver.VendPerfOtherProblem = vendPerfOtherProblem;
            receiver.VendPerfPoorCustService = vendPerfPoorCustService;
            receiver.VendPerfUpgradeSubstItem = vendPerfUpgradeSubstItem;
            receiver.VendPerfUnauthSubstItem = vendPerfUnauthSubstItem;
            return receiver;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for RcvrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupKeyReturn]
        public virtual int RcvrKey
        {
            get
            {
                int value = _RcvrKey;
                OnGetRcvrKey(ref value);
                return value;
            }
            set
            {
                if (_RcvrKey != value)
                {
                  OnRcvrKeyChanging(ref value);
                  ReportPropertyChanging("RcvrKey");
                  _RcvrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RcvrKey");
                  OnRcvrKeyChanged();
              }
            }
        }
        private int _RcvrKey;
        partial void OnGetRcvrKey(ref int value);
        partial void OnRcvrKeyChanging(ref int value);
        partial void OnRcvrKeyChanged();
    
        /// <summary>
        /// There are no comments for BatchKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int BatchKey
        {
            get
            {
                int value = _BatchKey;
                OnGetBatchKey(ref value);
                return value;
            }
            set
            {
                if (_BatchKey != value)
                {
                  OnBatchKeyChanging(ref value);
                  ReportPropertyChanging("BatchKey");
                  _BatchKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BatchKey");
                  OnBatchKeyChanged();
              }
            }
        }
        private int _BatchKey;
        partial void OnGetBatchKey(ref int value);
        partial void OnBatchKeyChanging(ref int value);
        partial void OnBatchKeyChanged();
    
        /// <summary>
        /// There are no comments for BillOfLadingNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string BillOfLadingNo
        {
            get
            {
                string value = _BillOfLadingNo;
                OnGetBillOfLadingNo(ref value);
                return value;
            }
            set
            {
                if (_BillOfLadingNo != value)
                {
                  OnBillOfLadingNoChanging(ref value);
                  ReportPropertyChanging("BillOfLadingNo");
                  _BillOfLadingNo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("BillOfLadingNo");
                  OnBillOfLadingNoChanged();
              }
            }
        }
        private string _BillOfLadingNo;
        partial void OnGetBillOfLadingNo(ref string value);
        partial void OnBillOfLadingNoChanging(ref string value);
        partial void OnBillOfLadingNoChanged();
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for CreateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CreateDate
        {
            get
            {
                global::System.DateTime? value = _CreateDate;
                OnGetCreateDate(ref value);
                return value;
            }
            set
            {
                if (_CreateDate != value)
                {
                  OnCreateDateChanging(ref value);
                  ReportPropertyChanging("CreateDate");
                  _CreateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateDate");
                  OnCreateDateChanged();
              }
            }
        }
        private global::System.DateTime? _CreateDate;
        partial void OnGetCreateDate(ref global::System.DateTime? value);
        partial void OnCreateDateChanging(ref global::System.DateTime? value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// There are no comments for CreateType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CreateType
        {
            get
            {
                short value = _CreateType;
                OnGetCreateType(ref value);
                return value;
            }
            set
            {
                if (_CreateType != value)
                {
                  OnCreateTypeChanging(ref value);
                  ReportPropertyChanging("CreateType");
                  _CreateType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateType");
                  OnCreateTypeChanged();
              }
            }
        }
        private short _CreateType = 0;
        partial void OnGetCreateType(ref short value);
        partial void OnCreateTypeChanging(ref short value);
        partial void OnCreateTypeChanged();
    
        /// <summary>
        /// There are no comments for CreateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CreateUserID
        {
            get
            {
                string value = _CreateUserID;
                OnGetCreateUserID(ref value);
                return value;
            }
            set
            {
                if (_CreateUserID != value)
                {
                  OnCreateUserIDChanging(ref value);
                  ReportPropertyChanging("CreateUserID");
                  _CreateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CreateUserID");
                  OnCreateUserIDChanged();
              }
            }
        }
        private string _CreateUserID;
        partial void OnGetCreateUserID(ref string value);
        partial void OnCreateUserIDChanging(ref string value);
        partial void OnCreateUserIDChanged();
    
        /// <summary>
        /// There are no comments for CurrExchRate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual double CurrExchRate
        {
            get
            {
                double value = _CurrExchRate;
                OnGetCurrExchRate(ref value);
                return value;
            }
            set
            {
                if (_CurrExchRate != value)
                {
                  OnCurrExchRateChanging(ref value);
                  ReportPropertyChanging("CurrExchRate");
                  _CurrExchRate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CurrExchRate");
                  OnCurrExchRateChanged();
              }
            }
        }
        private double _CurrExchRate = 1;
        partial void OnGetCurrExchRate(ref double value);
        partial void OnCurrExchRateChanging(ref double value);
        partial void OnCurrExchRateChanged();
    
        /// <summary>
        /// There are no comments for CurrID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CurrID
        {
            get
            {
                string value = _CurrID;
                OnGetCurrID(ref value);
                return value;
            }
            set
            {
                if (_CurrID != value)
                {
                  OnCurrIDChanging(ref value);
                  ReportPropertyChanging("CurrID");
                  _CurrID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CurrID");
                  OnCurrIDChanged();
              }
            }
        }
        private string _CurrID;
        partial void OnGetCurrID(ref string value);
        partial void OnCurrIDChanging(ref string value);
        partial void OnCurrIDChanged();
    
        /// <summary>
        /// There are no comments for LTExcptReasCodeKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? LTExcptReasCodeKey
        {
            get
            {
                int? value = _LTExcptReasCodeKey;
                OnGetLTExcptReasCodeKey(ref value);
                return value;
            }
            set
            {
                if (_LTExcptReasCodeKey != value)
                {
                  OnLTExcptReasCodeKeyChanging(ref value);
                  ReportPropertyChanging("LTExcptReasCodeKey");
                  _LTExcptReasCodeKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LTExcptReasCodeKey");
                  OnLTExcptReasCodeKeyChanged();
              }
            }
        }
        private int? _LTExcptReasCodeKey;
        partial void OnGetLTExcptReasCodeKey(ref int? value);
        partial void OnLTExcptReasCodeKeyChanging(ref int? value);
        partial void OnLTExcptReasCodeKeyChanged();
    
        /// <summary>
        /// There are no comments for POKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? POKey
        {
            get
            {
                int? value = _POKey;
                OnGetPOKey(ref value);
                return value;
            }
            set
            {
                if (_POKey != value)
                {
                  OnPOKeyChanging(ref value);
                  ReportPropertyChanging("POKey");
                  _POKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("POKey");
                  OnPOKeyChanged();
              }
            }
        }
        private int? _POKey;
        partial void OnGetPOKey(ref int? value);
        partial void OnPOKeyChanging(ref int? value);
        partial void OnPOKeyChanged();
    
        /// <summary>
        /// There are no comments for PostDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime PostDate
        {
            get
            {
                global::System.DateTime value = _PostDate;
                OnGetPostDate(ref value);
                return value;
            }
            set
            {
                if (_PostDate != value)
                {
                  OnPostDateChanging(ref value);
                  ReportPropertyChanging("PostDate");
                  _PostDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PostDate");
                  OnPostDateChanged();
              }
            }
        }
        private global::System.DateTime _PostDate;
        partial void OnGetPostDate(ref global::System.DateTime value);
        partial void OnPostDateChanging(ref global::System.DateTime value);
        partial void OnPostDateChanged();
    
        /// <summary>
        /// There are no comments for PurchCompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string PurchCompanyID
        {
            get
            {
                string value = _PurchCompanyID;
                OnGetPurchCompanyID(ref value);
                return value;
            }
            set
            {
                if (_PurchCompanyID != value)
                {
                  OnPurchCompanyIDChanging(ref value);
                  ReportPropertyChanging("PurchCompanyID");
                  _PurchCompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("PurchCompanyID");
                  OnPurchCompanyIDChanged();
              }
            }
        }
        private string _PurchCompanyID;
        partial void OnGetPurchCompanyID(ref string value);
        partial void OnPurchCompanyIDChanging(ref string value);
        partial void OnPurchCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for RMA in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string RMA
        {
            get
            {
                string value = _RMA;
                OnGetRMA(ref value);
                return value;
            }
            set
            {
                if (_RMA != value)
                {
                  OnRMAChanging(ref value);
                  ReportPropertyChanging("RMA");
                  _RMA = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("RMA");
                  OnRMAChanged();
              }
            }
        }
        private string _RMA;
        partial void OnGetRMA(ref string value);
        partial void OnRMAChanging(ref string value);
        partial void OnRMAChanged();
    
        /// <summary>
        /// There are no comments for RtrnRcvrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? RtrnRcvrKey
        {
            get
            {
                int? value = _RtrnRcvrKey;
                OnGetRtrnRcvrKey(ref value);
                return value;
            }
            set
            {
                if (_RtrnRcvrKey != value)
                {
                  OnRtrnRcvrKeyChanging(ref value);
                  ReportPropertyChanging("RtrnRcvrKey");
                  _RtrnRcvrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RtrnRcvrKey");
                  OnRtrnRcvrKeyChanged();
              }
            }
        }
        private int? _RtrnRcvrKey;
        partial void OnGetRtrnRcvrKey(ref int? value);
        partial void OnRtrnRcvrKeyChanging(ref int? value);
        partial void OnRtrnRcvrKeyChanged();
    
        /// <summary>
        /// There are no comments for TranCmnt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Comentario")]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        public virtual string TranCmnt
        {
            get
            {
                string value = _TranCmnt;
                OnGetTranCmnt(ref value);
                return value;
            }
            set
            {
                if (_TranCmnt != value)
                {
                  OnTranCmntChanging(ref value);
                  ReportPropertyChanging("TranCmnt");
                  _TranCmnt = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TranCmnt");
                  OnTranCmntChanged();
              }
            }
        }
        private string _TranCmnt;
        partial void OnGetTranCmnt(ref string value);
        partial void OnTranCmntChanging(ref string value);
        partial void OnTranCmntChanged();
    
        /// <summary>
        /// There are no comments for TranDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"Fecha")]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Fecha")]
        public virtual global::System.DateTime TranDate
        {
            get
            {
                global::System.DateTime value = _TranDate;
                OnGetTranDate(ref value);
                return value;
            }
            set
            {
                if (_TranDate != value)
                {
                  OnTranDateChanging(ref value);
                  ReportPropertyChanging("TranDate");
                  _TranDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranDate");
                  OnTranDateChanged();
              }
            }
        }
        private global::System.DateTime _TranDate;
        partial void OnGetTranDate(ref global::System.DateTime value);
        partial void OnTranDateChanging(ref global::System.DateTime value);
        partial void OnTranDateChanged();
    
        /// <summary>
        /// There are no comments for TranID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string TranID
        {
            get
            {
                string value = _TranID;
                OnGetTranID(ref value);
                return value;
            }
            set
            {
                if (_TranID != value)
                {
                  OnTranIDChanging(ref value);
                  ReportPropertyChanging("TranID");
                  _TranID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TranID");
                  OnTranIDChanged();
              }
            }
        }
        private string _TranID;
        partial void OnGetTranID(ref string value);
        partial void OnTranIDChanging(ref string value);
        partial void OnTranIDChanged();
    
        /// <summary>
        /// There are no comments for TranNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupTextReturn]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Recepción")]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"Recepción")]
        public virtual string TranNo
        {
            get
            {
                string value = _TranNo;
                OnGetTranNo(ref value);
                return value;
            }
            set
            {
                if (_TranNo != value)
                {
                  OnTranNoChanging(ref value);
                  ReportPropertyChanging("TranNo");
                  _TranNo = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TranNo");
                  OnTranNoChanged();
              }
            }
        }
        private string _TranNo;
        partial void OnGetTranNo(ref string value);
        partial void OnTranNoChanging(ref string value);
        partial void OnTranNoChanged();
    
        /// <summary>
        /// There are no comments for TranType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int TranType
        {
            get
            {
                int value = _TranType;
                OnGetTranType(ref value);
                return value;
            }
            set
            {
                if (_TranType != value)
                {
                  OnTranTypeChanging(ref value);
                  ReportPropertyChanging("TranType");
                  _TranType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranType");
                  OnTranTypeChanged();
              }
            }
        }
        private int _TranType;
        partial void OnGetTranType(ref int value);
        partial void OnTranTypeChanging(ref int value);
        partial void OnTranTypeChanged();
    
        /// <summary>
        /// There are no comments for TrnsfrOrderKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? TrnsfrOrderKey
        {
            get
            {
                int? value = _TrnsfrOrderKey;
                OnGetTrnsfrOrderKey(ref value);
                return value;
            }
            set
            {
                if (_TrnsfrOrderKey != value)
                {
                  OnTrnsfrOrderKeyChanging(ref value);
                  ReportPropertyChanging("TrnsfrOrderKey");
                  _TrnsfrOrderKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TrnsfrOrderKey");
                  OnTrnsfrOrderKeyChanged();
              }
            }
        }
        private int? _TrnsfrOrderKey;
        partial void OnGetTrnsfrOrderKey(ref int? value);
        partial void OnTrnsfrOrderKeyChanging(ref int? value);
        partial void OnTrnsfrOrderKeyChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();
    
        /// <summary>
        /// There are no comments for UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? UpdateDate
        {
            get
            {
                global::System.DateTime? value = _UpdateDate;
                OnGetUpdateDate(ref value);
                return value;
            }
            set
            {
                if (_UpdateDate != value)
                {
                  OnUpdateDateChanging(ref value);
                  ReportPropertyChanging("UpdateDate");
                  _UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateDate");
                  OnUpdateDateChanged();
              }
            }
        }
        private global::System.DateTime? _UpdateDate;
        partial void OnGetUpdateDate(ref global::System.DateTime? value);
        partial void OnUpdateDateChanging(ref global::System.DateTime? value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// There are no comments for UpdateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UpdateUserID
        {
            get
            {
                string value = _UpdateUserID;
                OnGetUpdateUserID(ref value);
                return value;
            }
            set
            {
                if (_UpdateUserID != value)
                {
                  OnUpdateUserIDChanging(ref value);
                  ReportPropertyChanging("UpdateUserID");
                  _UpdateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UpdateUserID");
                  OnUpdateUserIDChanged();
              }
            }
        }
        private string _UpdateUserID;
        partial void OnGetUpdateUserID(ref string value);
        partial void OnUpdateUserIDChanging(ref string value);
        partial void OnUpdateUserIDChanged();
    
        /// <summary>
        /// There are no comments for VendKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? VendKey
        {
            get
            {
                int? value = _VendKey;
                OnGetVendKey(ref value);
                return value;
            }
            set
            {
                if (_VendKey != value)
                {
                  OnVendKeyChanging(ref value);
                  ReportPropertyChanging("VendKey");
                  _VendKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VendKey");
                  OnVendKeyChanged();
              }
            }
        }
        private int? _VendKey;
        partial void OnGetVendKey(ref int? value);
        partial void OnVendKeyChanging(ref int? value);
        partial void OnVendKeyChanged();
    
        /// <summary>
        /// There are no comments for VendPerfComment in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string VendPerfComment
        {
            get
            {
                string value = _VendPerfComment;
                OnGetVendPerfComment(ref value);
                return value;
            }
            set
            {
                if (_VendPerfComment != value)
                {
                  OnVendPerfCommentChanging(ref value);
                  ReportPropertyChanging("VendPerfComment");
                  _VendPerfComment = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("VendPerfComment");
                  OnVendPerfCommentChanged();
              }
            }
        }
        private string _VendPerfComment;
        partial void OnGetVendPerfComment(ref string value);
        partial void OnVendPerfCommentChanging(ref string value);
        partial void OnVendPerfCommentChanged();
    
        /// <summary>
        /// There are no comments for VendPerfDeliveryWrongDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short VendPerfDeliveryWrongDate
        {
            get
            {
                short value = _VendPerfDeliveryWrongDate;
                OnGetVendPerfDeliveryWrongDate(ref value);
                return value;
            }
            set
            {
                if (_VendPerfDeliveryWrongDate != value)
                {
                  OnVendPerfDeliveryWrongDateChanging(ref value);
                  ReportPropertyChanging("VendPerfDeliveryWrongDate");
                  _VendPerfDeliveryWrongDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VendPerfDeliveryWrongDate");
                  OnVendPerfDeliveryWrongDateChanged();
              }
            }
        }
        private short _VendPerfDeliveryWrongDate = 0;
        partial void OnGetVendPerfDeliveryWrongDate(ref short value);
        partial void OnVendPerfDeliveryWrongDateChanging(ref short value);
        partial void OnVendPerfDeliveryWrongDateChanged();
    
        /// <summary>
        /// There are no comments for VendPerfDeliveryWrongDest in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short VendPerfDeliveryWrongDest
        {
            get
            {
                short value = _VendPerfDeliveryWrongDest;
                OnGetVendPerfDeliveryWrongDest(ref value);
                return value;
            }
            set
            {
                if (_VendPerfDeliveryWrongDest != value)
                {
                  OnVendPerfDeliveryWrongDestChanging(ref value);
                  ReportPropertyChanging("VendPerfDeliveryWrongDest");
                  _VendPerfDeliveryWrongDest = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VendPerfDeliveryWrongDest");
                  OnVendPerfDeliveryWrongDestChanged();
              }
            }
        }
        private short _VendPerfDeliveryWrongDest = 0;
        partial void OnGetVendPerfDeliveryWrongDest(ref short value);
        partial void OnVendPerfDeliveryWrongDestChanging(ref short value);
        partial void OnVendPerfDeliveryWrongDestChanged();
    
        /// <summary>
        /// There are no comments for VendPerfDeliveryWrongTime in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short VendPerfDeliveryWrongTime
        {
            get
            {
                short value = _VendPerfDeliveryWrongTime;
                OnGetVendPerfDeliveryWrongTime(ref value);
                return value;
            }
            set
            {
                if (_VendPerfDeliveryWrongTime != value)
                {
                  OnVendPerfDeliveryWrongTimeChanging(ref value);
                  ReportPropertyChanging("VendPerfDeliveryWrongTime");
                  _VendPerfDeliveryWrongTime = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VendPerfDeliveryWrongTime");
                  OnVendPerfDeliveryWrongTimeChanged();
              }
            }
        }
        private short _VendPerfDeliveryWrongTime = 0;
        partial void OnGetVendPerfDeliveryWrongTime(ref short value);
        partial void OnVendPerfDeliveryWrongTimeChanging(ref short value);
        partial void OnVendPerfDeliveryWrongTimeChanged();
    
        /// <summary>
        /// There are no comments for VendPerfExceptional in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short VendPerfExceptional
        {
            get
            {
                short value = _VendPerfExceptional;
                OnGetVendPerfExceptional(ref value);
                return value;
            }
            set
            {
                if (_VendPerfExceptional != value)
                {
                  OnVendPerfExceptionalChanging(ref value);
                  ReportPropertyChanging("VendPerfExceptional");
                  _VendPerfExceptional = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VendPerfExceptional");
                  OnVendPerfExceptionalChanged();
              }
            }
        }
        private short _VendPerfExceptional = 0;
        partial void OnGetVendPerfExceptional(ref short value);
        partial void OnVendPerfExceptionalChanging(ref short value);
        partial void OnVendPerfExceptionalChanged();
    
        /// <summary>
        /// There are no comments for VendPerfOtherProblem in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short VendPerfOtherProblem
        {
            get
            {
                short value = _VendPerfOtherProblem;
                OnGetVendPerfOtherProblem(ref value);
                return value;
            }
            set
            {
                if (_VendPerfOtherProblem != value)
                {
                  OnVendPerfOtherProblemChanging(ref value);
                  ReportPropertyChanging("VendPerfOtherProblem");
                  _VendPerfOtherProblem = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VendPerfOtherProblem");
                  OnVendPerfOtherProblemChanged();
              }
            }
        }
        private short _VendPerfOtherProblem = 0;
        partial void OnGetVendPerfOtherProblem(ref short value);
        partial void OnVendPerfOtherProblemChanging(ref short value);
        partial void OnVendPerfOtherProblemChanged();
    
        /// <summary>
        /// There are no comments for VendPerfPoorCustService in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short VendPerfPoorCustService
        {
            get
            {
                short value = _VendPerfPoorCustService;
                OnGetVendPerfPoorCustService(ref value);
                return value;
            }
            set
            {
                if (_VendPerfPoorCustService != value)
                {
                  OnVendPerfPoorCustServiceChanging(ref value);
                  ReportPropertyChanging("VendPerfPoorCustService");
                  _VendPerfPoorCustService = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VendPerfPoorCustService");
                  OnVendPerfPoorCustServiceChanged();
              }
            }
        }
        private short _VendPerfPoorCustService = 0;
        partial void OnGetVendPerfPoorCustService(ref short value);
        partial void OnVendPerfPoorCustServiceChanging(ref short value);
        partial void OnVendPerfPoorCustServiceChanged();
    
        /// <summary>
        /// There are no comments for VendPerfUpgradeSubstItem in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short VendPerfUpgradeSubstItem
        {
            get
            {
                short value = _VendPerfUpgradeSubstItem;
                OnGetVendPerfUpgradeSubstItem(ref value);
                return value;
            }
            set
            {
                if (_VendPerfUpgradeSubstItem != value)
                {
                  OnVendPerfUpgradeSubstItemChanging(ref value);
                  ReportPropertyChanging("VendPerfUpgradeSubstItem");
                  _VendPerfUpgradeSubstItem = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VendPerfUpgradeSubstItem");
                  OnVendPerfUpgradeSubstItemChanged();
              }
            }
        }
        private short _VendPerfUpgradeSubstItem = 0;
        partial void OnGetVendPerfUpgradeSubstItem(ref short value);
        partial void OnVendPerfUpgradeSubstItemChanging(ref short value);
        partial void OnVendPerfUpgradeSubstItemChanged();
    
        /// <summary>
        /// There are no comments for VendPerfUnauthSubstItem in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short VendPerfUnauthSubstItem
        {
            get
            {
                short value = _VendPerfUnauthSubstItem;
                OnGetVendPerfUnauthSubstItem(ref value);
                return value;
            }
            set
            {
                if (_VendPerfUnauthSubstItem != value)
                {
                  OnVendPerfUnauthSubstItemChanging(ref value);
                  ReportPropertyChanging("VendPerfUnauthSubstItem");
                  _VendPerfUnauthSubstItem = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VendPerfUnauthSubstItem");
                  OnVendPerfUnauthSubstItemChanged();
              }
            }
        }
        private short _VendPerfUnauthSubstItem = 0;
        partial void OnGetVendPerfUnauthSubstItem(ref short value);
        partial void OnVendPerfUnauthSubstItemChanging(ref short value);
        partial void OnVendPerfUnauthSubstItemChanged();
    
        /// <summary>
        /// There are no comments for WhseKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? WhseKey
        {
            get
            {
                int? value = _WhseKey;
                OnGetWhseKey(ref value);
                return value;
            }
            set
            {
                if (_WhseKey != value)
                {
                  OnWhseKeyChanging(ref value);
                  ReportPropertyChanging("WhseKey");
                  _WhseKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WhseKey");
                  OnWhseKeyChanged();
              }
            }
        }
        private int? _WhseKey;
        partial void OnGetWhseKey(ref int? value);
        partial void OnWhseKeyChanging(ref int? value);
        partial void OnWhseKeyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ReceiverLog in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "ReceiverLog_Receiver", "ReceiverLog")]
        public virtual ReceiverLog ReceiverLog
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ReceiverLog>("Net4Sage.DataAccessModel.ReceiverLog_Receiver", "ReceiverLog").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ReceiverLog>("Net4Sage.DataAccessModel.ReceiverLog_Receiver", "ReceiverLog").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for ReceiverLog in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ReceiverLog> ReceiverLogReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ReceiverLog>("Net4Sage.DataAccessModel.ReceiverLog_Receiver", "ReceiverLog");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<ReceiverLog>("Net4Sage.DataAccessModel.ReceiverLog_Receiver", "ReceiverLog", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ReceiverLog>("Net4Sage.DataAccessModel.ReceiverLog_Receiver", "ReceiverLog").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.VendPmt in the schema.
    /// </summary>
    /// <KeyProperties>
    /// VendPmtKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="VendPmt")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VendPmt : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new VendPmt object.
        /// </summary>
        /// <param name="vendPmtKey">Initial value of VendPmtKey.</param>
        /// <param name="batchKey">Initial value of BatchKey.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="createType">Initial value of CreateType.</param>
        /// <param name="currExchRate">Initial value of CurrExchRate.</param>
        /// <param name="currID">Initial value of CurrID.</param>
        /// <param name="discTakenAmt">Initial value of DiscTakenAmt.</param>
        /// <param name="guarntdExchRate">Initial value of GuarntdExchRate.</param>
        /// <param name="postDate">Initial value of PostDate.</param>
        /// <param name="revrsStatus">Initial value of RevrsStatus.</param>
        /// <param name="tranAmt">Initial value of TranAmt.</param>
        /// <param name="tranAmtHC">Initial value of TranAmtHC.</param>
        /// <param name="tranDate">Initial value of TranDate.</param>
        /// <param name="tranID">Initial value of TranID.</param>
        /// <param name="tranNo">Initial value of TranNo.</param>
        /// <param name="tranType">Initial value of TranType.</param>
        /// <param name="unappliedAmt">Initial value of UnappliedAmt.</param>
        /// <param name="unappliedAmtHC">Initial value of UnappliedAmtHC.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        /// <param name="vendClassKey">Initial value of VendClassKey.</param>
        /// <param name="vendKey">Initial value of VendKey.</param>
        /// <param name="vendPmtMethKey">Initial value of VendPmtMethKey.</param>
        public static VendPmt CreateVendPmt(int vendPmtKey, int batchKey, string companyID, short createType, double currExchRate, string currID, decimal discTakenAmt, short guarntdExchRate, global::System.DateTime postDate, short revrsStatus, decimal tranAmt, decimal tranAmtHC, global::System.DateTime tranDate, string tranID, string tranNo, int tranType, decimal unappliedAmt, decimal unappliedAmtHC, int updateCounter, int vendClassKey, int vendKey, int vendPmtMethKey)
        {
            VendPmt vendPmt = new VendPmt();
            vendPmt.VendPmtKey = vendPmtKey;
            vendPmt.BatchKey = batchKey;
            vendPmt.CompanyID = companyID;
            vendPmt.CreateType = createType;
            vendPmt.CurrExchRate = currExchRate;
            vendPmt.CurrID = currID;
            vendPmt.DiscTakenAmt = discTakenAmt;
            vendPmt.GuarntdExchRate = guarntdExchRate;
            vendPmt.PostDate = postDate;
            vendPmt.RevrsStatus = revrsStatus;
            vendPmt.TranAmt = tranAmt;
            vendPmt.TranAmtHC = tranAmtHC;
            vendPmt.TranDate = tranDate;
            vendPmt.TranID = tranID;
            vendPmt.TranNo = tranNo;
            vendPmt.TranType = tranType;
            vendPmt.UnappliedAmt = unappliedAmt;
            vendPmt.UnappliedAmtHC = unappliedAmtHC;
            vendPmt.UpdateCounter = updateCounter;
            vendPmt.VendClassKey = vendClassKey;
            vendPmt.VendKey = vendKey;
            vendPmt.VendPmtMethKey = vendPmtMethKey;
            return vendPmt;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for VendPmtKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int VendPmtKey
        {
            get
            {
                int value = _VendPmtKey;
                OnGetVendPmtKey(ref value);
                return value;
            }
            set
            {
                if (_VendPmtKey != value)
                {
                  OnVendPmtKeyChanging(ref value);
                  ReportPropertyChanging("VendPmtKey");
                  _VendPmtKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VendPmtKey");
                  OnVendPmtKeyChanged();
              }
            }
        }
        private int _VendPmtKey;
        partial void OnGetVendPmtKey(ref int value);
        partial void OnVendPmtKeyChanging(ref int value);
        partial void OnVendPmtKeyChanged();
    
        /// <summary>
        /// There are no comments for AddrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? AddrKey
        {
            get
            {
                int? value = _AddrKey;
                OnGetAddrKey(ref value);
                return value;
            }
            set
            {
                if (_AddrKey != value)
                {
                  OnAddrKeyChanging(ref value);
                  ReportPropertyChanging("AddrKey");
                  _AddrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AddrKey");
                  OnAddrKeyChanged();
              }
            }
        }
        private int? _AddrKey;
        partial void OnGetAddrKey(ref int? value);
        partial void OnAddrKeyChanging(ref int? value);
        partial void OnAddrKeyChanged();
    
        /// <summary>
        /// There are no comments for BatchKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int BatchKey
        {
            get
            {
                int value = _BatchKey;
                OnGetBatchKey(ref value);
                return value;
            }
            set
            {
                if (_BatchKey != value)
                {
                  OnBatchKeyChanging(ref value);
                  ReportPropertyChanging("BatchKey");
                  _BatchKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BatchKey");
                  OnBatchKeyChanged();
              }
            }
        }
        private int _BatchKey;
        partial void OnGetBatchKey(ref int value);
        partial void OnBatchKeyChanging(ref int value);
        partial void OnBatchKeyChanged();
    
        /// <summary>
        /// There are no comments for CashAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CashAcctKey
        {
            get
            {
                int? value = _CashAcctKey;
                OnGetCashAcctKey(ref value);
                return value;
            }
            set
            {
                if (_CashAcctKey != value)
                {
                  OnCashAcctKeyChanging(ref value);
                  ReportPropertyChanging("CashAcctKey");
                  _CashAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CashAcctKey");
                  OnCashAcctKeyChanged();
              }
            }
        }
        private int? _CashAcctKey;
        partial void OnGetCashAcctKey(ref int? value);
        partial void OnCashAcctKeyChanging(ref int? value);
        partial void OnCashAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for CashTranKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CashTranKey
        {
            get
            {
                int? value = _CashTranKey;
                OnGetCashTranKey(ref value);
                return value;
            }
            set
            {
                if (_CashTranKey != value)
                {
                  OnCashTranKeyChanging(ref value);
                  ReportPropertyChanging("CashTranKey");
                  _CashTranKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CashTranKey");
                  OnCashTranKeyChanged();
              }
            }
        }
        private int? _CashTranKey;
        partial void OnGetCashTranKey(ref int? value);
        partial void OnCashTranKeyChanging(ref int? value);
        partial void OnCashTranKeyChanged();
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for CreateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CreateDate
        {
            get
            {
                global::System.DateTime? value = _CreateDate;
                OnGetCreateDate(ref value);
                return value;
            }
            set
            {
                if (_CreateDate != value)
                {
                  OnCreateDateChanging(ref value);
                  ReportPropertyChanging("CreateDate");
                  _CreateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateDate");
                  OnCreateDateChanged();
              }
            }
        }
        private global::System.DateTime? _CreateDate;
        partial void OnGetCreateDate(ref global::System.DateTime? value);
        partial void OnCreateDateChanging(ref global::System.DateTime? value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// There are no comments for CreateType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CreateType
        {
            get
            {
                short value = _CreateType;
                OnGetCreateType(ref value);
                return value;
            }
            set
            {
                if (_CreateType != value)
                {
                  OnCreateTypeChanging(ref value);
                  ReportPropertyChanging("CreateType");
                  _CreateType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateType");
                  OnCreateTypeChanged();
              }
            }
        }
        private short _CreateType = 0;
        partial void OnGetCreateType(ref short value);
        partial void OnCreateTypeChanging(ref short value);
        partial void OnCreateTypeChanged();
    
        /// <summary>
        /// There are no comments for CreateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CreateUserID
        {
            get
            {
                string value = _CreateUserID;
                OnGetCreateUserID(ref value);
                return value;
            }
            set
            {
                if (_CreateUserID != value)
                {
                  OnCreateUserIDChanging(ref value);
                  ReportPropertyChanging("CreateUserID");
                  _CreateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CreateUserID");
                  OnCreateUserIDChanged();
              }
            }
        }
        private string _CreateUserID;
        partial void OnGetCreateUserID(ref string value);
        partial void OnCreateUserIDChanging(ref string value);
        partial void OnCreateUserIDChanged();
    
        /// <summary>
        /// There are no comments for CurrExchRate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual double CurrExchRate
        {
            get
            {
                double value = _CurrExchRate;
                OnGetCurrExchRate(ref value);
                return value;
            }
            set
            {
                if (_CurrExchRate != value)
                {
                  OnCurrExchRateChanging(ref value);
                  ReportPropertyChanging("CurrExchRate");
                  _CurrExchRate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CurrExchRate");
                  OnCurrExchRateChanged();
              }
            }
        }
        private double _CurrExchRate = 1;
        partial void OnGetCurrExchRate(ref double value);
        partial void OnCurrExchRateChanging(ref double value);
        partial void OnCurrExchRateChanged();
    
        /// <summary>
        /// There are no comments for CurrExchSchdKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CurrExchSchdKey
        {
            get
            {
                int? value = _CurrExchSchdKey;
                OnGetCurrExchSchdKey(ref value);
                return value;
            }
            set
            {
                if (_CurrExchSchdKey != value)
                {
                  OnCurrExchSchdKeyChanging(ref value);
                  ReportPropertyChanging("CurrExchSchdKey");
                  _CurrExchSchdKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CurrExchSchdKey");
                  OnCurrExchSchdKeyChanged();
              }
            }
        }
        private int? _CurrExchSchdKey;
        partial void OnGetCurrExchSchdKey(ref int? value);
        partial void OnCurrExchSchdKeyChanging(ref int? value);
        partial void OnCurrExchSchdKeyChanged();
    
        /// <summary>
        /// There are no comments for CurrID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CurrID
        {
            get
            {
                string value = _CurrID;
                OnGetCurrID(ref value);
                return value;
            }
            set
            {
                if (_CurrID != value)
                {
                  OnCurrIDChanging(ref value);
                  ReportPropertyChanging("CurrID");
                  _CurrID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CurrID");
                  OnCurrIDChanged();
              }
            }
        }
        private string _CurrID;
        partial void OnGetCurrID(ref string value);
        partial void OnCurrIDChanging(ref string value);
        partial void OnCurrIDChanged();
    
        /// <summary>
        /// There are no comments for DiscTakenAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal DiscTakenAmt
        {
            get
            {
                decimal value = _DiscTakenAmt;
                OnGetDiscTakenAmt(ref value);
                return value;
            }
            set
            {
                if (_DiscTakenAmt != value)
                {
                  OnDiscTakenAmtChanging(ref value);
                  ReportPropertyChanging("DiscTakenAmt");
                  _DiscTakenAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DiscTakenAmt");
                  OnDiscTakenAmtChanged();
              }
            }
        }
        private decimal _DiscTakenAmt = 0m;
        partial void OnGetDiscTakenAmt(ref decimal value);
        partial void OnDiscTakenAmtChanging(ref decimal value);
        partial void OnDiscTakenAmtChanged();
    
        /// <summary>
        /// There are no comments for GuarntdExchRate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short GuarntdExchRate
        {
            get
            {
                short value = _GuarntdExchRate;
                OnGetGuarntdExchRate(ref value);
                return value;
            }
            set
            {
                if (_GuarntdExchRate != value)
                {
                  OnGuarntdExchRateChanging(ref value);
                  ReportPropertyChanging("GuarntdExchRate");
                  _GuarntdExchRate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("GuarntdExchRate");
                  OnGuarntdExchRateChanged();
              }
            }
        }
        private short _GuarntdExchRate = 0;
        partial void OnGetGuarntdExchRate(ref short value);
        partial void OnGuarntdExchRateChanging(ref short value);
        partial void OnGuarntdExchRateChanged();
    
        /// <summary>
        /// There are no comments for ImportLogKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ImportLogKey
        {
            get
            {
                int? value = _ImportLogKey;
                OnGetImportLogKey(ref value);
                return value;
            }
            set
            {
                if (_ImportLogKey != value)
                {
                  OnImportLogKeyChanging(ref value);
                  ReportPropertyChanging("ImportLogKey");
                  _ImportLogKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ImportLogKey");
                  OnImportLogKeyChanged();
              }
            }
        }
        private int? _ImportLogKey;
        partial void OnGetImportLogKey(ref int? value);
        partial void OnImportLogKeyChanging(ref int? value);
        partial void OnImportLogKeyChanged();
    
        /// <summary>
        /// There are no comments for NextApplEntryNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? NextApplEntryNo
        {
            get
            {
                int? value = _NextApplEntryNo;
                OnGetNextApplEntryNo(ref value);
                return value;
            }
            set
            {
                if (_NextApplEntryNo != value)
                {
                  OnNextApplEntryNoChanging(ref value);
                  ReportPropertyChanging("NextApplEntryNo");
                  _NextApplEntryNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NextApplEntryNo");
                  OnNextApplEntryNoChanged();
              }
            }
        }
        private int? _NextApplEntryNo = 1;
        partial void OnGetNextApplEntryNo(ref int? value);
        partial void OnNextApplEntryNoChanging(ref int? value);
        partial void OnNextApplEntryNoChanged();
    
        /// <summary>
        /// There are no comments for POKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? POKey
        {
            get
            {
                int? value = _POKey;
                OnGetPOKey(ref value);
                return value;
            }
            set
            {
                if (_POKey != value)
                {
                  OnPOKeyChanging(ref value);
                  ReportPropertyChanging("POKey");
                  _POKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("POKey");
                  OnPOKeyChanged();
              }
            }
        }
        private int? _POKey;
        partial void OnGetPOKey(ref int? value);
        partial void OnPOKeyChanging(ref int? value);
        partial void OnPOKeyChanged();
    
        /// <summary>
        /// There are no comments for PostDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime PostDate
        {
            get
            {
                global::System.DateTime value = _PostDate;
                OnGetPostDate(ref value);
                return value;
            }
            set
            {
                if (_PostDate != value)
                {
                  OnPostDateChanging(ref value);
                  ReportPropertyChanging("PostDate");
                  _PostDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PostDate");
                  OnPostDateChanged();
              }
            }
        }
        private global::System.DateTime _PostDate;
        partial void OnGetPostDate(ref global::System.DateTime value);
        partial void OnPostDateChanging(ref global::System.DateTime value);
        partial void OnPostDateChanged();
    
        /// <summary>
        /// There are no comments for PrepaidVendInvcNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PrepaidVendInvcNo
        {
            get
            {
                string value = _PrepaidVendInvcNo;
                OnGetPrepaidVendInvcNo(ref value);
                return value;
            }
            set
            {
                if (_PrepaidVendInvcNo != value)
                {
                  OnPrepaidVendInvcNoChanging(ref value);
                  ReportPropertyChanging("PrepaidVendInvcNo");
                  _PrepaidVendInvcNo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PrepaidVendInvcNo");
                  OnPrepaidVendInvcNoChanged();
              }
            }
        }
        private string _PrepaidVendInvcNo;
        partial void OnGetPrepaidVendInvcNo(ref string value);
        partial void OnPrepaidVendInvcNoChanging(ref string value);
        partial void OnPrepaidVendInvcNoChanged();
    
        /// <summary>
        /// There are no comments for RevrsStatus in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short RevrsStatus
        {
            get
            {
                short value = _RevrsStatus;
                OnGetRevrsStatus(ref value);
                return value;
            }
            set
            {
                if (_RevrsStatus != value)
                {
                  OnRevrsStatusChanging(ref value);
                  ReportPropertyChanging("RevrsStatus");
                  _RevrsStatus = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RevrsStatus");
                  OnRevrsStatusChanged();
              }
            }
        }
        private short _RevrsStatus = 0;
        partial void OnGetRevrsStatus(ref short value);
        partial void OnRevrsStatusChanging(ref short value);
        partial void OnRevrsStatusChanged();
    
        /// <summary>
        /// There are no comments for RevVendPmtKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? RevVendPmtKey
        {
            get
            {
                int? value = _RevVendPmtKey;
                OnGetRevVendPmtKey(ref value);
                return value;
            }
            set
            {
                if (_RevVendPmtKey != value)
                {
                  OnRevVendPmtKeyChanging(ref value);
                  ReportPropertyChanging("RevVendPmtKey");
                  _RevVendPmtKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RevVendPmtKey");
                  OnRevVendPmtKeyChanged();
              }
            }
        }
        private int? _RevVendPmtKey;
        partial void OnGetRevVendPmtKey(ref int? value);
        partial void OnRevVendPmtKeyChanging(ref int? value);
        partial void OnRevVendPmtKeyChanged();
    
        /// <summary>
        /// There are no comments for TranAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal TranAmt
        {
            get
            {
                decimal value = _TranAmt;
                OnGetTranAmt(ref value);
                return value;
            }
            set
            {
                if (_TranAmt != value)
                {
                  OnTranAmtChanging(ref value);
                  ReportPropertyChanging("TranAmt");
                  _TranAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranAmt");
                  OnTranAmtChanged();
              }
            }
        }
        private decimal _TranAmt = 0m;
        partial void OnGetTranAmt(ref decimal value);
        partial void OnTranAmtChanging(ref decimal value);
        partial void OnTranAmtChanged();
    
        /// <summary>
        /// There are no comments for TranAmtHC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal TranAmtHC
        {
            get
            {
                decimal value = _TranAmtHC;
                OnGetTranAmtHC(ref value);
                return value;
            }
            set
            {
                if (_TranAmtHC != value)
                {
                  OnTranAmtHCChanging(ref value);
                  ReportPropertyChanging("TranAmtHC");
                  _TranAmtHC = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranAmtHC");
                  OnTranAmtHCChanged();
              }
            }
        }
        private decimal _TranAmtHC = 0m;
        partial void OnGetTranAmtHC(ref decimal value);
        partial void OnTranAmtHCChanging(ref decimal value);
        partial void OnTranAmtHCChanged();
    
        /// <summary>
        /// There are no comments for TranCmnt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string TranCmnt
        {
            get
            {
                string value = _TranCmnt;
                OnGetTranCmnt(ref value);
                return value;
            }
            set
            {
                if (_TranCmnt != value)
                {
                  OnTranCmntChanging(ref value);
                  ReportPropertyChanging("TranCmnt");
                  _TranCmnt = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TranCmnt");
                  OnTranCmntChanged();
              }
            }
        }
        private string _TranCmnt;
        partial void OnGetTranCmnt(ref string value);
        partial void OnTranCmntChanging(ref string value);
        partial void OnTranCmntChanged();
    
        /// <summary>
        /// There are no comments for TranDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime TranDate
        {
            get
            {
                global::System.DateTime value = _TranDate;
                OnGetTranDate(ref value);
                return value;
            }
            set
            {
                if (_TranDate != value)
                {
                  OnTranDateChanging(ref value);
                  ReportPropertyChanging("TranDate");
                  _TranDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranDate");
                  OnTranDateChanged();
              }
            }
        }
        private global::System.DateTime _TranDate;
        partial void OnGetTranDate(ref global::System.DateTime value);
        partial void OnTranDateChanging(ref global::System.DateTime value);
        partial void OnTranDateChanged();
    
        /// <summary>
        /// There are no comments for TranID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string TranID
        {
            get
            {
                string value = _TranID;
                OnGetTranID(ref value);
                return value;
            }
            set
            {
                if (_TranID != value)
                {
                  OnTranIDChanging(ref value);
                  ReportPropertyChanging("TranID");
                  _TranID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TranID");
                  OnTranIDChanged();
              }
            }
        }
        private string _TranID;
        partial void OnGetTranID(ref string value);
        partial void OnTranIDChanging(ref string value);
        partial void OnTranIDChanged();
    
        /// <summary>
        /// There are no comments for TranNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string TranNo
        {
            get
            {
                string value = _TranNo;
                OnGetTranNo(ref value);
                return value;
            }
            set
            {
                if (_TranNo != value)
                {
                  OnTranNoChanging(ref value);
                  ReportPropertyChanging("TranNo");
                  _TranNo = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TranNo");
                  OnTranNoChanged();
              }
            }
        }
        private string _TranNo;
        partial void OnGetTranNo(ref string value);
        partial void OnTranNoChanging(ref string value);
        partial void OnTranNoChanged();
    
        /// <summary>
        /// There are no comments for TranType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int TranType
        {
            get
            {
                int value = _TranType;
                OnGetTranType(ref value);
                return value;
            }
            set
            {
                if (_TranType != value)
                {
                  OnTranTypeChanging(ref value);
                  ReportPropertyChanging("TranType");
                  _TranType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranType");
                  OnTranTypeChanged();
              }
            }
        }
        private int _TranType;
        partial void OnGetTranType(ref int value);
        partial void OnTranTypeChanging(ref int value);
        partial void OnTranTypeChanged();
    
        /// <summary>
        /// There are no comments for UnappliedAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal UnappliedAmt
        {
            get
            {
                decimal value = _UnappliedAmt;
                OnGetUnappliedAmt(ref value);
                return value;
            }
            set
            {
                if (_UnappliedAmt != value)
                {
                  OnUnappliedAmtChanging(ref value);
                  ReportPropertyChanging("UnappliedAmt");
                  _UnappliedAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UnappliedAmt");
                  OnUnappliedAmtChanged();
              }
            }
        }
        private decimal _UnappliedAmt = 0m;
        partial void OnGetUnappliedAmt(ref decimal value);
        partial void OnUnappliedAmtChanging(ref decimal value);
        partial void OnUnappliedAmtChanged();
    
        /// <summary>
        /// There are no comments for UnappliedAmtHC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal UnappliedAmtHC
        {
            get
            {
                decimal value = _UnappliedAmtHC;
                OnGetUnappliedAmtHC(ref value);
                return value;
            }
            set
            {
                if (_UnappliedAmtHC != value)
                {
                  OnUnappliedAmtHCChanging(ref value);
                  ReportPropertyChanging("UnappliedAmtHC");
                  _UnappliedAmtHC = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UnappliedAmtHC");
                  OnUnappliedAmtHCChanged();
              }
            }
        }
        private decimal _UnappliedAmtHC = 0m;
        partial void OnGetUnappliedAmtHC(ref decimal value);
        partial void OnUnappliedAmtHCChanging(ref decimal value);
        partial void OnUnappliedAmtHCChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();
    
        /// <summary>
        /// There are no comments for UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? UpdateDate
        {
            get
            {
                global::System.DateTime? value = _UpdateDate;
                OnGetUpdateDate(ref value);
                return value;
            }
            set
            {
                if (_UpdateDate != value)
                {
                  OnUpdateDateChanging(ref value);
                  ReportPropertyChanging("UpdateDate");
                  _UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateDate");
                  OnUpdateDateChanged();
              }
            }
        }
        private global::System.DateTime? _UpdateDate;
        partial void OnGetUpdateDate(ref global::System.DateTime? value);
        partial void OnUpdateDateChanging(ref global::System.DateTime? value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// There are no comments for UpdateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UpdateUserID
        {
            get
            {
                string value = _UpdateUserID;
                OnGetUpdateUserID(ref value);
                return value;
            }
            set
            {
                if (_UpdateUserID != value)
                {
                  OnUpdateUserIDChanging(ref value);
                  ReportPropertyChanging("UpdateUserID");
                  _UpdateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UpdateUserID");
                  OnUpdateUserIDChanged();
              }
            }
        }
        private string _UpdateUserID;
        partial void OnGetUpdateUserID(ref string value);
        partial void OnUpdateUserIDChanging(ref string value);
        partial void OnUpdateUserIDChanged();
    
        /// <summary>
        /// There are no comments for VendClassKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int VendClassKey
        {
            get
            {
                int value = _VendClassKey;
                OnGetVendClassKey(ref value);
                return value;
            }
            set
            {
                if (_VendClassKey != value)
                {
                  OnVendClassKeyChanging(ref value);
                  ReportPropertyChanging("VendClassKey");
                  _VendClassKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VendClassKey");
                  OnVendClassKeyChanged();
              }
            }
        }
        private int _VendClassKey;
        partial void OnGetVendClassKey(ref int value);
        partial void OnVendClassKeyChanging(ref int value);
        partial void OnVendClassKeyChanged();
    
        /// <summary>
        /// There are no comments for VendKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int VendKey
        {
            get
            {
                int value = _VendKey;
                OnGetVendKey(ref value);
                return value;
            }
            set
            {
                if (_VendKey != value)
                {
                  OnVendKeyChanging(ref value);
                  ReportPropertyChanging("VendKey");
                  _VendKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VendKey");
                  OnVendKeyChanged();
              }
            }
        }
        private int _VendKey;
        partial void OnGetVendKey(ref int value);
        partial void OnVendKeyChanging(ref int value);
        partial void OnVendKeyChanged();
    
        /// <summary>
        /// There are no comments for VendPmtMethKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int VendPmtMethKey
        {
            get
            {
                int value = _VendPmtMethKey;
                OnGetVendPmtMethKey(ref value);
                return value;
            }
            set
            {
                if (_VendPmtMethKey != value)
                {
                  OnVendPmtMethKeyChanging(ref value);
                  ReportPropertyChanging("VendPmtMethKey");
                  _VendPmtMethKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VendPmtMethKey");
                  OnVendPmtMethKeyChanged();
              }
            }
        }
        private int _VendPmtMethKey;
        partial void OnGetVendPmtMethKey(ref int value);
        partial void OnVendPmtMethKeyChanging(ref int value);
        partial void OnVendPmtMethKeyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for VendorClass in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "VendorClass_VendPmt", "VendorClass")]
        public virtual VendorClass VendorClass
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<VendorClass>("Net4Sage.DataAccessModel.VendorClass_VendPmt", "VendorClass").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<VendorClass>("Net4Sage.DataAccessModel.VendorClass_VendPmt", "VendorClass").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for VendorClass in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VendorClass> VendorClassReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<VendorClass>("Net4Sage.DataAccessModel.VendorClass_VendPmt", "VendorClass");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<VendorClass>("Net4Sage.DataAccessModel.VendorClass_VendPmt", "VendorClass", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<VendorClass>("Net4Sage.DataAccessModel.VendorClass_VendPmt", "VendorClass").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Vendor in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Vendor_VendPmt", "Vendor")]
        public virtual Vendor Vendor
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Vendor>("Net4Sage.DataAccessModel.Vendor_VendPmt", "Vendor").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Vendor>("Net4Sage.DataAccessModel.Vendor_VendPmt", "Vendor").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Vendor in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Vendor> VendorReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Vendor>("Net4Sage.DataAccessModel.Vendor_VendPmt", "Vendor");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Vendor>("Net4Sage.DataAccessModel.Vendor_VendPmt", "Vendor", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Vendor>("Net4Sage.DataAccessModel.Vendor_VendPmt", "Vendor").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.VendPmtAppl in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ApplyFromPmtKey
    /// EntryNo
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="VendPmtAppl")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VendPmtAppl : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new VendPmtAppl object.
        /// </summary>
        /// <param name="applyFromPmtKey">Initial value of ApplyFromPmtKey.</param>
        /// <param name="entryNo">Initial value of EntryNo.</param>
        /// <param name="applyToTranDate">Initial value of ApplyToTranDate.</param>
        /// <param name="applyToTranID">Initial value of ApplyToTranID.</param>
        /// <param name="applyToVouchKey">Initial value of ApplyToVouchKey.</param>
        /// <param name="currExchRate">Initial value of CurrExchRate.</param>
        /// <param name="discTakenAmt">Initial value of DiscTakenAmt.</param>
        /// <param name="discTakenAmtHC">Initial value of DiscTakenAmtHC.</param>
        /// <param name="pmtAmt">Initial value of PmtAmt.</param>
        /// <param name="pmtAmtHC">Initial value of PmtAmtHC.</param>
        /// <param name="v1099Amt">Initial value of V1099Amt.</param>
        public static VendPmtAppl CreateVendPmtAppl(int applyFromPmtKey, int entryNo, global::System.DateTime applyToTranDate, string applyToTranID, int applyToVouchKey, double currExchRate, decimal discTakenAmt, decimal discTakenAmtHC, decimal pmtAmt, decimal pmtAmtHC, decimal v1099Amt)
        {
            VendPmtAppl vendPmtAppl = new VendPmtAppl();
            vendPmtAppl.ApplyFromPmtKey = applyFromPmtKey;
            vendPmtAppl.EntryNo = entryNo;
            vendPmtAppl.ApplyToTranDate = applyToTranDate;
            vendPmtAppl.ApplyToTranID = applyToTranID;
            vendPmtAppl.ApplyToVouchKey = applyToVouchKey;
            vendPmtAppl.CurrExchRate = currExchRate;
            vendPmtAppl.DiscTakenAmt = discTakenAmt;
            vendPmtAppl.DiscTakenAmtHC = discTakenAmtHC;
            vendPmtAppl.PmtAmt = pmtAmt;
            vendPmtAppl.PmtAmtHC = pmtAmtHC;
            vendPmtAppl.V1099Amt = v1099Amt;
            return vendPmtAppl;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ApplyFromPmtKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ApplyFromPmtKey
        {
            get
            {
                int value = _ApplyFromPmtKey;
                OnGetApplyFromPmtKey(ref value);
                return value;
            }
            set
            {
                if (_ApplyFromPmtKey != value)
                {
                  OnApplyFromPmtKeyChanging(ref value);
                  ReportPropertyChanging("ApplyFromPmtKey");
                  _ApplyFromPmtKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ApplyFromPmtKey");
                  OnApplyFromPmtKeyChanged();
              }
            }
        }
        private int _ApplyFromPmtKey;
        partial void OnGetApplyFromPmtKey(ref int value);
        partial void OnApplyFromPmtKeyChanging(ref int value);
        partial void OnApplyFromPmtKeyChanged();
    
        /// <summary>
        /// There are no comments for EntryNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int EntryNo
        {
            get
            {
                int value = _EntryNo;
                OnGetEntryNo(ref value);
                return value;
            }
            set
            {
                if (_EntryNo != value)
                {
                  OnEntryNoChanging(ref value);
                  ReportPropertyChanging("EntryNo");
                  _EntryNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EntryNo");
                  OnEntryNoChanged();
              }
            }
        }
        private int _EntryNo;
        partial void OnGetEntryNo(ref int value);
        partial void OnEntryNoChanging(ref int value);
        partial void OnEntryNoChanged();
    
        /// <summary>
        /// There are no comments for ApplyToTranDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime ApplyToTranDate
        {
            get
            {
                global::System.DateTime value = _ApplyToTranDate;
                OnGetApplyToTranDate(ref value);
                return value;
            }
            set
            {
                if (_ApplyToTranDate != value)
                {
                  OnApplyToTranDateChanging(ref value);
                  ReportPropertyChanging("ApplyToTranDate");
                  _ApplyToTranDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ApplyToTranDate");
                  OnApplyToTranDateChanged();
              }
            }
        }
        private global::System.DateTime _ApplyToTranDate;
        partial void OnGetApplyToTranDate(ref global::System.DateTime value);
        partial void OnApplyToTranDateChanging(ref global::System.DateTime value);
        partial void OnApplyToTranDateChanged();
    
        /// <summary>
        /// There are no comments for ApplyToTranID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string ApplyToTranID
        {
            get
            {
                string value = _ApplyToTranID;
                OnGetApplyToTranID(ref value);
                return value;
            }
            set
            {
                if (_ApplyToTranID != value)
                {
                  OnApplyToTranIDChanging(ref value);
                  ReportPropertyChanging("ApplyToTranID");
                  _ApplyToTranID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ApplyToTranID");
                  OnApplyToTranIDChanged();
              }
            }
        }
        private string _ApplyToTranID;
        partial void OnGetApplyToTranID(ref string value);
        partial void OnApplyToTranIDChanging(ref string value);
        partial void OnApplyToTranIDChanged();
    
        /// <summary>
        /// There are no comments for ApplyToVouchKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ApplyToVouchKey
        {
            get
            {
                int value = _ApplyToVouchKey;
                OnGetApplyToVouchKey(ref value);
                return value;
            }
            set
            {
                if (_ApplyToVouchKey != value)
                {
                  OnApplyToVouchKeyChanging(ref value);
                  ReportPropertyChanging("ApplyToVouchKey");
                  _ApplyToVouchKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ApplyToVouchKey");
                  OnApplyToVouchKeyChanged();
              }
            }
        }
        private int _ApplyToVouchKey;
        partial void OnGetApplyToVouchKey(ref int value);
        partial void OnApplyToVouchKeyChanging(ref int value);
        partial void OnApplyToVouchKeyChanged();
    
        /// <summary>
        /// There are no comments for BatchKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? BatchKey
        {
            get
            {
                int? value = _BatchKey;
                OnGetBatchKey(ref value);
                return value;
            }
            set
            {
                if (_BatchKey != value)
                {
                  OnBatchKeyChanging(ref value);
                  ReportPropertyChanging("BatchKey");
                  _BatchKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BatchKey");
                  OnBatchKeyChanged();
              }
            }
        }
        private int? _BatchKey;
        partial void OnGetBatchKey(ref int? value);
        partial void OnBatchKeyChanging(ref int? value);
        partial void OnBatchKeyChanged();
    
        /// <summary>
        /// There are no comments for CreateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CreateDate
        {
            get
            {
                global::System.DateTime? value = _CreateDate;
                OnGetCreateDate(ref value);
                return value;
            }
            set
            {
                if (_CreateDate != value)
                {
                  OnCreateDateChanging(ref value);
                  ReportPropertyChanging("CreateDate");
                  _CreateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateDate");
                  OnCreateDateChanged();
              }
            }
        }
        private global::System.DateTime? _CreateDate;
        partial void OnGetCreateDate(ref global::System.DateTime? value);
        partial void OnCreateDateChanging(ref global::System.DateTime? value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// There are no comments for CreateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CreateUserID
        {
            get
            {
                string value = _CreateUserID;
                OnGetCreateUserID(ref value);
                return value;
            }
            set
            {
                if (_CreateUserID != value)
                {
                  OnCreateUserIDChanging(ref value);
                  ReportPropertyChanging("CreateUserID");
                  _CreateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CreateUserID");
                  OnCreateUserIDChanged();
              }
            }
        }
        private string _CreateUserID;
        partial void OnGetCreateUserID(ref string value);
        partial void OnCreateUserIDChanging(ref string value);
        partial void OnCreateUserIDChanged();
    
        /// <summary>
        /// There are no comments for CurrExchRate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual double CurrExchRate
        {
            get
            {
                double value = _CurrExchRate;
                OnGetCurrExchRate(ref value);
                return value;
            }
            set
            {
                if (_CurrExchRate != value)
                {
                  OnCurrExchRateChanging(ref value);
                  ReportPropertyChanging("CurrExchRate");
                  _CurrExchRate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CurrExchRate");
                  OnCurrExchRateChanged();
              }
            }
        }
        private double _CurrExchRate = 1;
        partial void OnGetCurrExchRate(ref double value);
        partial void OnCurrExchRateChanging(ref double value);
        partial void OnCurrExchRateChanged();
    
        /// <summary>
        /// There are no comments for DiscTakenAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal DiscTakenAmt
        {
            get
            {
                decimal value = _DiscTakenAmt;
                OnGetDiscTakenAmt(ref value);
                return value;
            }
            set
            {
                if (_DiscTakenAmt != value)
                {
                  OnDiscTakenAmtChanging(ref value);
                  ReportPropertyChanging("DiscTakenAmt");
                  _DiscTakenAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DiscTakenAmt");
                  OnDiscTakenAmtChanged();
              }
            }
        }
        private decimal _DiscTakenAmt = 0m;
        partial void OnGetDiscTakenAmt(ref decimal value);
        partial void OnDiscTakenAmtChanging(ref decimal value);
        partial void OnDiscTakenAmtChanged();
    
        /// <summary>
        /// There are no comments for DiscTakenAmtHC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal DiscTakenAmtHC
        {
            get
            {
                decimal value = _DiscTakenAmtHC;
                OnGetDiscTakenAmtHC(ref value);
                return value;
            }
            set
            {
                if (_DiscTakenAmtHC != value)
                {
                  OnDiscTakenAmtHCChanging(ref value);
                  ReportPropertyChanging("DiscTakenAmtHC");
                  _DiscTakenAmtHC = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DiscTakenAmtHC");
                  OnDiscTakenAmtHCChanged();
              }
            }
        }
        private decimal _DiscTakenAmtHC = 0m;
        partial void OnGetDiscTakenAmtHC(ref decimal value);
        partial void OnDiscTakenAmtHCChanging(ref decimal value);
        partial void OnDiscTakenAmtHCChanged();
    
        /// <summary>
        /// There are no comments for PmtAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal PmtAmt
        {
            get
            {
                decimal value = _PmtAmt;
                OnGetPmtAmt(ref value);
                return value;
            }
            set
            {
                if (_PmtAmt != value)
                {
                  OnPmtAmtChanging(ref value);
                  ReportPropertyChanging("PmtAmt");
                  _PmtAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PmtAmt");
                  OnPmtAmtChanged();
              }
            }
        }
        private decimal _PmtAmt = 0m;
        partial void OnGetPmtAmt(ref decimal value);
        partial void OnPmtAmtChanging(ref decimal value);
        partial void OnPmtAmtChanged();
    
        /// <summary>
        /// There are no comments for PmtAmtHC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal PmtAmtHC
        {
            get
            {
                decimal value = _PmtAmtHC;
                OnGetPmtAmtHC(ref value);
                return value;
            }
            set
            {
                if (_PmtAmtHC != value)
                {
                  OnPmtAmtHCChanging(ref value);
                  ReportPropertyChanging("PmtAmtHC");
                  _PmtAmtHC = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PmtAmtHC");
                  OnPmtAmtHCChanged();
              }
            }
        }
        private decimal _PmtAmtHC = 0m;
        partial void OnGetPmtAmtHC(ref decimal value);
        partial void OnPmtAmtHCChanging(ref decimal value);
        partial void OnPmtAmtHCChanged();
    
        /// <summary>
        /// There are no comments for UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? UpdateDate
        {
            get
            {
                global::System.DateTime? value = _UpdateDate;
                OnGetUpdateDate(ref value);
                return value;
            }
            set
            {
                if (_UpdateDate != value)
                {
                  OnUpdateDateChanging(ref value);
                  ReportPropertyChanging("UpdateDate");
                  _UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateDate");
                  OnUpdateDateChanged();
              }
            }
        }
        private global::System.DateTime? _UpdateDate;
        partial void OnGetUpdateDate(ref global::System.DateTime? value);
        partial void OnUpdateDateChanging(ref global::System.DateTime? value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// There are no comments for UpdateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UpdateUserID
        {
            get
            {
                string value = _UpdateUserID;
                OnGetUpdateUserID(ref value);
                return value;
            }
            set
            {
                if (_UpdateUserID != value)
                {
                  OnUpdateUserIDChanging(ref value);
                  ReportPropertyChanging("UpdateUserID");
                  _UpdateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UpdateUserID");
                  OnUpdateUserIDChanged();
              }
            }
        }
        private string _UpdateUserID;
        partial void OnGetUpdateUserID(ref string value);
        partial void OnUpdateUserIDChanging(ref string value);
        partial void OnUpdateUserIDChanged();
    
        /// <summary>
        /// There are no comments for V1099Amt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal V1099Amt
        {
            get
            {
                decimal value = _V1099Amt;
                OnGetV1099Amt(ref value);
                return value;
            }
            set
            {
                if (_V1099Amt != value)
                {
                  OnV1099AmtChanging(ref value);
                  ReportPropertyChanging("V1099Amt");
                  _V1099Amt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("V1099Amt");
                  OnV1099AmtChanged();
              }
            }
        }
        private decimal _V1099Amt = 0m;
        partial void OnGetV1099Amt(ref decimal value);
        partial void OnV1099AmtChanging(ref decimal value);
        partial void OnV1099AmtChanged();
    
        /// <summary>
        /// There are no comments for V1099Box in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string V1099Box
        {
            get
            {
                string value = _V1099Box;
                OnGetV1099Box(ref value);
                return value;
            }
            set
            {
                if (_V1099Box != value)
                {
                  OnV1099BoxChanging(ref value);
                  ReportPropertyChanging("V1099Box");
                  _V1099Box = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("V1099Box");
                  OnV1099BoxChanged();
              }
            }
        }
        private string _V1099Box;
        partial void OnGetV1099Box(ref string value);
        partial void OnV1099BoxChanging(ref string value);
        partial void OnV1099BoxChanged();
    
        /// <summary>
        /// There are no comments for V1099Form in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual short? V1099Form
        {
            get
            {
                short? value = _V1099Form;
                OnGetV1099Form(ref value);
                return value;
            }
            set
            {
                if (_V1099Form != value)
                {
                  OnV1099FormChanging(ref value);
                  ReportPropertyChanging("V1099Form");
                  _V1099Form = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("V1099Form");
                  OnV1099FormChanged();
              }
            }
        }
        private short? _V1099Form;
        partial void OnGetV1099Form(ref short? value);
        partial void OnV1099FormChanging(ref short? value);
        partial void OnV1099FormChanged();
    
        /// <summary>
        /// There are no comments for Vend1099SubmitKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? Vend1099SubmitKey
        {
            get
            {
                int? value = _Vend1099SubmitKey;
                OnGetVend1099SubmitKey(ref value);
                return value;
            }
            set
            {
                if (_Vend1099SubmitKey != value)
                {
                  OnVend1099SubmitKeyChanging(ref value);
                  ReportPropertyChanging("Vend1099SubmitKey");
                  _Vend1099SubmitKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Vend1099SubmitKey");
                  OnVend1099SubmitKeyChanged();
              }
            }
        }
        private int? _Vend1099SubmitKey;
        partial void OnGetVend1099SubmitKey(ref int? value);
        partial void OnVend1099SubmitKeyChanging(ref int? value);
        partial void OnVend1099SubmitKeyChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.Voucher in the schema.
    /// </summary>
    /// <KeyProperties>
    /// VoucherKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="Voucher")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Voucher : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Voucher object.
        /// </summary>
        /// <param name="voucherKey">Initial value of VoucherKey.</param>
        /// <param name="applySeqNo">Initial value of ApplySeqNo.</param>
        /// <param name="balance">Initial value of Balance.</param>
        /// <param name="balanceHC">Initial value of BalanceHC.</param>
        /// <param name="batchKey">Initial value of BatchKey.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="createType">Initial value of CreateType.</param>
        /// <param name="currExchRate">Initial value of CurrExchRate.</param>
        /// <param name="currID">Initial value of CurrID.</param>
        /// <param name="discAmt">Initial value of DiscAmt.</param>
        /// <param name="discTakenAmt">Initial value of DiscTakenAmt.</param>
        /// <param name="dueDate">Initial value of DueDate.</param>
        /// <param name="freightAmt">Initial value of FreightAmt.</param>
        /// <param name="holdPmt">Initial value of HoldPmt.</param>
        /// <param name="isCCVoucher">Initial value of IsCCVoucher.</param>
        /// <param name="postDate">Initial value of PostDate.</param>
        /// <param name="purchAddrKey">Initial value of PurchAddrKey.</param>
        /// <param name="purchAmt">Initial value of PurchAmt.</param>
        /// <param name="purchVendAddrKey">Initial value of PurchVendAddrKey.</param>
        /// <param name="remitToAddrKey">Initial value of RemitToAddrKey.</param>
        /// <param name="remitToVendAddrKey">Initial value of RemitToVendAddrKey.</param>
        /// <param name="retntAmt">Initial value of RetntAmt.</param>
        /// <param name="separateChk">Initial value of SeparateChk.</param>
        /// <param name="status">Initial value of Status.</param>
        /// <param name="sTaxAmt">Initial value of STaxAmt.</param>
        /// <param name="tranAmt">Initial value of TranAmt.</param>
        /// <param name="tranAmtHC">Initial value of TranAmtHC.</param>
        /// <param name="tranDate">Initial value of TranDate.</param>
        /// <param name="tranNo">Initial value of TranNo.</param>
        /// <param name="tranType">Initial value of TranType.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        /// <param name="vendClassKey">Initial value of VendClassKey.</param>
        /// <param name="vendKey">Initial value of VendKey.</param>
        /// <param name="vouchNo">Initial value of VouchNo.</param>
        public static Voucher CreateVoucher(int voucherKey, int applySeqNo, decimal balance, decimal balanceHC, int batchKey, string companyID, short createType, double currExchRate, string currID, decimal discAmt, decimal discTakenAmt, global::System.DateTime dueDate, decimal freightAmt, short holdPmt, short isCCVoucher, global::System.DateTime postDate, int purchAddrKey, decimal purchAmt, int purchVendAddrKey, int remitToAddrKey, int remitToVendAddrKey, decimal retntAmt, short separateChk, short status, decimal sTaxAmt, decimal tranAmt, decimal tranAmtHC, global::System.DateTime tranDate, string tranNo, int tranType, int updateCounter, int vendClassKey, int vendKey, string vouchNo)
        {
            Voucher voucher = new Voucher();
            voucher.VoucherKey = voucherKey;
            voucher.ApplySeqNo = applySeqNo;
            voucher.Balance = balance;
            voucher.BalanceHC = balanceHC;
            voucher.BatchKey = batchKey;
            voucher.CompanyID = companyID;
            voucher.CreateType = createType;
            voucher.CurrExchRate = currExchRate;
            voucher.CurrID = currID;
            voucher.DiscAmt = discAmt;
            voucher.DiscTakenAmt = discTakenAmt;
            voucher.DueDate = dueDate;
            voucher.FreightAmt = freightAmt;
            voucher.HoldPmt = holdPmt;
            voucher.IsCCVoucher = isCCVoucher;
            voucher.PostDate = postDate;
            voucher.PurchAddrKey = purchAddrKey;
            voucher.PurchAmt = purchAmt;
            voucher.PurchVendAddrKey = purchVendAddrKey;
            voucher.RemitToAddrKey = remitToAddrKey;
            voucher.RemitToVendAddrKey = remitToVendAddrKey;
            voucher.RetntAmt = retntAmt;
            voucher.SeparateChk = separateChk;
            voucher.Status = status;
            voucher.STaxAmt = sTaxAmt;
            voucher.TranAmt = tranAmt;
            voucher.TranAmtHC = tranAmtHC;
            voucher.TranDate = tranDate;
            voucher.TranNo = tranNo;
            voucher.TranType = tranType;
            voucher.UpdateCounter = updateCounter;
            voucher.VendClassKey = vendClassKey;
            voucher.VendKey = vendKey;
            voucher.VouchNo = vouchNo;
            return voucher;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for VoucherKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int VoucherKey
        {
            get
            {
                int value = _VoucherKey;
                OnGetVoucherKey(ref value);
                return value;
            }
            set
            {
                if (_VoucherKey != value)
                {
                  OnVoucherKeyChanging(ref value);
                  ReportPropertyChanging("VoucherKey");
                  _VoucherKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VoucherKey");
                  OnVoucherKeyChanged();
              }
            }
        }
        private int _VoucherKey;
        partial void OnGetVoucherKey(ref int value);
        partial void OnVoucherKeyChanging(ref int value);
        partial void OnVoucherKeyChanged();
    
        /// <summary>
        /// There are no comments for ApplySeqNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ApplySeqNo
        {
            get
            {
                int value = _ApplySeqNo;
                OnGetApplySeqNo(ref value);
                return value;
            }
            set
            {
                if (_ApplySeqNo != value)
                {
                  OnApplySeqNoChanging(ref value);
                  ReportPropertyChanging("ApplySeqNo");
                  _ApplySeqNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ApplySeqNo");
                  OnApplySeqNoChanged();
              }
            }
        }
        private int _ApplySeqNo;
        partial void OnGetApplySeqNo(ref int value);
        partial void OnApplySeqNoChanging(ref int value);
        partial void OnApplySeqNoChanged();
    
        /// <summary>
        /// There are no comments for Balance in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal Balance
        {
            get
            {
                decimal value = _Balance;
                OnGetBalance(ref value);
                return value;
            }
            set
            {
                if (_Balance != value)
                {
                  OnBalanceChanging(ref value);
                  ReportPropertyChanging("Balance");
                  _Balance = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Balance");
                  OnBalanceChanged();
              }
            }
        }
        private decimal _Balance = 0m;
        partial void OnGetBalance(ref decimal value);
        partial void OnBalanceChanging(ref decimal value);
        partial void OnBalanceChanged();
    
        /// <summary>
        /// There are no comments for BalanceHC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal BalanceHC
        {
            get
            {
                decimal value = _BalanceHC;
                OnGetBalanceHC(ref value);
                return value;
            }
            set
            {
                if (_BalanceHC != value)
                {
                  OnBalanceHCChanging(ref value);
                  ReportPropertyChanging("BalanceHC");
                  _BalanceHC = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BalanceHC");
                  OnBalanceHCChanged();
              }
            }
        }
        private decimal _BalanceHC = 0m;
        partial void OnGetBalanceHC(ref decimal value);
        partial void OnBalanceHCChanging(ref decimal value);
        partial void OnBalanceHCChanged();
    
        /// <summary>
        /// There are no comments for BatchKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int BatchKey
        {
            get
            {
                int value = _BatchKey;
                OnGetBatchKey(ref value);
                return value;
            }
            set
            {
                if (_BatchKey != value)
                {
                  OnBatchKeyChanging(ref value);
                  ReportPropertyChanging("BatchKey");
                  _BatchKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BatchKey");
                  OnBatchKeyChanged();
              }
            }
        }
        private int _BatchKey;
        partial void OnGetBatchKey(ref int value);
        partial void OnBatchKeyChanging(ref int value);
        partial void OnBatchKeyChanged();
    
        /// <summary>
        /// There are no comments for CashAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CashAcctKey
        {
            get
            {
                int? value = _CashAcctKey;
                OnGetCashAcctKey(ref value);
                return value;
            }
            set
            {
                if (_CashAcctKey != value)
                {
                  OnCashAcctKeyChanging(ref value);
                  ReportPropertyChanging("CashAcctKey");
                  _CashAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CashAcctKey");
                  OnCashAcctKeyChanged();
              }
            }
        }
        private int? _CashAcctKey;
        partial void OnGetCashAcctKey(ref int? value);
        partial void OnCashAcctKeyChanging(ref int? value);
        partial void OnCashAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for CCGLAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CCGLAcctKey
        {
            get
            {
                int? value = _CCGLAcctKey;
                OnGetCCGLAcctKey(ref value);
                return value;
            }
            set
            {
                if (_CCGLAcctKey != value)
                {
                  OnCCGLAcctKeyChanging(ref value);
                  ReportPropertyChanging("CCGLAcctKey");
                  _CCGLAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CCGLAcctKey");
                  OnCCGLAcctKeyChanged();
              }
            }
        }
        private int? _CCGLAcctKey;
        partial void OnGetCCGLAcctKey(ref int? value);
        partial void OnCCGLAcctKeyChanging(ref int? value);
        partial void OnCCGLAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for CCVendorKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CCVendorKey
        {
            get
            {
                int? value = _CCVendorKey;
                OnGetCCVendorKey(ref value);
                return value;
            }
            set
            {
                if (_CCVendorKey != value)
                {
                  OnCCVendorKeyChanging(ref value);
                  ReportPropertyChanging("CCVendorKey");
                  _CCVendorKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CCVendorKey");
                  OnCCVendorKeyChanged();
              }
            }
        }
        private int? _CCVendorKey;
        partial void OnGetCCVendorKey(ref int? value);
        partial void OnCCVendorKeyChanging(ref int? value);
        partial void OnCCVendorKeyChanged();
    
        /// <summary>
        /// There are no comments for CCVoucherKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CCVoucherKey
        {
            get
            {
                int? value = _CCVoucherKey;
                OnGetCCVoucherKey(ref value);
                return value;
            }
            set
            {
                if (_CCVoucherKey != value)
                {
                  OnCCVoucherKeyChanging(ref value);
                  ReportPropertyChanging("CCVoucherKey");
                  _CCVoucherKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CCVoucherKey");
                  OnCCVoucherKeyChanged();
              }
            }
        }
        private int? _CCVoucherKey;
        partial void OnGetCCVoucherKey(ref int? value);
        partial void OnCCVoucherKeyChanging(ref int? value);
        partial void OnCCVoucherKeyChanged();
    
        /// <summary>
        /// There are no comments for ClosingPostDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? ClosingPostDate
        {
            get
            {
                global::System.DateTime? value = _ClosingPostDate;
                OnGetClosingPostDate(ref value);
                return value;
            }
            set
            {
                if (_ClosingPostDate != value)
                {
                  OnClosingPostDateChanging(ref value);
                  ReportPropertyChanging("ClosingPostDate");
                  _ClosingPostDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ClosingPostDate");
                  OnClosingPostDateChanged();
              }
            }
        }
        private global::System.DateTime? _ClosingPostDate;
        partial void OnGetClosingPostDate(ref global::System.DateTime? value);
        partial void OnClosingPostDateChanging(ref global::System.DateTime? value);
        partial void OnClosingPostDateChanged();
    
        /// <summary>
        /// There are no comments for ClosingTranDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? ClosingTranDate
        {
            get
            {
                global::System.DateTime? value = _ClosingTranDate;
                OnGetClosingTranDate(ref value);
                return value;
            }
            set
            {
                if (_ClosingTranDate != value)
                {
                  OnClosingTranDateChanging(ref value);
                  ReportPropertyChanging("ClosingTranDate");
                  _ClosingTranDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ClosingTranDate");
                  OnClosingTranDateChanged();
              }
            }
        }
        private global::System.DateTime? _ClosingTranDate;
        partial void OnGetClosingTranDate(ref global::System.DateTime? value);
        partial void OnClosingTranDateChanging(ref global::System.DateTime? value);
        partial void OnClosingTranDateChanged();
    
        /// <summary>
        /// There are no comments for CntctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CntctKey
        {
            get
            {
                int? value = _CntctKey;
                OnGetCntctKey(ref value);
                return value;
            }
            set
            {
                if (_CntctKey != value)
                {
                  OnCntctKeyChanging(ref value);
                  ReportPropertyChanging("CntctKey");
                  _CntctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CntctKey");
                  OnCntctKeyChanged();
              }
            }
        }
        private int? _CntctKey;
        partial void OnGetCntctKey(ref int? value);
        partial void OnCntctKeyChanging(ref int? value);
        partial void OnCntctKeyChanged();
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for CreateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CreateDate
        {
            get
            {
                global::System.DateTime? value = _CreateDate;
                OnGetCreateDate(ref value);
                return value;
            }
            set
            {
                if (_CreateDate != value)
                {
                  OnCreateDateChanging(ref value);
                  ReportPropertyChanging("CreateDate");
                  _CreateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateDate");
                  OnCreateDateChanged();
              }
            }
        }
        private global::System.DateTime? _CreateDate;
        partial void OnGetCreateDate(ref global::System.DateTime? value);
        partial void OnCreateDateChanging(ref global::System.DateTime? value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// There are no comments for CreateType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CreateType
        {
            get
            {
                short value = _CreateType;
                OnGetCreateType(ref value);
                return value;
            }
            set
            {
                if (_CreateType != value)
                {
                  OnCreateTypeChanging(ref value);
                  ReportPropertyChanging("CreateType");
                  _CreateType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateType");
                  OnCreateTypeChanged();
              }
            }
        }
        private short _CreateType = 0;
        partial void OnGetCreateType(ref short value);
        partial void OnCreateTypeChanging(ref short value);
        partial void OnCreateTypeChanged();
    
        /// <summary>
        /// There are no comments for CreateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CreateUserID
        {
            get
            {
                string value = _CreateUserID;
                OnGetCreateUserID(ref value);
                return value;
            }
            set
            {
                if (_CreateUserID != value)
                {
                  OnCreateUserIDChanging(ref value);
                  ReportPropertyChanging("CreateUserID");
                  _CreateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CreateUserID");
                  OnCreateUserIDChanged();
              }
            }
        }
        private string _CreateUserID;
        partial void OnGetCreateUserID(ref string value);
        partial void OnCreateUserIDChanging(ref string value);
        partial void OnCreateUserIDChanged();
    
        /// <summary>
        /// There are no comments for CurrExchRate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual double CurrExchRate
        {
            get
            {
                double value = _CurrExchRate;
                OnGetCurrExchRate(ref value);
                return value;
            }
            set
            {
                if (_CurrExchRate != value)
                {
                  OnCurrExchRateChanging(ref value);
                  ReportPropertyChanging("CurrExchRate");
                  _CurrExchRate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CurrExchRate");
                  OnCurrExchRateChanged();
              }
            }
        }
        private double _CurrExchRate = 1;
        partial void OnGetCurrExchRate(ref double value);
        partial void OnCurrExchRateChanging(ref double value);
        partial void OnCurrExchRateChanged();
    
        /// <summary>
        /// There are no comments for CurrExchSchdKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CurrExchSchdKey
        {
            get
            {
                int? value = _CurrExchSchdKey;
                OnGetCurrExchSchdKey(ref value);
                return value;
            }
            set
            {
                if (_CurrExchSchdKey != value)
                {
                  OnCurrExchSchdKeyChanging(ref value);
                  ReportPropertyChanging("CurrExchSchdKey");
                  _CurrExchSchdKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CurrExchSchdKey");
                  OnCurrExchSchdKeyChanged();
              }
            }
        }
        private int? _CurrExchSchdKey;
        partial void OnGetCurrExchSchdKey(ref int? value);
        partial void OnCurrExchSchdKeyChanging(ref int? value);
        partial void OnCurrExchSchdKeyChanged();
    
        /// <summary>
        /// There are no comments for CurrID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CurrID
        {
            get
            {
                string value = _CurrID;
                OnGetCurrID(ref value);
                return value;
            }
            set
            {
                if (_CurrID != value)
                {
                  OnCurrIDChanging(ref value);
                  ReportPropertyChanging("CurrID");
                  _CurrID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CurrID");
                  OnCurrIDChanged();
              }
            }
        }
        private string _CurrID;
        partial void OnGetCurrID(ref string value);
        partial void OnCurrIDChanging(ref string value);
        partial void OnCurrIDChanged();
    
        /// <summary>
        /// There are no comments for DiscAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal DiscAmt
        {
            get
            {
                decimal value = _DiscAmt;
                OnGetDiscAmt(ref value);
                return value;
            }
            set
            {
                if (_DiscAmt != value)
                {
                  OnDiscAmtChanging(ref value);
                  ReportPropertyChanging("DiscAmt");
                  _DiscAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DiscAmt");
                  OnDiscAmtChanged();
              }
            }
        }
        private decimal _DiscAmt = 0m;
        partial void OnGetDiscAmt(ref decimal value);
        partial void OnDiscAmtChanging(ref decimal value);
        partial void OnDiscAmtChanged();
    
        /// <summary>
        /// There are no comments for DiscTakenAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal DiscTakenAmt
        {
            get
            {
                decimal value = _DiscTakenAmt;
                OnGetDiscTakenAmt(ref value);
                return value;
            }
            set
            {
                if (_DiscTakenAmt != value)
                {
                  OnDiscTakenAmtChanging(ref value);
                  ReportPropertyChanging("DiscTakenAmt");
                  _DiscTakenAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DiscTakenAmt");
                  OnDiscTakenAmtChanged();
              }
            }
        }
        private decimal _DiscTakenAmt = 0m;
        partial void OnGetDiscTakenAmt(ref decimal value);
        partial void OnDiscTakenAmtChanging(ref decimal value);
        partial void OnDiscTakenAmtChanged();
    
        /// <summary>
        /// There are no comments for DiscDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? DiscDate
        {
            get
            {
                global::System.DateTime? value = _DiscDate;
                OnGetDiscDate(ref value);
                return value;
            }
            set
            {
                if (_DiscDate != value)
                {
                  OnDiscDateChanging(ref value);
                  ReportPropertyChanging("DiscDate");
                  _DiscDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DiscDate");
                  OnDiscDateChanged();
              }
            }
        }
        private global::System.DateTime? _DiscDate;
        partial void OnGetDiscDate(ref global::System.DateTime? value);
        partial void OnDiscDateChanging(ref global::System.DateTime? value);
        partial void OnDiscDateChanged();
    
        /// <summary>
        /// There are no comments for DueDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime DueDate
        {
            get
            {
                global::System.DateTime value = _DueDate;
                OnGetDueDate(ref value);
                return value;
            }
            set
            {
                if (_DueDate != value)
                {
                  OnDueDateChanging(ref value);
                  ReportPropertyChanging("DueDate");
                  _DueDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DueDate");
                  OnDueDateChanged();
              }
            }
        }
        private global::System.DateTime _DueDate;
        partial void OnGetDueDate(ref global::System.DateTime value);
        partial void OnDueDateChanging(ref global::System.DateTime value);
        partial void OnDueDateChanged();
    
        /// <summary>
        /// There are no comments for FOBKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? FOBKey
        {
            get
            {
                int? value = _FOBKey;
                OnGetFOBKey(ref value);
                return value;
            }
            set
            {
                if (_FOBKey != value)
                {
                  OnFOBKeyChanging(ref value);
                  ReportPropertyChanging("FOBKey");
                  _FOBKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FOBKey");
                  OnFOBKeyChanged();
              }
            }
        }
        private int? _FOBKey;
        partial void OnGetFOBKey(ref int? value);
        partial void OnFOBKeyChanging(ref int? value);
        partial void OnFOBKeyChanged();
    
        /// <summary>
        /// There are no comments for FreightAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal FreightAmt
        {
            get
            {
                decimal value = _FreightAmt;
                OnGetFreightAmt(ref value);
                return value;
            }
            set
            {
                if (_FreightAmt != value)
                {
                  OnFreightAmtChanging(ref value);
                  ReportPropertyChanging("FreightAmt");
                  _FreightAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FreightAmt");
                  OnFreightAmtChanged();
              }
            }
        }
        private decimal _FreightAmt = 0m;
        partial void OnGetFreightAmt(ref decimal value);
        partial void OnFreightAmtChanging(ref decimal value);
        partial void OnFreightAmtChanged();
    
        /// <summary>
        /// There are no comments for HoldPmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short HoldPmt
        {
            get
            {
                short value = _HoldPmt;
                OnGetHoldPmt(ref value);
                return value;
            }
            set
            {
                if (_HoldPmt != value)
                {
                  OnHoldPmtChanging(ref value);
                  ReportPropertyChanging("HoldPmt");
                  _HoldPmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("HoldPmt");
                  OnHoldPmtChanged();
              }
            }
        }
        private short _HoldPmt = 0;
        partial void OnGetHoldPmt(ref short value);
        partial void OnHoldPmtChanging(ref short value);
        partial void OnHoldPmtChanged();
    
        /// <summary>
        /// There are no comments for ImportLogKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ImportLogKey
        {
            get
            {
                int? value = _ImportLogKey;
                OnGetImportLogKey(ref value);
                return value;
            }
            set
            {
                if (_ImportLogKey != value)
                {
                  OnImportLogKeyChanging(ref value);
                  ReportPropertyChanging("ImportLogKey");
                  _ImportLogKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ImportLogKey");
                  OnImportLogKeyChanged();
              }
            }
        }
        private int? _ImportLogKey;
        partial void OnGetImportLogKey(ref int? value);
        partial void OnImportLogKeyChanging(ref int? value);
        partial void OnImportLogKeyChanged();
    
        /// <summary>
        /// There are no comments for InvcRcptDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? InvcRcptDate
        {
            get
            {
                global::System.DateTime? value = _InvcRcptDate;
                OnGetInvcRcptDate(ref value);
                return value;
            }
            set
            {
                if (_InvcRcptDate != value)
                {
                  OnInvcRcptDateChanging(ref value);
                  ReportPropertyChanging("InvcRcptDate");
                  _InvcRcptDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvcRcptDate");
                  OnInvcRcptDateChanged();
              }
            }
        }
        private global::System.DateTime? _InvcRcptDate;
        partial void OnGetInvcRcptDate(ref global::System.DateTime? value);
        partial void OnInvcRcptDateChanging(ref global::System.DateTime? value);
        partial void OnInvcRcptDateChanged();
    
        /// <summary>
        /// There are no comments for IsCCVoucher in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short IsCCVoucher
        {
            get
            {
                short value = _IsCCVoucher;
                OnGetIsCCVoucher(ref value);
                return value;
            }
            set
            {
                if (_IsCCVoucher != value)
                {
                  OnIsCCVoucherChanging(ref value);
                  ReportPropertyChanging("IsCCVoucher");
                  _IsCCVoucher = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IsCCVoucher");
                  OnIsCCVoucherChanged();
              }
            }
        }
        private short _IsCCVoucher = 0;
        partial void OnGetIsCCVoucher(ref short value);
        partial void OnIsCCVoucherChanging(ref short value);
        partial void OnIsCCVoucherChanged();
    
        /// <summary>
        /// There are no comments for NextApplEntryNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? NextApplEntryNo
        {
            get
            {
                int? value = _NextApplEntryNo;
                OnGetNextApplEntryNo(ref value);
                return value;
            }
            set
            {
                if (_NextApplEntryNo != value)
                {
                  OnNextApplEntryNoChanging(ref value);
                  ReportPropertyChanging("NextApplEntryNo");
                  _NextApplEntryNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NextApplEntryNo");
                  OnNextApplEntryNoChanged();
              }
            }
        }
        private int? _NextApplEntryNo = 1;
        partial void OnGetNextApplEntryNo(ref int? value);
        partial void OnNextApplEntryNoChanging(ref int? value);
        partial void OnNextApplEntryNoChanged();
    
        /// <summary>
        /// There are no comments for PmtTermsKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? PmtTermsKey
        {
            get
            {
                int? value = _PmtTermsKey;
                OnGetPmtTermsKey(ref value);
                return value;
            }
            set
            {
                if (_PmtTermsKey != value)
                {
                  OnPmtTermsKeyChanging(ref value);
                  ReportPropertyChanging("PmtTermsKey");
                  _PmtTermsKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PmtTermsKey");
                  OnPmtTermsKeyChanged();
              }
            }
        }
        private int? _PmtTermsKey;
        partial void OnGetPmtTermsKey(ref int? value);
        partial void OnPmtTermsKeyChanging(ref int? value);
        partial void OnPmtTermsKeyChanged();
    
        /// <summary>
        /// There are no comments for PostDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime PostDate
        {
            get
            {
                global::System.DateTime value = _PostDate;
                OnGetPostDate(ref value);
                return value;
            }
            set
            {
                if (_PostDate != value)
                {
                  OnPostDateChanging(ref value);
                  ReportPropertyChanging("PostDate");
                  _PostDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PostDate");
                  OnPostDateChanged();
              }
            }
        }
        private global::System.DateTime _PostDate;
        partial void OnGetPostDate(ref global::System.DateTime value);
        partial void OnPostDateChanging(ref global::System.DateTime value);
        partial void OnPostDateChanged();
    
        /// <summary>
        /// There are no comments for PurchAddrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int PurchAddrKey
        {
            get
            {
                int value = _PurchAddrKey;
                OnGetPurchAddrKey(ref value);
                return value;
            }
            set
            {
                if (_PurchAddrKey != value)
                {
                  OnPurchAddrKeyChanging(ref value);
                  ReportPropertyChanging("PurchAddrKey");
                  _PurchAddrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PurchAddrKey");
                  OnPurchAddrKeyChanged();
              }
            }
        }
        private int _PurchAddrKey;
        partial void OnGetPurchAddrKey(ref int value);
        partial void OnPurchAddrKeyChanging(ref int value);
        partial void OnPurchAddrKeyChanged();
    
        /// <summary>
        /// There are no comments for PurchAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal PurchAmt
        {
            get
            {
                decimal value = _PurchAmt;
                OnGetPurchAmt(ref value);
                return value;
            }
            set
            {
                if (_PurchAmt != value)
                {
                  OnPurchAmtChanging(ref value);
                  ReportPropertyChanging("PurchAmt");
                  _PurchAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PurchAmt");
                  OnPurchAmtChanged();
              }
            }
        }
        private decimal _PurchAmt = 0m;
        partial void OnGetPurchAmt(ref decimal value);
        partial void OnPurchAmtChanging(ref decimal value);
        partial void OnPurchAmtChanged();
    
        /// <summary>
        /// There are no comments for PurchVendAddrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int PurchVendAddrKey
        {
            get
            {
                int value = _PurchVendAddrKey;
                OnGetPurchVendAddrKey(ref value);
                return value;
            }
            set
            {
                if (_PurchVendAddrKey != value)
                {
                  OnPurchVendAddrKeyChanging(ref value);
                  ReportPropertyChanging("PurchVendAddrKey");
                  _PurchVendAddrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PurchVendAddrKey");
                  OnPurchVendAddrKeyChanged();
              }
            }
        }
        private int _PurchVendAddrKey;
        partial void OnGetPurchVendAddrKey(ref int value);
        partial void OnPurchVendAddrKeyChanging(ref int value);
        partial void OnPurchVendAddrKeyChanged();
    
        /// <summary>
        /// There are no comments for ReasonCodeKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ReasonCodeKey
        {
            get
            {
                int? value = _ReasonCodeKey;
                OnGetReasonCodeKey(ref value);
                return value;
            }
            set
            {
                if (_ReasonCodeKey != value)
                {
                  OnReasonCodeKeyChanging(ref value);
                  ReportPropertyChanging("ReasonCodeKey");
                  _ReasonCodeKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ReasonCodeKey");
                  OnReasonCodeKeyChanged();
              }
            }
        }
        private int? _ReasonCodeKey;
        partial void OnGetReasonCodeKey(ref int? value);
        partial void OnReasonCodeKeyChanging(ref int? value);
        partial void OnReasonCodeKeyChanged();
    
        /// <summary>
        /// There are no comments for RecurVouchKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? RecurVouchKey
        {
            get
            {
                int? value = _RecurVouchKey;
                OnGetRecurVouchKey(ref value);
                return value;
            }
            set
            {
                if (_RecurVouchKey != value)
                {
                  OnRecurVouchKeyChanging(ref value);
                  ReportPropertyChanging("RecurVouchKey");
                  _RecurVouchKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RecurVouchKey");
                  OnRecurVouchKeyChanged();
              }
            }
        }
        private int? _RecurVouchKey;
        partial void OnGetRecurVouchKey(ref int? value);
        partial void OnRecurVouchKeyChanging(ref int? value);
        partial void OnRecurVouchKeyChanged();
    
        /// <summary>
        /// There are no comments for RemitToAddrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int RemitToAddrKey
        {
            get
            {
                int value = _RemitToAddrKey;
                OnGetRemitToAddrKey(ref value);
                return value;
            }
            set
            {
                if (_RemitToAddrKey != value)
                {
                  OnRemitToAddrKeyChanging(ref value);
                  ReportPropertyChanging("RemitToAddrKey");
                  _RemitToAddrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RemitToAddrKey");
                  OnRemitToAddrKeyChanged();
              }
            }
        }
        private int _RemitToAddrKey;
        partial void OnGetRemitToAddrKey(ref int value);
        partial void OnRemitToAddrKeyChanging(ref int value);
        partial void OnRemitToAddrKeyChanged();
    
        /// <summary>
        /// There are no comments for RemitToVendAddrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int RemitToVendAddrKey
        {
            get
            {
                int value = _RemitToVendAddrKey;
                OnGetRemitToVendAddrKey(ref value);
                return value;
            }
            set
            {
                if (_RemitToVendAddrKey != value)
                {
                  OnRemitToVendAddrKeyChanging(ref value);
                  ReportPropertyChanging("RemitToVendAddrKey");
                  _RemitToVendAddrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RemitToVendAddrKey");
                  OnRemitToVendAddrKeyChanged();
              }
            }
        }
        private int _RemitToVendAddrKey;
        partial void OnGetRemitToVendAddrKey(ref int value);
        partial void OnRemitToVendAddrKeyChanging(ref int value);
        partial void OnRemitToVendAddrKeyChanged();
    
        /// <summary>
        /// There are no comments for RetntAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal RetntAmt
        {
            get
            {
                decimal value = _RetntAmt;
                OnGetRetntAmt(ref value);
                return value;
            }
            set
            {
                if (_RetntAmt != value)
                {
                  OnRetntAmtChanging(ref value);
                  ReportPropertyChanging("RetntAmt");
                  _RetntAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RetntAmt");
                  OnRetntAmtChanged();
              }
            }
        }
        private decimal _RetntAmt = 0m;
        partial void OnGetRetntAmt(ref decimal value);
        partial void OnRetntAmtChanging(ref decimal value);
        partial void OnRetntAmtChanged();
    
        /// <summary>
        /// There are no comments for SeparateChk in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short SeparateChk
        {
            get
            {
                short value = _SeparateChk;
                OnGetSeparateChk(ref value);
                return value;
            }
            set
            {
                if (_SeparateChk != value)
                {
                  OnSeparateChkChanging(ref value);
                  ReportPropertyChanging("SeparateChk");
                  _SeparateChk = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SeparateChk");
                  OnSeparateChkChanged();
              }
            }
        }
        private short _SeparateChk = 0;
        partial void OnGetSeparateChk(ref short value);
        partial void OnSeparateChkChanging(ref short value);
        partial void OnSeparateChkChanged();
    
        /// <summary>
        /// There are no comments for ShipMethKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ShipMethKey
        {
            get
            {
                int? value = _ShipMethKey;
                OnGetShipMethKey(ref value);
                return value;
            }
            set
            {
                if (_ShipMethKey != value)
                {
                  OnShipMethKeyChanging(ref value);
                  ReportPropertyChanging("ShipMethKey");
                  _ShipMethKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipMethKey");
                  OnShipMethKeyChanged();
              }
            }
        }
        private int? _ShipMethKey;
        partial void OnGetShipMethKey(ref int? value);
        partial void OnShipMethKeyChanging(ref int? value);
        partial void OnShipMethKeyChanged();
    
        /// <summary>
        /// There are no comments for ShipZoneKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ShipZoneKey
        {
            get
            {
                int? value = _ShipZoneKey;
                OnGetShipZoneKey(ref value);
                return value;
            }
            set
            {
                if (_ShipZoneKey != value)
                {
                  OnShipZoneKeyChanging(ref value);
                  ReportPropertyChanging("ShipZoneKey");
                  _ShipZoneKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipZoneKey");
                  OnShipZoneKeyChanged();
              }
            }
        }
        private int? _ShipZoneKey;
        partial void OnGetShipZoneKey(ref int? value);
        partial void OnShipZoneKeyChanging(ref int? value);
        partial void OnShipZoneKeyChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Status
        {
            get
            {
                short value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private short _Status = 1;
        partial void OnGetStatus(ref short value);
        partial void OnStatusChanging(ref short value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// There are no comments for STaxAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal STaxAmt
        {
            get
            {
                decimal value = _STaxAmt;
                OnGetSTaxAmt(ref value);
                return value;
            }
            set
            {
                if (_STaxAmt != value)
                {
                  OnSTaxAmtChanging(ref value);
                  ReportPropertyChanging("STaxAmt");
                  _STaxAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("STaxAmt");
                  OnSTaxAmtChanged();
              }
            }
        }
        private decimal _STaxAmt = 0m;
        partial void OnGetSTaxAmt(ref decimal value);
        partial void OnSTaxAmtChanging(ref decimal value);
        partial void OnSTaxAmtChanged();
    
        /// <summary>
        /// There are no comments for STaxTranKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? STaxTranKey
        {
            get
            {
                int? value = _STaxTranKey;
                OnGetSTaxTranKey(ref value);
                return value;
            }
            set
            {
                if (_STaxTranKey != value)
                {
                  OnSTaxTranKeyChanging(ref value);
                  ReportPropertyChanging("STaxTranKey");
                  _STaxTranKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("STaxTranKey");
                  OnSTaxTranKeyChanged();
              }
            }
        }
        private int? _STaxTranKey;
        partial void OnGetSTaxTranKey(ref int? value);
        partial void OnSTaxTranKeyChanging(ref int? value);
        partial void OnSTaxTranKeyChanged();
    
        /// <summary>
        /// There are no comments for TranAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal TranAmt
        {
            get
            {
                decimal value = _TranAmt;
                OnGetTranAmt(ref value);
                return value;
            }
            set
            {
                if (_TranAmt != value)
                {
                  OnTranAmtChanging(ref value);
                  ReportPropertyChanging("TranAmt");
                  _TranAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranAmt");
                  OnTranAmtChanged();
              }
            }
        }
        private decimal _TranAmt = 0m;
        partial void OnGetTranAmt(ref decimal value);
        partial void OnTranAmtChanging(ref decimal value);
        partial void OnTranAmtChanged();
    
        /// <summary>
        /// There are no comments for TranAmtHC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal TranAmtHC
        {
            get
            {
                decimal value = _TranAmtHC;
                OnGetTranAmtHC(ref value);
                return value;
            }
            set
            {
                if (_TranAmtHC != value)
                {
                  OnTranAmtHCChanging(ref value);
                  ReportPropertyChanging("TranAmtHC");
                  _TranAmtHC = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranAmtHC");
                  OnTranAmtHCChanged();
              }
            }
        }
        private decimal _TranAmtHC = 0m;
        partial void OnGetTranAmtHC(ref decimal value);
        partial void OnTranAmtHCChanging(ref decimal value);
        partial void OnTranAmtHCChanged();
    
        /// <summary>
        /// There are no comments for TranCmnt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string TranCmnt
        {
            get
            {
                string value = _TranCmnt;
                OnGetTranCmnt(ref value);
                return value;
            }
            set
            {
                if (_TranCmnt != value)
                {
                  OnTranCmntChanging(ref value);
                  ReportPropertyChanging("TranCmnt");
                  _TranCmnt = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TranCmnt");
                  OnTranCmntChanged();
              }
            }
        }
        private string _TranCmnt;
        partial void OnGetTranCmnt(ref string value);
        partial void OnTranCmntChanging(ref string value);
        partial void OnTranCmntChanged();
    
        /// <summary>
        /// There are no comments for TranDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime TranDate
        {
            get
            {
                global::System.DateTime value = _TranDate;
                OnGetTranDate(ref value);
                return value;
            }
            set
            {
                if (_TranDate != value)
                {
                  OnTranDateChanging(ref value);
                  ReportPropertyChanging("TranDate");
                  _TranDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranDate");
                  OnTranDateChanged();
              }
            }
        }
        private global::System.DateTime _TranDate;
        partial void OnGetTranDate(ref global::System.DateTime value);
        partial void OnTranDateChanging(ref global::System.DateTime value);
        partial void OnTranDateChanged();
    
        /// <summary>
        /// There are no comments for TranID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string TranID
        {
            get
            {
                string value = _TranID;
                OnGetTranID(ref value);
                return value;
            }
            set
            {
                if (_TranID != value)
                {
                  OnTranIDChanging(ref value);
                  ReportPropertyChanging("TranID");
                  _TranID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TranID");
                  OnTranIDChanged();
              }
            }
        }
        private string _TranID;
        partial void OnGetTranID(ref string value);
        partial void OnTranIDChanging(ref string value);
        partial void OnTranIDChanged();
    
        /// <summary>
        /// There are no comments for TranNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string TranNo
        {
            get
            {
                string value = _TranNo;
                OnGetTranNo(ref value);
                return value;
            }
            set
            {
                if (_TranNo != value)
                {
                  OnTranNoChanging(ref value);
                  ReportPropertyChanging("TranNo");
                  _TranNo = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TranNo");
                  OnTranNoChanged();
              }
            }
        }
        private string _TranNo;
        partial void OnGetTranNo(ref string value);
        partial void OnTranNoChanging(ref string value);
        partial void OnTranNoChanged();
    
        /// <summary>
        /// There are no comments for TranType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int TranType
        {
            get
            {
                int value = _TranType;
                OnGetTranType(ref value);
                return value;
            }
            set
            {
                if (_TranType != value)
                {
                  OnTranTypeChanging(ref value);
                  ReportPropertyChanging("TranType");
                  _TranType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranType");
                  OnTranTypeChanged();
              }
            }
        }
        private int _TranType;
        partial void OnGetTranType(ref int value);
        partial void OnTranTypeChanging(ref int value);
        partial void OnTranTypeChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();
    
        /// <summary>
        /// There are no comments for UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? UpdateDate
        {
            get
            {
                global::System.DateTime? value = _UpdateDate;
                OnGetUpdateDate(ref value);
                return value;
            }
            set
            {
                if (_UpdateDate != value)
                {
                  OnUpdateDateChanging(ref value);
                  ReportPropertyChanging("UpdateDate");
                  _UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateDate");
                  OnUpdateDateChanged();
              }
            }
        }
        private global::System.DateTime? _UpdateDate;
        partial void OnGetUpdateDate(ref global::System.DateTime? value);
        partial void OnUpdateDateChanging(ref global::System.DateTime? value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// There are no comments for UpdateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UpdateUserID
        {
            get
            {
                string value = _UpdateUserID;
                OnGetUpdateUserID(ref value);
                return value;
            }
            set
            {
                if (_UpdateUserID != value)
                {
                  OnUpdateUserIDChanging(ref value);
                  ReportPropertyChanging("UpdateUserID");
                  _UpdateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UpdateUserID");
                  OnUpdateUserIDChanged();
              }
            }
        }
        private string _UpdateUserID;
        partial void OnGetUpdateUserID(ref string value);
        partial void OnUpdateUserIDChanging(ref string value);
        partial void OnUpdateUserIDChanged();
    
        /// <summary>
        /// There are no comments for V1099Box in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string V1099Box
        {
            get
            {
                string value = _V1099Box;
                OnGetV1099Box(ref value);
                return value;
            }
            set
            {
                if (_V1099Box != value)
                {
                  OnV1099BoxChanging(ref value);
                  ReportPropertyChanging("V1099Box");
                  _V1099Box = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("V1099Box");
                  OnV1099BoxChanged();
              }
            }
        }
        private string _V1099Box;
        partial void OnGetV1099Box(ref string value);
        partial void OnV1099BoxChanging(ref string value);
        partial void OnV1099BoxChanged();
    
        /// <summary>
        /// There are no comments for V1099BoxText in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string V1099BoxText
        {
            get
            {
                string value = _V1099BoxText;
                OnGetV1099BoxText(ref value);
                return value;
            }
            set
            {
                if (_V1099BoxText != value)
                {
                  OnV1099BoxTextChanging(ref value);
                  ReportPropertyChanging("V1099BoxText");
                  _V1099BoxText = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("V1099BoxText");
                  OnV1099BoxTextChanged();
              }
            }
        }
        private string _V1099BoxText;
        partial void OnGetV1099BoxText(ref string value);
        partial void OnV1099BoxTextChanging(ref string value);
        partial void OnV1099BoxTextChanged();
    
        /// <summary>
        /// There are no comments for V1099Form in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual short? V1099Form
        {
            get
            {
                short? value = _V1099Form;
                OnGetV1099Form(ref value);
                return value;
            }
            set
            {
                if (_V1099Form != value)
                {
                  OnV1099FormChanging(ref value);
                  ReportPropertyChanging("V1099Form");
                  _V1099Form = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("V1099Form");
                  OnV1099FormChanged();
              }
            }
        }
        private short? _V1099Form;
        partial void OnGetV1099Form(ref short? value);
        partial void OnV1099FormChanging(ref short? value);
        partial void OnV1099FormChanged();
    
        /// <summary>
        /// There are no comments for VendClassKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int VendClassKey
        {
            get
            {
                int value = _VendClassKey;
                OnGetVendClassKey(ref value);
                return value;
            }
            set
            {
                if (_VendClassKey != value)
                {
                  OnVendClassKeyChanging(ref value);
                  ReportPropertyChanging("VendClassKey");
                  _VendClassKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VendClassKey");
                  OnVendClassKeyChanged();
              }
            }
        }
        private int _VendClassKey;
        partial void OnGetVendClassKey(ref int value);
        partial void OnVendClassKeyChanging(ref int value);
        partial void OnVendClassKeyChanged();
    
        /// <summary>
        /// There are no comments for VendKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int VendKey
        {
            get
            {
                int value = _VendKey;
                OnGetVendKey(ref value);
                return value;
            }
            set
            {
                if (_VendKey != value)
                {
                  OnVendKeyChanging(ref value);
                  ReportPropertyChanging("VendKey");
                  _VendKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VendKey");
                  OnVendKeyChanged();
              }
            }
        }
        private int _VendKey;
        partial void OnGetVendKey(ref int value);
        partial void OnVendKeyChanging(ref int value);
        partial void OnVendKeyChanged();
    
        /// <summary>
        /// There are no comments for VouchNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string VouchNo
        {
            get
            {
                string value = _VouchNo;
                OnGetVouchNo(ref value);
                return value;
            }
            set
            {
                if (_VouchNo != value)
                {
                  OnVouchNoChanging(ref value);
                  ReportPropertyChanging("VouchNo");
                  _VouchNo = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("VouchNo");
                  OnVouchNoChanged();
              }
            }
        }
        private string _VouchNo;
        partial void OnGetVouchNo(ref string value);
        partial void OnVouchNoChanging(ref string value);
        partial void OnVouchNoChanged();
    
        /// <summary>
        /// There are no comments for ContractKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ContractKey
        {
            get
            {
                int? value = _ContractKey;
                OnGetContractKey(ref value);
                return value;
            }
            set
            {
                if (_ContractKey != value)
                {
                  OnContractKeyChanging(ref value);
                  ReportPropertyChanging("ContractKey");
                  _ContractKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ContractKey");
                  OnContractKeyChanged();
              }
            }
        }
        private int? _ContractKey;
        partial void OnGetContractKey(ref int? value);
        partial void OnContractKeyChanging(ref int? value);
        partial void OnContractKeyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for VoucherAppls in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Voucher_VoucherAppl", "VoucherAppls")]
        public virtual EntityCollection<VoucherAppl> VoucherAppls
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<VoucherAppl>("Net4Sage.DataAccessModel.Voucher_VoucherAppl", "VoucherAppls");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<VoucherAppl>("Net4Sage.DataAccessModel.Voucher_VoucherAppl", "VoucherAppls", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Vendor in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Vendor_Voucher", "Vendor")]
        public virtual Vendor Vendor
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Vendor>("Net4Sage.DataAccessModel.Vendor_Voucher", "Vendor").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Vendor>("Net4Sage.DataAccessModel.Vendor_Voucher", "Vendor").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Vendor in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Vendor> VendorReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Vendor>("Net4Sage.DataAccessModel.Vendor_Voucher", "Vendor");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Vendor>("Net4Sage.DataAccessModel.Vendor_Voucher", "Vendor", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Vendor>("Net4Sage.DataAccessModel.Vendor_Voucher", "Vendor").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for VendorClass in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "VendorClass_Voucher", "VendorClass")]
        public virtual VendorClass VendorClass
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<VendorClass>("Net4Sage.DataAccessModel.VendorClass_Voucher", "VendorClass").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<VendorClass>("Net4Sage.DataAccessModel.VendorClass_Voucher", "VendorClass").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for VendorClass in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VendorClass> VendorClassReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<VendorClass>("Net4Sage.DataAccessModel.VendorClass_Voucher", "VendorClass");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<VendorClass>("Net4Sage.DataAccessModel.VendorClass_Voucher", "VendorClass", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<VendorClass>("Net4Sage.DataAccessModel.VendorClass_Voucher", "VendorClass").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.VoucherAppl in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ApplyToVoucherKey
    /// EntryNo
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="VoucherAppl")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VoucherAppl : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new VoucherAppl object.
        /// </summary>
        /// <param name="applyToVoucherKey">Initial value of ApplyToVoucherKey.</param>
        /// <param name="entryNo">Initial value of EntryNo.</param>
        /// <param name="applyFromTranDate">Initial value of ApplyFromTranDate.</param>
        /// <param name="applyFromTranID">Initial value of ApplyFromTranID.</param>
        /// <param name="batchKey">Initial value of BatchKey.</param>
        /// <param name="discTakenAmt">Initial value of DiscTakenAmt.</param>
        /// <param name="discTakenAmtHC">Initial value of DiscTakenAmtHC.</param>
        /// <param name="pmtAmt">Initial value of PmtAmt.</param>
        /// <param name="pmtAmtHC">Initial value of PmtAmtHC.</param>
        /// <param name="postDate">Initial value of PostDate.</param>
        public static VoucherAppl CreateVoucherAppl(int applyToVoucherKey, int entryNo, global::System.DateTime applyFromTranDate, string applyFromTranID, int batchKey, decimal discTakenAmt, decimal discTakenAmtHC, decimal pmtAmt, decimal pmtAmtHC, global::System.DateTime postDate)
        {
            VoucherAppl voucherAppl = new VoucherAppl();
            voucherAppl.ApplyToVoucherKey = applyToVoucherKey;
            voucherAppl.EntryNo = entryNo;
            voucherAppl.ApplyFromTranDate = applyFromTranDate;
            voucherAppl.ApplyFromTranID = applyFromTranID;
            voucherAppl.BatchKey = batchKey;
            voucherAppl.DiscTakenAmt = discTakenAmt;
            voucherAppl.DiscTakenAmtHC = discTakenAmtHC;
            voucherAppl.PmtAmt = pmtAmt;
            voucherAppl.PmtAmtHC = pmtAmtHC;
            voucherAppl.PostDate = postDate;
            return voucherAppl;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ApplyToVoucherKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ApplyToVoucherKey
        {
            get
            {
                int value = _ApplyToVoucherKey;
                OnGetApplyToVoucherKey(ref value);
                return value;
            }
            set
            {
                if (_ApplyToVoucherKey != value)
                {
                  OnApplyToVoucherKeyChanging(ref value);
                  ReportPropertyChanging("ApplyToVoucherKey");
                  _ApplyToVoucherKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ApplyToVoucherKey");
                  OnApplyToVoucherKeyChanged();
              }
            }
        }
        private int _ApplyToVoucherKey;
        partial void OnGetApplyToVoucherKey(ref int value);
        partial void OnApplyToVoucherKeyChanging(ref int value);
        partial void OnApplyToVoucherKeyChanged();
    
        /// <summary>
        /// There are no comments for EntryNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int EntryNo
        {
            get
            {
                int value = _EntryNo;
                OnGetEntryNo(ref value);
                return value;
            }
            set
            {
                if (_EntryNo != value)
                {
                  OnEntryNoChanging(ref value);
                  ReportPropertyChanging("EntryNo");
                  _EntryNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EntryNo");
                  OnEntryNoChanged();
              }
            }
        }
        private int _EntryNo;
        partial void OnGetEntryNo(ref int value);
        partial void OnEntryNoChanging(ref int value);
        partial void OnEntryNoChanged();
    
        /// <summary>
        /// There are no comments for ApplyFromPmtKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ApplyFromPmtKey
        {
            get
            {
                int? value = _ApplyFromPmtKey;
                OnGetApplyFromPmtKey(ref value);
                return value;
            }
            set
            {
                if (_ApplyFromPmtKey != value)
                {
                  OnApplyFromPmtKeyChanging(ref value);
                  ReportPropertyChanging("ApplyFromPmtKey");
                  _ApplyFromPmtKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ApplyFromPmtKey");
                  OnApplyFromPmtKeyChanged();
              }
            }
        }
        private int? _ApplyFromPmtKey;
        partial void OnGetApplyFromPmtKey(ref int? value);
        partial void OnApplyFromPmtKeyChanging(ref int? value);
        partial void OnApplyFromPmtKeyChanged();
    
        /// <summary>
        /// There are no comments for ApplyFromTranDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime ApplyFromTranDate
        {
            get
            {
                global::System.DateTime value = _ApplyFromTranDate;
                OnGetApplyFromTranDate(ref value);
                return value;
            }
            set
            {
                if (_ApplyFromTranDate != value)
                {
                  OnApplyFromTranDateChanging(ref value);
                  ReportPropertyChanging("ApplyFromTranDate");
                  _ApplyFromTranDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ApplyFromTranDate");
                  OnApplyFromTranDateChanged();
              }
            }
        }
        private global::System.DateTime _ApplyFromTranDate;
        partial void OnGetApplyFromTranDate(ref global::System.DateTime value);
        partial void OnApplyFromTranDateChanging(ref global::System.DateTime value);
        partial void OnApplyFromTranDateChanged();
    
        /// <summary>
        /// There are no comments for ApplyFromTranID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string ApplyFromTranID
        {
            get
            {
                string value = _ApplyFromTranID;
                OnGetApplyFromTranID(ref value);
                return value;
            }
            set
            {
                if (_ApplyFromTranID != value)
                {
                  OnApplyFromTranIDChanging(ref value);
                  ReportPropertyChanging("ApplyFromTranID");
                  _ApplyFromTranID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ApplyFromTranID");
                  OnApplyFromTranIDChanged();
              }
            }
        }
        private string _ApplyFromTranID;
        partial void OnGetApplyFromTranID(ref string value);
        partial void OnApplyFromTranIDChanging(ref string value);
        partial void OnApplyFromTranIDChanged();
    
        /// <summary>
        /// There are no comments for ApplyFromTranType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ApplyFromTranType
        {
            get
            {
                int? value = _ApplyFromTranType;
                OnGetApplyFromTranType(ref value);
                return value;
            }
            set
            {
                if (_ApplyFromTranType != value)
                {
                  OnApplyFromTranTypeChanging(ref value);
                  ReportPropertyChanging("ApplyFromTranType");
                  _ApplyFromTranType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ApplyFromTranType");
                  OnApplyFromTranTypeChanged();
              }
            }
        }
        private int? _ApplyFromTranType;
        partial void OnGetApplyFromTranType(ref int? value);
        partial void OnApplyFromTranTypeChanging(ref int? value);
        partial void OnApplyFromTranTypeChanged();
    
        /// <summary>
        /// There are no comments for ApplyFromVouchKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ApplyFromVouchKey
        {
            get
            {
                int? value = _ApplyFromVouchKey;
                OnGetApplyFromVouchKey(ref value);
                return value;
            }
            set
            {
                if (_ApplyFromVouchKey != value)
                {
                  OnApplyFromVouchKeyChanging(ref value);
                  ReportPropertyChanging("ApplyFromVouchKey");
                  _ApplyFromVouchKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ApplyFromVouchKey");
                  OnApplyFromVouchKeyChanged();
              }
            }
        }
        private int? _ApplyFromVouchKey;
        partial void OnGetApplyFromVouchKey(ref int? value);
        partial void OnApplyFromVouchKeyChanging(ref int? value);
        partial void OnApplyFromVouchKeyChanged();
    
        /// <summary>
        /// There are no comments for BatchKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int BatchKey
        {
            get
            {
                int value = _BatchKey;
                OnGetBatchKey(ref value);
                return value;
            }
            set
            {
                if (_BatchKey != value)
                {
                  OnBatchKeyChanging(ref value);
                  ReportPropertyChanging("BatchKey");
                  _BatchKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BatchKey");
                  OnBatchKeyChanged();
              }
            }
        }
        private int _BatchKey;
        partial void OnGetBatchKey(ref int value);
        partial void OnBatchKeyChanging(ref int value);
        partial void OnBatchKeyChanged();
    
        /// <summary>
        /// There are no comments for DiscTakenAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal DiscTakenAmt
        {
            get
            {
                decimal value = _DiscTakenAmt;
                OnGetDiscTakenAmt(ref value);
                return value;
            }
            set
            {
                if (_DiscTakenAmt != value)
                {
                  OnDiscTakenAmtChanging(ref value);
                  ReportPropertyChanging("DiscTakenAmt");
                  _DiscTakenAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DiscTakenAmt");
                  OnDiscTakenAmtChanged();
              }
            }
        }
        private decimal _DiscTakenAmt = 0m;
        partial void OnGetDiscTakenAmt(ref decimal value);
        partial void OnDiscTakenAmtChanging(ref decimal value);
        partial void OnDiscTakenAmtChanged();
    
        /// <summary>
        /// There are no comments for DiscTakenAmtHC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal DiscTakenAmtHC
        {
            get
            {
                decimal value = _DiscTakenAmtHC;
                OnGetDiscTakenAmtHC(ref value);
                return value;
            }
            set
            {
                if (_DiscTakenAmtHC != value)
                {
                  OnDiscTakenAmtHCChanging(ref value);
                  ReportPropertyChanging("DiscTakenAmtHC");
                  _DiscTakenAmtHC = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DiscTakenAmtHC");
                  OnDiscTakenAmtHCChanged();
              }
            }
        }
        private decimal _DiscTakenAmtHC = 0m;
        partial void OnGetDiscTakenAmtHC(ref decimal value);
        partial void OnDiscTakenAmtHCChanging(ref decimal value);
        partial void OnDiscTakenAmtHCChanged();
    
        /// <summary>
        /// There are no comments for PmtAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal PmtAmt
        {
            get
            {
                decimal value = _PmtAmt;
                OnGetPmtAmt(ref value);
                return value;
            }
            set
            {
                if (_PmtAmt != value)
                {
                  OnPmtAmtChanging(ref value);
                  ReportPropertyChanging("PmtAmt");
                  _PmtAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PmtAmt");
                  OnPmtAmtChanged();
              }
            }
        }
        private decimal _PmtAmt = 0m;
        partial void OnGetPmtAmt(ref decimal value);
        partial void OnPmtAmtChanging(ref decimal value);
        partial void OnPmtAmtChanged();
    
        /// <summary>
        /// There are no comments for PmtAmtHC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal PmtAmtHC
        {
            get
            {
                decimal value = _PmtAmtHC;
                OnGetPmtAmtHC(ref value);
                return value;
            }
            set
            {
                if (_PmtAmtHC != value)
                {
                  OnPmtAmtHCChanging(ref value);
                  ReportPropertyChanging("PmtAmtHC");
                  _PmtAmtHC = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PmtAmtHC");
                  OnPmtAmtHCChanged();
              }
            }
        }
        private decimal _PmtAmtHC = 0m;
        partial void OnGetPmtAmtHC(ref decimal value);
        partial void OnPmtAmtHCChanging(ref decimal value);
        partial void OnPmtAmtHCChanged();
    
        /// <summary>
        /// There are no comments for PostDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime PostDate
        {
            get
            {
                global::System.DateTime value = _PostDate;
                OnGetPostDate(ref value);
                return value;
            }
            set
            {
                if (_PostDate != value)
                {
                  OnPostDateChanging(ref value);
                  ReportPropertyChanging("PostDate");
                  _PostDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PostDate");
                  OnPostDateChanged();
              }
            }
        }
        private global::System.DateTime _PostDate;
        partial void OnGetPostDate(ref global::System.DateTime value);
        partial void OnPostDateChanging(ref global::System.DateTime value);
        partial void OnPostDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Voucher in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Voucher_VoucherAppl", "Voucher")]
        public virtual Voucher Voucher
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Voucher>("Net4Sage.DataAccessModel.Voucher_VoucherAppl", "Voucher").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Voucher>("Net4Sage.DataAccessModel.Voucher_VoucherAppl", "Voucher").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Voucher in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Voucher> VoucherReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Voucher>("Net4Sage.DataAccessModel.Voucher_VoucherAppl", "Voucher");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Voucher>("Net4Sage.DataAccessModel.Voucher_VoucherAppl", "Voucher", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Voucher>("Net4Sage.DataAccessModel.Voucher_VoucherAppl", "Voucher").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for FromVoucher in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Voucher_VoucherAppl1", "FromVoucher")]
        public virtual Voucher FromVoucher
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Voucher>("Net4Sage.DataAccessModel.Voucher_VoucherAppl1", "FromVoucher").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Voucher>("Net4Sage.DataAccessModel.Voucher_VoucherAppl1", "FromVoucher").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for FromVoucher in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Voucher> FromVoucherReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Voucher>("Net4Sage.DataAccessModel.Voucher_VoucherAppl1", "FromVoucher");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Voucher>("Net4Sage.DataAccessModel.Voucher_VoucherAppl1", "FromVoucher", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Voucher>("Net4Sage.DataAccessModel.Voucher_VoucherAppl1", "FromVoucher").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for FromVendPmt in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "VendPmt_VoucherAppl", "FromVendPmt")]
        public virtual VendPmt FromVendPmt
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<VendPmt>("Net4Sage.DataAccessModel.VendPmt_VoucherAppl", "FromVendPmt").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<VendPmt>("Net4Sage.DataAccessModel.VendPmt_VoucherAppl", "FromVendPmt").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for FromVendPmt in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VendPmt> FromVendPmtReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<VendPmt>("Net4Sage.DataAccessModel.VendPmt_VoucherAppl", "FromVendPmt");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<VendPmt>("Net4Sage.DataAccessModel.VendPmt_VoucherAppl", "FromVendPmt", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<VendPmt>("Net4Sage.DataAccessModel.VendPmt_VoucherAppl", "FromVendPmt").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.VendorClass in the schema.
    /// </summary>
    /// <KeyProperties>
    /// VendClassKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="VendorClass")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VendorClass : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new VendorClass object.
        /// </summary>
        /// <param name="vendClassKey">Initial value of VendClassKey.</param>
        /// <param name="acctsPaybleAcctKey">Initial value of AcctsPaybleAcctKey.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="createType">Initial value of CreateType.</param>
        /// <param name="languageID">Initial value of LanguageID.</param>
        /// <param name="requirePOIssue">Initial value of RequirePOIssue.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        /// <param name="v1099Type">Initial value of V1099Type.</param>
        /// <param name="vendClassID">Initial value of VendClassID.</param>
        public static VendorClass CreateVendorClass(int vendClassKey, int acctsPaybleAcctKey, string companyID, short createType, int languageID, short requirePOIssue, int updateCounter, short v1099Type, string vendClassID)
        {
            VendorClass vendorClass = new VendorClass();
            vendorClass.VendClassKey = vendClassKey;
            vendorClass.AcctsPaybleAcctKey = acctsPaybleAcctKey;
            vendorClass.CompanyID = companyID;
            vendorClass.CreateType = createType;
            vendorClass.LanguageID = languageID;
            vendorClass.RequirePOIssue = requirePOIssue;
            vendorClass.UpdateCounter = updateCounter;
            vendorClass.V1099Type = v1099Type;
            vendorClass.VendClassID = vendClassID;
            return vendorClass;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for VendClassKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int VendClassKey
        {
            get
            {
                int value = _VendClassKey;
                OnGetVendClassKey(ref value);
                return value;
            }
            set
            {
                if (_VendClassKey != value)
                {
                  OnVendClassKeyChanging(ref value);
                  ReportPropertyChanging("VendClassKey");
                  _VendClassKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VendClassKey");
                  OnVendClassKeyChanged();
              }
            }
        }
        private int _VendClassKey;
        partial void OnGetVendClassKey(ref int value);
        partial void OnVendClassKeyChanging(ref int value);
        partial void OnVendClassKeyChanged();
    
        /// <summary>
        /// There are no comments for AcctsPaybleAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int AcctsPaybleAcctKey
        {
            get
            {
                int value = _AcctsPaybleAcctKey;
                OnGetAcctsPaybleAcctKey(ref value);
                return value;
            }
            set
            {
                if (_AcctsPaybleAcctKey != value)
                {
                  OnAcctsPaybleAcctKeyChanging(ref value);
                  ReportPropertyChanging("AcctsPaybleAcctKey");
                  _AcctsPaybleAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AcctsPaybleAcctKey");
                  OnAcctsPaybleAcctKeyChanged();
              }
            }
        }
        private int _AcctsPaybleAcctKey;
        partial void OnGetAcctsPaybleAcctKey(ref int value);
        partial void OnAcctsPaybleAcctKeyChanging(ref int value);
        partial void OnAcctsPaybleAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for BuyerKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? BuyerKey
        {
            get
            {
                int? value = _BuyerKey;
                OnGetBuyerKey(ref value);
                return value;
            }
            set
            {
                if (_BuyerKey != value)
                {
                  OnBuyerKeyChanging(ref value);
                  ReportPropertyChanging("BuyerKey");
                  _BuyerKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BuyerKey");
                  OnBuyerKeyChanged();
              }
            }
        }
        private int? _BuyerKey;
        partial void OnGetBuyerKey(ref int? value);
        partial void OnBuyerKeyChanging(ref int? value);
        partial void OnBuyerKeyChanged();
    
        /// <summary>
        /// There are no comments for CashAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CashAcctKey
        {
            get
            {
                int? value = _CashAcctKey;
                OnGetCashAcctKey(ref value);
                return value;
            }
            set
            {
                if (_CashAcctKey != value)
                {
                  OnCashAcctKeyChanging(ref value);
                  ReportPropertyChanging("CashAcctKey");
                  _CashAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CashAcctKey");
                  OnCashAcctKeyChanged();
              }
            }
        }
        private int? _CashAcctKey;
        partial void OnGetCashAcctKey(ref int? value);
        partial void OnCashAcctKeyChanging(ref int? value);
        partial void OnCashAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for ClassOvrdSegValue in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ClassOvrdSegValue
        {
            get
            {
                string value = _ClassOvrdSegValue;
                OnGetClassOvrdSegValue(ref value);
                return value;
            }
            set
            {
                if (_ClassOvrdSegValue != value)
                {
                  OnClassOvrdSegValueChanging(ref value);
                  ReportPropertyChanging("ClassOvrdSegValue");
                  _ClassOvrdSegValue = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ClassOvrdSegValue");
                  OnClassOvrdSegValueChanged();
              }
            }
        }
        private string _ClassOvrdSegValue;
        partial void OnGetClassOvrdSegValue(ref string value);
        partial void OnClassOvrdSegValueChanging(ref string value);
        partial void OnClassOvrdSegValueChanged();
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for CreateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CreateDate
        {
            get
            {
                global::System.DateTime? value = _CreateDate;
                OnGetCreateDate(ref value);
                return value;
            }
            set
            {
                if (_CreateDate != value)
                {
                  OnCreateDateChanging(ref value);
                  ReportPropertyChanging("CreateDate");
                  _CreateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateDate");
                  OnCreateDateChanged();
              }
            }
        }
        private global::System.DateTime? _CreateDate;
        partial void OnGetCreateDate(ref global::System.DateTime? value);
        partial void OnCreateDateChanging(ref global::System.DateTime? value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// There are no comments for CreateType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CreateType
        {
            get
            {
                short value = _CreateType;
                OnGetCreateType(ref value);
                return value;
            }
            set
            {
                if (_CreateType != value)
                {
                  OnCreateTypeChanging(ref value);
                  ReportPropertyChanging("CreateType");
                  _CreateType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateType");
                  OnCreateTypeChanged();
              }
            }
        }
        private short _CreateType = 0;
        partial void OnGetCreateType(ref short value);
        partial void OnCreateTypeChanging(ref short value);
        partial void OnCreateTypeChanged();
    
        /// <summary>
        /// There are no comments for CreateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CreateUserID
        {
            get
            {
                string value = _CreateUserID;
                OnGetCreateUserID(ref value);
                return value;
            }
            set
            {
                if (_CreateUserID != value)
                {
                  OnCreateUserIDChanging(ref value);
                  ReportPropertyChanging("CreateUserID");
                  _CreateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CreateUserID");
                  OnCreateUserIDChanged();
              }
            }
        }
        private string _CreateUserID;
        partial void OnGetCreateUserID(ref string value);
        partial void OnCreateUserIDChanging(ref string value);
        partial void OnCreateUserIDChanged();
    
        /// <summary>
        /// There are no comments for CurrID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CurrID
        {
            get
            {
                string value = _CurrID;
                OnGetCurrID(ref value);
                return value;
            }
            set
            {
                if (_CurrID != value)
                {
                  OnCurrIDChanging(ref value);
                  ReportPropertyChanging("CurrID");
                  _CurrID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CurrID");
                  OnCurrIDChanged();
              }
            }
        }
        private string _CurrID;
        partial void OnGetCurrID(ref string value);
        partial void OnCurrIDChanging(ref string value);
        partial void OnCurrIDChanged();
    
        /// <summary>
        /// There are no comments for DfltPurchAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? DfltPurchAcctKey
        {
            get
            {
                int? value = _DfltPurchAcctKey;
                OnGetDfltPurchAcctKey(ref value);
                return value;
            }
            set
            {
                if (_DfltPurchAcctKey != value)
                {
                  OnDfltPurchAcctKeyChanging(ref value);
                  ReportPropertyChanging("DfltPurchAcctKey");
                  _DfltPurchAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltPurchAcctKey");
                  OnDfltPurchAcctKeyChanged();
              }
            }
        }
        private int? _DfltPurchAcctKey;
        partial void OnGetDfltPurchAcctKey(ref int? value);
        partial void OnDfltPurchAcctKeyChanging(ref int? value);
        partial void OnDfltPurchAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for DiscEarnAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? DiscEarnAcctKey
        {
            get
            {
                int? value = _DiscEarnAcctKey;
                OnGetDiscEarnAcctKey(ref value);
                return value;
            }
            set
            {
                if (_DiscEarnAcctKey != value)
                {
                  OnDiscEarnAcctKeyChanging(ref value);
                  ReportPropertyChanging("DiscEarnAcctKey");
                  _DiscEarnAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DiscEarnAcctKey");
                  OnDiscEarnAcctKeyChanged();
              }
            }
        }
        private int? _DiscEarnAcctKey;
        partial void OnGetDiscEarnAcctKey(ref int? value);
        partial void OnDiscEarnAcctKeyChanging(ref int? value);
        partial void OnDiscEarnAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for DiscLostAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? DiscLostAcctKey
        {
            get
            {
                int? value = _DiscLostAcctKey;
                OnGetDiscLostAcctKey(ref value);
                return value;
            }
            set
            {
                if (_DiscLostAcctKey != value)
                {
                  OnDiscLostAcctKeyChanging(ref value);
                  ReportPropertyChanging("DiscLostAcctKey");
                  _DiscLostAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DiscLostAcctKey");
                  OnDiscLostAcctKeyChanged();
              }
            }
        }
        private int? _DiscLostAcctKey;
        partial void OnGetDiscLostAcctKey(ref int? value);
        partial void OnDiscLostAcctKeyChanging(ref int? value);
        partial void OnDiscLostAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for LanguageID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int LanguageID
        {
            get
            {
                int value = _LanguageID;
                OnGetLanguageID(ref value);
                return value;
            }
            set
            {
                if (_LanguageID != value)
                {
                  OnLanguageIDChanging(ref value);
                  ReportPropertyChanging("LanguageID");
                  _LanguageID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LanguageID");
                  OnLanguageIDChanged();
              }
            }
        }
        private int _LanguageID;
        partial void OnGetLanguageID(ref int value);
        partial void OnLanguageIDChanging(ref int value);
        partial void OnLanguageIDChanged();
    
        /// <summary>
        /// There are no comments for MatchToleranceKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? MatchToleranceKey
        {
            get
            {
                int? value = _MatchToleranceKey;
                OnGetMatchToleranceKey(ref value);
                return value;
            }
            set
            {
                if (_MatchToleranceKey != value)
                {
                  OnMatchToleranceKeyChanging(ref value);
                  ReportPropertyChanging("MatchToleranceKey");
                  _MatchToleranceKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MatchToleranceKey");
                  OnMatchToleranceKeyChanged();
              }
            }
        }
        private int? _MatchToleranceKey;
        partial void OnGetMatchToleranceKey(ref int? value);
        partial void OnMatchToleranceKeyChanging(ref int? value);
        partial void OnMatchToleranceKeyChanged();
    
        /// <summary>
        /// There are no comments for PmtTermsKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? PmtTermsKey
        {
            get
            {
                int? value = _PmtTermsKey;
                OnGetPmtTermsKey(ref value);
                return value;
            }
            set
            {
                if (_PmtTermsKey != value)
                {
                  OnPmtTermsKeyChanging(ref value);
                  ReportPropertyChanging("PmtTermsKey");
                  _PmtTermsKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PmtTermsKey");
                  OnPmtTermsKeyChanged();
              }
            }
        }
        private int? _PmtTermsKey;
        partial void OnGetPmtTermsKey(ref int? value);
        partial void OnPmtTermsKeyChanging(ref int? value);
        partial void OnPmtTermsKeyChanged();
    
        /// <summary>
        /// There are no comments for POFormKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? POFormKey
        {
            get
            {
                int? value = _POFormKey;
                OnGetPOFormKey(ref value);
                return value;
            }
            set
            {
                if (_POFormKey != value)
                {
                  OnPOFormKeyChanging(ref value);
                  ReportPropertyChanging("POFormKey");
                  _POFormKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("POFormKey");
                  OnPOFormKeyChanged();
              }
            }
        }
        private int? _POFormKey;
        partial void OnGetPOFormKey(ref int? value);
        partial void OnPOFormKeyChanging(ref int? value);
        partial void OnPOFormKeyChanged();
    
        /// <summary>
        /// There are no comments for RequirePOIssue in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short RequirePOIssue
        {
            get
            {
                short value = _RequirePOIssue;
                OnGetRequirePOIssue(ref value);
                return value;
            }
            set
            {
                if (_RequirePOIssue != value)
                {
                  OnRequirePOIssueChanging(ref value);
                  ReportPropertyChanging("RequirePOIssue");
                  _RequirePOIssue = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RequirePOIssue");
                  OnRequirePOIssueChanged();
              }
            }
        }
        private short _RequirePOIssue = 0;
        partial void OnGetRequirePOIssue(ref short value);
        partial void OnRequirePOIssueChanging(ref short value);
        partial void OnRequirePOIssueChanged();
    
        /// <summary>
        /// There are no comments for RetntPaybleAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? RetntPaybleAcctKey
        {
            get
            {
                int? value = _RetntPaybleAcctKey;
                OnGetRetntPaybleAcctKey(ref value);
                return value;
            }
            set
            {
                if (_RetntPaybleAcctKey != value)
                {
                  OnRetntPaybleAcctKeyChanging(ref value);
                  ReportPropertyChanging("RetntPaybleAcctKey");
                  _RetntPaybleAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RetntPaybleAcctKey");
                  OnRetntPaybleAcctKeyChanged();
              }
            }
        }
        private int? _RetntPaybleAcctKey;
        partial void OnGetRetntPaybleAcctKey(ref int? value);
        partial void OnRetntPaybleAcctKeyChanging(ref int? value);
        partial void OnRetntPaybleAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for STaxAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? STaxAcctKey
        {
            get
            {
                int? value = _STaxAcctKey;
                OnGetSTaxAcctKey(ref value);
                return value;
            }
            set
            {
                if (_STaxAcctKey != value)
                {
                  OnSTaxAcctKeyChanging(ref value);
                  ReportPropertyChanging("STaxAcctKey");
                  _STaxAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("STaxAcctKey");
                  OnSTaxAcctKeyChanged();
              }
            }
        }
        private int? _STaxAcctKey;
        partial void OnGetSTaxAcctKey(ref int? value);
        partial void OnSTaxAcctKeyChanging(ref int? value);
        partial void OnSTaxAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for STaxSchdKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? STaxSchdKey
        {
            get
            {
                int? value = _STaxSchdKey;
                OnGetSTaxSchdKey(ref value);
                return value;
            }
            set
            {
                if (_STaxSchdKey != value)
                {
                  OnSTaxSchdKeyChanging(ref value);
                  ReportPropertyChanging("STaxSchdKey");
                  _STaxSchdKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("STaxSchdKey");
                  OnSTaxSchdKeyChanged();
              }
            }
        }
        private int? _STaxSchdKey;
        partial void OnGetSTaxSchdKey(ref int? value);
        partial void OnSTaxSchdKeyChanging(ref int? value);
        partial void OnSTaxSchdKeyChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();
    
        /// <summary>
        /// There are no comments for UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? UpdateDate
        {
            get
            {
                global::System.DateTime? value = _UpdateDate;
                OnGetUpdateDate(ref value);
                return value;
            }
            set
            {
                if (_UpdateDate != value)
                {
                  OnUpdateDateChanging(ref value);
                  ReportPropertyChanging("UpdateDate");
                  _UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateDate");
                  OnUpdateDateChanged();
              }
            }
        }
        private global::System.DateTime? _UpdateDate;
        partial void OnGetUpdateDate(ref global::System.DateTime? value);
        partial void OnUpdateDateChanging(ref global::System.DateTime? value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// There are no comments for UpdateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UpdateUserID
        {
            get
            {
                string value = _UpdateUserID;
                OnGetUpdateUserID(ref value);
                return value;
            }
            set
            {
                if (_UpdateUserID != value)
                {
                  OnUpdateUserIDChanging(ref value);
                  ReportPropertyChanging("UpdateUserID");
                  _UpdateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UpdateUserID");
                  OnUpdateUserIDChanged();
              }
            }
        }
        private string _UpdateUserID;
        partial void OnGetUpdateUserID(ref string value);
        partial void OnUpdateUserIDChanging(ref string value);
        partial void OnUpdateUserIDChanged();
    
        /// <summary>
        /// There are no comments for UserFld1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld1
        {
            get
            {
                string value = _UserFld1;
                OnGetUserFld1(ref value);
                return value;
            }
            set
            {
                if (_UserFld1 != value)
                {
                  OnUserFld1Changing(ref value);
                  ReportPropertyChanging("UserFld1");
                  _UserFld1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld1");
                  OnUserFld1Changed();
              }
            }
        }
        private string _UserFld1;
        partial void OnGetUserFld1(ref string value);
        partial void OnUserFld1Changing(ref string value);
        partial void OnUserFld1Changed();
    
        /// <summary>
        /// There are no comments for UserFld2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld2
        {
            get
            {
                string value = _UserFld2;
                OnGetUserFld2(ref value);
                return value;
            }
            set
            {
                if (_UserFld2 != value)
                {
                  OnUserFld2Changing(ref value);
                  ReportPropertyChanging("UserFld2");
                  _UserFld2 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld2");
                  OnUserFld2Changed();
              }
            }
        }
        private string _UserFld2;
        partial void OnGetUserFld2(ref string value);
        partial void OnUserFld2Changing(ref string value);
        partial void OnUserFld2Changed();
    
        /// <summary>
        /// There are no comments for UserFld3 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld3
        {
            get
            {
                string value = _UserFld3;
                OnGetUserFld3(ref value);
                return value;
            }
            set
            {
                if (_UserFld3 != value)
                {
                  OnUserFld3Changing(ref value);
                  ReportPropertyChanging("UserFld3");
                  _UserFld3 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld3");
                  OnUserFld3Changed();
              }
            }
        }
        private string _UserFld3;
        partial void OnGetUserFld3(ref string value);
        partial void OnUserFld3Changing(ref string value);
        partial void OnUserFld3Changed();
    
        /// <summary>
        /// There are no comments for UserFld4 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld4
        {
            get
            {
                string value = _UserFld4;
                OnGetUserFld4(ref value);
                return value;
            }
            set
            {
                if (_UserFld4 != value)
                {
                  OnUserFld4Changing(ref value);
                  ReportPropertyChanging("UserFld4");
                  _UserFld4 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld4");
                  OnUserFld4Changed();
              }
            }
        }
        private string _UserFld4;
        partial void OnGetUserFld4(ref string value);
        partial void OnUserFld4Changing(ref string value);
        partial void OnUserFld4Changed();
    
        /// <summary>
        /// There are no comments for V1099FATCA in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual short? V1099FATCA
        {
            get
            {
                short? value = _V1099FATCA;
                OnGetV1099FATCA(ref value);
                return value;
            }
            set
            {
                if (_V1099FATCA != value)
                {
                  OnV1099FATCAChanging(ref value);
                  ReportPropertyChanging("V1099FATCA");
                  _V1099FATCA = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("V1099FATCA");
                  OnV1099FATCAChanged();
              }
            }
        }
        private short? _V1099FATCA = 0;
        partial void OnGetV1099FATCA(ref short? value);
        partial void OnV1099FATCAChanging(ref short? value);
        partial void OnV1099FATCAChanged();
    
        /// <summary>
        /// There are no comments for V1099Box in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string V1099Box
        {
            get
            {
                string value = _V1099Box;
                OnGetV1099Box(ref value);
                return value;
            }
            set
            {
                if (_V1099Box != value)
                {
                  OnV1099BoxChanging(ref value);
                  ReportPropertyChanging("V1099Box");
                  _V1099Box = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("V1099Box");
                  OnV1099BoxChanged();
              }
            }
        }
        private string _V1099Box;
        partial void OnGetV1099Box(ref string value);
        partial void OnV1099BoxChanging(ref string value);
        partial void OnV1099BoxChanged();
    
        /// <summary>
        /// There are no comments for V1099Form in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual short? V1099Form
        {
            get
            {
                short? value = _V1099Form;
                OnGetV1099Form(ref value);
                return value;
            }
            set
            {
                if (_V1099Form != value)
                {
                  OnV1099FormChanging(ref value);
                  ReportPropertyChanging("V1099Form");
                  _V1099Form = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("V1099Form");
                  OnV1099FormChanged();
              }
            }
        }
        private short? _V1099Form;
        partial void OnGetV1099Form(ref short? value);
        partial void OnV1099FormChanging(ref short? value);
        partial void OnV1099FormChanged();
    
        /// <summary>
        /// There are no comments for V1099Type in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short V1099Type
        {
            get
            {
                short value = _V1099Type;
                OnGetV1099Type(ref value);
                return value;
            }
            set
            {
                if (_V1099Type != value)
                {
                  OnV1099TypeChanging(ref value);
                  ReportPropertyChanging("V1099Type");
                  _V1099Type = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("V1099Type");
                  OnV1099TypeChanged();
              }
            }
        }
        private short _V1099Type = 3;
        partial void OnGetV1099Type(ref short value);
        partial void OnV1099TypeChanging(ref short value);
        partial void OnV1099TypeChanged();
    
        /// <summary>
        /// There are no comments for VendClassID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string VendClassID
        {
            get
            {
                string value = _VendClassID;
                OnGetVendClassID(ref value);
                return value;
            }
            set
            {
                if (_VendClassID != value)
                {
                  OnVendClassIDChanging(ref value);
                  ReportPropertyChanging("VendClassID");
                  _VendClassID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("VendClassID");
                  OnVendClassIDChanged();
              }
            }
        }
        private string _VendClassID;
        partial void OnGetVendClassID(ref string value);
        partial void OnVendClassIDChanging(ref string value);
        partial void OnVendClassIDChanged();
    
        /// <summary>
        /// There are no comments for VendClassName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string VendClassName
        {
            get
            {
                string value = _VendClassName;
                OnGetVendClassName(ref value);
                return value;
            }
            set
            {
                if (_VendClassName != value)
                {
                  OnVendClassNameChanging(ref value);
                  ReportPropertyChanging("VendClassName");
                  _VendClassName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("VendClassName");
                  OnVendClassNameChanged();
              }
            }
        }
        private string _VendClassName;
        partial void OnGetVendClassName(ref string value);
        partial void OnVendClassNameChanging(ref string value);
        partial void OnVendClassNameChanged();
    
        /// <summary>
        /// There are no comments for VendPmtMethKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? VendPmtMethKey
        {
            get
            {
                int? value = _VendPmtMethKey;
                OnGetVendPmtMethKey(ref value);
                return value;
            }
            set
            {
                if (_VendPmtMethKey != value)
                {
                  OnVendPmtMethKeyChanging(ref value);
                  ReportPropertyChanging("VendPmtMethKey");
                  _VendPmtMethKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VendPmtMethKey");
                  OnVendPmtMethKeyChanged();
              }
            }
        }
        private int? _VendPmtMethKey;
        partial void OnGetVendPmtMethKey(ref int? value);
        partial void OnVendPmtMethKeyChanging(ref int? value);
        partial void OnVendPmtMethKeyChanged();
    
        /// <summary>
        /// There are no comments for WriteOffAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? WriteOffAcctKey
        {
            get
            {
                int? value = _WriteOffAcctKey;
                OnGetWriteOffAcctKey(ref value);
                return value;
            }
            set
            {
                if (_WriteOffAcctKey != value)
                {
                  OnWriteOffAcctKeyChanging(ref value);
                  ReportPropertyChanging("WriteOffAcctKey");
                  _WriteOffAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WriteOffAcctKey");
                  OnWriteOffAcctKeyChanged();
              }
            }
        }
        private int? _WriteOffAcctKey;
        partial void OnGetWriteOffAcctKey(ref int? value);
        partial void OnWriteOffAcctKeyChanging(ref int? value);
        partial void OnWriteOffAcctKeyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Vouchers in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "VendorClass_Voucher", "Vouchers")]
        public virtual EntityCollection<Voucher> Vouchers
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Voucher>("Net4Sage.DataAccessModel.VendorClass_Voucher", "Vouchers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Voucher>("Net4Sage.DataAccessModel.VendorClass_Voucher", "Vouchers", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for VendPmts in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "VendorClass_VendPmt", "VendPmts")]
        public virtual EntityCollection<VendPmt> VendPmts
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<VendPmt>("Net4Sage.DataAccessModel.VendorClass_VendPmt", "VendPmts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<VendPmt>("Net4Sage.DataAccessModel.VendorClass_VendPmt", "VendPmts", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for PayableAcct in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "GLAccount_VendorClass", "PayableAcct")]
        public virtual GLAccount PayableAcct
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<GLAccount>("Net4Sage.DataAccessModel.GLAccount_VendorClass", "PayableAcct").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<GLAccount>("Net4Sage.DataAccessModel.GLAccount_VendorClass", "PayableAcct").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for PayableAcct in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GLAccount> PayableAcctReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<GLAccount>("Net4Sage.DataAccessModel.GLAccount_VendorClass", "PayableAcct");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<GLAccount>("Net4Sage.DataAccessModel.GLAccount_VendorClass", "PayableAcct", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<GLAccount>("Net4Sage.DataAccessModel.GLAccount_VendorClass", "PayableAcct").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.Vendor in the schema.
    /// </summary>
    /// <KeyProperties>
    /// VendKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="Vendor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [Net4Sage.Controls.Lookup.LookupAutoShowColumns(false)]
    [Net4Sage.Controls.Lookup.LookupFormTitle(@"Buscar Proveedor")]
    public partial class Vendor : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Vendor object.
        /// </summary>
        /// <param name="vendKey">Initial value of VendKey.</param>
        /// <param name="aCHTranCode">Initial value of ACHTranCode.</param>
        /// <param name="allowPOBackOrder">Initial value of AllowPOBackOrder.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="creditCardVendor">Initial value of CreditCardVendor.</param>
        /// <param name="createType">Initial value of CreateType.</param>
        /// <param name="creditLimit">Initial value of CreditLimit.</param>
        /// <param name="dfltPurchAddrKey">Initial value of DfltPurchAddrKey.</param>
        /// <param name="dfltRemitToAddrKey">Initial value of DfltRemitToAddrKey.</param>
        /// <param name="holdPmt">Initial value of HoldPmt.</param>
        /// <param name="primaryAddrKey">Initial value of PrimaryAddrKey.</param>
        /// <param name="requirePOIssue">Initial value of RequirePOIssue.</param>
        /// <param name="requireRMA">Initial value of RequireRMA.</param>
        /// <param name="separateChk">Initial value of SeparateChk.</param>
        /// <param name="status">Initial value of Status.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        /// <param name="v1099Type">Initial value of V1099Type.</param>
        /// <param name="vendClassKey">Initial value of VendClassKey.</param>
        /// <param name="vendID">Initial value of VendID.</param>
        /// <param name="vendName">Initial value of VendName.</param>
        public static Vendor CreateVendor(int vendKey, short aCHTranCode, short allowPOBackOrder, string companyID, short creditCardVendor, short createType, decimal creditLimit, int dfltPurchAddrKey, int dfltRemitToAddrKey, short holdPmt, int primaryAddrKey, short requirePOIssue, short requireRMA, short separateChk, short status, int updateCounter, short v1099Type, int vendClassKey, string vendID, string vendName)
        {
            Vendor vendor = new Vendor();
            vendor.VendKey = vendKey;
            vendor.ACHTranCode = aCHTranCode;
            vendor.AllowPOBackOrder = allowPOBackOrder;
            vendor.CompanyID = companyID;
            vendor.CreditCardVendor = creditCardVendor;
            vendor.CreateType = createType;
            vendor.CreditLimit = creditLimit;
            vendor.DfltPurchAddrKey = dfltPurchAddrKey;
            vendor.DfltRemitToAddrKey = dfltRemitToAddrKey;
            vendor.HoldPmt = holdPmt;
            vendor.PrimaryAddrKey = primaryAddrKey;
            vendor.RequirePOIssue = requirePOIssue;
            vendor.RequireRMA = requireRMA;
            vendor.SeparateChk = separateChk;
            vendor.Status = status;
            vendor.UpdateCounter = updateCounter;
            vendor.V1099Type = v1099Type;
            vendor.VendClassKey = vendClassKey;
            vendor.VendID = vendID;
            vendor.VendName = vendName;
            return vendor;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for VendKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupKeyReturn]
        public virtual int VendKey
        {
            get
            {
                int value = _VendKey;
                OnGetVendKey(ref value);
                return value;
            }
            set
            {
                if (_VendKey != value)
                {
                  OnVendKeyChanging(ref value);
                  ReportPropertyChanging("VendKey");
                  _VendKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VendKey");
                  OnVendKeyChanged();
              }
            }
        }
        private int _VendKey;
        partial void OnGetVendKey(ref int value);
        partial void OnVendKeyChanging(ref int value);
        partial void OnVendKeyChanged();
    
        /// <summary>
        /// There are no comments for ACHTranCode in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ACHTranCode
        {
            get
            {
                short value = _ACHTranCode;
                OnGetACHTranCode(ref value);
                return value;
            }
            set
            {
                if (_ACHTranCode != value)
                {
                  OnACHTranCodeChanging(ref value);
                  ReportPropertyChanging("ACHTranCode");
                  _ACHTranCode = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ACHTranCode");
                  OnACHTranCodeChanged();
              }
            }
        }
        private short _ACHTranCode = 22;
        partial void OnGetACHTranCode(ref short value);
        partial void OnACHTranCodeChanging(ref short value);
        partial void OnACHTranCodeChanged();
    
        /// <summary>
        /// There are no comments for AllowPOBackOrder in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short AllowPOBackOrder
        {
            get
            {
                short value = _AllowPOBackOrder;
                OnGetAllowPOBackOrder(ref value);
                return value;
            }
            set
            {
                if (_AllowPOBackOrder != value)
                {
                  OnAllowPOBackOrderChanging(ref value);
                  ReportPropertyChanging("AllowPOBackOrder");
                  _AllowPOBackOrder = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AllowPOBackOrder");
                  OnAllowPOBackOrderChanged();
              }
            }
        }
        private short _AllowPOBackOrder = 1;
        partial void OnGetAllowPOBackOrder(ref short value);
        partial void OnAllowPOBackOrderChanging(ref short value);
        partial void OnAllowPOBackOrderChanged();
    
        /// <summary>
        /// There are no comments for BuyerKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? BuyerKey
        {
            get
            {
                int? value = _BuyerKey;
                OnGetBuyerKey(ref value);
                return value;
            }
            set
            {
                if (_BuyerKey != value)
                {
                  OnBuyerKeyChanging(ref value);
                  ReportPropertyChanging("BuyerKey");
                  _BuyerKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BuyerKey");
                  OnBuyerKeyChanged();
              }
            }
        }
        private int? _BuyerKey;
        partial void OnGetBuyerKey(ref int? value);
        partial void OnBuyerKeyChanging(ref int? value);
        partial void OnBuyerKeyChanged();
    
        /// <summary>
        /// There are no comments for CashAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CashAcctKey
        {
            get
            {
                int? value = _CashAcctKey;
                OnGetCashAcctKey(ref value);
                return value;
            }
            set
            {
                if (_CashAcctKey != value)
                {
                  OnCashAcctKeyChanging(ref value);
                  ReportPropertyChanging("CashAcctKey");
                  _CashAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CashAcctKey");
                  OnCashAcctKeyChanged();
              }
            }
        }
        private int? _CashAcctKey;
        partial void OnGetCashAcctKey(ref int? value);
        partial void OnCashAcctKeyChanging(ref int? value);
        partial void OnCashAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for CreditCardVendor in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CreditCardVendor
        {
            get
            {
                short value = _CreditCardVendor;
                OnGetCreditCardVendor(ref value);
                return value;
            }
            set
            {
                if (_CreditCardVendor != value)
                {
                  OnCreditCardVendorChanging(ref value);
                  ReportPropertyChanging("CreditCardVendor");
                  _CreditCardVendor = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreditCardVendor");
                  OnCreditCardVendorChanged();
              }
            }
        }
        private short _CreditCardVendor = 0;
        partial void OnGetCreditCardVendor(ref short value);
        partial void OnCreditCardVendorChanging(ref short value);
        partial void OnCreditCardVendorChanged();
    
        /// <summary>
        /// There are no comments for CreateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CreateDate
        {
            get
            {
                global::System.DateTime? value = _CreateDate;
                OnGetCreateDate(ref value);
                return value;
            }
            set
            {
                if (_CreateDate != value)
                {
                  OnCreateDateChanging(ref value);
                  ReportPropertyChanging("CreateDate");
                  _CreateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateDate");
                  OnCreateDateChanged();
              }
            }
        }
        private global::System.DateTime? _CreateDate;
        partial void OnGetCreateDate(ref global::System.DateTime? value);
        partial void OnCreateDateChanging(ref global::System.DateTime? value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// There are no comments for CreateType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CreateType
        {
            get
            {
                short value = _CreateType;
                OnGetCreateType(ref value);
                return value;
            }
            set
            {
                if (_CreateType != value)
                {
                  OnCreateTypeChanging(ref value);
                  ReportPropertyChanging("CreateType");
                  _CreateType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateType");
                  OnCreateTypeChanged();
              }
            }
        }
        private short _CreateType = 0;
        partial void OnGetCreateType(ref short value);
        partial void OnCreateTypeChanging(ref short value);
        partial void OnCreateTypeChanged();
    
        /// <summary>
        /// There are no comments for CreateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CreateUserID
        {
            get
            {
                string value = _CreateUserID;
                OnGetCreateUserID(ref value);
                return value;
            }
            set
            {
                if (_CreateUserID != value)
                {
                  OnCreateUserIDChanging(ref value);
                  ReportPropertyChanging("CreateUserID");
                  _CreateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CreateUserID");
                  OnCreateUserIDChanged();
              }
            }
        }
        private string _CreateUserID;
        partial void OnGetCreateUserID(ref string value);
        partial void OnCreateUserIDChanging(ref string value);
        partial void OnCreateUserIDChanged();
    
        /// <summary>
        /// There are no comments for CreditLimit in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal CreditLimit
        {
            get
            {
                decimal value = _CreditLimit;
                OnGetCreditLimit(ref value);
                return value;
            }
            set
            {
                if (_CreditLimit != value)
                {
                  OnCreditLimitChanging(ref value);
                  ReportPropertyChanging("CreditLimit");
                  _CreditLimit = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreditLimit");
                  OnCreditLimitChanged();
              }
            }
        }
        private decimal _CreditLimit = 0m;
        partial void OnGetCreditLimit(ref decimal value);
        partial void OnCreditLimitChanging(ref decimal value);
        partial void OnCreditLimitChanged();
    
        /// <summary>
        /// There are no comments for CurrExchSchdKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CurrExchSchdKey
        {
            get
            {
                int? value = _CurrExchSchdKey;
                OnGetCurrExchSchdKey(ref value);
                return value;
            }
            set
            {
                if (_CurrExchSchdKey != value)
                {
                  OnCurrExchSchdKeyChanging(ref value);
                  ReportPropertyChanging("CurrExchSchdKey");
                  _CurrExchSchdKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CurrExchSchdKey");
                  OnCurrExchSchdKeyChanged();
              }
            }
        }
        private int? _CurrExchSchdKey;
        partial void OnGetCurrExchSchdKey(ref int? value);
        partial void OnCurrExchSchdKeyChanging(ref int? value);
        partial void OnCurrExchSchdKeyChanged();
    
        /// <summary>
        /// There are no comments for DfltItemKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? DfltItemKey
        {
            get
            {
                int? value = _DfltItemKey;
                OnGetDfltItemKey(ref value);
                return value;
            }
            set
            {
                if (_DfltItemKey != value)
                {
                  OnDfltItemKeyChanging(ref value);
                  ReportPropertyChanging("DfltItemKey");
                  _DfltItemKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltItemKey");
                  OnDfltItemKeyChanged();
              }
            }
        }
        private int? _DfltItemKey;
        partial void OnGetDfltItemKey(ref int? value);
        partial void OnDfltItemKeyChanging(ref int? value);
        partial void OnDfltItemKeyChanged();
    
        /// <summary>
        /// There are no comments for DfltPurchAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? DfltPurchAcctKey
        {
            get
            {
                int? value = _DfltPurchAcctKey;
                OnGetDfltPurchAcctKey(ref value);
                return value;
            }
            set
            {
                if (_DfltPurchAcctKey != value)
                {
                  OnDfltPurchAcctKeyChanging(ref value);
                  ReportPropertyChanging("DfltPurchAcctKey");
                  _DfltPurchAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltPurchAcctKey");
                  OnDfltPurchAcctKeyChanged();
              }
            }
        }
        private int? _DfltPurchAcctKey;
        partial void OnGetDfltPurchAcctKey(ref int? value);
        partial void OnDfltPurchAcctKeyChanging(ref int? value);
        partial void OnDfltPurchAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for DfltPurchAddrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int DfltPurchAddrKey
        {
            get
            {
                int value = _DfltPurchAddrKey;
                OnGetDfltPurchAddrKey(ref value);
                return value;
            }
            set
            {
                if (_DfltPurchAddrKey != value)
                {
                  OnDfltPurchAddrKeyChanging(ref value);
                  ReportPropertyChanging("DfltPurchAddrKey");
                  _DfltPurchAddrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltPurchAddrKey");
                  OnDfltPurchAddrKeyChanged();
              }
            }
        }
        private int _DfltPurchAddrKey;
        partial void OnGetDfltPurchAddrKey(ref int value);
        partial void OnDfltPurchAddrKeyChanging(ref int value);
        partial void OnDfltPurchAddrKeyChanged();
    
        /// <summary>
        /// There are no comments for DfltRemitToAddrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int DfltRemitToAddrKey
        {
            get
            {
                int value = _DfltRemitToAddrKey;
                OnGetDfltRemitToAddrKey(ref value);
                return value;
            }
            set
            {
                if (_DfltRemitToAddrKey != value)
                {
                  OnDfltRemitToAddrKeyChanging(ref value);
                  ReportPropertyChanging("DfltRemitToAddrKey");
                  _DfltRemitToAddrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltRemitToAddrKey");
                  OnDfltRemitToAddrKeyChanged();
              }
            }
        }
        private int _DfltRemitToAddrKey;
        partial void OnGetDfltRemitToAddrKey(ref int value);
        partial void OnDfltRemitToAddrKeyChanging(ref int value);
        partial void OnDfltRemitToAddrKeyChanged();
    
        /// <summary>
        /// There are no comments for HoldPmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short HoldPmt
        {
            get
            {
                short value = _HoldPmt;
                OnGetHoldPmt(ref value);
                return value;
            }
            set
            {
                if (_HoldPmt != value)
                {
                  OnHoldPmtChanging(ref value);
                  ReportPropertyChanging("HoldPmt");
                  _HoldPmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("HoldPmt");
                  OnHoldPmtChanged();
              }
            }
        }
        private short _HoldPmt = 0;
        partial void OnGetHoldPmt(ref short value);
        partial void OnHoldPmtChanging(ref short value);
        partial void OnHoldPmtChanged();
    
        /// <summary>
        /// There are no comments for ImportLogKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ImportLogKey
        {
            get
            {
                int? value = _ImportLogKey;
                OnGetImportLogKey(ref value);
                return value;
            }
            set
            {
                if (_ImportLogKey != value)
                {
                  OnImportLogKeyChanging(ref value);
                  ReportPropertyChanging("ImportLogKey");
                  _ImportLogKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ImportLogKey");
                  OnImportLogKeyChanged();
              }
            }
        }
        private int? _ImportLogKey;
        partial void OnGetImportLogKey(ref int? value);
        partial void OnImportLogKeyChanging(ref int? value);
        partial void OnImportLogKeyChanged();
    
        /// <summary>
        /// There are no comments for MatchToleranceKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? MatchToleranceKey
        {
            get
            {
                int? value = _MatchToleranceKey;
                OnGetMatchToleranceKey(ref value);
                return value;
            }
            set
            {
                if (_MatchToleranceKey != value)
                {
                  OnMatchToleranceKeyChanging(ref value);
                  ReportPropertyChanging("MatchToleranceKey");
                  _MatchToleranceKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MatchToleranceKey");
                  OnMatchToleranceKeyChanged();
              }
            }
        }
        private int? _MatchToleranceKey;
        partial void OnGetMatchToleranceKey(ref int? value);
        partial void OnMatchToleranceKeyChanging(ref int? value);
        partial void OnMatchToleranceKeyChanged();
    
        /// <summary>
        /// There are no comments for PmtTermsKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? PmtTermsKey
        {
            get
            {
                int? value = _PmtTermsKey;
                OnGetPmtTermsKey(ref value);
                return value;
            }
            set
            {
                if (_PmtTermsKey != value)
                {
                  OnPmtTermsKeyChanging(ref value);
                  ReportPropertyChanging("PmtTermsKey");
                  _PmtTermsKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PmtTermsKey");
                  OnPmtTermsKeyChanged();
              }
            }
        }
        private int? _PmtTermsKey;
        partial void OnGetPmtTermsKey(ref int? value);
        partial void OnPmtTermsKeyChanging(ref int? value);
        partial void OnPmtTermsKeyChanged();
    
        /// <summary>
        /// There are no comments for POFormKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? POFormKey
        {
            get
            {
                int? value = _POFormKey;
                OnGetPOFormKey(ref value);
                return value;
            }
            set
            {
                if (_POFormKey != value)
                {
                  OnPOFormKeyChanging(ref value);
                  ReportPropertyChanging("POFormKey");
                  _POFormKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("POFormKey");
                  OnPOFormKeyChanged();
              }
            }
        }
        private int? _POFormKey;
        partial void OnGetPOFormKey(ref int? value);
        partial void OnPOFormKeyChanging(ref int? value);
        partial void OnPOFormKeyChanged();
    
        /// <summary>
        /// There are no comments for PrimaryAddrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int PrimaryAddrKey
        {
            get
            {
                int value = _PrimaryAddrKey;
                OnGetPrimaryAddrKey(ref value);
                return value;
            }
            set
            {
                if (_PrimaryAddrKey != value)
                {
                  OnPrimaryAddrKeyChanging(ref value);
                  ReportPropertyChanging("PrimaryAddrKey");
                  _PrimaryAddrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PrimaryAddrKey");
                  OnPrimaryAddrKeyChanged();
              }
            }
        }
        private int _PrimaryAddrKey;
        partial void OnGetPrimaryAddrKey(ref int value);
        partial void OnPrimaryAddrKeyChanging(ref int value);
        partial void OnPrimaryAddrKeyChanged();
    
        /// <summary>
        /// There are no comments for PrimaryCntctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? PrimaryCntctKey
        {
            get
            {
                int? value = _PrimaryCntctKey;
                OnGetPrimaryCntctKey(ref value);
                return value;
            }
            set
            {
                if (_PrimaryCntctKey != value)
                {
                  OnPrimaryCntctKeyChanging(ref value);
                  ReportPropertyChanging("PrimaryCntctKey");
                  _PrimaryCntctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PrimaryCntctKey");
                  OnPrimaryCntctKeyChanged();
              }
            }
        }
        private int? _PrimaryCntctKey;
        partial void OnGetPrimaryCntctKey(ref int? value);
        partial void OnPrimaryCntctKeyChanging(ref int? value);
        partial void OnPrimaryCntctKeyChanged();
    
        /// <summary>
        /// There are no comments for RcvgCmnt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string RcvgCmnt
        {
            get
            {
                string value = _RcvgCmnt;
                OnGetRcvgCmnt(ref value);
                return value;
            }
            set
            {
                if (_RcvgCmnt != value)
                {
                  OnRcvgCmntChanging(ref value);
                  ReportPropertyChanging("RcvgCmnt");
                  _RcvgCmnt = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("RcvgCmnt");
                  OnRcvgCmntChanged();
              }
            }
        }
        private string _RcvgCmnt;
        partial void OnGetRcvgCmnt(ref string value);
        partial void OnRcvgCmntChanging(ref string value);
        partial void OnRcvgCmntChanged();
    
        /// <summary>
        /// There are no comments for RequirePOIssue in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short RequirePOIssue
        {
            get
            {
                short value = _RequirePOIssue;
                OnGetRequirePOIssue(ref value);
                return value;
            }
            set
            {
                if (_RequirePOIssue != value)
                {
                  OnRequirePOIssueChanging(ref value);
                  ReportPropertyChanging("RequirePOIssue");
                  _RequirePOIssue = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RequirePOIssue");
                  OnRequirePOIssueChanged();
              }
            }
        }
        private short _RequirePOIssue = 0;
        partial void OnGetRequirePOIssue(ref short value);
        partial void OnRequirePOIssueChanging(ref short value);
        partial void OnRequirePOIssueChanged();
    
        /// <summary>
        /// There are no comments for RequireRMA in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short RequireRMA
        {
            get
            {
                short value = _RequireRMA;
                OnGetRequireRMA(ref value);
                return value;
            }
            set
            {
                if (_RequireRMA != value)
                {
                  OnRequireRMAChanging(ref value);
                  ReportPropertyChanging("RequireRMA");
                  _RequireRMA = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RequireRMA");
                  OnRequireRMAChanged();
              }
            }
        }
        private short _RequireRMA = 0;
        partial void OnGetRequireRMA(ref short value);
        partial void OnRequireRMAChanging(ref short value);
        partial void OnRequireRMAChanged();
    
        /// <summary>
        /// There are no comments for RetntRate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? RetntRate
        {
            get
            {
                decimal? value = _RetntRate;
                OnGetRetntRate(ref value);
                return value;
            }
            set
            {
                if (_RetntRate != value)
                {
                  OnRetntRateChanging(ref value);
                  ReportPropertyChanging("RetntRate");
                  _RetntRate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RetntRate");
                  OnRetntRateChanged();
              }
            }
        }
        private decimal? _RetntRate = 0m;
        partial void OnGetRetntRate(ref decimal? value);
        partial void OnRetntRateChanging(ref decimal? value);
        partial void OnRetntRateChanged();
    
        /// <summary>
        /// There are no comments for SeparateChk in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short SeparateChk
        {
            get
            {
                short value = _SeparateChk;
                OnGetSeparateChk(ref value);
                return value;
            }
            set
            {
                if (_SeparateChk != value)
                {
                  OnSeparateChkChanging(ref value);
                  ReportPropertyChanging("SeparateChk");
                  _SeparateChk = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SeparateChk");
                  OnSeparateChkChanged();
              }
            }
        }
        private short _SeparateChk = 0;
        partial void OnGetSeparateChk(ref short value);
        partial void OnSeparateChkChanging(ref short value);
        partial void OnSeparateChkChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Status
        {
            get
            {
                short value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private short _Status = 1;
        partial void OnGetStatus(ref short value);
        partial void OnStatusChanging(ref short value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// There are no comments for TaxPayerID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string TaxPayerID
        {
            get
            {
                string value = _TaxPayerID;
                OnGetTaxPayerID(ref value);
                return value;
            }
            set
            {
                if (_TaxPayerID != value)
                {
                  OnTaxPayerIDChanging(ref value);
                  ReportPropertyChanging("TaxPayerID");
                  _TaxPayerID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TaxPayerID");
                  OnTaxPayerIDChanged();
              }
            }
        }
        private string _TaxPayerID;
        partial void OnGetTaxPayerID(ref string value);
        partial void OnTaxPayerIDChanging(ref string value);
        partial void OnTaxPayerIDChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();
    
        /// <summary>
        /// There are no comments for UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? UpdateDate
        {
            get
            {
                global::System.DateTime? value = _UpdateDate;
                OnGetUpdateDate(ref value);
                return value;
            }
            set
            {
                if (_UpdateDate != value)
                {
                  OnUpdateDateChanging(ref value);
                  ReportPropertyChanging("UpdateDate");
                  _UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateDate");
                  OnUpdateDateChanged();
              }
            }
        }
        private global::System.DateTime? _UpdateDate;
        partial void OnGetUpdateDate(ref global::System.DateTime? value);
        partial void OnUpdateDateChanging(ref global::System.DateTime? value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// There are no comments for UpdateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UpdateUserID
        {
            get
            {
                string value = _UpdateUserID;
                OnGetUpdateUserID(ref value);
                return value;
            }
            set
            {
                if (_UpdateUserID != value)
                {
                  OnUpdateUserIDChanging(ref value);
                  ReportPropertyChanging("UpdateUserID");
                  _UpdateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UpdateUserID");
                  OnUpdateUserIDChanged();
              }
            }
        }
        private string _UpdateUserID;
        partial void OnGetUpdateUserID(ref string value);
        partial void OnUpdateUserIDChanging(ref string value);
        partial void OnUpdateUserIDChanged();
    
        /// <summary>
        /// There are no comments for UserFld1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld1
        {
            get
            {
                string value = _UserFld1;
                OnGetUserFld1(ref value);
                return value;
            }
            set
            {
                if (_UserFld1 != value)
                {
                  OnUserFld1Changing(ref value);
                  ReportPropertyChanging("UserFld1");
                  _UserFld1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld1");
                  OnUserFld1Changed();
              }
            }
        }
        private string _UserFld1;
        partial void OnGetUserFld1(ref string value);
        partial void OnUserFld1Changing(ref string value);
        partial void OnUserFld1Changed();
    
        /// <summary>
        /// There are no comments for UserFld2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld2
        {
            get
            {
                string value = _UserFld2;
                OnGetUserFld2(ref value);
                return value;
            }
            set
            {
                if (_UserFld2 != value)
                {
                  OnUserFld2Changing(ref value);
                  ReportPropertyChanging("UserFld2");
                  _UserFld2 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld2");
                  OnUserFld2Changed();
              }
            }
        }
        private string _UserFld2;
        partial void OnGetUserFld2(ref string value);
        partial void OnUserFld2Changing(ref string value);
        partial void OnUserFld2Changed();
    
        /// <summary>
        /// There are no comments for UserFld3 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld3
        {
            get
            {
                string value = _UserFld3;
                OnGetUserFld3(ref value);
                return value;
            }
            set
            {
                if (_UserFld3 != value)
                {
                  OnUserFld3Changing(ref value);
                  ReportPropertyChanging("UserFld3");
                  _UserFld3 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld3");
                  OnUserFld3Changed();
              }
            }
        }
        private string _UserFld3;
        partial void OnGetUserFld3(ref string value);
        partial void OnUserFld3Changing(ref string value);
        partial void OnUserFld3Changed();
    
        /// <summary>
        /// There are no comments for UserFld4 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld4
        {
            get
            {
                string value = _UserFld4;
                OnGetUserFld4(ref value);
                return value;
            }
            set
            {
                if (_UserFld4 != value)
                {
                  OnUserFld4Changing(ref value);
                  ReportPropertyChanging("UserFld4");
                  _UserFld4 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld4");
                  OnUserFld4Changed();
              }
            }
        }
        private string _UserFld4;
        partial void OnGetUserFld4(ref string value);
        partial void OnUserFld4Changing(ref string value);
        partial void OnUserFld4Changed();
    
        /// <summary>
        /// There are no comments for V1099Control in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string V1099Control
        {
            get
            {
                string value = _V1099Control;
                OnGetV1099Control(ref value);
                return value;
            }
            set
            {
                if (_V1099Control != value)
                {
                  OnV1099ControlChanging(ref value);
                  ReportPropertyChanging("V1099Control");
                  _V1099Control = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("V1099Control");
                  OnV1099ControlChanged();
              }
            }
        }
        private string _V1099Control;
        partial void OnGetV1099Control(ref string value);
        partial void OnV1099ControlChanging(ref string value);
        partial void OnV1099ControlChanged();
    
        /// <summary>
        /// There are no comments for V1099Box in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string V1099Box
        {
            get
            {
                string value = _V1099Box;
                OnGetV1099Box(ref value);
                return value;
            }
            set
            {
                if (_V1099Box != value)
                {
                  OnV1099BoxChanging(ref value);
                  ReportPropertyChanging("V1099Box");
                  _V1099Box = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("V1099Box");
                  OnV1099BoxChanged();
              }
            }
        }
        private string _V1099Box;
        partial void OnGetV1099Box(ref string value);
        partial void OnV1099BoxChanging(ref string value);
        partial void OnV1099BoxChanged();
    
        /// <summary>
        /// There are no comments for V1099FATCA in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual short? V1099FATCA
        {
            get
            {
                short? value = _V1099FATCA;
                OnGetV1099FATCA(ref value);
                return value;
            }
            set
            {
                if (_V1099FATCA != value)
                {
                  OnV1099FATCAChanging(ref value);
                  ReportPropertyChanging("V1099FATCA");
                  _V1099FATCA = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("V1099FATCA");
                  OnV1099FATCAChanged();
              }
            }
        }
        private short? _V1099FATCA = 0;
        partial void OnGetV1099FATCA(ref short? value);
        partial void OnV1099FATCAChanging(ref short? value);
        partial void OnV1099FATCAChanged();
    
        /// <summary>
        /// There are no comments for V1099Form in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual short? V1099Form
        {
            get
            {
                short? value = _V1099Form;
                OnGetV1099Form(ref value);
                return value;
            }
            set
            {
                if (_V1099Form != value)
                {
                  OnV1099FormChanging(ref value);
                  ReportPropertyChanging("V1099Form");
                  _V1099Form = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("V1099Form");
                  OnV1099FormChanged();
              }
            }
        }
        private short? _V1099Form;
        partial void OnGetV1099Form(ref short? value);
        partial void OnV1099FormChanging(ref short? value);
        partial void OnV1099FormChanged();
    
        /// <summary>
        /// There are no comments for V1099Type in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short V1099Type
        {
            get
            {
                short value = _V1099Type;
                OnGetV1099Type(ref value);
                return value;
            }
            set
            {
                if (_V1099Type != value)
                {
                  OnV1099TypeChanging(ref value);
                  ReportPropertyChanging("V1099Type");
                  _V1099Type = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("V1099Type");
                  OnV1099TypeChanged();
              }
            }
        }
        private short _V1099Type = 3;
        partial void OnGetV1099Type(ref short value);
        partial void OnV1099TypeChanging(ref short value);
        partial void OnV1099TypeChanged();
    
        /// <summary>
        /// There are no comments for VendClassKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int VendClassKey
        {
            get
            {
                int value = _VendClassKey;
                OnGetVendClassKey(ref value);
                return value;
            }
            set
            {
                if (_VendClassKey != value)
                {
                  OnVendClassKeyChanging(ref value);
                  ReportPropertyChanging("VendClassKey");
                  _VendClassKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VendClassKey");
                  OnVendClassKeyChanged();
              }
            }
        }
        private int _VendClassKey;
        partial void OnGetVendClassKey(ref int value);
        partial void OnVendClassKeyChanging(ref int value);
        partial void OnVendClassKeyChanged();
    
        /// <summary>
        /// There are no comments for VendDBA in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string VendDBA
        {
            get
            {
                string value = _VendDBA;
                OnGetVendDBA(ref value);
                return value;
            }
            set
            {
                if (_VendDBA != value)
                {
                  OnVendDBAChanging(ref value);
                  ReportPropertyChanging("VendDBA");
                  _VendDBA = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("VendDBA");
                  OnVendDBAChanged();
              }
            }
        }
        private string _VendDBA;
        partial void OnGetVendDBA(ref string value);
        partial void OnVendDBAChanging(ref string value);
        partial void OnVendDBAChanged();
    
        /// <summary>
        /// There are no comments for VendID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupTextReturn]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Proveedor")]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"Proveedor")]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        public virtual string VendID
        {
            get
            {
                string value = _VendID;
                OnGetVendID(ref value);
                return value;
            }
            set
            {
                if (_VendID != value)
                {
                  OnVendIDChanging(ref value);
                  ReportPropertyChanging("VendID");
                  _VendID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("VendID");
                  OnVendIDChanged();
              }
            }
        }
        private string _VendID;
        partial void OnGetVendID(ref string value);
        partial void OnVendIDChanging(ref string value);
        partial void OnVendIDChanged();
    
        /// <summary>
        /// There are no comments for VendName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Nombre")]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"Nombre")]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        public virtual string VendName
        {
            get
            {
                string value = _VendName;
                OnGetVendName(ref value);
                return value;
            }
            set
            {
                if (_VendName != value)
                {
                  OnVendNameChanging(ref value);
                  ReportPropertyChanging("VendName");
                  _VendName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("VendName");
                  OnVendNameChanged();
              }
            }
        }
        private string _VendName;
        partial void OnGetVendName(ref string value);
        partial void OnVendNameChanging(ref string value);
        partial void OnVendNameChanged();
    
        /// <summary>
        /// There are no comments for VendPmtMethKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? VendPmtMethKey
        {
            get
            {
                int? value = _VendPmtMethKey;
                OnGetVendPmtMethKey(ref value);
                return value;
            }
            set
            {
                if (_VendPmtMethKey != value)
                {
                  OnVendPmtMethKeyChanging(ref value);
                  ReportPropertyChanging("VendPmtMethKey");
                  _VendPmtMethKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VendPmtMethKey");
                  OnVendPmtMethKeyChanged();
              }
            }
        }
        private int? _VendPmtMethKey;
        partial void OnGetVendPmtMethKey(ref int? value);
        partial void OnVendPmtMethKeyChanging(ref int? value);
        partial void OnVendPmtMethKeyChanged();
    
        /// <summary>
        /// There are no comments for VendRefNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string VendRefNo
        {
            get
            {
                string value = _VendRefNo;
                OnGetVendRefNo(ref value);
                return value;
            }
            set
            {
                if (_VendRefNo != value)
                {
                  OnVendRefNoChanging(ref value);
                  ReportPropertyChanging("VendRefNo");
                  _VendRefNo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("VendRefNo");
                  OnVendRefNoChanged();
              }
            }
        }
        private string _VendRefNo;
        partial void OnGetVendRefNo(ref string value);
        partial void OnVendRefNoChanging(ref string value);
        partial void OnVendRefNoChanged();
    
        /// <summary>
        /// There are no comments for VouchCmnt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string VouchCmnt
        {
            get
            {
                string value = _VouchCmnt;
                OnGetVouchCmnt(ref value);
                return value;
            }
            set
            {
                if (_VouchCmnt != value)
                {
                  OnVouchCmntChanging(ref value);
                  ReportPropertyChanging("VouchCmnt");
                  _VouchCmnt = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("VouchCmnt");
                  OnVouchCmntChanged();
              }
            }
        }
        private string _VouchCmnt;
        partial void OnGetVouchCmnt(ref string value);
        partial void OnVouchCmntChanging(ref string value);
        partial void OnVouchCmntChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Vouchers in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Vendor_Voucher", "Vouchers")]
        public virtual EntityCollection<Voucher> Vouchers
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Voucher>("Net4Sage.DataAccessModel.Vendor_Voucher", "Vouchers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Voucher>("Net4Sage.DataAccessModel.Vendor_Voucher", "Vouchers", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for VendPmts in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Vendor_VendPmt", "VendPmts")]
        public virtual EntityCollection<VendPmt> VendPmts
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<VendPmt>("Net4Sage.DataAccessModel.Vendor_VendPmt", "VendPmts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<VendPmt>("Net4Sage.DataAccessModel.Vendor_VendPmt", "VendPmts", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.CustomerPayment in the schema.
    /// </summary>
    /// <KeyProperties>
    /// CustPmtKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="CustomerPayment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustomerPayment : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CustomerPayment object.
        /// </summary>
        /// <param name="custPmtKey">Initial value of CustPmtKey.</param>
        /// <param name="batchKey">Initial value of BatchKey.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="createType">Initial value of CreateType.</param>
        /// <param name="currExchRate">Initial value of CurrExchRate.</param>
        /// <param name="currID">Initial value of CurrID.</param>
        /// <param name="custClassKey">Initial value of CustClassKey.</param>
        /// <param name="discTakenAmt">Initial value of DiscTakenAmt.</param>
        /// <param name="guarntdExchRate">Initial value of GuarntdExchRate.</param>
        /// <param name="manualChk">Initial value of ManualChk.</param>
        /// <param name="postDate">Initial value of PostDate.</param>
        /// <param name="refundAmt">Initial value of RefundAmt.</param>
        /// <param name="refundAmtHC">Initial value of RefundAmtHC.</param>
        /// <param name="tranAmt">Initial value of TranAmt.</param>
        /// <param name="tranAmtHC">Initial value of TranAmtHC.</param>
        /// <param name="tranDate">Initial value of TranDate.</param>
        /// <param name="tranID">Initial value of TranID.</param>
        /// <param name="tranNo">Initial value of TranNo.</param>
        /// <param name="tranType">Initial value of TranType.</param>
        /// <param name="unappliedAmt">Initial value of UnappliedAmt.</param>
        /// <param name="unappliedAmtHC">Initial value of UnappliedAmtHC.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        public static CustomerPayment CreateCustomerPayment(int custPmtKey, int batchKey, string companyID, short createType, double currExchRate, string currID, int custClassKey, decimal discTakenAmt, short guarntdExchRate, short manualChk, global::System.DateTime postDate, decimal refundAmt, decimal refundAmtHC, decimal tranAmt, decimal tranAmtHC, global::System.DateTime tranDate, string tranID, string tranNo, int tranType, decimal unappliedAmt, decimal unappliedAmtHC, int updateCounter)
        {
            CustomerPayment customerPayment = new CustomerPayment();
            customerPayment.CustPmtKey = custPmtKey;
            customerPayment.BatchKey = batchKey;
            customerPayment.CompanyID = companyID;
            customerPayment.CreateType = createType;
            customerPayment.CurrExchRate = currExchRate;
            customerPayment.CurrID = currID;
            customerPayment.CustClassKey = custClassKey;
            customerPayment.DiscTakenAmt = discTakenAmt;
            customerPayment.GuarntdExchRate = guarntdExchRate;
            customerPayment.ManualChk = manualChk;
            customerPayment.PostDate = postDate;
            customerPayment.RefundAmt = refundAmt;
            customerPayment.RefundAmtHC = refundAmtHC;
            customerPayment.TranAmt = tranAmt;
            customerPayment.TranAmtHC = tranAmtHC;
            customerPayment.TranDate = tranDate;
            customerPayment.TranID = tranID;
            customerPayment.TranNo = tranNo;
            customerPayment.TranType = tranType;
            customerPayment.UnappliedAmt = unappliedAmt;
            customerPayment.UnappliedAmtHC = unappliedAmtHC;
            customerPayment.UpdateCounter = updateCounter;
            return customerPayment;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for CustPmtKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustPmtKey
        {
            get
            {
                int value = _CustPmtKey;
                OnGetCustPmtKey(ref value);
                return value;
            }
            set
            {
                if (_CustPmtKey != value)
                {
                  OnCustPmtKeyChanging(ref value);
                  ReportPropertyChanging("CustPmtKey");
                  _CustPmtKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustPmtKey");
                  OnCustPmtKeyChanged();
              }
            }
        }
        private int _CustPmtKey;
        partial void OnGetCustPmtKey(ref int value);
        partial void OnCustPmtKeyChanging(ref int value);
        partial void OnCustPmtKeyChanged();
    
        /// <summary>
        /// There are no comments for BatchKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int BatchKey
        {
            get
            {
                int value = _BatchKey;
                OnGetBatchKey(ref value);
                return value;
            }
            set
            {
                if (_BatchKey != value)
                {
                  OnBatchKeyChanging(ref value);
                  ReportPropertyChanging("BatchKey");
                  _BatchKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BatchKey");
                  OnBatchKeyChanged();
              }
            }
        }
        private int _BatchKey;
        partial void OnGetBatchKey(ref int value);
        partial void OnBatchKeyChanging(ref int value);
        partial void OnBatchKeyChanged();
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for CreateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CreateDate
        {
            get
            {
                global::System.DateTime? value = _CreateDate;
                OnGetCreateDate(ref value);
                return value;
            }
            set
            {
                if (_CreateDate != value)
                {
                  OnCreateDateChanging(ref value);
                  ReportPropertyChanging("CreateDate");
                  _CreateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateDate");
                  OnCreateDateChanged();
              }
            }
        }
        private global::System.DateTime? _CreateDate;
        partial void OnGetCreateDate(ref global::System.DateTime? value);
        partial void OnCreateDateChanging(ref global::System.DateTime? value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// There are no comments for CreateType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CreateType
        {
            get
            {
                short value = _CreateType;
                OnGetCreateType(ref value);
                return value;
            }
            set
            {
                if (_CreateType != value)
                {
                  OnCreateTypeChanging(ref value);
                  ReportPropertyChanging("CreateType");
                  _CreateType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateType");
                  OnCreateTypeChanged();
              }
            }
        }
        private short _CreateType = 0;
        partial void OnGetCreateType(ref short value);
        partial void OnCreateTypeChanging(ref short value);
        partial void OnCreateTypeChanged();
    
        /// <summary>
        /// There are no comments for CreateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CreateUserID
        {
            get
            {
                string value = _CreateUserID;
                OnGetCreateUserID(ref value);
                return value;
            }
            set
            {
                if (_CreateUserID != value)
                {
                  OnCreateUserIDChanging(ref value);
                  ReportPropertyChanging("CreateUserID");
                  _CreateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CreateUserID");
                  OnCreateUserIDChanged();
              }
            }
        }
        private string _CreateUserID;
        partial void OnGetCreateUserID(ref string value);
        partial void OnCreateUserIDChanging(ref string value);
        partial void OnCreateUserIDChanged();
    
        /// <summary>
        /// There are no comments for CurrExchRate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual double CurrExchRate
        {
            get
            {
                double value = _CurrExchRate;
                OnGetCurrExchRate(ref value);
                return value;
            }
            set
            {
                if (_CurrExchRate != value)
                {
                  OnCurrExchRateChanging(ref value);
                  ReportPropertyChanging("CurrExchRate");
                  _CurrExchRate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CurrExchRate");
                  OnCurrExchRateChanged();
              }
            }
        }
        private double _CurrExchRate = 1;
        partial void OnGetCurrExchRate(ref double value);
        partial void OnCurrExchRateChanging(ref double value);
        partial void OnCurrExchRateChanged();
    
        /// <summary>
        /// There are no comments for CurrExchSchdKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CurrExchSchdKey
        {
            get
            {
                int? value = _CurrExchSchdKey;
                OnGetCurrExchSchdKey(ref value);
                return value;
            }
            set
            {
                if (_CurrExchSchdKey != value)
                {
                  OnCurrExchSchdKeyChanging(ref value);
                  ReportPropertyChanging("CurrExchSchdKey");
                  _CurrExchSchdKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CurrExchSchdKey");
                  OnCurrExchSchdKeyChanged();
              }
            }
        }
        private int? _CurrExchSchdKey;
        partial void OnGetCurrExchSchdKey(ref int? value);
        partial void OnCurrExchSchdKeyChanging(ref int? value);
        partial void OnCurrExchSchdKeyChanged();
    
        /// <summary>
        /// There are no comments for CurrID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CurrID
        {
            get
            {
                string value = _CurrID;
                OnGetCurrID(ref value);
                return value;
            }
            set
            {
                if (_CurrID != value)
                {
                  OnCurrIDChanging(ref value);
                  ReportPropertyChanging("CurrID");
                  _CurrID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CurrID");
                  OnCurrIDChanged();
              }
            }
        }
        private string _CurrID;
        partial void OnGetCurrID(ref string value);
        partial void OnCurrIDChanging(ref string value);
        partial void OnCurrIDChanged();
    
        /// <summary>
        /// There are no comments for CustClassKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustClassKey
        {
            get
            {
                int value = _CustClassKey;
                OnGetCustClassKey(ref value);
                return value;
            }
            set
            {
                if (_CustClassKey != value)
                {
                  OnCustClassKeyChanging(ref value);
                  ReportPropertyChanging("CustClassKey");
                  _CustClassKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustClassKey");
                  OnCustClassKeyChanged();
              }
            }
        }
        private int _CustClassKey;
        partial void OnGetCustClassKey(ref int value);
        partial void OnCustClassKeyChanging(ref int value);
        partial void OnCustClassKeyChanged();
    
        /// <summary>
        /// There are no comments for CustKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CustKey
        {
            get
            {
                int? value = _CustKey;
                OnGetCustKey(ref value);
                return value;
            }
            set
            {
                if (_CustKey != value)
                {
                  OnCustKeyChanging(ref value);
                  ReportPropertyChanging("CustKey");
                  _CustKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustKey");
                  OnCustKeyChanged();
              }
            }
        }
        private int? _CustKey;
        partial void OnGetCustKey(ref int? value);
        partial void OnCustKeyChanging(ref int? value);
        partial void OnCustKeyChanged();
    
        /// <summary>
        /// There are no comments for DiscTakenAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal DiscTakenAmt
        {
            get
            {
                decimal value = _DiscTakenAmt;
                OnGetDiscTakenAmt(ref value);
                return value;
            }
            set
            {
                if (_DiscTakenAmt != value)
                {
                  OnDiscTakenAmtChanging(ref value);
                  ReportPropertyChanging("DiscTakenAmt");
                  _DiscTakenAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DiscTakenAmt");
                  OnDiscTakenAmtChanged();
              }
            }
        }
        private decimal _DiscTakenAmt = 0m;
        partial void OnGetDiscTakenAmt(ref decimal value);
        partial void OnDiscTakenAmtChanging(ref decimal value);
        partial void OnDiscTakenAmtChanged();
    
        /// <summary>
        /// There are no comments for GuarntdExchRate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short GuarntdExchRate
        {
            get
            {
                short value = _GuarntdExchRate;
                OnGetGuarntdExchRate(ref value);
                return value;
            }
            set
            {
                if (_GuarntdExchRate != value)
                {
                  OnGuarntdExchRateChanging(ref value);
                  ReportPropertyChanging("GuarntdExchRate");
                  _GuarntdExchRate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("GuarntdExchRate");
                  OnGuarntdExchRateChanged();
              }
            }
        }
        private short _GuarntdExchRate = 0;
        partial void OnGetGuarntdExchRate(ref short value);
        partial void OnGuarntdExchRateChanging(ref short value);
        partial void OnGuarntdExchRateChanged();
    
        /// <summary>
        /// There are no comments for ManualChk in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ManualChk
        {
            get
            {
                short value = _ManualChk;
                OnGetManualChk(ref value);
                return value;
            }
            set
            {
                if (_ManualChk != value)
                {
                  OnManualChkChanging(ref value);
                  ReportPropertyChanging("ManualChk");
                  _ManualChk = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ManualChk");
                  OnManualChkChanged();
              }
            }
        }
        private short _ManualChk = 0;
        partial void OnGetManualChk(ref short value);
        partial void OnManualChkChanging(ref short value);
        partial void OnManualChkChanged();
    
        /// <summary>
        /// There are no comments for NextApplEntryNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? NextApplEntryNo
        {
            get
            {
                int? value = _NextApplEntryNo;
                OnGetNextApplEntryNo(ref value);
                return value;
            }
            set
            {
                if (_NextApplEntryNo != value)
                {
                  OnNextApplEntryNoChanging(ref value);
                  ReportPropertyChanging("NextApplEntryNo");
                  _NextApplEntryNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NextApplEntryNo");
                  OnNextApplEntryNoChanged();
              }
            }
        }
        private int? _NextApplEntryNo;
        partial void OnGetNextApplEntryNo(ref int? value);
        partial void OnNextApplEntryNoChanging(ref int? value);
        partial void OnNextApplEntryNoChanged();
    
        /// <summary>
        /// There are no comments for PmtRcptDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? PmtRcptDate
        {
            get
            {
                global::System.DateTime? value = _PmtRcptDate;
                OnGetPmtRcptDate(ref value);
                return value;
            }
            set
            {
                if (_PmtRcptDate != value)
                {
                  OnPmtRcptDateChanging(ref value);
                  ReportPropertyChanging("PmtRcptDate");
                  _PmtRcptDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PmtRcptDate");
                  OnPmtRcptDateChanged();
              }
            }
        }
        private global::System.DateTime? _PmtRcptDate;
        partial void OnGetPmtRcptDate(ref global::System.DateTime? value);
        partial void OnPmtRcptDateChanging(ref global::System.DateTime? value);
        partial void OnPmtRcptDateChanged();
    
        /// <summary>
        /// There are no comments for PostDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime PostDate
        {
            get
            {
                global::System.DateTime value = _PostDate;
                OnGetPostDate(ref value);
                return value;
            }
            set
            {
                if (_PostDate != value)
                {
                  OnPostDateChanging(ref value);
                  ReportPropertyChanging("PostDate");
                  _PostDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PostDate");
                  OnPostDateChanged();
              }
            }
        }
        private global::System.DateTime _PostDate;
        partial void OnGetPostDate(ref global::System.DateTime value);
        partial void OnPostDateChanging(ref global::System.DateTime value);
        partial void OnPostDateChanged();
    
        /// <summary>
        /// There are no comments for PrepaidCustInvcNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PrepaidCustInvcNo
        {
            get
            {
                string value = _PrepaidCustInvcNo;
                OnGetPrepaidCustInvcNo(ref value);
                return value;
            }
            set
            {
                if (_PrepaidCustInvcNo != value)
                {
                  OnPrepaidCustInvcNoChanging(ref value);
                  ReportPropertyChanging("PrepaidCustInvcNo");
                  _PrepaidCustInvcNo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PrepaidCustInvcNo");
                  OnPrepaidCustInvcNoChanged();
              }
            }
        }
        private string _PrepaidCustInvcNo;
        partial void OnGetPrepaidCustInvcNo(ref string value);
        partial void OnPrepaidCustInvcNoChanging(ref string value);
        partial void OnPrepaidCustInvcNoChanged();
    
        /// <summary>
        /// There are no comments for RefundAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal RefundAmt
        {
            get
            {
                decimal value = _RefundAmt;
                OnGetRefundAmt(ref value);
                return value;
            }
            set
            {
                if (_RefundAmt != value)
                {
                  OnRefundAmtChanging(ref value);
                  ReportPropertyChanging("RefundAmt");
                  _RefundAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RefundAmt");
                  OnRefundAmtChanged();
              }
            }
        }
        private decimal _RefundAmt = 0m;
        partial void OnGetRefundAmt(ref decimal value);
        partial void OnRefundAmtChanging(ref decimal value);
        partial void OnRefundAmtChanged();
    
        /// <summary>
        /// There are no comments for RefundAmtHC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal RefundAmtHC
        {
            get
            {
                decimal value = _RefundAmtHC;
                OnGetRefundAmtHC(ref value);
                return value;
            }
            set
            {
                if (_RefundAmtHC != value)
                {
                  OnRefundAmtHCChanging(ref value);
                  ReportPropertyChanging("RefundAmtHC");
                  _RefundAmtHC = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RefundAmtHC");
                  OnRefundAmtHCChanged();
              }
            }
        }
        private decimal _RefundAmtHC = 0m;
        partial void OnGetRefundAmtHC(ref decimal value);
        partial void OnRefundAmtHCChanging(ref decimal value);
        partial void OnRefundAmtHCChanged();
    
        /// <summary>
        /// There are no comments for RefundCustPmtKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? RefundCustPmtKey
        {
            get
            {
                int? value = _RefundCustPmtKey;
                OnGetRefundCustPmtKey(ref value);
                return value;
            }
            set
            {
                if (_RefundCustPmtKey != value)
                {
                  OnRefundCustPmtKeyChanging(ref value);
                  ReportPropertyChanging("RefundCustPmtKey");
                  _RefundCustPmtKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RefundCustPmtKey");
                  OnRefundCustPmtKeyChanged();
              }
            }
        }
        private int? _RefundCustPmtKey;
        partial void OnGetRefundCustPmtKey(ref int? value);
        partial void OnRefundCustPmtKeyChanging(ref int? value);
        partial void OnRefundCustPmtKeyChanged();
    
        /// <summary>
        /// There are no comments for RevrsCustPmtKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? RevrsCustPmtKey
        {
            get
            {
                int? value = _RevrsCustPmtKey;
                OnGetRevrsCustPmtKey(ref value);
                return value;
            }
            set
            {
                if (_RevrsCustPmtKey != value)
                {
                  OnRevrsCustPmtKeyChanging(ref value);
                  ReportPropertyChanging("RevrsCustPmtKey");
                  _RevrsCustPmtKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RevrsCustPmtKey");
                  OnRevrsCustPmtKeyChanged();
              }
            }
        }
        private int? _RevrsCustPmtKey;
        partial void OnGetRevrsCustPmtKey(ref int? value);
        partial void OnRevrsCustPmtKeyChanging(ref int? value);
        partial void OnRevrsCustPmtKeyChanged();
    
        /// <summary>
        /// There are no comments for TranAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal TranAmt
        {
            get
            {
                decimal value = _TranAmt;
                OnGetTranAmt(ref value);
                return value;
            }
            set
            {
                if (_TranAmt != value)
                {
                  OnTranAmtChanging(ref value);
                  ReportPropertyChanging("TranAmt");
                  _TranAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranAmt");
                  OnTranAmtChanged();
              }
            }
        }
        private decimal _TranAmt = 0m;
        partial void OnGetTranAmt(ref decimal value);
        partial void OnTranAmtChanging(ref decimal value);
        partial void OnTranAmtChanged();
    
        /// <summary>
        /// There are no comments for TranAmtHC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal TranAmtHC
        {
            get
            {
                decimal value = _TranAmtHC;
                OnGetTranAmtHC(ref value);
                return value;
            }
            set
            {
                if (_TranAmtHC != value)
                {
                  OnTranAmtHCChanging(ref value);
                  ReportPropertyChanging("TranAmtHC");
                  _TranAmtHC = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranAmtHC");
                  OnTranAmtHCChanged();
              }
            }
        }
        private decimal _TranAmtHC = 0m;
        partial void OnGetTranAmtHC(ref decimal value);
        partial void OnTranAmtHCChanging(ref decimal value);
        partial void OnTranAmtHCChanged();
    
        /// <summary>
        /// There are no comments for TranCmnt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string TranCmnt
        {
            get
            {
                string value = _TranCmnt;
                OnGetTranCmnt(ref value);
                return value;
            }
            set
            {
                if (_TranCmnt != value)
                {
                  OnTranCmntChanging(ref value);
                  ReportPropertyChanging("TranCmnt");
                  _TranCmnt = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TranCmnt");
                  OnTranCmntChanged();
              }
            }
        }
        private string _TranCmnt;
        partial void OnGetTranCmnt(ref string value);
        partial void OnTranCmntChanging(ref string value);
        partial void OnTranCmntChanged();
    
        /// <summary>
        /// There are no comments for TranDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime TranDate
        {
            get
            {
                global::System.DateTime value = _TranDate;
                OnGetTranDate(ref value);
                return value;
            }
            set
            {
                if (_TranDate != value)
                {
                  OnTranDateChanging(ref value);
                  ReportPropertyChanging("TranDate");
                  _TranDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranDate");
                  OnTranDateChanged();
              }
            }
        }
        private global::System.DateTime _TranDate;
        partial void OnGetTranDate(ref global::System.DateTime value);
        partial void OnTranDateChanging(ref global::System.DateTime value);
        partial void OnTranDateChanged();
    
        /// <summary>
        /// There are no comments for TranID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string TranID
        {
            get
            {
                string value = _TranID;
                OnGetTranID(ref value);
                return value;
            }
            set
            {
                if (_TranID != value)
                {
                  OnTranIDChanging(ref value);
                  ReportPropertyChanging("TranID");
                  _TranID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TranID");
                  OnTranIDChanged();
              }
            }
        }
        private string _TranID;
        partial void OnGetTranID(ref string value);
        partial void OnTranIDChanging(ref string value);
        partial void OnTranIDChanged();
    
        /// <summary>
        /// There are no comments for TranNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string TranNo
        {
            get
            {
                string value = _TranNo;
                OnGetTranNo(ref value);
                return value;
            }
            set
            {
                if (_TranNo != value)
                {
                  OnTranNoChanging(ref value);
                  ReportPropertyChanging("TranNo");
                  _TranNo = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TranNo");
                  OnTranNoChanged();
              }
            }
        }
        private string _TranNo;
        partial void OnGetTranNo(ref string value);
        partial void OnTranNoChanging(ref string value);
        partial void OnTranNoChanged();
    
        /// <summary>
        /// There are no comments for TranType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int TranType
        {
            get
            {
                int value = _TranType;
                OnGetTranType(ref value);
                return value;
            }
            set
            {
                if (_TranType != value)
                {
                  OnTranTypeChanging(ref value);
                  ReportPropertyChanging("TranType");
                  _TranType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranType");
                  OnTranTypeChanged();
              }
            }
        }
        private int _TranType;
        partial void OnGetTranType(ref int value);
        partial void OnTranTypeChanging(ref int value);
        partial void OnTranTypeChanged();
    
        /// <summary>
        /// There are no comments for UnappliedAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal UnappliedAmt
        {
            get
            {
                decimal value = _UnappliedAmt;
                OnGetUnappliedAmt(ref value);
                return value;
            }
            set
            {
                if (_UnappliedAmt != value)
                {
                  OnUnappliedAmtChanging(ref value);
                  ReportPropertyChanging("UnappliedAmt");
                  _UnappliedAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UnappliedAmt");
                  OnUnappliedAmtChanged();
              }
            }
        }
        private decimal _UnappliedAmt = 0m;
        partial void OnGetUnappliedAmt(ref decimal value);
        partial void OnUnappliedAmtChanging(ref decimal value);
        partial void OnUnappliedAmtChanged();
    
        /// <summary>
        /// There are no comments for UnappliedAmtHC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal UnappliedAmtHC
        {
            get
            {
                decimal value = _UnappliedAmtHC;
                OnGetUnappliedAmtHC(ref value);
                return value;
            }
            set
            {
                if (_UnappliedAmtHC != value)
                {
                  OnUnappliedAmtHCChanging(ref value);
                  ReportPropertyChanging("UnappliedAmtHC");
                  _UnappliedAmtHC = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UnappliedAmtHC");
                  OnUnappliedAmtHCChanged();
              }
            }
        }
        private decimal _UnappliedAmtHC = 0m;
        partial void OnGetUnappliedAmtHC(ref decimal value);
        partial void OnUnappliedAmtHCChanging(ref decimal value);
        partial void OnUnappliedAmtHCChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();
    
        /// <summary>
        /// There are no comments for UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? UpdateDate
        {
            get
            {
                global::System.DateTime? value = _UpdateDate;
                OnGetUpdateDate(ref value);
                return value;
            }
            set
            {
                if (_UpdateDate != value)
                {
                  OnUpdateDateChanging(ref value);
                  ReportPropertyChanging("UpdateDate");
                  _UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateDate");
                  OnUpdateDateChanged();
              }
            }
        }
        private global::System.DateTime? _UpdateDate;
        partial void OnGetUpdateDate(ref global::System.DateTime? value);
        partial void OnUpdateDateChanging(ref global::System.DateTime? value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// There are no comments for UpdateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UpdateUserID
        {
            get
            {
                string value = _UpdateUserID;
                OnGetUpdateUserID(ref value);
                return value;
            }
            set
            {
                if (_UpdateUserID != value)
                {
                  OnUpdateUserIDChanging(ref value);
                  ReportPropertyChanging("UpdateUserID");
                  _UpdateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UpdateUserID");
                  OnUpdateUserIDChanged();
              }
            }
        }
        private string _UpdateUserID;
        partial void OnGetUpdateUserID(ref string value);
        partial void OnUpdateUserIDChanging(ref string value);
        partial void OnUpdateUserIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Customer in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Customer_CustomerPmt", "Customer")]
        public virtual Customer Customer
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customer>("Net4Sage.DataAccessModel.Customer_CustomerPmt", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customer>("Net4Sage.DataAccessModel.Customer_CustomerPmt", "Customer").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Customer in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customer>("Net4Sage.DataAccessModel.Customer_CustomerPmt", "Customer");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Customer>("Net4Sage.DataAccessModel.Customer_CustomerPmt", "Customer", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customer>("Net4Sage.DataAccessModel.Customer_CustomerPmt", "Customer").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CustomersClass in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "CustomersClass_CustomerPmt", "CustomersClass")]
        public virtual CustomersClass CustomersClass
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustomersClass>("Net4Sage.DataAccessModel.CustomersClass_CustomerPmt", "CustomersClass").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustomersClass>("Net4Sage.DataAccessModel.CustomersClass_CustomerPmt", "CustomersClass").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for CustomersClass in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustomersClass> CustomersClassReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustomersClass>("Net4Sage.DataAccessModel.CustomersClass_CustomerPmt", "CustomersClass");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CustomersClass>("Net4Sage.DataAccessModel.CustomersClass_CustomerPmt", "CustomersClass", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustomersClass>("Net4Sage.DataAccessModel.CustomersClass_CustomerPmt", "CustomersClass").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CustomerPaymentLog in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "CustomerPaymentLog_CustomerPayment", "CustomerPaymentLog")]
        public virtual CustomerPaymentLog CustomerPaymentLog
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustomerPaymentLog>("Net4Sage.DataAccessModel.CustomerPaymentLog_CustomerPayment", "CustomerPaymentLog").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustomerPaymentLog>("Net4Sage.DataAccessModel.CustomerPaymentLog_CustomerPayment", "CustomerPaymentLog").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for CustomerPaymentLog in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustomerPaymentLog> CustomerPaymentLogReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustomerPaymentLog>("Net4Sage.DataAccessModel.CustomerPaymentLog_CustomerPayment", "CustomerPaymentLog");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CustomerPaymentLog>("Net4Sage.DataAccessModel.CustomerPaymentLog_CustomerPayment", "CustomerPaymentLog", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustomerPaymentLog>("Net4Sage.DataAccessModel.CustomerPaymentLog_CustomerPayment", "CustomerPaymentLog").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.Invoice in the schema.
    /// </summary>
    /// <KeyProperties>
    /// InvcKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="Invoice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Invoice : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Invoice object.
        /// </summary>
        /// <param name="invcKey">Initial value of InvcKey.</param>
        /// <param name="authOvrdAmt">Initial value of AuthOvrdAmt.</param>
        /// <param name="balance">Initial value of Balance.</param>
        /// <param name="balanceHC">Initial value of BalanceHC.</param>
        /// <param name="batchKey">Initial value of BatchKey.</param>
        /// <param name="billToAddrKey">Initial value of BillToAddrKey.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="costOfSales">Initial value of CostOfSales.</param>
        /// <param name="createType">Initial value of CreateType.</param>
        /// <param name="currExchRate">Initial value of CurrExchRate.</param>
        /// <param name="currID">Initial value of CurrID.</param>
        /// <param name="custClassKey">Initial value of CustClassKey.</param>
        /// <param name="custKey">Initial value of CustKey.</param>
        /// <param name="discAmt">Initial value of DiscAmt.</param>
        /// <param name="discTakenAmt">Initial value of DiscTakenAmt.</param>
        /// <param name="handlAmt">Initial value of HandlAmt.</param>
        /// <param name="inDispute">Initial value of InDispute.</param>
        /// <param name="postDate">Initial value of PostDate.</param>
        /// <param name="printed">Initial value of Printed.</param>
        /// <param name="retntAmt">Initial value of RetntAmt.</param>
        /// <param name="salesAmt">Initial value of SalesAmt.</param>
        /// <param name="shipAmt">Initial value of ShipAmt.</param>
        /// <param name="shipToAddrKey">Initial value of ShipToAddrKey.</param>
        /// <param name="sourceModule">Initial value of SourceModule.</param>
        /// <param name="status">Initial value of Status.</param>
        /// <param name="sTaxAmt">Initial value of STaxAmt.</param>
        /// <param name="sTaxCalc">Initial value of STaxCalc.</param>
        /// <param name="tradeDiscAmt">Initial value of TradeDiscAmt.</param>
        /// <param name="tranAmt">Initial value of TranAmt.</param>
        /// <param name="tranAmtHC">Initial value of TranAmtHC.</param>
        /// <param name="tranDate">Initial value of TranDate.</param>
        /// <param name="tranID">Initial value of TranID.</param>
        /// <param name="tranNo">Initial value of TranNo.</param>
        /// <param name="transmitted">Initial value of Transmitted.</param>
        /// <param name="tranType">Initial value of TranType.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        public static Invoice CreateInvoice(int invcKey, decimal authOvrdAmt, decimal balance, decimal balanceHC, int batchKey, int billToAddrKey, string companyID, decimal costOfSales, short createType, double currExchRate, string currID, int custClassKey, int custKey, decimal discAmt, decimal discTakenAmt, decimal handlAmt, short inDispute, global::System.DateTime postDate, short printed, decimal retntAmt, decimal salesAmt, decimal shipAmt, int shipToAddrKey, short sourceModule, short status, decimal sTaxAmt, short sTaxCalc, decimal tradeDiscAmt, decimal tranAmt, decimal tranAmtHC, global::System.DateTime tranDate, string tranID, string tranNo, short transmitted, int tranType, int updateCounter)
        {
            Invoice invoice = new Invoice();
            invoice.InvcKey = invcKey;
            invoice.AuthOvrdAmt = authOvrdAmt;
            invoice.Balance = balance;
            invoice.BalanceHC = balanceHC;
            invoice.BatchKey = batchKey;
            invoice.BillToAddrKey = billToAddrKey;
            invoice.CompanyID = companyID;
            invoice.CostOfSales = costOfSales;
            invoice.CreateType = createType;
            invoice.CurrExchRate = currExchRate;
            invoice.CurrID = currID;
            invoice.CustClassKey = custClassKey;
            invoice.CustKey = custKey;
            invoice.DiscAmt = discAmt;
            invoice.DiscTakenAmt = discTakenAmt;
            invoice.HandlAmt = handlAmt;
            invoice.InDispute = inDispute;
            invoice.PostDate = postDate;
            invoice.Printed = printed;
            invoice.RetntAmt = retntAmt;
            invoice.SalesAmt = salesAmt;
            invoice.ShipAmt = shipAmt;
            invoice.ShipToAddrKey = shipToAddrKey;
            invoice.SourceModule = sourceModule;
            invoice.Status = status;
            invoice.STaxAmt = sTaxAmt;
            invoice.STaxCalc = sTaxCalc;
            invoice.TradeDiscAmt = tradeDiscAmt;
            invoice.TranAmt = tranAmt;
            invoice.TranAmtHC = tranAmtHC;
            invoice.TranDate = tranDate;
            invoice.TranID = tranID;
            invoice.TranNo = tranNo;
            invoice.Transmitted = transmitted;
            invoice.TranType = tranType;
            invoice.UpdateCounter = updateCounter;
            return invoice;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for InvcKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvcKey
        {
            get
            {
                int value = _InvcKey;
                OnGetInvcKey(ref value);
                return value;
            }
            set
            {
                if (_InvcKey != value)
                {
                  OnInvcKeyChanging(ref value);
                  ReportPropertyChanging("InvcKey");
                  _InvcKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvcKey");
                  OnInvcKeyChanged();
              }
            }
        }
        private int _InvcKey;
        partial void OnGetInvcKey(ref int value);
        partial void OnInvcKeyChanging(ref int value);
        partial void OnInvcKeyChanged();
    
        /// <summary>
        /// There are no comments for AuthOvrdAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal AuthOvrdAmt
        {
            get
            {
                decimal value = _AuthOvrdAmt;
                OnGetAuthOvrdAmt(ref value);
                return value;
            }
            set
            {
                if (_AuthOvrdAmt != value)
                {
                  OnAuthOvrdAmtChanging(ref value);
                  ReportPropertyChanging("AuthOvrdAmt");
                  _AuthOvrdAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AuthOvrdAmt");
                  OnAuthOvrdAmtChanged();
              }
            }
        }
        private decimal _AuthOvrdAmt = 0m;
        partial void OnGetAuthOvrdAmt(ref decimal value);
        partial void OnAuthOvrdAmtChanging(ref decimal value);
        partial void OnAuthOvrdAmtChanged();
    
        /// <summary>
        /// There are no comments for Balance in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal Balance
        {
            get
            {
                decimal value = _Balance;
                OnGetBalance(ref value);
                return value;
            }
            set
            {
                if (_Balance != value)
                {
                  OnBalanceChanging(ref value);
                  ReportPropertyChanging("Balance");
                  _Balance = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Balance");
                  OnBalanceChanged();
              }
            }
        }
        private decimal _Balance = 0m;
        partial void OnGetBalance(ref decimal value);
        partial void OnBalanceChanging(ref decimal value);
        partial void OnBalanceChanged();
    
        /// <summary>
        /// There are no comments for BalanceHC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal BalanceHC
        {
            get
            {
                decimal value = _BalanceHC;
                OnGetBalanceHC(ref value);
                return value;
            }
            set
            {
                if (_BalanceHC != value)
                {
                  OnBalanceHCChanging(ref value);
                  ReportPropertyChanging("BalanceHC");
                  _BalanceHC = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BalanceHC");
                  OnBalanceHCChanged();
              }
            }
        }
        private decimal _BalanceHC = 0m;
        partial void OnGetBalanceHC(ref decimal value);
        partial void OnBalanceHCChanging(ref decimal value);
        partial void OnBalanceHCChanged();
    
        /// <summary>
        /// There are no comments for BatchKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int BatchKey
        {
            get
            {
                int value = _BatchKey;
                OnGetBatchKey(ref value);
                return value;
            }
            set
            {
                if (_BatchKey != value)
                {
                  OnBatchKeyChanging(ref value);
                  ReportPropertyChanging("BatchKey");
                  _BatchKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BatchKey");
                  OnBatchKeyChanged();
              }
            }
        }
        private int _BatchKey;
        partial void OnGetBatchKey(ref int value);
        partial void OnBatchKeyChanging(ref int value);
        partial void OnBatchKeyChanged();
    
        /// <summary>
        /// There are no comments for BillToAddrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int BillToAddrKey
        {
            get
            {
                int value = _BillToAddrKey;
                OnGetBillToAddrKey(ref value);
                return value;
            }
            set
            {
                if (_BillToAddrKey != value)
                {
                  OnBillToAddrKeyChanging(ref value);
                  ReportPropertyChanging("BillToAddrKey");
                  _BillToAddrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BillToAddrKey");
                  OnBillToAddrKeyChanged();
              }
            }
        }
        private int _BillToAddrKey;
        partial void OnGetBillToAddrKey(ref int value);
        partial void OnBillToAddrKeyChanging(ref int value);
        partial void OnBillToAddrKeyChanged();
    
        /// <summary>
        /// There are no comments for BillToCustAddrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? BillToCustAddrKey
        {
            get
            {
                int? value = _BillToCustAddrKey;
                OnGetBillToCustAddrKey(ref value);
                return value;
            }
            set
            {
                if (_BillToCustAddrKey != value)
                {
                  OnBillToCustAddrKeyChanging(ref value);
                  ReportPropertyChanging("BillToCustAddrKey");
                  _BillToCustAddrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BillToCustAddrKey");
                  OnBillToCustAddrKeyChanged();
              }
            }
        }
        private int? _BillToCustAddrKey;
        partial void OnGetBillToCustAddrKey(ref int? value);
        partial void OnBillToCustAddrKeyChanging(ref int? value);
        partial void OnBillToCustAddrKeyChanged();
    
        /// <summary>
        /// There are no comments for ClosingPostDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? ClosingPostDate
        {
            get
            {
                global::System.DateTime? value = _ClosingPostDate;
                OnGetClosingPostDate(ref value);
                return value;
            }
            set
            {
                if (_ClosingPostDate != value)
                {
                  OnClosingPostDateChanging(ref value);
                  ReportPropertyChanging("ClosingPostDate");
                  _ClosingPostDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ClosingPostDate");
                  OnClosingPostDateChanged();
              }
            }
        }
        private global::System.DateTime? _ClosingPostDate;
        partial void OnGetClosingPostDate(ref global::System.DateTime? value);
        partial void OnClosingPostDateChanging(ref global::System.DateTime? value);
        partial void OnClosingPostDateChanged();
    
        /// <summary>
        /// There are no comments for ClosingTranDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? ClosingTranDate
        {
            get
            {
                global::System.DateTime? value = _ClosingTranDate;
                OnGetClosingTranDate(ref value);
                return value;
            }
            set
            {
                if (_ClosingTranDate != value)
                {
                  OnClosingTranDateChanging(ref value);
                  ReportPropertyChanging("ClosingTranDate");
                  _ClosingTranDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ClosingTranDate");
                  OnClosingTranDateChanged();
              }
            }
        }
        private global::System.DateTime? _ClosingTranDate;
        partial void OnGetClosingTranDate(ref global::System.DateTime? value);
        partial void OnClosingTranDateChanging(ref global::System.DateTime? value);
        partial void OnClosingTranDateChanged();
    
        /// <summary>
        /// There are no comments for CommPlanKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CommPlanKey
        {
            get
            {
                int? value = _CommPlanKey;
                OnGetCommPlanKey(ref value);
                return value;
            }
            set
            {
                if (_CommPlanKey != value)
                {
                  OnCommPlanKeyChanging(ref value);
                  ReportPropertyChanging("CommPlanKey");
                  _CommPlanKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CommPlanKey");
                  OnCommPlanKeyChanged();
              }
            }
        }
        private int? _CommPlanKey;
        partial void OnGetCommPlanKey(ref int? value);
        partial void OnCommPlanKeyChanging(ref int? value);
        partial void OnCommPlanKeyChanged();
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for ConfirmToCntctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ConfirmToCntctKey
        {
            get
            {
                int? value = _ConfirmToCntctKey;
                OnGetConfirmToCntctKey(ref value);
                return value;
            }
            set
            {
                if (_ConfirmToCntctKey != value)
                {
                  OnConfirmToCntctKeyChanging(ref value);
                  ReportPropertyChanging("ConfirmToCntctKey");
                  _ConfirmToCntctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ConfirmToCntctKey");
                  OnConfirmToCntctKeyChanged();
              }
            }
        }
        private int? _ConfirmToCntctKey;
        partial void OnGetConfirmToCntctKey(ref int? value);
        partial void OnConfirmToCntctKeyChanging(ref int? value);
        partial void OnConfirmToCntctKeyChanged();
    
        /// <summary>
        /// There are no comments for CostOfSales in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal CostOfSales
        {
            get
            {
                decimal value = _CostOfSales;
                OnGetCostOfSales(ref value);
                return value;
            }
            set
            {
                if (_CostOfSales != value)
                {
                  OnCostOfSalesChanging(ref value);
                  ReportPropertyChanging("CostOfSales");
                  _CostOfSales = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CostOfSales");
                  OnCostOfSalesChanged();
              }
            }
        }
        private decimal _CostOfSales = 0m;
        partial void OnGetCostOfSales(ref decimal value);
        partial void OnCostOfSalesChanging(ref decimal value);
        partial void OnCostOfSalesChanged();
    
        /// <summary>
        /// There are no comments for CreateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CreateDate
        {
            get
            {
                global::System.DateTime? value = _CreateDate;
                OnGetCreateDate(ref value);
                return value;
            }
            set
            {
                if (_CreateDate != value)
                {
                  OnCreateDateChanging(ref value);
                  ReportPropertyChanging("CreateDate");
                  _CreateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateDate");
                  OnCreateDateChanged();
              }
            }
        }
        private global::System.DateTime? _CreateDate;
        partial void OnGetCreateDate(ref global::System.DateTime? value);
        partial void OnCreateDateChanging(ref global::System.DateTime? value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// There are no comments for CreateType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CreateType
        {
            get
            {
                short value = _CreateType;
                OnGetCreateType(ref value);
                return value;
            }
            set
            {
                if (_CreateType != value)
                {
                  OnCreateTypeChanging(ref value);
                  ReportPropertyChanging("CreateType");
                  _CreateType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateType");
                  OnCreateTypeChanged();
              }
            }
        }
        private short _CreateType = 0;
        partial void OnGetCreateType(ref short value);
        partial void OnCreateTypeChanging(ref short value);
        partial void OnCreateTypeChanged();
    
        /// <summary>
        /// There are no comments for CreateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CreateUserID
        {
            get
            {
                string value = _CreateUserID;
                OnGetCreateUserID(ref value);
                return value;
            }
            set
            {
                if (_CreateUserID != value)
                {
                  OnCreateUserIDChanging(ref value);
                  ReportPropertyChanging("CreateUserID");
                  _CreateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CreateUserID");
                  OnCreateUserIDChanged();
              }
            }
        }
        private string _CreateUserID;
        partial void OnGetCreateUserID(ref string value);
        partial void OnCreateUserIDChanging(ref string value);
        partial void OnCreateUserIDChanged();
    
        /// <summary>
        /// There are no comments for CurrExchRate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual double CurrExchRate
        {
            get
            {
                double value = _CurrExchRate;
                OnGetCurrExchRate(ref value);
                return value;
            }
            set
            {
                if (_CurrExchRate != value)
                {
                  OnCurrExchRateChanging(ref value);
                  ReportPropertyChanging("CurrExchRate");
                  _CurrExchRate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CurrExchRate");
                  OnCurrExchRateChanged();
              }
            }
        }
        private double _CurrExchRate = 1;
        partial void OnGetCurrExchRate(ref double value);
        partial void OnCurrExchRateChanging(ref double value);
        partial void OnCurrExchRateChanged();
    
        /// <summary>
        /// There are no comments for CurrExchSchdKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CurrExchSchdKey
        {
            get
            {
                int? value = _CurrExchSchdKey;
                OnGetCurrExchSchdKey(ref value);
                return value;
            }
            set
            {
                if (_CurrExchSchdKey != value)
                {
                  OnCurrExchSchdKeyChanging(ref value);
                  ReportPropertyChanging("CurrExchSchdKey");
                  _CurrExchSchdKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CurrExchSchdKey");
                  OnCurrExchSchdKeyChanged();
              }
            }
        }
        private int? _CurrExchSchdKey;
        partial void OnGetCurrExchSchdKey(ref int? value);
        partial void OnCurrExchSchdKeyChanging(ref int? value);
        partial void OnCurrExchSchdKeyChanged();
    
        /// <summary>
        /// There are no comments for CurrID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CurrID
        {
            get
            {
                string value = _CurrID;
                OnGetCurrID(ref value);
                return value;
            }
            set
            {
                if (_CurrID != value)
                {
                  OnCurrIDChanging(ref value);
                  ReportPropertyChanging("CurrID");
                  _CurrID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CurrID");
                  OnCurrIDChanged();
              }
            }
        }
        private string _CurrID;
        partial void OnGetCurrID(ref string value);
        partial void OnCurrIDChanging(ref string value);
        partial void OnCurrIDChanged();
    
        /// <summary>
        /// There are no comments for CustClassKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustClassKey
        {
            get
            {
                int value = _CustClassKey;
                OnGetCustClassKey(ref value);
                return value;
            }
            set
            {
                if (_CustClassKey != value)
                {
                  OnCustClassKeyChanging(ref value);
                  ReportPropertyChanging("CustClassKey");
                  _CustClassKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustClassKey");
                  OnCustClassKeyChanged();
              }
            }
        }
        private int _CustClassKey;
        partial void OnGetCustClassKey(ref int value);
        partial void OnCustClassKeyChanging(ref int value);
        partial void OnCustClassKeyChanged();
    
        /// <summary>
        /// There are no comments for CustKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustKey
        {
            get
            {
                int value = _CustKey;
                OnGetCustKey(ref value);
                return value;
            }
            set
            {
                if (_CustKey != value)
                {
                  OnCustKeyChanging(ref value);
                  ReportPropertyChanging("CustKey");
                  _CustKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustKey");
                  OnCustKeyChanged();
              }
            }
        }
        private int _CustKey;
        partial void OnGetCustKey(ref int value);
        partial void OnCustKeyChanging(ref int value);
        partial void OnCustKeyChanged();
    
        /// <summary>
        /// There are no comments for CustPONo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CustPONo
        {
            get
            {
                string value = _CustPONo;
                OnGetCustPONo(ref value);
                return value;
            }
            set
            {
                if (_CustPONo != value)
                {
                  OnCustPONoChanging(ref value);
                  ReportPropertyChanging("CustPONo");
                  _CustPONo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CustPONo");
                  OnCustPONoChanged();
              }
            }
        }
        private string _CustPONo;
        partial void OnGetCustPONo(ref string value);
        partial void OnCustPONoChanging(ref string value);
        partial void OnCustPONoChanged();
    
        /// <summary>
        /// There are no comments for DiscAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal DiscAmt
        {
            get
            {
                decimal value = _DiscAmt;
                OnGetDiscAmt(ref value);
                return value;
            }
            set
            {
                if (_DiscAmt != value)
                {
                  OnDiscAmtChanging(ref value);
                  ReportPropertyChanging("DiscAmt");
                  _DiscAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DiscAmt");
                  OnDiscAmtChanged();
              }
            }
        }
        private decimal _DiscAmt = 0m;
        partial void OnGetDiscAmt(ref decimal value);
        partial void OnDiscAmtChanging(ref decimal value);
        partial void OnDiscAmtChanged();
    
        /// <summary>
        /// There are no comments for DiscDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? DiscDate
        {
            get
            {
                global::System.DateTime? value = _DiscDate;
                OnGetDiscDate(ref value);
                return value;
            }
            set
            {
                if (_DiscDate != value)
                {
                  OnDiscDateChanging(ref value);
                  ReportPropertyChanging("DiscDate");
                  _DiscDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DiscDate");
                  OnDiscDateChanged();
              }
            }
        }
        private global::System.DateTime? _DiscDate;
        partial void OnGetDiscDate(ref global::System.DateTime? value);
        partial void OnDiscDateChanging(ref global::System.DateTime? value);
        partial void OnDiscDateChanged();
    
        /// <summary>
        /// There are no comments for DiscTakenAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal DiscTakenAmt
        {
            get
            {
                decimal value = _DiscTakenAmt;
                OnGetDiscTakenAmt(ref value);
                return value;
            }
            set
            {
                if (_DiscTakenAmt != value)
                {
                  OnDiscTakenAmtChanging(ref value);
                  ReportPropertyChanging("DiscTakenAmt");
                  _DiscTakenAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DiscTakenAmt");
                  OnDiscTakenAmtChanged();
              }
            }
        }
        private decimal _DiscTakenAmt = 0m;
        partial void OnGetDiscTakenAmt(ref decimal value);
        partial void OnDiscTakenAmtChanging(ref decimal value);
        partial void OnDiscTakenAmtChanged();
    
        /// <summary>
        /// There are no comments for DueDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? DueDate
        {
            get
            {
                global::System.DateTime? value = _DueDate;
                OnGetDueDate(ref value);
                return value;
            }
            set
            {
                if (_DueDate != value)
                {
                  OnDueDateChanging(ref value);
                  ReportPropertyChanging("DueDate");
                  _DueDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DueDate");
                  OnDueDateChanged();
              }
            }
        }
        private global::System.DateTime? _DueDate;
        partial void OnGetDueDate(ref global::System.DateTime? value);
        partial void OnDueDateChanging(ref global::System.DateTime? value);
        partial void OnDueDateChanged();
    
        /// <summary>
        /// There are no comments for FOBKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? FOBKey
        {
            get
            {
                int? value = _FOBKey;
                OnGetFOBKey(ref value);
                return value;
            }
            set
            {
                if (_FOBKey != value)
                {
                  OnFOBKeyChanging(ref value);
                  ReportPropertyChanging("FOBKey");
                  _FOBKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FOBKey");
                  OnFOBKeyChanged();
              }
            }
        }
        private int? _FOBKey;
        partial void OnGetFOBKey(ref int? value);
        partial void OnFOBKeyChanging(ref int? value);
        partial void OnFOBKeyChanged();
    
        /// <summary>
        /// There are no comments for HandlAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal HandlAmt
        {
            get
            {
                decimal value = _HandlAmt;
                OnGetHandlAmt(ref value);
                return value;
            }
            set
            {
                if (_HandlAmt != value)
                {
                  OnHandlAmtChanging(ref value);
                  ReportPropertyChanging("HandlAmt");
                  _HandlAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("HandlAmt");
                  OnHandlAmtChanged();
              }
            }
        }
        private decimal _HandlAmt = 0m;
        partial void OnGetHandlAmt(ref decimal value);
        partial void OnHandlAmtChanging(ref decimal value);
        partial void OnHandlAmtChanged();
    
        /// <summary>
        /// There are no comments for ImportLogKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ImportLogKey
        {
            get
            {
                int? value = _ImportLogKey;
                OnGetImportLogKey(ref value);
                return value;
            }
            set
            {
                if (_ImportLogKey != value)
                {
                  OnImportLogKeyChanging(ref value);
                  ReportPropertyChanging("ImportLogKey");
                  _ImportLogKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ImportLogKey");
                  OnImportLogKeyChanged();
              }
            }
        }
        private int? _ImportLogKey;
        partial void OnGetImportLogKey(ref int? value);
        partial void OnImportLogKeyChanging(ref int? value);
        partial void OnImportLogKeyChanged();
    
        /// <summary>
        /// There are no comments for InDispute in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short InDispute
        {
            get
            {
                short value = _InDispute;
                OnGetInDispute(ref value);
                return value;
            }
            set
            {
                if (_InDispute != value)
                {
                  OnInDisputeChanging(ref value);
                  ReportPropertyChanging("InDispute");
                  _InDispute = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InDispute");
                  OnInDisputeChanged();
              }
            }
        }
        private short _InDispute = 0;
        partial void OnGetInDispute(ref short value);
        partial void OnInDisputeChanging(ref short value);
        partial void OnInDisputeChanged();
    
        /// <summary>
        /// There are no comments for InvcFormKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? InvcFormKey
        {
            get
            {
                int? value = _InvcFormKey;
                OnGetInvcFormKey(ref value);
                return value;
            }
            set
            {
                if (_InvcFormKey != value)
                {
                  OnInvcFormKeyChanging(ref value);
                  ReportPropertyChanging("InvcFormKey");
                  _InvcFormKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvcFormKey");
                  OnInvcFormKeyChanged();
              }
            }
        }
        private int? _InvcFormKey;
        partial void OnGetInvcFormKey(ref int? value);
        partial void OnInvcFormKeyChanging(ref int? value);
        partial void OnInvcFormKeyChanged();
    
        /// <summary>
        /// There are no comments for NextApplEntryNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? NextApplEntryNo
        {
            get
            {
                int? value = _NextApplEntryNo;
                OnGetNextApplEntryNo(ref value);
                return value;
            }
            set
            {
                if (_NextApplEntryNo != value)
                {
                  OnNextApplEntryNoChanging(ref value);
                  ReportPropertyChanging("NextApplEntryNo");
                  _NextApplEntryNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NextApplEntryNo");
                  OnNextApplEntryNoChanged();
              }
            }
        }
        private int? _NextApplEntryNo = 1;
        partial void OnGetNextApplEntryNo(ref int? value);
        partial void OnNextApplEntryNoChanging(ref int? value);
        partial void OnNextApplEntryNoChanged();
    
        /// <summary>
        /// There are no comments for PmtTermsKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? PmtTermsKey
        {
            get
            {
                int? value = _PmtTermsKey;
                OnGetPmtTermsKey(ref value);
                return value;
            }
            set
            {
                if (_PmtTermsKey != value)
                {
                  OnPmtTermsKeyChanging(ref value);
                  ReportPropertyChanging("PmtTermsKey");
                  _PmtTermsKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PmtTermsKey");
                  OnPmtTermsKeyChanged();
              }
            }
        }
        private int? _PmtTermsKey;
        partial void OnGetPmtTermsKey(ref int? value);
        partial void OnPmtTermsKeyChanging(ref int? value);
        partial void OnPmtTermsKeyChanged();
    
        /// <summary>
        /// There are no comments for PostDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime PostDate
        {
            get
            {
                global::System.DateTime value = _PostDate;
                OnGetPostDate(ref value);
                return value;
            }
            set
            {
                if (_PostDate != value)
                {
                  OnPostDateChanging(ref value);
                  ReportPropertyChanging("PostDate");
                  _PostDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PostDate");
                  OnPostDateChanged();
              }
            }
        }
        private global::System.DateTime _PostDate;
        partial void OnGetPostDate(ref global::System.DateTime value);
        partial void OnPostDateChanging(ref global::System.DateTime value);
        partial void OnPostDateChanged();
    
        /// <summary>
        /// There are no comments for PrimarySperKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? PrimarySperKey
        {
            get
            {
                int? value = _PrimarySperKey;
                OnGetPrimarySperKey(ref value);
                return value;
            }
            set
            {
                if (_PrimarySperKey != value)
                {
                  OnPrimarySperKeyChanging(ref value);
                  ReportPropertyChanging("PrimarySperKey");
                  _PrimarySperKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PrimarySperKey");
                  OnPrimarySperKeyChanged();
              }
            }
        }
        private int? _PrimarySperKey;
        partial void OnGetPrimarySperKey(ref int? value);
        partial void OnPrimarySperKeyChanging(ref int? value);
        partial void OnPrimarySperKeyChanged();
    
        /// <summary>
        /// There are no comments for Printed in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Printed
        {
            get
            {
                short value = _Printed;
                OnGetPrinted(ref value);
                return value;
            }
            set
            {
                if (_Printed != value)
                {
                  OnPrintedChanging(ref value);
                  ReportPropertyChanging("Printed");
                  _Printed = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Printed");
                  OnPrintedChanged();
              }
            }
        }
        private short _Printed = 1;
        partial void OnGetPrinted(ref short value);
        partial void OnPrintedChanging(ref short value);
        partial void OnPrintedChanged();
    
        /// <summary>
        /// There are no comments for ReasonCodeKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ReasonCodeKey
        {
            get
            {
                int? value = _ReasonCodeKey;
                OnGetReasonCodeKey(ref value);
                return value;
            }
            set
            {
                if (_ReasonCodeKey != value)
                {
                  OnReasonCodeKeyChanging(ref value);
                  ReportPropertyChanging("ReasonCodeKey");
                  _ReasonCodeKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ReasonCodeKey");
                  OnReasonCodeKeyChanged();
              }
            }
        }
        private int? _ReasonCodeKey;
        partial void OnGetReasonCodeKey(ref int? value);
        partial void OnReasonCodeKeyChanging(ref int? value);
        partial void OnReasonCodeKeyChanged();
    
        /// <summary>
        /// There are no comments for RecurInvoiceKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? RecurInvoiceKey
        {
            get
            {
                int? value = _RecurInvoiceKey;
                OnGetRecurInvoiceKey(ref value);
                return value;
            }
            set
            {
                if (_RecurInvoiceKey != value)
                {
                  OnRecurInvoiceKeyChanging(ref value);
                  ReportPropertyChanging("RecurInvoiceKey");
                  _RecurInvoiceKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RecurInvoiceKey");
                  OnRecurInvoiceKeyChanged();
              }
            }
        }
        private int? _RecurInvoiceKey;
        partial void OnGetRecurInvoiceKey(ref int? value);
        partial void OnRecurInvoiceKeyChanging(ref int? value);
        partial void OnRecurInvoiceKeyChanged();
    
        /// <summary>
        /// There are no comments for RetntAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal RetntAmt
        {
            get
            {
                decimal value = _RetntAmt;
                OnGetRetntAmt(ref value);
                return value;
            }
            set
            {
                if (_RetntAmt != value)
                {
                  OnRetntAmtChanging(ref value);
                  ReportPropertyChanging("RetntAmt");
                  _RetntAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RetntAmt");
                  OnRetntAmtChanged();
              }
            }
        }
        private decimal _RetntAmt = 0m;
        partial void OnGetRetntAmt(ref decimal value);
        partial void OnRetntAmtChanging(ref decimal value);
        partial void OnRetntAmtChanged();
    
        /// <summary>
        /// There are no comments for RetntPct in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? RetntPct
        {
            get
            {
                decimal? value = _RetntPct;
                OnGetRetntPct(ref value);
                return value;
            }
            set
            {
                if (_RetntPct != value)
                {
                  OnRetntPctChanging(ref value);
                  ReportPropertyChanging("RetntPct");
                  _RetntPct = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RetntPct");
                  OnRetntPctChanged();
              }
            }
        }
        private decimal? _RetntPct = 0m;
        partial void OnGetRetntPct(ref decimal? value);
        partial void OnRetntPctChanging(ref decimal? value);
        partial void OnRetntPctChanged();
    
        /// <summary>
        /// There are no comments for SalesAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal SalesAmt
        {
            get
            {
                decimal value = _SalesAmt;
                OnGetSalesAmt(ref value);
                return value;
            }
            set
            {
                if (_SalesAmt != value)
                {
                  OnSalesAmtChanging(ref value);
                  ReportPropertyChanging("SalesAmt");
                  _SalesAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesAmt");
                  OnSalesAmtChanged();
              }
            }
        }
        private decimal _SalesAmt = 0m;
        partial void OnGetSalesAmt(ref decimal value);
        partial void OnSalesAmtChanging(ref decimal value);
        partial void OnSalesAmtChanged();
    
        /// <summary>
        /// There are no comments for ShipAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal ShipAmt
        {
            get
            {
                decimal value = _ShipAmt;
                OnGetShipAmt(ref value);
                return value;
            }
            set
            {
                if (_ShipAmt != value)
                {
                  OnShipAmtChanging(ref value);
                  ReportPropertyChanging("ShipAmt");
                  _ShipAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipAmt");
                  OnShipAmtChanged();
              }
            }
        }
        private decimal _ShipAmt = 0m;
        partial void OnGetShipAmt(ref decimal value);
        partial void OnShipAmtChanging(ref decimal value);
        partial void OnShipAmtChanged();
    
        /// <summary>
        /// There are no comments for ShipMethKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ShipMethKey
        {
            get
            {
                int? value = _ShipMethKey;
                OnGetShipMethKey(ref value);
                return value;
            }
            set
            {
                if (_ShipMethKey != value)
                {
                  OnShipMethKeyChanging(ref value);
                  ReportPropertyChanging("ShipMethKey");
                  _ShipMethKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipMethKey");
                  OnShipMethKeyChanged();
              }
            }
        }
        private int? _ShipMethKey;
        partial void OnGetShipMethKey(ref int? value);
        partial void OnShipMethKeyChanging(ref int? value);
        partial void OnShipMethKeyChanged();
    
        /// <summary>
        /// There are no comments for ShipToAddrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ShipToAddrKey
        {
            get
            {
                int value = _ShipToAddrKey;
                OnGetShipToAddrKey(ref value);
                return value;
            }
            set
            {
                if (_ShipToAddrKey != value)
                {
                  OnShipToAddrKeyChanging(ref value);
                  ReportPropertyChanging("ShipToAddrKey");
                  _ShipToAddrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipToAddrKey");
                  OnShipToAddrKeyChanged();
              }
            }
        }
        private int _ShipToAddrKey;
        partial void OnGetShipToAddrKey(ref int value);
        partial void OnShipToAddrKeyChanging(ref int value);
        partial void OnShipToAddrKeyChanged();
    
        /// <summary>
        /// There are no comments for ShipToCustAddrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ShipToCustAddrKey
        {
            get
            {
                int? value = _ShipToCustAddrKey;
                OnGetShipToCustAddrKey(ref value);
                return value;
            }
            set
            {
                if (_ShipToCustAddrKey != value)
                {
                  OnShipToCustAddrKeyChanging(ref value);
                  ReportPropertyChanging("ShipToCustAddrKey");
                  _ShipToCustAddrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipToCustAddrKey");
                  OnShipToCustAddrKeyChanged();
              }
            }
        }
        private int? _ShipToCustAddrKey;
        partial void OnGetShipToCustAddrKey(ref int? value);
        partial void OnShipToCustAddrKeyChanging(ref int? value);
        partial void OnShipToCustAddrKeyChanged();
    
        /// <summary>
        /// There are no comments for ShipZoneKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ShipZoneKey
        {
            get
            {
                int? value = _ShipZoneKey;
                OnGetShipZoneKey(ref value);
                return value;
            }
            set
            {
                if (_ShipZoneKey != value)
                {
                  OnShipZoneKeyChanging(ref value);
                  ReportPropertyChanging("ShipZoneKey");
                  _ShipZoneKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipZoneKey");
                  OnShipZoneKeyChanged();
              }
            }
        }
        private int? _ShipZoneKey;
        partial void OnGetShipZoneKey(ref int? value);
        partial void OnShipZoneKeyChanging(ref int? value);
        partial void OnShipZoneKeyChanged();
    
        /// <summary>
        /// There are no comments for SourceModule in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short SourceModule
        {
            get
            {
                short value = _SourceModule;
                OnGetSourceModule(ref value);
                return value;
            }
            set
            {
                if (_SourceModule != value)
                {
                  OnSourceModuleChanging(ref value);
                  ReportPropertyChanging("SourceModule");
                  _SourceModule = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SourceModule");
                  OnSourceModuleChanged();
              }
            }
        }
        private short _SourceModule = 5;
        partial void OnGetSourceModule(ref short value);
        partial void OnSourceModuleChanging(ref short value);
        partial void OnSourceModuleChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Status
        {
            get
            {
                short value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private short _Status = 1;
        partial void OnGetStatus(ref short value);
        partial void OnStatusChanging(ref short value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// There are no comments for STaxAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal STaxAmt
        {
            get
            {
                decimal value = _STaxAmt;
                OnGetSTaxAmt(ref value);
                return value;
            }
            set
            {
                if (_STaxAmt != value)
                {
                  OnSTaxAmtChanging(ref value);
                  ReportPropertyChanging("STaxAmt");
                  _STaxAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("STaxAmt");
                  OnSTaxAmtChanged();
              }
            }
        }
        private decimal _STaxAmt = 0m;
        partial void OnGetSTaxAmt(ref decimal value);
        partial void OnSTaxAmtChanging(ref decimal value);
        partial void OnSTaxAmtChanged();
    
        /// <summary>
        /// There are no comments for STaxCalc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short STaxCalc
        {
            get
            {
                short value = _STaxCalc;
                OnGetSTaxCalc(ref value);
                return value;
            }
            set
            {
                if (_STaxCalc != value)
                {
                  OnSTaxCalcChanging(ref value);
                  ReportPropertyChanging("STaxCalc");
                  _STaxCalc = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("STaxCalc");
                  OnSTaxCalcChanged();
              }
            }
        }
        private short _STaxCalc = 1;
        partial void OnGetSTaxCalc(ref short value);
        partial void OnSTaxCalcChanging(ref short value);
        partial void OnSTaxCalcChanged();
    
        /// <summary>
        /// There are no comments for STaxTranKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? STaxTranKey
        {
            get
            {
                int? value = _STaxTranKey;
                OnGetSTaxTranKey(ref value);
                return value;
            }
            set
            {
                if (_STaxTranKey != value)
                {
                  OnSTaxTranKeyChanging(ref value);
                  ReportPropertyChanging("STaxTranKey");
                  _STaxTranKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("STaxTranKey");
                  OnSTaxTranKeyChanged();
              }
            }
        }
        private int? _STaxTranKey;
        partial void OnGetSTaxTranKey(ref int? value);
        partial void OnSTaxTranKeyChanging(ref int? value);
        partial void OnSTaxTranKeyChanged();
    
        /// <summary>
        /// There are no comments for TradeDiscAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal TradeDiscAmt
        {
            get
            {
                decimal value = _TradeDiscAmt;
                OnGetTradeDiscAmt(ref value);
                return value;
            }
            set
            {
                if (_TradeDiscAmt != value)
                {
                  OnTradeDiscAmtChanging(ref value);
                  ReportPropertyChanging("TradeDiscAmt");
                  _TradeDiscAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TradeDiscAmt");
                  OnTradeDiscAmtChanged();
              }
            }
        }
        private decimal _TradeDiscAmt = 0m;
        partial void OnGetTradeDiscAmt(ref decimal value);
        partial void OnTradeDiscAmtChanging(ref decimal value);
        partial void OnTradeDiscAmtChanged();
    
        /// <summary>
        /// There are no comments for TranAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal TranAmt
        {
            get
            {
                decimal value = _TranAmt;
                OnGetTranAmt(ref value);
                return value;
            }
            set
            {
                if (_TranAmt != value)
                {
                  OnTranAmtChanging(ref value);
                  ReportPropertyChanging("TranAmt");
                  _TranAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranAmt");
                  OnTranAmtChanged();
              }
            }
        }
        private decimal _TranAmt = 0m;
        partial void OnGetTranAmt(ref decimal value);
        partial void OnTranAmtChanging(ref decimal value);
        partial void OnTranAmtChanged();
    
        /// <summary>
        /// There are no comments for TranAmtHC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal TranAmtHC
        {
            get
            {
                decimal value = _TranAmtHC;
                OnGetTranAmtHC(ref value);
                return value;
            }
            set
            {
                if (_TranAmtHC != value)
                {
                  OnTranAmtHCChanging(ref value);
                  ReportPropertyChanging("TranAmtHC");
                  _TranAmtHC = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranAmtHC");
                  OnTranAmtHCChanged();
              }
            }
        }
        private decimal _TranAmtHC = 0m;
        partial void OnGetTranAmtHC(ref decimal value);
        partial void OnTranAmtHCChanging(ref decimal value);
        partial void OnTranAmtHCChanged();
    
        /// <summary>
        /// There are no comments for TranCmnt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string TranCmnt
        {
            get
            {
                string value = _TranCmnt;
                OnGetTranCmnt(ref value);
                return value;
            }
            set
            {
                if (_TranCmnt != value)
                {
                  OnTranCmntChanging(ref value);
                  ReportPropertyChanging("TranCmnt");
                  _TranCmnt = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TranCmnt");
                  OnTranCmntChanged();
              }
            }
        }
        private string _TranCmnt;
        partial void OnGetTranCmnt(ref string value);
        partial void OnTranCmntChanging(ref string value);
        partial void OnTranCmntChanged();
    
        /// <summary>
        /// There are no comments for TranDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime TranDate
        {
            get
            {
                global::System.DateTime value = _TranDate;
                OnGetTranDate(ref value);
                return value;
            }
            set
            {
                if (_TranDate != value)
                {
                  OnTranDateChanging(ref value);
                  ReportPropertyChanging("TranDate");
                  _TranDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranDate");
                  OnTranDateChanged();
              }
            }
        }
        private global::System.DateTime _TranDate;
        partial void OnGetTranDate(ref global::System.DateTime value);
        partial void OnTranDateChanging(ref global::System.DateTime value);
        partial void OnTranDateChanged();
    
        /// <summary>
        /// There are no comments for TranID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string TranID
        {
            get
            {
                string value = _TranID;
                OnGetTranID(ref value);
                return value;
            }
            set
            {
                if (_TranID != value)
                {
                  OnTranIDChanging(ref value);
                  ReportPropertyChanging("TranID");
                  _TranID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TranID");
                  OnTranIDChanged();
              }
            }
        }
        private string _TranID;
        partial void OnGetTranID(ref string value);
        partial void OnTranIDChanging(ref string value);
        partial void OnTranIDChanged();
    
        /// <summary>
        /// There are no comments for TranNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string TranNo
        {
            get
            {
                string value = _TranNo;
                OnGetTranNo(ref value);
                return value;
            }
            set
            {
                if (_TranNo != value)
                {
                  OnTranNoChanging(ref value);
                  ReportPropertyChanging("TranNo");
                  _TranNo = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TranNo");
                  OnTranNoChanged();
              }
            }
        }
        private string _TranNo;
        partial void OnGetTranNo(ref string value);
        partial void OnTranNoChanging(ref string value);
        partial void OnTranNoChanged();
    
        /// <summary>
        /// There are no comments for Transmitted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Transmitted
        {
            get
            {
                short value = _Transmitted;
                OnGetTransmitted(ref value);
                return value;
            }
            set
            {
                if (_Transmitted != value)
                {
                  OnTransmittedChanging(ref value);
                  ReportPropertyChanging("Transmitted");
                  _Transmitted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Transmitted");
                  OnTransmittedChanged();
              }
            }
        }
        private short _Transmitted = 0;
        partial void OnGetTransmitted(ref short value);
        partial void OnTransmittedChanging(ref short value);
        partial void OnTransmittedChanged();
    
        /// <summary>
        /// There are no comments for TranType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int TranType
        {
            get
            {
                int value = _TranType;
                OnGetTranType(ref value);
                return value;
            }
            set
            {
                if (_TranType != value)
                {
                  OnTranTypeChanging(ref value);
                  ReportPropertyChanging("TranType");
                  _TranType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranType");
                  OnTranTypeChanged();
              }
            }
        }
        private int _TranType;
        partial void OnGetTranType(ref int value);
        partial void OnTranTypeChanging(ref int value);
        partial void OnTranTypeChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();
    
        /// <summary>
        /// There are no comments for UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? UpdateDate
        {
            get
            {
                global::System.DateTime? value = _UpdateDate;
                OnGetUpdateDate(ref value);
                return value;
            }
            set
            {
                if (_UpdateDate != value)
                {
                  OnUpdateDateChanging(ref value);
                  ReportPropertyChanging("UpdateDate");
                  _UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateDate");
                  OnUpdateDateChanged();
              }
            }
        }
        private global::System.DateTime? _UpdateDate;
        partial void OnGetUpdateDate(ref global::System.DateTime? value);
        partial void OnUpdateDateChanging(ref global::System.DateTime? value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// There are no comments for UpdateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UpdateUserID
        {
            get
            {
                string value = _UpdateUserID;
                OnGetUpdateUserID(ref value);
                return value;
            }
            set
            {
                if (_UpdateUserID != value)
                {
                  OnUpdateUserIDChanging(ref value);
                  ReportPropertyChanging("UpdateUserID");
                  _UpdateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UpdateUserID");
                  OnUpdateUserIDChanged();
              }
            }
        }
        private string _UpdateUserID;
        partial void OnGetUpdateUserID(ref string value);
        partial void OnUpdateUserIDChanging(ref string value);
        partial void OnUpdateUserIDChanged();
    
        /// <summary>
        /// There are no comments for VoucherKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? VoucherKey
        {
            get
            {
                int? value = _VoucherKey;
                OnGetVoucherKey(ref value);
                return value;
            }
            set
            {
                if (_VoucherKey != value)
                {
                  OnVoucherKeyChanging(ref value);
                  ReportPropertyChanging("VoucherKey");
                  _VoucherKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VoucherKey");
                  OnVoucherKeyChanged();
              }
            }
        }
        private int? _VoucherKey;
        partial void OnGetVoucherKey(ref int? value);
        partial void OnVoucherKeyChanging(ref int? value);
        partial void OnVoucherKeyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Customer in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Customer_Invoice", "Customer")]
        public virtual Customer Customer
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customer>("Net4Sage.DataAccessModel.Customer_Invoice", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customer>("Net4Sage.DataAccessModel.Customer_Invoice", "Customer").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Customer in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customer>("Net4Sage.DataAccessModel.Customer_Invoice", "Customer");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Customer>("Net4Sage.DataAccessModel.Customer_Invoice", "Customer", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Customer>("Net4Sage.DataAccessModel.Customer_Invoice", "Customer").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CustomersClass in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "CustomersClass_Invoice", "CustomersClass")]
        public virtual CustomersClass CustomersClass
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustomersClass>("Net4Sage.DataAccessModel.CustomersClass_Invoice", "CustomersClass").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustomersClass>("Net4Sage.DataAccessModel.CustomersClass_Invoice", "CustomersClass").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for CustomersClass in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustomersClass> CustomersClassReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustomersClass>("Net4Sage.DataAccessModel.CustomersClass_Invoice", "CustomersClass");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CustomersClass>("Net4Sage.DataAccessModel.CustomersClass_Invoice", "CustomersClass", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustomersClass>("Net4Sage.DataAccessModel.CustomersClass_Invoice", "CustomersClass").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvoiceLog in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "InvoiceLog_Invoice", "InvoiceLog")]
        public virtual InvoiceLog InvoiceLog
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvoiceLog>("Net4Sage.DataAccessModel.InvoiceLog_Invoice", "InvoiceLog").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvoiceLog>("Net4Sage.DataAccessModel.InvoiceLog_Invoice", "InvoiceLog").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvoiceLog in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvoiceLog> InvoiceLogReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvoiceLog>("Net4Sage.DataAccessModel.InvoiceLog_Invoice", "InvoiceLog");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvoiceLog>("Net4Sage.DataAccessModel.InvoiceLog_Invoice", "InvoiceLog", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvoiceLog>("Net4Sage.DataAccessModel.InvoiceLog_Invoice", "InvoiceLog").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.InvoiceAppl in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ApplyToInvcKey
    /// EntryNo
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="InvoiceAppl")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvoiceAppl : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvoiceAppl object.
        /// </summary>
        /// <param name="applyToInvcKey">Initial value of ApplyToInvcKey.</param>
        /// <param name="entryNo">Initial value of EntryNo.</param>
        /// <param name="appliedAtCreation">Initial value of AppliedAtCreation.</param>
        /// <param name="applyFromTranDate">Initial value of ApplyFromTranDate.</param>
        /// <param name="applyFromTranID">Initial value of ApplyFromTranID.</param>
        /// <param name="batchKey">Initial value of BatchKey.</param>
        /// <param name="discTakenAmt">Initial value of DiscTakenAmt.</param>
        /// <param name="discTakenAmtHC">Initial value of DiscTakenAmtHC.</param>
        /// <param name="pmtAmt">Initial value of PmtAmt.</param>
        /// <param name="pmtAmtHC">Initial value of PmtAmtHC.</param>
        /// <param name="postDate">Initial value of PostDate.</param>
        public static InvoiceAppl CreateInvoiceAppl(int applyToInvcKey, int entryNo, short appliedAtCreation, global::System.DateTime applyFromTranDate, string applyFromTranID, int batchKey, decimal discTakenAmt, decimal discTakenAmtHC, decimal pmtAmt, decimal pmtAmtHC, global::System.DateTime postDate)
        {
            InvoiceAppl invoiceAppl = new InvoiceAppl();
            invoiceAppl.ApplyToInvcKey = applyToInvcKey;
            invoiceAppl.EntryNo = entryNo;
            invoiceAppl.AppliedAtCreation = appliedAtCreation;
            invoiceAppl.ApplyFromTranDate = applyFromTranDate;
            invoiceAppl.ApplyFromTranID = applyFromTranID;
            invoiceAppl.BatchKey = batchKey;
            invoiceAppl.DiscTakenAmt = discTakenAmt;
            invoiceAppl.DiscTakenAmtHC = discTakenAmtHC;
            invoiceAppl.PmtAmt = pmtAmt;
            invoiceAppl.PmtAmtHC = pmtAmtHC;
            invoiceAppl.PostDate = postDate;
            return invoiceAppl;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ApplyToInvcKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ApplyToInvcKey
        {
            get
            {
                int value = _ApplyToInvcKey;
                OnGetApplyToInvcKey(ref value);
                return value;
            }
            set
            {
                if (_ApplyToInvcKey != value)
                {
                  OnApplyToInvcKeyChanging(ref value);
                  ReportPropertyChanging("ApplyToInvcKey");
                  _ApplyToInvcKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ApplyToInvcKey");
                  OnApplyToInvcKeyChanged();
              }
            }
        }
        private int _ApplyToInvcKey;
        partial void OnGetApplyToInvcKey(ref int value);
        partial void OnApplyToInvcKeyChanging(ref int value);
        partial void OnApplyToInvcKeyChanged();
    
        /// <summary>
        /// There are no comments for EntryNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int EntryNo
        {
            get
            {
                int value = _EntryNo;
                OnGetEntryNo(ref value);
                return value;
            }
            set
            {
                if (_EntryNo != value)
                {
                  OnEntryNoChanging(ref value);
                  ReportPropertyChanging("EntryNo");
                  _EntryNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EntryNo");
                  OnEntryNoChanged();
              }
            }
        }
        private int _EntryNo;
        partial void OnGetEntryNo(ref int value);
        partial void OnEntryNoChanging(ref int value);
        partial void OnEntryNoChanged();
    
        /// <summary>
        /// There are no comments for AppliedAtCreation in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short AppliedAtCreation
        {
            get
            {
                short value = _AppliedAtCreation;
                OnGetAppliedAtCreation(ref value);
                return value;
            }
            set
            {
                if (_AppliedAtCreation != value)
                {
                  OnAppliedAtCreationChanging(ref value);
                  ReportPropertyChanging("AppliedAtCreation");
                  _AppliedAtCreation = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AppliedAtCreation");
                  OnAppliedAtCreationChanged();
              }
            }
        }
        private short _AppliedAtCreation = 0;
        partial void OnGetAppliedAtCreation(ref short value);
        partial void OnAppliedAtCreationChanging(ref short value);
        partial void OnAppliedAtCreationChanged();
    
        /// <summary>
        /// There are no comments for ApplyFromInvcKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ApplyFromInvcKey
        {
            get
            {
                int? value = _ApplyFromInvcKey;
                OnGetApplyFromInvcKey(ref value);
                return value;
            }
            set
            {
                if (_ApplyFromInvcKey != value)
                {
                  OnApplyFromInvcKeyChanging(ref value);
                  ReportPropertyChanging("ApplyFromInvcKey");
                  _ApplyFromInvcKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ApplyFromInvcKey");
                  OnApplyFromInvcKeyChanged();
              }
            }
        }
        private int? _ApplyFromInvcKey;
        partial void OnGetApplyFromInvcKey(ref int? value);
        partial void OnApplyFromInvcKeyChanging(ref int? value);
        partial void OnApplyFromInvcKeyChanged();
    
        /// <summary>
        /// There are no comments for ApplyFromPmtKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ApplyFromPmtKey
        {
            get
            {
                int? value = _ApplyFromPmtKey;
                OnGetApplyFromPmtKey(ref value);
                return value;
            }
            set
            {
                if (_ApplyFromPmtKey != value)
                {
                  OnApplyFromPmtKeyChanging(ref value);
                  ReportPropertyChanging("ApplyFromPmtKey");
                  _ApplyFromPmtKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ApplyFromPmtKey");
                  OnApplyFromPmtKeyChanged();
              }
            }
        }
        private int? _ApplyFromPmtKey;
        partial void OnGetApplyFromPmtKey(ref int? value);
        partial void OnApplyFromPmtKeyChanging(ref int? value);
        partial void OnApplyFromPmtKeyChanged();
    
        /// <summary>
        /// There are no comments for ApplyFromTranDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime ApplyFromTranDate
        {
            get
            {
                global::System.DateTime value = _ApplyFromTranDate;
                OnGetApplyFromTranDate(ref value);
                return value;
            }
            set
            {
                if (_ApplyFromTranDate != value)
                {
                  OnApplyFromTranDateChanging(ref value);
                  ReportPropertyChanging("ApplyFromTranDate");
                  _ApplyFromTranDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ApplyFromTranDate");
                  OnApplyFromTranDateChanged();
              }
            }
        }
        private global::System.DateTime _ApplyFromTranDate;
        partial void OnGetApplyFromTranDate(ref global::System.DateTime value);
        partial void OnApplyFromTranDateChanging(ref global::System.DateTime value);
        partial void OnApplyFromTranDateChanged();
    
        /// <summary>
        /// There are no comments for ApplyFromTranID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string ApplyFromTranID
        {
            get
            {
                string value = _ApplyFromTranID;
                OnGetApplyFromTranID(ref value);
                return value;
            }
            set
            {
                if (_ApplyFromTranID != value)
                {
                  OnApplyFromTranIDChanging(ref value);
                  ReportPropertyChanging("ApplyFromTranID");
                  _ApplyFromTranID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ApplyFromTranID");
                  OnApplyFromTranIDChanged();
              }
            }
        }
        private string _ApplyFromTranID;
        partial void OnGetApplyFromTranID(ref string value);
        partial void OnApplyFromTranIDChanging(ref string value);
        partial void OnApplyFromTranIDChanged();
    
        /// <summary>
        /// There are no comments for ApplyFromTranType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ApplyFromTranType
        {
            get
            {
                int? value = _ApplyFromTranType;
                OnGetApplyFromTranType(ref value);
                return value;
            }
            set
            {
                if (_ApplyFromTranType != value)
                {
                  OnApplyFromTranTypeChanging(ref value);
                  ReportPropertyChanging("ApplyFromTranType");
                  _ApplyFromTranType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ApplyFromTranType");
                  OnApplyFromTranTypeChanged();
              }
            }
        }
        private int? _ApplyFromTranType;
        partial void OnGetApplyFromTranType(ref int? value);
        partial void OnApplyFromTranTypeChanging(ref int? value);
        partial void OnApplyFromTranTypeChanged();
    
        /// <summary>
        /// There are no comments for BatchKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int BatchKey
        {
            get
            {
                int value = _BatchKey;
                OnGetBatchKey(ref value);
                return value;
            }
            set
            {
                if (_BatchKey != value)
                {
                  OnBatchKeyChanging(ref value);
                  ReportPropertyChanging("BatchKey");
                  _BatchKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BatchKey");
                  OnBatchKeyChanged();
              }
            }
        }
        private int _BatchKey;
        partial void OnGetBatchKey(ref int value);
        partial void OnBatchKeyChanging(ref int value);
        partial void OnBatchKeyChanged();
    
        /// <summary>
        /// There are no comments for DiscTakenAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal DiscTakenAmt
        {
            get
            {
                decimal value = _DiscTakenAmt;
                OnGetDiscTakenAmt(ref value);
                return value;
            }
            set
            {
                if (_DiscTakenAmt != value)
                {
                  OnDiscTakenAmtChanging(ref value);
                  ReportPropertyChanging("DiscTakenAmt");
                  _DiscTakenAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DiscTakenAmt");
                  OnDiscTakenAmtChanged();
              }
            }
        }
        private decimal _DiscTakenAmt = 0m;
        partial void OnGetDiscTakenAmt(ref decimal value);
        partial void OnDiscTakenAmtChanging(ref decimal value);
        partial void OnDiscTakenAmtChanged();
    
        /// <summary>
        /// There are no comments for DiscTakenAmtHC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal DiscTakenAmtHC
        {
            get
            {
                decimal value = _DiscTakenAmtHC;
                OnGetDiscTakenAmtHC(ref value);
                return value;
            }
            set
            {
                if (_DiscTakenAmtHC != value)
                {
                  OnDiscTakenAmtHCChanging(ref value);
                  ReportPropertyChanging("DiscTakenAmtHC");
                  _DiscTakenAmtHC = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DiscTakenAmtHC");
                  OnDiscTakenAmtHCChanged();
              }
            }
        }
        private decimal _DiscTakenAmtHC = 0m;
        partial void OnGetDiscTakenAmtHC(ref decimal value);
        partial void OnDiscTakenAmtHCChanging(ref decimal value);
        partial void OnDiscTakenAmtHCChanged();
    
        /// <summary>
        /// There are no comments for PmtAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal PmtAmt
        {
            get
            {
                decimal value = _PmtAmt;
                OnGetPmtAmt(ref value);
                return value;
            }
            set
            {
                if (_PmtAmt != value)
                {
                  OnPmtAmtChanging(ref value);
                  ReportPropertyChanging("PmtAmt");
                  _PmtAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PmtAmt");
                  OnPmtAmtChanged();
              }
            }
        }
        private decimal _PmtAmt = 0m;
        partial void OnGetPmtAmt(ref decimal value);
        partial void OnPmtAmtChanging(ref decimal value);
        partial void OnPmtAmtChanged();
    
        /// <summary>
        /// There are no comments for PmtAmtHC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal PmtAmtHC
        {
            get
            {
                decimal value = _PmtAmtHC;
                OnGetPmtAmtHC(ref value);
                return value;
            }
            set
            {
                if (_PmtAmtHC != value)
                {
                  OnPmtAmtHCChanging(ref value);
                  ReportPropertyChanging("PmtAmtHC");
                  _PmtAmtHC = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PmtAmtHC");
                  OnPmtAmtHCChanged();
              }
            }
        }
        private decimal _PmtAmtHC = 0m;
        partial void OnGetPmtAmtHC(ref decimal value);
        partial void OnPmtAmtHCChanging(ref decimal value);
        partial void OnPmtAmtHCChanged();
    
        /// <summary>
        /// There are no comments for PostDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime PostDate
        {
            get
            {
                global::System.DateTime value = _PostDate;
                OnGetPostDate(ref value);
                return value;
            }
            set
            {
                if (_PostDate != value)
                {
                  OnPostDateChanging(ref value);
                  ReportPropertyChanging("PostDate");
                  _PostDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PostDate");
                  OnPostDateChanged();
              }
            }
        }
        private global::System.DateTime _PostDate;
        partial void OnGetPostDate(ref global::System.DateTime value);
        partial void OnPostDateChanging(ref global::System.DateTime value);
        partial void OnPostDateChanged();
    
        /// <summary>
        /// There are no comments for RevrsApplBatchKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? RevrsApplBatchKey
        {
            get
            {
                int? value = _RevrsApplBatchKey;
                OnGetRevrsApplBatchKey(ref value);
                return value;
            }
            set
            {
                if (_RevrsApplBatchKey != value)
                {
                  OnRevrsApplBatchKeyChanging(ref value);
                  ReportPropertyChanging("RevrsApplBatchKey");
                  _RevrsApplBatchKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RevrsApplBatchKey");
                  OnRevrsApplBatchKeyChanged();
              }
            }
        }
        private int? _RevrsApplBatchKey;
        partial void OnGetRevrsApplBatchKey(ref int? value);
        partial void OnRevrsApplBatchKeyChanging(ref int? value);
        partial void OnRevrsApplBatchKeyChanged();
    
        /// <summary>
        /// There are no comments for RevrsApplEntryNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? RevrsApplEntryNo
        {
            get
            {
                int? value = _RevrsApplEntryNo;
                OnGetRevrsApplEntryNo(ref value);
                return value;
            }
            set
            {
                if (_RevrsApplEntryNo != value)
                {
                  OnRevrsApplEntryNoChanging(ref value);
                  ReportPropertyChanging("RevrsApplEntryNo");
                  _RevrsApplEntryNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RevrsApplEntryNo");
                  OnRevrsApplEntryNoChanged();
              }
            }
        }
        private int? _RevrsApplEntryNo;
        partial void OnGetRevrsApplEntryNo(ref int? value);
        partial void OnRevrsApplEntryNoChanging(ref int? value);
        partial void OnRevrsApplEntryNoChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for FromCustomerPmt in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "CustomerPmt_InvoiceAppl", "FromCustomerPmt")]
        public virtual CustomerPayment FromCustomerPmt
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustomerPayment>("Net4Sage.DataAccessModel.CustomerPmt_InvoiceAppl", "FromCustomerPmt").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustomerPayment>("Net4Sage.DataAccessModel.CustomerPmt_InvoiceAppl", "FromCustomerPmt").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for FromCustomerPmt in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustomerPayment> FromCustomerPmtReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustomerPayment>("Net4Sage.DataAccessModel.CustomerPmt_InvoiceAppl", "FromCustomerPmt");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CustomerPayment>("Net4Sage.DataAccessModel.CustomerPmt_InvoiceAppl", "FromCustomerPmt", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustomerPayment>("Net4Sage.DataAccessModel.CustomerPmt_InvoiceAppl", "FromCustomerPmt").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for FromInvoice in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "InvoiceLog_InvoiceAppl", "FromInvoice")]
        public virtual InvoiceLog FromInvoice
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvoiceLog>("Net4Sage.DataAccessModel.InvoiceLog_InvoiceAppl", "FromInvoice").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvoiceLog>("Net4Sage.DataAccessModel.InvoiceLog_InvoiceAppl", "FromInvoice").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for FromInvoice in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvoiceLog> FromInvoiceReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvoiceLog>("Net4Sage.DataAccessModel.InvoiceLog_InvoiceAppl", "FromInvoice");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvoiceLog>("Net4Sage.DataAccessModel.InvoiceLog_InvoiceAppl", "FromInvoice", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvoiceLog>("Net4Sage.DataAccessModel.InvoiceLog_InvoiceAppl", "FromInvoice").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Invoice in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "InvoiceLog_InvoiceAppl1", "Invoice")]
        public virtual InvoiceLog Invoice
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvoiceLog>("Net4Sage.DataAccessModel.InvoiceLog_InvoiceAppl1", "Invoice").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvoiceLog>("Net4Sage.DataAccessModel.InvoiceLog_InvoiceAppl1", "Invoice").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Invoice in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvoiceLog> InvoiceReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvoiceLog>("Net4Sage.DataAccessModel.InvoiceLog_InvoiceAppl1", "Invoice");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvoiceLog>("Net4Sage.DataAccessModel.InvoiceLog_InvoiceAppl1", "Invoice", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvoiceLog>("Net4Sage.DataAccessModel.InvoiceLog_InvoiceAppl1", "Invoice").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.GLTransaction in the schema.
    /// </summary>
    /// <KeyProperties>
    /// GlTranKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="GLTransaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GLTransaction : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new GLTransaction object.
        /// </summary>
        /// <param name="glTranKey">Initial value of GlTranKey.</param>
        /// <param name="batchKey">Initial value of BatchKey.</param>
        /// <param name="createType">Initial value of CreateType.</param>
        /// <param name="currExchRate">Initial value of CurrExchRate.</param>
        /// <param name="currID">Initial value of CurrID.</param>
        /// <param name="fiscPer">Initial value of FiscPer.</param>
        /// <param name="fiscYear">Initial value of FiscYear.</param>
        /// <param name="gLAcctKey">Initial value of GLAcctKey.</param>
        /// <param name="postAmt">Initial value of PostAmt.</param>
        /// <param name="postAmtHC">Initial value of PostAmtHC.</param>
        /// <param name="postDate">Initial value of PostDate.</param>
        /// <param name="postQty">Initial value of PostQty.</param>
        /// <param name="sourceModuleNo">Initial value of SourceModuleNo.</param>
        public static GLTransaction CreateGLTransaction(int glTranKey, int batchKey, short createType, double currExchRate, string currID, short fiscPer, string fiscYear, int gLAcctKey, decimal postAmt, decimal postAmtHC, global::System.DateTime postDate, decimal postQty, short sourceModuleNo)
        {
            GLTransaction gLTransaction = new GLTransaction();
            gLTransaction.GlTranKey = glTranKey;
            gLTransaction.BatchKey = batchKey;
            gLTransaction.CreateType = createType;
            gLTransaction.CurrExchRate = currExchRate;
            gLTransaction.CurrID = currID;
            gLTransaction.FiscPer = fiscPer;
            gLTransaction.FiscYear = fiscYear;
            gLTransaction.GLAcctKey = gLAcctKey;
            gLTransaction.PostAmt = postAmt;
            gLTransaction.PostAmtHC = postAmtHC;
            gLTransaction.PostDate = postDate;
            gLTransaction.PostQty = postQty;
            gLTransaction.SourceModuleNo = sourceModuleNo;
            return gLTransaction;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for GlTranKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int GlTranKey
        {
            get
            {
                int value = _GlTranKey;
                OnGetGlTranKey(ref value);
                return value;
            }
            set
            {
                if (_GlTranKey != value)
                {
                  OnGlTranKeyChanging(ref value);
                  ReportPropertyChanging("GlTranKey");
                  _GlTranKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("GlTranKey");
                  OnGlTranKeyChanged();
              }
            }
        }
        private int _GlTranKey;
        partial void OnGetGlTranKey(ref int value);
        partial void OnGlTranKeyChanging(ref int value);
        partial void OnGlTranKeyChanged();
    
        /// <summary>
        /// There are no comments for AcctRefKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? AcctRefKey
        {
            get
            {
                int? value = _AcctRefKey;
                OnGetAcctRefKey(ref value);
                return value;
            }
            set
            {
                if (_AcctRefKey != value)
                {
                  OnAcctRefKeyChanging(ref value);
                  ReportPropertyChanging("AcctRefKey");
                  _AcctRefKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AcctRefKey");
                  OnAcctRefKeyChanged();
              }
            }
        }
        private int? _AcctRefKey;
        partial void OnGetAcctRefKey(ref int? value);
        partial void OnAcctRefKeyChanging(ref int? value);
        partial void OnAcctRefKeyChanged();
    
        /// <summary>
        /// There are no comments for BatchKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int BatchKey
        {
            get
            {
                int value = _BatchKey;
                OnGetBatchKey(ref value);
                return value;
            }
            set
            {
                if (_BatchKey != value)
                {
                  OnBatchKeyChanging(ref value);
                  ReportPropertyChanging("BatchKey");
                  _BatchKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BatchKey");
                  OnBatchKeyChanged();
              }
            }
        }
        private int _BatchKey;
        partial void OnGetBatchKey(ref int value);
        partial void OnBatchKeyChanging(ref int value);
        partial void OnBatchKeyChanged();
    
        /// <summary>
        /// There are no comments for CreateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CreateDate
        {
            get
            {
                global::System.DateTime? value = _CreateDate;
                OnGetCreateDate(ref value);
                return value;
            }
            set
            {
                if (_CreateDate != value)
                {
                  OnCreateDateChanging(ref value);
                  ReportPropertyChanging("CreateDate");
                  _CreateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateDate");
                  OnCreateDateChanged();
              }
            }
        }
        private global::System.DateTime? _CreateDate;
        partial void OnGetCreateDate(ref global::System.DateTime? value);
        partial void OnCreateDateChanging(ref global::System.DateTime? value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// There are no comments for CreateType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CreateType
        {
            get
            {
                short value = _CreateType;
                OnGetCreateType(ref value);
                return value;
            }
            set
            {
                if (_CreateType != value)
                {
                  OnCreateTypeChanging(ref value);
                  ReportPropertyChanging("CreateType");
                  _CreateType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateType");
                  OnCreateTypeChanged();
              }
            }
        }
        private short _CreateType = 0;
        partial void OnGetCreateType(ref short value);
        partial void OnCreateTypeChanging(ref short value);
        partial void OnCreateTypeChanged();
    
        /// <summary>
        /// There are no comments for CurrExchRate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual double CurrExchRate
        {
            get
            {
                double value = _CurrExchRate;
                OnGetCurrExchRate(ref value);
                return value;
            }
            set
            {
                if (_CurrExchRate != value)
                {
                  OnCurrExchRateChanging(ref value);
                  ReportPropertyChanging("CurrExchRate");
                  _CurrExchRate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CurrExchRate");
                  OnCurrExchRateChanged();
              }
            }
        }
        private double _CurrExchRate = 1;
        partial void OnGetCurrExchRate(ref double value);
        partial void OnCurrExchRateChanging(ref double value);
        partial void OnCurrExchRateChanged();
    
        /// <summary>
        /// There are no comments for CurrID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CurrID
        {
            get
            {
                string value = _CurrID;
                OnGetCurrID(ref value);
                return value;
            }
            set
            {
                if (_CurrID != value)
                {
                  OnCurrIDChanging(ref value);
                  ReportPropertyChanging("CurrID");
                  _CurrID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CurrID");
                  OnCurrIDChanged();
              }
            }
        }
        private string _CurrID;
        partial void OnGetCurrID(ref string value);
        partial void OnCurrIDChanging(ref string value);
        partial void OnCurrIDChanged();
    
        /// <summary>
        /// There are no comments for ExtCmnt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ExtCmnt
        {
            get
            {
                string value = _ExtCmnt;
                OnGetExtCmnt(ref value);
                return value;
            }
            set
            {
                if (_ExtCmnt != value)
                {
                  OnExtCmntChanging(ref value);
                  ReportPropertyChanging("ExtCmnt");
                  _ExtCmnt = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ExtCmnt");
                  OnExtCmntChanged();
              }
            }
        }
        private string _ExtCmnt;
        partial void OnGetExtCmnt(ref string value);
        partial void OnExtCmntChanging(ref string value);
        partial void OnExtCmntChanged();
    
        /// <summary>
        /// There are no comments for FiscPer in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short FiscPer
        {
            get
            {
                short value = _FiscPer;
                OnGetFiscPer(ref value);
                return value;
            }
            set
            {
                if (_FiscPer != value)
                {
                  OnFiscPerChanging(ref value);
                  ReportPropertyChanging("FiscPer");
                  _FiscPer = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FiscPer");
                  OnFiscPerChanged();
              }
            }
        }
        private short _FiscPer = 0;
        partial void OnGetFiscPer(ref short value);
        partial void OnFiscPerChanging(ref short value);
        partial void OnFiscPerChanged();
    
        /// <summary>
        /// There are no comments for FiscYear in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string FiscYear
        {
            get
            {
                string value = _FiscYear;
                OnGetFiscYear(ref value);
                return value;
            }
            set
            {
                if (_FiscYear != value)
                {
                  OnFiscYearChanging(ref value);
                  ReportPropertyChanging("FiscYear");
                  _FiscYear = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("FiscYear");
                  OnFiscYearChanged();
              }
            }
        }
        private string _FiscYear;
        partial void OnGetFiscYear(ref string value);
        partial void OnFiscYearChanging(ref string value);
        partial void OnFiscYearChanged();
    
        /// <summary>
        /// There are no comments for GLAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int GLAcctKey
        {
            get
            {
                int value = _GLAcctKey;
                OnGetGLAcctKey(ref value);
                return value;
            }
            set
            {
                if (_GLAcctKey != value)
                {
                  OnGLAcctKeyChanging(ref value);
                  ReportPropertyChanging("GLAcctKey");
                  _GLAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("GLAcctKey");
                  OnGLAcctKeyChanged();
              }
            }
        }
        private int _GLAcctKey;
        partial void OnGetGLAcctKey(ref int value);
        partial void OnGLAcctKeyChanging(ref int value);
        partial void OnGLAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for JrnlKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? JrnlKey
        {
            get
            {
                int? value = _JrnlKey;
                OnGetJrnlKey(ref value);
                return value;
            }
            set
            {
                if (_JrnlKey != value)
                {
                  OnJrnlKeyChanging(ref value);
                  ReportPropertyChanging("JrnlKey");
                  _JrnlKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("JrnlKey");
                  OnJrnlKeyChanged();
              }
            }
        }
        private int? _JrnlKey;
        partial void OnGetJrnlKey(ref int? value);
        partial void OnJrnlKeyChanging(ref int? value);
        partial void OnJrnlKeyChanged();
    
        /// <summary>
        /// There are no comments for JrnlNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? JrnlNo
        {
            get
            {
                int? value = _JrnlNo;
                OnGetJrnlNo(ref value);
                return value;
            }
            set
            {
                if (_JrnlNo != value)
                {
                  OnJrnlNoChanging(ref value);
                  ReportPropertyChanging("JrnlNo");
                  _JrnlNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("JrnlNo");
                  OnJrnlNoChanged();
              }
            }
        }
        private int? _JrnlNo;
        partial void OnGetJrnlNo(ref int? value);
        partial void OnJrnlNoChanging(ref int? value);
        partial void OnJrnlNoChanged();
    
        /// <summary>
        /// There are no comments for PostAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal PostAmt
        {
            get
            {
                decimal value = _PostAmt;
                OnGetPostAmt(ref value);
                return value;
            }
            set
            {
                if (_PostAmt != value)
                {
                  OnPostAmtChanging(ref value);
                  ReportPropertyChanging("PostAmt");
                  _PostAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PostAmt");
                  OnPostAmtChanged();
              }
            }
        }
        private decimal _PostAmt = 0m;
        partial void OnGetPostAmt(ref decimal value);
        partial void OnPostAmtChanging(ref decimal value);
        partial void OnPostAmtChanged();
    
        /// <summary>
        /// There are no comments for PostAmtHC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal PostAmtHC
        {
            get
            {
                decimal value = _PostAmtHC;
                OnGetPostAmtHC(ref value);
                return value;
            }
            set
            {
                if (_PostAmtHC != value)
                {
                  OnPostAmtHCChanging(ref value);
                  ReportPropertyChanging("PostAmtHC");
                  _PostAmtHC = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PostAmtHC");
                  OnPostAmtHCChanged();
              }
            }
        }
        private decimal _PostAmtHC = 0m;
        partial void OnGetPostAmtHC(ref decimal value);
        partial void OnPostAmtHCChanging(ref decimal value);
        partial void OnPostAmtHCChanged();
    
        /// <summary>
        /// There are no comments for PostCmnt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PostCmnt
        {
            get
            {
                string value = _PostCmnt;
                OnGetPostCmnt(ref value);
                return value;
            }
            set
            {
                if (_PostCmnt != value)
                {
                  OnPostCmntChanging(ref value);
                  ReportPropertyChanging("PostCmnt");
                  _PostCmnt = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PostCmnt");
                  OnPostCmntChanged();
              }
            }
        }
        private string _PostCmnt;
        partial void OnGetPostCmnt(ref string value);
        partial void OnPostCmntChanging(ref string value);
        partial void OnPostCmntChanged();
    
        /// <summary>
        /// There are no comments for PostDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime PostDate
        {
            get
            {
                global::System.DateTime value = _PostDate;
                OnGetPostDate(ref value);
                return value;
            }
            set
            {
                if (_PostDate != value)
                {
                  OnPostDateChanging(ref value);
                  ReportPropertyChanging("PostDate");
                  _PostDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PostDate");
                  OnPostDateChanged();
              }
            }
        }
        private global::System.DateTime _PostDate;
        partial void OnGetPostDate(ref global::System.DateTime value);
        partial void OnPostDateChanging(ref global::System.DateTime value);
        partial void OnPostDateChanged();
    
        /// <summary>
        /// There are no comments for PostQty in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal PostQty
        {
            get
            {
                decimal value = _PostQty;
                OnGetPostQty(ref value);
                return value;
            }
            set
            {
                if (_PostQty != value)
                {
                  OnPostQtyChanging(ref value);
                  ReportPropertyChanging("PostQty");
                  _PostQty = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PostQty");
                  OnPostQtyChanged();
              }
            }
        }
        private decimal _PostQty = 0m;
        partial void OnGetPostQty(ref decimal value);
        partial void OnPostQtyChanging(ref decimal value);
        partial void OnPostQtyChanged();
    
        /// <summary>
        /// There are no comments for SourceModuleNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short SourceModuleNo
        {
            get
            {
                short value = _SourceModuleNo;
                OnGetSourceModuleNo(ref value);
                return value;
            }
            set
            {
                if (_SourceModuleNo != value)
                {
                  OnSourceModuleNoChanging(ref value);
                  ReportPropertyChanging("SourceModuleNo");
                  _SourceModuleNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SourceModuleNo");
                  OnSourceModuleNoChanged();
              }
            }
        }
        private short _SourceModuleNo;
        partial void OnGetSourceModuleNo(ref short value);
        partial void OnSourceModuleNoChanging(ref short value);
        partial void OnSourceModuleNoChanged();
    
        /// <summary>
        /// There are no comments for TranDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? TranDate
        {
            get
            {
                global::System.DateTime? value = _TranDate;
                OnGetTranDate(ref value);
                return value;
            }
            set
            {
                if (_TranDate != value)
                {
                  OnTranDateChanging(ref value);
                  ReportPropertyChanging("TranDate");
                  _TranDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranDate");
                  OnTranDateChanged();
              }
            }
        }
        private global::System.DateTime? _TranDate;
        partial void OnGetTranDate(ref global::System.DateTime? value);
        partial void OnTranDateChanging(ref global::System.DateTime? value);
        partial void OnTranDateChanged();
    
        /// <summary>
        /// There are no comments for TranKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? TranKey
        {
            get
            {
                int? value = _TranKey;
                OnGetTranKey(ref value);
                return value;
            }
            set
            {
                if (_TranKey != value)
                {
                  OnTranKeyChanging(ref value);
                  ReportPropertyChanging("TranKey");
                  _TranKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranKey");
                  OnTranKeyChanged();
              }
            }
        }
        private int? _TranKey;
        partial void OnGetTranKey(ref int? value);
        partial void OnTranKeyChanging(ref int? value);
        partial void OnTranKeyChanged();
    
        /// <summary>
        /// There are no comments for TranNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string TranNo
        {
            get
            {
                string value = _TranNo;
                OnGetTranNo(ref value);
                return value;
            }
            set
            {
                if (_TranNo != value)
                {
                  OnTranNoChanging(ref value);
                  ReportPropertyChanging("TranNo");
                  _TranNo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TranNo");
                  OnTranNoChanged();
              }
            }
        }
        private string _TranNo;
        partial void OnGetTranNo(ref string value);
        partial void OnTranNoChanging(ref string value);
        partial void OnTranNoChanged();
    
        /// <summary>
        /// There are no comments for TranType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? TranType
        {
            get
            {
                int? value = _TranType;
                OnGetTranType(ref value);
                return value;
            }
            set
            {
                if (_TranType != value)
                {
                  OnTranTypeChanging(ref value);
                  ReportPropertyChanging("TranType");
                  _TranType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranType");
                  OnTranTypeChanged();
              }
            }
        }
        private int? _TranType;
        partial void OnGetTranType(ref int? value);
        partial void OnTranTypeChanging(ref int? value);
        partial void OnTranTypeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for GLAccount in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "GLAccount_GLTransaction", "GLAccount")]
        public virtual GLAccount GLAccount
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<GLAccount>("Net4Sage.DataAccessModel.GLAccount_GLTransaction", "GLAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<GLAccount>("Net4Sage.DataAccessModel.GLAccount_GLTransaction", "GLAccount").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for GLAccount in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GLAccount> GLAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<GLAccount>("Net4Sage.DataAccessModel.GLAccount_GLTransaction", "GLAccount");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<GLAccount>("Net4Sage.DataAccessModel.GLAccount_GLTransaction", "GLAccount", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<GLAccount>("Net4Sage.DataAccessModel.GLAccount_GLTransaction", "GLAccount").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for BatchLog in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "BatchLog_GLTransaction", "BatchLog")]
        public virtual BatchLog BatchLog
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<BatchLog>("Net4Sage.DataAccessModel.BatchLog_GLTransaction", "BatchLog").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<BatchLog>("Net4Sage.DataAccessModel.BatchLog_GLTransaction", "BatchLog").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for BatchLog in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BatchLog> BatchLogReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<BatchLog>("Net4Sage.DataAccessModel.BatchLog_GLTransaction", "BatchLog");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<BatchLog>("Net4Sage.DataAccessModel.BatchLog_GLTransaction", "BatchLog", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<BatchLog>("Net4Sage.DataAccessModel.BatchLog_GLTransaction", "BatchLog").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.CustomForm in the schema.
    /// </summary>
    /// <KeyProperties>
    /// CustomFormKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="CustomForm")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustomForm : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CustomForm object.
        /// </summary>
        /// <param name="customFormKey">Initial value of CustomFormKey.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="customFormEnabled">Initial value of CustomFormEnabled.</param>
        /// <param name="customVersionNo">Initial value of CustomVersionNo.</param>
        /// <param name="formName">Initial value of FormName.</param>
        /// <param name="languageID">Initial value of LanguageID.</param>
        /// <param name="precedence">Initial value of Precedence.</param>
        /// <param name="taskID">Initial value of TaskID.</param>
        /// <param name="userGroupID">Initial value of UserGroupID.</param>
        /// <param name="userID">Initial value of UserID.</param>
        public static CustomForm CreateCustomForm(int customFormKey, string companyID, short customFormEnabled, int customVersionNo, string formName, int languageID, int precedence, int taskID, string userGroupID, string userID)
        {
            CustomForm customForm = new CustomForm();
            customForm.CustomFormKey = customFormKey;
            customForm.CompanyID = companyID;
            customForm.CustomFormEnabled = customFormEnabled;
            customForm.CustomVersionNo = customVersionNo;
            customForm.FormName = formName;
            customForm.LanguageID = languageID;
            customForm.Precedence = precedence;
            customForm.TaskID = taskID;
            customForm.UserGroupID = userGroupID;
            customForm.UserID = userID;
            return customForm;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for CustomFormKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustomFormKey
        {
            get
            {
                int value = _CustomFormKey;
                OnGetCustomFormKey(ref value);
                return value;
            }
            set
            {
                if (_CustomFormKey != value)
                {
                  OnCustomFormKeyChanging(ref value);
                  ReportPropertyChanging("CustomFormKey");
                  _CustomFormKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustomFormKey");
                  OnCustomFormKeyChanged();
              }
            }
        }
        private int _CustomFormKey;
        partial void OnGetCustomFormKey(ref int value);
        partial void OnCustomFormKeyChanging(ref int value);
        partial void OnCustomFormKeyChanged();
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for CustomFormEnabled in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CustomFormEnabled
        {
            get
            {
                short value = _CustomFormEnabled;
                OnGetCustomFormEnabled(ref value);
                return value;
            }
            set
            {
                if (_CustomFormEnabled != value)
                {
                  OnCustomFormEnabledChanging(ref value);
                  ReportPropertyChanging("CustomFormEnabled");
                  _CustomFormEnabled = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustomFormEnabled");
                  OnCustomFormEnabledChanged();
              }
            }
        }
        private short _CustomFormEnabled = 1;
        partial void OnGetCustomFormEnabled(ref short value);
        partial void OnCustomFormEnabledChanging(ref short value);
        partial void OnCustomFormEnabledChanged();
    
        /// <summary>
        /// There are no comments for CustomVersionNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustomVersionNo
        {
            get
            {
                int value = _CustomVersionNo;
                OnGetCustomVersionNo(ref value);
                return value;
            }
            set
            {
                if (_CustomVersionNo != value)
                {
                  OnCustomVersionNoChanging(ref value);
                  ReportPropertyChanging("CustomVersionNo");
                  _CustomVersionNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustomVersionNo");
                  OnCustomVersionNoChanged();
              }
            }
        }
        private int _CustomVersionNo = 0;
        partial void OnGetCustomVersionNo(ref int value);
        partial void OnCustomVersionNoChanging(ref int value);
        partial void OnCustomVersionNoChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for FormName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string FormName
        {
            get
            {
                string value = _FormName;
                OnGetFormName(ref value);
                return value;
            }
            set
            {
                if (_FormName != value)
                {
                  OnFormNameChanging(ref value);
                  ReportPropertyChanging("FormName");
                  _FormName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("FormName");
                  OnFormNameChanged();
              }
            }
        }
        private string _FormName = @" ";
        partial void OnGetFormName(ref string value);
        partial void OnFormNameChanging(ref string value);
        partial void OnFormNameChanged();
    
        /// <summary>
        /// There are no comments for LanguageID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int LanguageID
        {
            get
            {
                int value = _LanguageID;
                OnGetLanguageID(ref value);
                return value;
            }
            set
            {
                if (_LanguageID != value)
                {
                  OnLanguageIDChanging(ref value);
                  ReportPropertyChanging("LanguageID");
                  _LanguageID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LanguageID");
                  OnLanguageIDChanged();
              }
            }
        }
        private int _LanguageID = 0;
        partial void OnGetLanguageID(ref int value);
        partial void OnLanguageIDChanging(ref int value);
        partial void OnLanguageIDChanged();
    
        /// <summary>
        /// There are no comments for Precedence in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Precedence
        {
            get
            {
                int value = _Precedence;
                OnGetPrecedence(ref value);
                return value;
            }
            set
            {
                if (_Precedence != value)
                {
                  OnPrecedenceChanging(ref value);
                  ReportPropertyChanging("Precedence");
                  _Precedence = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Precedence");
                  OnPrecedenceChanged();
              }
            }
        }
        private int _Precedence = 0;
        partial void OnGetPrecedence(ref int value);
        partial void OnPrecedenceChanging(ref int value);
        partial void OnPrecedenceChanged();
    
        /// <summary>
        /// There are no comments for TaskID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int TaskID
        {
            get
            {
                int value = _TaskID;
                OnGetTaskID(ref value);
                return value;
            }
            set
            {
                if (_TaskID != value)
                {
                  OnTaskIDChanging(ref value);
                  ReportPropertyChanging("TaskID");
                  _TaskID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TaskID");
                  OnTaskIDChanged();
              }
            }
        }
        private int _TaskID;
        partial void OnGetTaskID(ref int value);
        partial void OnTaskIDChanging(ref int value);
        partial void OnTaskIDChanged();
    
        /// <summary>
        /// There are no comments for UserGroupID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string UserGroupID
        {
            get
            {
                string value = _UserGroupID;
                OnGetUserGroupID(ref value);
                return value;
            }
            set
            {
                if (_UserGroupID != value)
                {
                  OnUserGroupIDChanging(ref value);
                  ReportPropertyChanging("UserGroupID");
                  _UserGroupID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("UserGroupID");
                  OnUserGroupIDChanged();
              }
            }
        }
        private string _UserGroupID = @" ";
        partial void OnGetUserGroupID(ref string value);
        partial void OnUserGroupIDChanging(ref string value);
        partial void OnUserGroupIDChanged();
    
        /// <summary>
        /// There are no comments for UserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string UserID
        {
            get
            {
                string value = _UserID;
                OnGetUserID(ref value);
                return value;
            }
            set
            {
                if (_UserID != value)
                {
                  OnUserIDChanging(ref value);
                  ReportPropertyChanging("UserID");
                  _UserID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("UserID");
                  OnUserIDChanged();
              }
            }
        }
        private string _UserID;
        partial void OnGetUserID(ref string value);
        partial void OnUserIDChanging(ref string value);
        partial void OnUserIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CustomFormDetls in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "CustomForm_CustomFormDetl", "CustomFormDetls")]
        public virtual EntityCollection<CustomFormDetl> CustomFormDetls
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CustomFormDetl>("Net4Sage.DataAccessModel.CustomForm_CustomFormDetl", "CustomFormDetls");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CustomFormDetl>("Net4Sage.DataAccessModel.CustomForm_CustomFormDetl", "CustomFormDetls", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Task in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Task_CustomForm", "Task")]
        public virtual Task Task
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Task>("Net4Sage.DataAccessModel.Task_CustomForm", "Task").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Task>("Net4Sage.DataAccessModel.Task_CustomForm", "Task").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Task in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Task> TaskReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Task>("Net4Sage.DataAccessModel.Task_CustomForm", "Task");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Task>("Net4Sage.DataAccessModel.Task_CustomForm", "Task", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Task>("Net4Sage.DataAccessModel.Task_CustomForm", "Task").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.CustomFormDetl in the schema.
    /// </summary>
    /// <KeyProperties>
    /// CustomFormKey
    /// ControlName
    /// CtrlSpecPropMask
    /// PropertyMask
    /// UserDefined
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="CustomFormDetl")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustomFormDetl : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CustomFormDetl object.
        /// </summary>
        /// <param name="customFormKey">Initial value of CustomFormKey.</param>
        /// <param name="controlName">Initial value of ControlName.</param>
        /// <param name="ctrlSpecPropMask">Initial value of CtrlSpecPropMask.</param>
        /// <param name="propertyMask">Initial value of PropertyMask.</param>
        /// <param name="userDefined">Initial value of UserDefined.</param>
        public static CustomFormDetl CreateCustomFormDetl(int customFormKey, string controlName, int ctrlSpecPropMask, int propertyMask, short userDefined)
        {
            CustomFormDetl customFormDetl = new CustomFormDetl();
            customFormDetl.CustomFormKey = customFormKey;
            customFormDetl.ControlName = controlName;
            customFormDetl.CtrlSpecPropMask = ctrlSpecPropMask;
            customFormDetl.PropertyMask = propertyMask;
            customFormDetl.UserDefined = userDefined;
            return customFormDetl;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for CustomFormKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustomFormKey
        {
            get
            {
                int value = _CustomFormKey;
                OnGetCustomFormKey(ref value);
                return value;
            }
            set
            {
                if (_CustomFormKey != value)
                {
                  OnCustomFormKeyChanging(ref value);
                  ReportPropertyChanging("CustomFormKey");
                  _CustomFormKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustomFormKey");
                  OnCustomFormKeyChanged();
              }
            }
        }
        private int _CustomFormKey;
        partial void OnGetCustomFormKey(ref int value);
        partial void OnCustomFormKeyChanging(ref int value);
        partial void OnCustomFormKeyChanged();
    
        /// <summary>
        /// There are no comments for ArrayIndex in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ArrayIndex
        {
            get
            {
                int? value = _ArrayIndex;
                OnGetArrayIndex(ref value);
                return value;
            }
            set
            {
                if (_ArrayIndex != value)
                {
                  OnArrayIndexChanging(ref value);
                  ReportPropertyChanging("ArrayIndex");
                  _ArrayIndex = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ArrayIndex");
                  OnArrayIndexChanged();
              }
            }
        }
        private int? _ArrayIndex;
        partial void OnGetArrayIndex(ref int? value);
        partial void OnArrayIndexChanging(ref int? value);
        partial void OnArrayIndexChanged();
    
        /// <summary>
        /// There are no comments for BackColor in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? BackColor
        {
            get
            {
                int? value = _BackColor;
                OnGetBackColor(ref value);
                return value;
            }
            set
            {
                if (_BackColor != value)
                {
                  OnBackColorChanging(ref value);
                  ReportPropertyChanging("BackColor");
                  _BackColor = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BackColor");
                  OnBackColorChanged();
              }
            }
        }
        private int? _BackColor;
        partial void OnGetBackColor(ref int? value);
        partial void OnBackColorChanging(ref int? value);
        partial void OnBackColorChanged();
    
        /// <summary>
        /// There are no comments for Caption in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Caption
        {
            get
            {
                string value = _Caption;
                OnGetCaption(ref value);
                return value;
            }
            set
            {
                if (_Caption != value)
                {
                  OnCaptionChanging(ref value);
                  ReportPropertyChanging("Caption");
                  _Caption = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Caption");
                  OnCaptionChanged();
              }
            }
        }
        private string _Caption;
        partial void OnGetCaption(ref string value);
        partial void OnCaptionChanging(ref string value);
        partial void OnCaptionChanged();
    
        /// <summary>
        /// There are no comments for ControlName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string ControlName
        {
            get
            {
                string value = _ControlName;
                OnGetControlName(ref value);
                return value;
            }
            set
            {
                if (_ControlName != value)
                {
                  OnControlNameChanging(ref value);
                  ReportPropertyChanging("ControlName");
                  _ControlName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ControlName");
                  OnControlNameChanged();
              }
            }
        }
        private string _ControlName = @" ";
        partial void OnGetControlName(ref string value);
        partial void OnControlNameChanging(ref string value);
        partial void OnControlNameChanged();
    
        /// <summary>
        /// There are no comments for CtrlSpecProperty in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CtrlSpecProperty
        {
            get
            {
                string value = _CtrlSpecProperty;
                OnGetCtrlSpecProperty(ref value);
                return value;
            }
            set
            {
                if (_CtrlSpecProperty != value)
                {
                  OnCtrlSpecPropertyChanging(ref value);
                  ReportPropertyChanging("CtrlSpecProperty");
                  _CtrlSpecProperty = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CtrlSpecProperty");
                  OnCtrlSpecPropertyChanged();
              }
            }
        }
        private string _CtrlSpecProperty;
        partial void OnGetCtrlSpecProperty(ref string value);
        partial void OnCtrlSpecPropertyChanging(ref string value);
        partial void OnCtrlSpecPropertyChanged();
    
        /// <summary>
        /// There are no comments for CtrlSpecPropMask in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CtrlSpecPropMask
        {
            get
            {
                int value = _CtrlSpecPropMask;
                OnGetCtrlSpecPropMask(ref value);
                return value;
            }
            set
            {
                if (_CtrlSpecPropMask != value)
                {
                  OnCtrlSpecPropMaskChanging(ref value);
                  ReportPropertyChanging("CtrlSpecPropMask");
                  _CtrlSpecPropMask = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CtrlSpecPropMask");
                  OnCtrlSpecPropMaskChanged();
              }
            }
        }
        private int _CtrlSpecPropMask;
        partial void OnGetCtrlSpecPropMask(ref int value);
        partial void OnCtrlSpecPropMaskChanging(ref int value);
        partial void OnCtrlSpecPropMaskChanged();
    
        /// <summary>
        /// There are no comments for CustomBindingKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CustomBindingKey
        {
            get
            {
                int? value = _CustomBindingKey;
                OnGetCustomBindingKey(ref value);
                return value;
            }
            set
            {
                if (_CustomBindingKey != value)
                {
                  OnCustomBindingKeyChanging(ref value);
                  ReportPropertyChanging("CustomBindingKey");
                  _CustomBindingKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustomBindingKey");
                  OnCustomBindingKeyChanged();
              }
            }
        }
        private int? _CustomBindingKey;
        partial void OnGetCustomBindingKey(ref int? value);
        partial void OnCustomBindingKeyChanging(ref int? value);
        partial void OnCustomBindingKeyChanged();
    
        /// <summary>
        /// There are no comments for Enabled in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual short? Enabled
        {
            get
            {
                short? value = _Enabled;
                OnGetEnabled(ref value);
                return value;
            }
            set
            {
                if (_Enabled != value)
                {
                  OnEnabledChanging(ref value);
                  ReportPropertyChanging("Enabled");
                  _Enabled = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Enabled");
                  OnEnabledChanged();
              }
            }
        }
        private short? _Enabled;
        partial void OnGetEnabled(ref short? value);
        partial void OnEnabledChanging(ref short? value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// There are no comments for FontBold in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual short? FontBold
        {
            get
            {
                short? value = _FontBold;
                OnGetFontBold(ref value);
                return value;
            }
            set
            {
                if (_FontBold != value)
                {
                  OnFontBoldChanging(ref value);
                  ReportPropertyChanging("FontBold");
                  _FontBold = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FontBold");
                  OnFontBoldChanged();
              }
            }
        }
        private short? _FontBold;
        partial void OnGetFontBold(ref short? value);
        partial void OnFontBoldChanging(ref short? value);
        partial void OnFontBoldChanged();
    
        /// <summary>
        /// There are no comments for FontItalic in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual short? FontItalic
        {
            get
            {
                short? value = _FontItalic;
                OnGetFontItalic(ref value);
                return value;
            }
            set
            {
                if (_FontItalic != value)
                {
                  OnFontItalicChanging(ref value);
                  ReportPropertyChanging("FontItalic");
                  _FontItalic = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FontItalic");
                  OnFontItalicChanged();
              }
            }
        }
        private short? _FontItalic;
        partial void OnGetFontItalic(ref short? value);
        partial void OnFontItalicChanging(ref short? value);
        partial void OnFontItalicChanged();
    
        /// <summary>
        /// There are no comments for FontName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string FontName
        {
            get
            {
                string value = _FontName;
                OnGetFontName(ref value);
                return value;
            }
            set
            {
                if (_FontName != value)
                {
                  OnFontNameChanging(ref value);
                  ReportPropertyChanging("FontName");
                  _FontName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("FontName");
                  OnFontNameChanged();
              }
            }
        }
        private string _FontName;
        partial void OnGetFontName(ref string value);
        partial void OnFontNameChanging(ref string value);
        partial void OnFontNameChanged();
    
        /// <summary>
        /// There are no comments for FontSize in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? FontSize
        {
            get
            {
                decimal? value = _FontSize;
                OnGetFontSize(ref value);
                return value;
            }
            set
            {
                if (_FontSize != value)
                {
                  OnFontSizeChanging(ref value);
                  ReportPropertyChanging("FontSize");
                  _FontSize = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FontSize");
                  OnFontSizeChanged();
              }
            }
        }
        private decimal? _FontSize;
        partial void OnGetFontSize(ref decimal? value);
        partial void OnFontSizeChanging(ref decimal? value);
        partial void OnFontSizeChanged();
    
        /// <summary>
        /// There are no comments for FontStrikethru in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual short? FontStrikethru
        {
            get
            {
                short? value = _FontStrikethru;
                OnGetFontStrikethru(ref value);
                return value;
            }
            set
            {
                if (_FontStrikethru != value)
                {
                  OnFontStrikethruChanging(ref value);
                  ReportPropertyChanging("FontStrikethru");
                  _FontStrikethru = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FontStrikethru");
                  OnFontStrikethruChanged();
              }
            }
        }
        private short? _FontStrikethru;
        partial void OnGetFontStrikethru(ref short? value);
        partial void OnFontStrikethruChanging(ref short? value);
        partial void OnFontStrikethruChanged();
    
        /// <summary>
        /// There are no comments for FontUnderline in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual short? FontUnderline
        {
            get
            {
                short? value = _FontUnderline;
                OnGetFontUnderline(ref value);
                return value;
            }
            set
            {
                if (_FontUnderline != value)
                {
                  OnFontUnderlineChanging(ref value);
                  ReportPropertyChanging("FontUnderline");
                  _FontUnderline = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FontUnderline");
                  OnFontUnderlineChanged();
              }
            }
        }
        private short? _FontUnderline;
        partial void OnGetFontUnderline(ref short? value);
        partial void OnFontUnderlineChanging(ref short? value);
        partial void OnFontUnderlineChanged();
    
        /// <summary>
        /// There are no comments for ForeColor in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ForeColor
        {
            get
            {
                int? value = _ForeColor;
                OnGetForeColor(ref value);
                return value;
            }
            set
            {
                if (_ForeColor != value)
                {
                  OnForeColorChanging(ref value);
                  ReportPropertyChanging("ForeColor");
                  _ForeColor = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ForeColor");
                  OnForeColorChanged();
              }
            }
        }
        private int? _ForeColor;
        partial void OnGetForeColor(ref int? value);
        partial void OnForeColorChanging(ref int? value);
        partial void OnForeColorChanged();
    
        /// <summary>
        /// There are no comments for Height in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? Height
        {
            get
            {
                int? value = _Height;
                OnGetHeight(ref value);
                return value;
            }
            set
            {
                if (_Height != value)
                {
                  OnHeightChanging(ref value);
                  ReportPropertyChanging("Height");
                  _Height = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Height");
                  OnHeightChanged();
              }
            }
        }
        private int? _Height;
        partial void OnGetHeight(ref int? value);
        partial void OnHeightChanging(ref int? value);
        partial void OnHeightChanged();
    
        /// <summary>
        /// There are no comments for LeftPos in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? LeftPos
        {
            get
            {
                int? value = _LeftPos;
                OnGetLeftPos(ref value);
                return value;
            }
            set
            {
                if (_LeftPos != value)
                {
                  OnLeftPosChanging(ref value);
                  ReportPropertyChanging("LeftPos");
                  _LeftPos = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LeftPos");
                  OnLeftPosChanged();
              }
            }
        }
        private int? _LeftPos;
        partial void OnGetLeftPos(ref int? value);
        partial void OnLeftPosChanging(ref int? value);
        partial void OnLeftPosChanged();
    
        /// <summary>
        /// There are no comments for ParentCtrlArrIndex in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ParentCtrlArrIndex
        {
            get
            {
                int? value = _ParentCtrlArrIndex;
                OnGetParentCtrlArrIndex(ref value);
                return value;
            }
            set
            {
                if (_ParentCtrlArrIndex != value)
                {
                  OnParentCtrlArrIndexChanging(ref value);
                  ReportPropertyChanging("ParentCtrlArrIndex");
                  _ParentCtrlArrIndex = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ParentCtrlArrIndex");
                  OnParentCtrlArrIndexChanged();
              }
            }
        }
        private int? _ParentCtrlArrIndex;
        partial void OnGetParentCtrlArrIndex(ref int? value);
        partial void OnParentCtrlArrIndexChanging(ref int? value);
        partial void OnParentCtrlArrIndexChanged();
    
        /// <summary>
        /// There are no comments for ParentCtrlName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ParentCtrlName
        {
            get
            {
                string value = _ParentCtrlName;
                OnGetParentCtrlName(ref value);
                return value;
            }
            set
            {
                if (_ParentCtrlName != value)
                {
                  OnParentCtrlNameChanging(ref value);
                  ReportPropertyChanging("ParentCtrlName");
                  _ParentCtrlName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ParentCtrlName");
                  OnParentCtrlNameChanged();
              }
            }
        }
        private string _ParentCtrlName;
        partial void OnGetParentCtrlName(ref string value);
        partial void OnParentCtrlNameChanging(ref string value);
        partial void OnParentCtrlNameChanged();
    
        /// <summary>
        /// There are no comments for PropertyMask in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int PropertyMask
        {
            get
            {
                int value = _PropertyMask;
                OnGetPropertyMask(ref value);
                return value;
            }
            set
            {
                if (_PropertyMask != value)
                {
                  OnPropertyMaskChanging(ref value);
                  ReportPropertyChanging("PropertyMask");
                  _PropertyMask = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PropertyMask");
                  OnPropertyMaskChanged();
              }
            }
        }
        private int _PropertyMask;
        partial void OnGetPropertyMask(ref int value);
        partial void OnPropertyMaskChanging(ref int value);
        partial void OnPropertyMaskChanged();
    
        /// <summary>
        /// There are no comments for ScriptKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ScriptKey
        {
            get
            {
                int? value = _ScriptKey;
                OnGetScriptKey(ref value);
                return value;
            }
            set
            {
                if (_ScriptKey != value)
                {
                  OnScriptKeyChanging(ref value);
                  ReportPropertyChanging("ScriptKey");
                  _ScriptKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ScriptKey");
                  OnScriptKeyChanged();
              }
            }
        }
        private int? _ScriptKey;
        partial void OnGetScriptKey(ref int? value);
        partial void OnScriptKeyChanging(ref int? value);
        partial void OnScriptKeyChanged();
    
        /// <summary>
        /// There are no comments for TabIndex in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? TabIndex
        {
            get
            {
                int? value = _TabIndex;
                OnGetTabIndex(ref value);
                return value;
            }
            set
            {
                if (_TabIndex != value)
                {
                  OnTabIndexChanging(ref value);
                  ReportPropertyChanging("TabIndex");
                  _TabIndex = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TabIndex");
                  OnTabIndexChanged();
              }
            }
        }
        private int? _TabIndex;
        partial void OnGetTabIndex(ref int? value);
        partial void OnTabIndexChanging(ref int? value);
        partial void OnTabIndexChanged();
    
        /// <summary>
        /// There are no comments for TabStop in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual short? TabStop
        {
            get
            {
                short? value = _TabStop;
                OnGetTabStop(ref value);
                return value;
            }
            set
            {
                if (_TabStop != value)
                {
                  OnTabStopChanging(ref value);
                  ReportPropertyChanging("TabStop");
                  _TabStop = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TabStop");
                  OnTabStopChanged();
              }
            }
        }
        private short? _TabStop;
        partial void OnGetTabStop(ref short? value);
        partial void OnTabStopChanging(ref short? value);
        partial void OnTabStopChanged();
    
        /// <summary>
        /// There are no comments for TopPos in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? TopPos
        {
            get
            {
                int? value = _TopPos;
                OnGetTopPos(ref value);
                return value;
            }
            set
            {
                if (_TopPos != value)
                {
                  OnTopPosChanging(ref value);
                  ReportPropertyChanging("TopPos");
                  _TopPos = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TopPos");
                  OnTopPosChanged();
              }
            }
        }
        private int? _TopPos;
        partial void OnGetTopPos(ref int? value);
        partial void OnTopPosChanging(ref int? value);
        partial void OnTopPosChanged();
    
        /// <summary>
        /// There are no comments for TypeName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string TypeName
        {
            get
            {
                string value = _TypeName;
                OnGetTypeName(ref value);
                return value;
            }
            set
            {
                if (_TypeName != value)
                {
                  OnTypeNameChanging(ref value);
                  ReportPropertyChanging("TypeName");
                  _TypeName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TypeName");
                  OnTypeNameChanged();
              }
            }
        }
        private string _TypeName;
        partial void OnGetTypeName(ref string value);
        partial void OnTypeNameChanging(ref string value);
        partial void OnTypeNameChanged();
    
        /// <summary>
        /// There are no comments for UserDefined in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short UserDefined
        {
            get
            {
                short value = _UserDefined;
                OnGetUserDefined(ref value);
                return value;
            }
            set
            {
                if (_UserDefined != value)
                {
                  OnUserDefinedChanging(ref value);
                  ReportPropertyChanging("UserDefined");
                  _UserDefined = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UserDefined");
                  OnUserDefinedChanged();
              }
            }
        }
        private short _UserDefined = 0;
        partial void OnGetUserDefined(ref short value);
        partial void OnUserDefinedChanging(ref short value);
        partial void OnUserDefinedChanged();
    
        /// <summary>
        /// There are no comments for Visible in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual short? Visible
        {
            get
            {
                short? value = _Visible;
                OnGetVisible(ref value);
                return value;
            }
            set
            {
                if (_Visible != value)
                {
                  OnVisibleChanging(ref value);
                  ReportPropertyChanging("Visible");
                  _Visible = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Visible");
                  OnVisibleChanged();
              }
            }
        }
        private short? _Visible;
        partial void OnGetVisible(ref short? value);
        partial void OnVisibleChanging(ref short? value);
        partial void OnVisibleChanged();
    
        /// <summary>
        /// There are no comments for Width in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? Width
        {
            get
            {
                int? value = _Width;
                OnGetWidth(ref value);
                return value;
            }
            set
            {
                if (_Width != value)
                {
                  OnWidthChanging(ref value);
                  ReportPropertyChanging("Width");
                  _Width = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Width");
                  OnWidthChanged();
              }
            }
        }
        private int? _Width;
        partial void OnGetWidth(ref int? value);
        partial void OnWidthChanging(ref int? value);
        partial void OnWidthChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CustomForm in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "CustomForm_CustomFormDetl", "CustomForm")]
        public virtual CustomForm CustomForm
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustomForm>("Net4Sage.DataAccessModel.CustomForm_CustomFormDetl", "CustomForm").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustomForm>("Net4Sage.DataAccessModel.CustomForm_CustomFormDetl", "CustomForm").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for CustomForm in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustomForm> CustomFormReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustomForm>("Net4Sage.DataAccessModel.CustomForm_CustomFormDetl", "CustomForm");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CustomForm>("Net4Sage.DataAccessModel.CustomForm_CustomFormDetl", "CustomForm", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustomForm>("Net4Sage.DataAccessModel.CustomForm_CustomFormDetl", "CustomForm").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.Task in the schema.
    /// </summary>
    /// <KeyProperties>
    /// TaskID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="Task")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [Net4Sage.Controls.Lookup.LookupAutoShowColumns(false)]
    [Net4Sage.Controls.Lookup.LookupFormTitle(@"Buscar Tarea")]
    public partial class Task : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Task object.
        /// </summary>
        /// <param name="taskID">Initial value of TaskID.</param>
        /// <param name="clientEnabled">Initial value of ClientEnabled.</param>
        /// <param name="moduleNo">Initial value of ModuleNo.</param>
        /// <param name="systemTask">Initial value of SystemTask.</param>
        /// <param name="taskConstName">Initial value of TaskConstName.</param>
        /// <param name="taskInterfaceType">Initial value of TaskInterfaceType.</param>
        /// <param name="taskInvokeFlags">Initial value of TaskInvokeFlags.</param>
        /// <param name="taskInvokeMethod">Initial value of TaskInvokeMethod.</param>
        /// <param name="taskOleClsID">Initial value of TaskOleClsID.</param>
        /// <param name="taskOleProgID">Initial value of TaskOleProgID.</param>
        /// <param name="taskTypeID">Initial value of TaskTypeID.</param>
        /// <param name="webEnabled">Initial value of WebEnabled.</param>
        public static Task CreateTask(int taskID, short clientEnabled, short moduleNo, short systemTask, string taskConstName, int taskInterfaceType, int taskInvokeFlags, int taskInvokeMethod, string taskOleClsID, string taskOleProgID, int taskTypeID, short webEnabled)
        {
            Task task = new Task();
            task.TaskID = taskID;
            task.ClientEnabled = clientEnabled;
            task.ModuleNo = moduleNo;
            task.SystemTask = systemTask;
            task.TaskConstName = taskConstName;
            task.TaskInterfaceType = taskInterfaceType;
            task.TaskInvokeFlags = taskInvokeFlags;
            task.TaskInvokeMethod = taskInvokeMethod;
            task.TaskOleClsID = taskOleClsID;
            task.TaskOleProgID = taskOleProgID;
            task.TaskTypeID = taskTypeID;
            task.WebEnabled = webEnabled;
            return task;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for TaskID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupTextReturn]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"Tarea")]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Tarea")]
        public virtual int TaskID
        {
            get
            {
                int value = _TaskID;
                OnGetTaskID(ref value);
                return value;
            }
            set
            {
                if (_TaskID != value)
                {
                  OnTaskIDChanging(ref value);
                  ReportPropertyChanging("TaskID");
                  _TaskID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TaskID");
                  OnTaskIDChanged();
              }
            }
        }
        private int _TaskID;
        partial void OnGetTaskID(ref int value);
        partial void OnTaskIDChanging(ref int value);
        partial void OnTaskIDChanged();
    
        /// <summary>
        /// There are no comments for ClientEnabled in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ClientEnabled
        {
            get
            {
                short value = _ClientEnabled;
                OnGetClientEnabled(ref value);
                return value;
            }
            set
            {
                if (_ClientEnabled != value)
                {
                  OnClientEnabledChanging(ref value);
                  ReportPropertyChanging("ClientEnabled");
                  _ClientEnabled = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ClientEnabled");
                  OnClientEnabledChanged();
              }
            }
        }
        private short _ClientEnabled = 1;
        partial void OnGetClientEnabled(ref short value);
        partial void OnClientEnabledChanging(ref short value);
        partial void OnClientEnabledChanged();
    
        /// <summary>
        /// There are no comments for ModuleNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"No Módulo")]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"No Módulo")]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        public virtual short ModuleNo
        {
            get
            {
                short value = _ModuleNo;
                OnGetModuleNo(ref value);
                return value;
            }
            set
            {
                if (_ModuleNo != value)
                {
                  OnModuleNoChanging(ref value);
                  ReportPropertyChanging("ModuleNo");
                  _ModuleNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ModuleNo");
                  OnModuleNoChanged();
              }
            }
        }
        private short _ModuleNo;
        partial void OnGetModuleNo(ref short value);
        partial void OnModuleNoChanging(ref short value);
        partial void OnModuleNoChanged();
    
        /// <summary>
        /// There are no comments for SystemTask in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short SystemTask
        {
            get
            {
                short value = _SystemTask;
                OnGetSystemTask(ref value);
                return value;
            }
            set
            {
                if (_SystemTask != value)
                {
                  OnSystemTaskChanging(ref value);
                  ReportPropertyChanging("SystemTask");
                  _SystemTask = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SystemTask");
                  OnSystemTaskChanged();
              }
            }
        }
        private short _SystemTask = 0;
        partial void OnGetSystemTask(ref short value);
        partial void OnSystemTaskChanging(ref short value);
        partial void OnSystemTaskChanged();
    
        /// <summary>
        /// There are no comments for TaskConstName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string TaskConstName
        {
            get
            {
                string value = _TaskConstName;
                OnGetTaskConstName(ref value);
                return value;
            }
            set
            {
                if (_TaskConstName != value)
                {
                  OnTaskConstNameChanging(ref value);
                  ReportPropertyChanging("TaskConstName");
                  _TaskConstName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TaskConstName");
                  OnTaskConstNameChanged();
              }
            }
        }
        private string _TaskConstName = @" ";
        partial void OnGetTaskConstName(ref string value);
        partial void OnTaskConstNameChanging(ref string value);
        partial void OnTaskConstNameChanged();
    
        /// <summary>
        /// There are no comments for TaskInterfaceType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int TaskInterfaceType
        {
            get
            {
                int value = _TaskInterfaceType;
                OnGetTaskInterfaceType(ref value);
                return value;
            }
            set
            {
                if (_TaskInterfaceType != value)
                {
                  OnTaskInterfaceTypeChanging(ref value);
                  ReportPropertyChanging("TaskInterfaceType");
                  _TaskInterfaceType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TaskInterfaceType");
                  OnTaskInterfaceTypeChanged();
              }
            }
        }
        private int _TaskInterfaceType = 0;
        partial void OnGetTaskInterfaceType(ref int value);
        partial void OnTaskInterfaceTypeChanging(ref int value);
        partial void OnTaskInterfaceTypeChanged();
    
        /// <summary>
        /// There are no comments for TaskInvokeFlags in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int TaskInvokeFlags
        {
            get
            {
                int value = _TaskInvokeFlags;
                OnGetTaskInvokeFlags(ref value);
                return value;
            }
            set
            {
                if (_TaskInvokeFlags != value)
                {
                  OnTaskInvokeFlagsChanging(ref value);
                  ReportPropertyChanging("TaskInvokeFlags");
                  _TaskInvokeFlags = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TaskInvokeFlags");
                  OnTaskInvokeFlagsChanged();
              }
            }
        }
        private int _TaskInvokeFlags = 0;
        partial void OnGetTaskInvokeFlags(ref int value);
        partial void OnTaskInvokeFlagsChanging(ref int value);
        partial void OnTaskInvokeFlagsChanged();
    
        /// <summary>
        /// There are no comments for TaskInvokeMethod in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int TaskInvokeMethod
        {
            get
            {
                int value = _TaskInvokeMethod;
                OnGetTaskInvokeMethod(ref value);
                return value;
            }
            set
            {
                if (_TaskInvokeMethod != value)
                {
                  OnTaskInvokeMethodChanging(ref value);
                  ReportPropertyChanging("TaskInvokeMethod");
                  _TaskInvokeMethod = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TaskInvokeMethod");
                  OnTaskInvokeMethodChanged();
              }
            }
        }
        private int _TaskInvokeMethod = 0;
        partial void OnGetTaskInvokeMethod(ref int value);
        partial void OnTaskInvokeMethodChanging(ref int value);
        partial void OnTaskInvokeMethodChanged();
    
        /// <summary>
        /// There are no comments for TaskOleClsID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string TaskOleClsID
        {
            get
            {
                string value = _TaskOleClsID;
                OnGetTaskOleClsID(ref value);
                return value;
            }
            set
            {
                if (_TaskOleClsID != value)
                {
                  OnTaskOleClsIDChanging(ref value);
                  ReportPropertyChanging("TaskOleClsID");
                  _TaskOleClsID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TaskOleClsID");
                  OnTaskOleClsIDChanged();
              }
            }
        }
        private string _TaskOleClsID = @" ";
        partial void OnGetTaskOleClsID(ref string value);
        partial void OnTaskOleClsIDChanging(ref string value);
        partial void OnTaskOleClsIDChanged();
    
        /// <summary>
        /// There are no comments for TaskOleProgID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"ID Programa")]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"ID Programa")]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        public virtual string TaskOleProgID
        {
            get
            {
                string value = _TaskOleProgID;
                OnGetTaskOleProgID(ref value);
                return value;
            }
            set
            {
                if (_TaskOleProgID != value)
                {
                  OnTaskOleProgIDChanging(ref value);
                  ReportPropertyChanging("TaskOleProgID");
                  _TaskOleProgID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TaskOleProgID");
                  OnTaskOleProgIDChanged();
              }
            }
        }
        private string _TaskOleProgID = @" ";
        partial void OnGetTaskOleProgID(ref string value);
        partial void OnTaskOleProgIDChanging(ref string value);
        partial void OnTaskOleProgIDChanged();
    
        /// <summary>
        /// There are no comments for TaskParamInt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? TaskParamInt
        {
            get
            {
                int? value = _TaskParamInt;
                OnGetTaskParamInt(ref value);
                return value;
            }
            set
            {
                if (_TaskParamInt != value)
                {
                  OnTaskParamIntChanging(ref value);
                  ReportPropertyChanging("TaskParamInt");
                  _TaskParamInt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TaskParamInt");
                  OnTaskParamIntChanged();
              }
            }
        }
        private int? _TaskParamInt;
        partial void OnGetTaskParamInt(ref int? value);
        partial void OnTaskParamIntChanging(ref int? value);
        partial void OnTaskParamIntChanged();
    
        /// <summary>
        /// There are no comments for TaskParamStr in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string TaskParamStr
        {
            get
            {
                string value = _TaskParamStr;
                OnGetTaskParamStr(ref value);
                return value;
            }
            set
            {
                if (_TaskParamStr != value)
                {
                  OnTaskParamStrChanging(ref value);
                  ReportPropertyChanging("TaskParamStr");
                  _TaskParamStr = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TaskParamStr");
                  OnTaskParamStrChanged();
              }
            }
        }
        private string _TaskParamStr;
        partial void OnGetTaskParamStr(ref string value);
        partial void OnTaskParamStrChanging(ref string value);
        partial void OnTaskParamStrChanged();
    
        /// <summary>
        /// There are no comments for TaskTypeID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int TaskTypeID
        {
            get
            {
                int value = _TaskTypeID;
                OnGetTaskTypeID(ref value);
                return value;
            }
            set
            {
                if (_TaskTypeID != value)
                {
                  OnTaskTypeIDChanging(ref value);
                  ReportPropertyChanging("TaskTypeID");
                  _TaskTypeID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TaskTypeID");
                  OnTaskTypeIDChanged();
              }
            }
        }
        private int _TaskTypeID = 0;
        partial void OnGetTaskTypeID(ref int value);
        partial void OnTaskTypeIDChanging(ref int value);
        partial void OnTaskTypeIDChanged();
    
        /// <summary>
        /// There are no comments for WebEnabled in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short WebEnabled
        {
            get
            {
                short value = _WebEnabled;
                OnGetWebEnabled(ref value);
                return value;
            }
            set
            {
                if (_WebEnabled != value)
                {
                  OnWebEnabledChanging(ref value);
                  ReportPropertyChanging("WebEnabled");
                  _WebEnabled = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WebEnabled");
                  OnWebEnabledChanged();
              }
            }
        }
        private short _WebEnabled = 0;
        partial void OnGetWebEnabled(ref short value);
        partial void OnWebEnabledChanging(ref short value);
        partial void OnWebEnabledChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CustomForms in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Task_CustomForm", "CustomForms")]
        public virtual EntityCollection<CustomForm> CustomForms
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CustomForm>("Net4Sage.DataAccessModel.Task_CustomForm", "CustomForms");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CustomForm>("Net4Sage.DataAccessModel.Task_CustomForm", "CustomForms", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.SOOption in the schema.
    /// </summary>
    /// <KeyProperties>
    /// CompanyID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="SOOption")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SOOption : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SOOption object.
        /// </summary>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="activateOutOfStockManager">Initial value of ActivateOutOfStockManager.</param>
        /// <param name="allowDiscontItemRtrns">Initial value of AllowDiscontItemRtrns.</param>
        /// <param name="allowDropShipRtrn">Initial value of AllowDropShipRtrn.</param>
        /// <param name="allowExpiredLotOnRtrn">Initial value of AllowExpiredLotOnRtrn.</param>
        /// <param name="allowMultSOPerShip">Initial value of AllowMultSOPerShip.</param>
        /// <param name="autoSubstInImmedPick">Initial value of AutoSubstInImmedPick.</param>
        /// <param name="autoSubstInPick">Initial value of AutoSubstInPick.</param>
        /// <param name="commitSOLine">Initial value of CommitSOLine.</param>
        /// <param name="creditCheckAtOrderEntry">Initial value of CreditCheckAtOrderEntry.</param>
        /// <param name="creditCheckAtPicking">Initial value of CreditCheckAtPicking.</param>
        /// <param name="creditHoldAutoRelease">Initial value of CreditHoldAutoRelease.</param>
        /// <param name="creditLimitTol">Initial value of CreditLimitTol.</param>
        /// <param name="dfltSpecItemtoDS">Initial value of DfltSpecItemtoDS.</param>
        /// <param name="dropShipCostMeth">Initial value of DropShipCostMeth.</param>
        /// <param name="dropShipLeadTime">Initial value of DropShipLeadTime.</param>
        /// <param name="explBOMOnSO">Initial value of ExplBOMOnSO.</param>
        /// <param name="explPCOnSO">Initial value of ExplPCOnSO.</param>
        /// <param name="extShipSystem">Initial value of ExtShipSystem.</param>
        /// <param name="gLPostRgstrFormat">Initial value of GLPostRgstrFormat.</param>
        /// <param name="grossProfitCost">Initial value of GrossProfitCost.</param>
        /// <param name="integrateWithGL">Initial value of IntegrateWithGL.</param>
        /// <param name="integrateWithIM">Initial value of IntegrateWithIM.</param>
        /// <param name="integrateWithPO">Initial value of IntegrateWithPO.</param>
        /// <param name="maintAuditRetnt">Initial value of MaintAuditRetnt.</param>
        /// <param name="maxSerialNbrsOnPickList">Initial value of MaxSerialNbrsOnPickList.</param>
        /// <param name="openOrdCreditChk">Initial value of OpenOrdCreditChk.</param>
        /// <param name="overShipmentPolicy">Initial value of OverShipmentPolicy.</param>
        /// <param name="performValidationDuringSave">Initial value of PerformValidationDuringSave.</param>
        /// <param name="postInDetlDropShip">Initial value of PostInDetlDropShip.</param>
        /// <param name="postInDetlSalesClr">Initial value of PostInDetlSalesClr.</param>
        /// <param name="quoteRetnt">Initial value of QuoteRetnt.</param>
        /// <param name="recentCustItemDays">Initial value of RecentCustItemDays.</param>
        /// <param name="recentRtrnDays">Initial value of RecentRtrnDays.</param>
        /// <param name="recentShipDays">Initial value of RecentShipDays.</param>
        /// <param name="reqCompletePacking">Initial value of ReqCompletePacking.</param>
        /// <param name="reqLotSerialDistInPacking">Initial value of ReqLotSerialDistInPacking.</param>
        /// <param name="reqSalesSourceOnSO">Initial value of ReqSalesSourceOnSO.</param>
        /// <param name="reverseCommOnRtrn">Initial value of ReverseCommOnRtrn.</param>
        /// <param name="reverseFreightOnRtrn">Initial value of ReverseFreightOnRtrn.</param>
        /// <param name="rMAExpirationDays">Initial value of RMAExpirationDays.</param>
        /// <param name="rMAReqd">Initial value of RMAReqd.</param>
        /// <param name="rMAThresholdAmt">Initial value of RMAThresholdAmt.</param>
        /// <param name="salesOrderReqdForRtrn">Initial value of SalesOrderReqdForRtrn.</param>
        /// <param name="salesOrdRetnt">Initial value of SalesOrdRetnt.</param>
        /// <param name="sameRangeForBlnkt">Initial value of SameRangeForBlnkt.</param>
        /// <param name="sameRangeForQuote">Initial value of SameRangeForQuote.</param>
        /// <param name="shipDeclaredAmtCostMeth">Initial value of ShipDeclaredAmtCostMeth.</param>
        /// <param name="shipDeclaredAmtFixedAmt">Initial value of ShipDeclaredAmtFixedAmt.</param>
        /// <param name="shipDeclaredAmtMarkupAmt">Initial value of ShipDeclaredAmtMarkupAmt.</param>
        /// <param name="shipDeclaredAmtMarkupPct">Initial value of ShipDeclaredAmtMarkupPct.</param>
        /// <param name="shipDeclaredAmtMeth">Initial value of ShipDeclaredAmtMeth.</param>
        /// <param name="shipRetnt">Initial value of ShipRetnt.</param>
        /// <param name="singleUserSO">Initial value of SingleUserSO.</param>
        /// <param name="sOAuditAdd">Initial value of SOAuditAdd.</param>
        /// <param name="sOAuditChange">Initial value of SOAuditChange.</param>
        /// <param name="sOAuditDelete">Initial value of SOAuditDelete.</param>
        /// <param name="trackChngOrders">Initial value of TrackChngOrders.</param>
        /// <param name="trackDelSO">Initial value of TrackDelSO.</param>
        /// <param name="tranIDChngChar">Initial value of TranIDChngChar.</param>
        /// <param name="tranIDRelChar">Initial value of TranIDRelChar.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        /// <param name="useBlnktRelNos">Initial value of UseBlnktRelNos.</param>
        /// <param name="useMultCurr">Initial value of UseMultCurr.</param>
        /// <param name="validLotReqdForRtrn">Initial value of ValidLotReqdForRtrn.</param>
        /// <param name="validSerialReqdForRtrn">Initial value of ValidSerialReqdForRtrn.</param>
        /// <param name="warnForGrossProfit">Initial value of WarnForGrossProfit.</param>
        public static SOOption CreateSOOption(string companyID, short activateOutOfStockManager, short allowDiscontItemRtrns, short allowDropShipRtrn, short allowExpiredLotOnRtrn, short allowMultSOPerShip, short autoSubstInImmedPick, short autoSubstInPick, short commitSOLine, short creditCheckAtOrderEntry, short creditCheckAtPicking, short creditHoldAutoRelease, decimal creditLimitTol, short dfltSpecItemtoDS, short dropShipCostMeth, short dropShipLeadTime, short explBOMOnSO, short explPCOnSO, short extShipSystem, short gLPostRgstrFormat, short grossProfitCost, short integrateWithGL, short integrateWithIM, short integrateWithPO, short maintAuditRetnt, short maxSerialNbrsOnPickList, short openOrdCreditChk, short overShipmentPolicy, short performValidationDuringSave, short postInDetlDropShip, short postInDetlSalesClr, short quoteRetnt, short recentCustItemDays, short recentRtrnDays, short recentShipDays, short reqCompletePacking, short reqLotSerialDistInPacking, short reqSalesSourceOnSO, short reverseCommOnRtrn, short reverseFreightOnRtrn, short rMAExpirationDays, short rMAReqd, decimal rMAThresholdAmt, short salesOrderReqdForRtrn, short salesOrdRetnt, short sameRangeForBlnkt, short sameRangeForQuote, short shipDeclaredAmtCostMeth, decimal shipDeclaredAmtFixedAmt, decimal shipDeclaredAmtMarkupAmt, decimal shipDeclaredAmtMarkupPct, short shipDeclaredAmtMeth, short shipRetnt, short singleUserSO, short sOAuditAdd, short sOAuditChange, short sOAuditDelete, short trackChngOrders, short trackDelSO, string tranIDChngChar, string tranIDRelChar, int updateCounter, short useBlnktRelNos, short useMultCurr, short validLotReqdForRtrn, short validSerialReqdForRtrn, short warnForGrossProfit)
        {
            SOOption sOOption = new SOOption();
            sOOption.CompanyID = companyID;
            sOOption.ActivateOutOfStockManager = activateOutOfStockManager;
            sOOption.AllowDiscontItemRtrns = allowDiscontItemRtrns;
            sOOption.AllowDropShipRtrn = allowDropShipRtrn;
            sOOption.AllowExpiredLotOnRtrn = allowExpiredLotOnRtrn;
            sOOption.AllowMultSOPerShip = allowMultSOPerShip;
            sOOption.AutoSubstInImmedPick = autoSubstInImmedPick;
            sOOption.AutoSubstInPick = autoSubstInPick;
            sOOption.CommitSOLine = commitSOLine;
            sOOption.CreditCheckAtOrderEntry = creditCheckAtOrderEntry;
            sOOption.CreditCheckAtPicking = creditCheckAtPicking;
            sOOption.CreditHoldAutoRelease = creditHoldAutoRelease;
            sOOption.CreditLimitTol = creditLimitTol;
            sOOption.DfltSpecItemtoDS = dfltSpecItemtoDS;
            sOOption.DropShipCostMeth = dropShipCostMeth;
            sOOption.DropShipLeadTime = dropShipLeadTime;
            sOOption.ExplBOMOnSO = explBOMOnSO;
            sOOption.ExplPCOnSO = explPCOnSO;
            sOOption.ExtShipSystem = extShipSystem;
            sOOption.GLPostRgstrFormat = gLPostRgstrFormat;
            sOOption.GrossProfitCost = grossProfitCost;
            sOOption.IntegrateWithGL = integrateWithGL;
            sOOption.IntegrateWithIM = integrateWithIM;
            sOOption.IntegrateWithPO = integrateWithPO;
            sOOption.MaintAuditRetnt = maintAuditRetnt;
            sOOption.MaxSerialNbrsOnPickList = maxSerialNbrsOnPickList;
            sOOption.OpenOrdCreditChk = openOrdCreditChk;
            sOOption.OverShipmentPolicy = overShipmentPolicy;
            sOOption.PerformValidationDuringSave = performValidationDuringSave;
            sOOption.PostInDetlDropShip = postInDetlDropShip;
            sOOption.PostInDetlSalesClr = postInDetlSalesClr;
            sOOption.QuoteRetnt = quoteRetnt;
            sOOption.RecentCustItemDays = recentCustItemDays;
            sOOption.RecentRtrnDays = recentRtrnDays;
            sOOption.RecentShipDays = recentShipDays;
            sOOption.ReqCompletePacking = reqCompletePacking;
            sOOption.ReqLotSerialDistInPacking = reqLotSerialDistInPacking;
            sOOption.ReqSalesSourceOnSO = reqSalesSourceOnSO;
            sOOption.ReverseCommOnRtrn = reverseCommOnRtrn;
            sOOption.ReverseFreightOnRtrn = reverseFreightOnRtrn;
            sOOption.RMAExpirationDays = rMAExpirationDays;
            sOOption.RMAReqd = rMAReqd;
            sOOption.RMAThresholdAmt = rMAThresholdAmt;
            sOOption.SalesOrderReqdForRtrn = salesOrderReqdForRtrn;
            sOOption.SalesOrdRetnt = salesOrdRetnt;
            sOOption.SameRangeForBlnkt = sameRangeForBlnkt;
            sOOption.SameRangeForQuote = sameRangeForQuote;
            sOOption.ShipDeclaredAmtCostMeth = shipDeclaredAmtCostMeth;
            sOOption.ShipDeclaredAmtFixedAmt = shipDeclaredAmtFixedAmt;
            sOOption.ShipDeclaredAmtMarkupAmt = shipDeclaredAmtMarkupAmt;
            sOOption.ShipDeclaredAmtMarkupPct = shipDeclaredAmtMarkupPct;
            sOOption.ShipDeclaredAmtMeth = shipDeclaredAmtMeth;
            sOOption.ShipRetnt = shipRetnt;
            sOOption.SingleUserSO = singleUserSO;
            sOOption.SOAuditAdd = sOAuditAdd;
            sOOption.SOAuditChange = sOAuditChange;
            sOOption.SOAuditDelete = sOAuditDelete;
            sOOption.TrackChngOrders = trackChngOrders;
            sOOption.TrackDelSO = trackDelSO;
            sOOption.TranIDChngChar = tranIDChngChar;
            sOOption.TranIDRelChar = tranIDRelChar;
            sOOption.UpdateCounter = updateCounter;
            sOOption.UseBlnktRelNos = useBlnktRelNos;
            sOOption.UseMultCurr = useMultCurr;
            sOOption.ValidLotReqdForRtrn = validLotReqdForRtrn;
            sOOption.ValidSerialReqdForRtrn = validSerialReqdForRtrn;
            sOOption.WarnForGrossProfit = warnForGrossProfit;
            return sOOption;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for ActivateOutOfStockManager in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ActivateOutOfStockManager
        {
            get
            {
                short value = _ActivateOutOfStockManager;
                OnGetActivateOutOfStockManager(ref value);
                return value;
            }
            set
            {
                if (_ActivateOutOfStockManager != value)
                {
                  OnActivateOutOfStockManagerChanging(ref value);
                  ReportPropertyChanging("ActivateOutOfStockManager");
                  _ActivateOutOfStockManager = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ActivateOutOfStockManager");
                  OnActivateOutOfStockManagerChanged();
              }
            }
        }
        private short _ActivateOutOfStockManager = 1;
        partial void OnGetActivateOutOfStockManager(ref short value);
        partial void OnActivateOutOfStockManagerChanging(ref short value);
        partial void OnActivateOutOfStockManagerChanged();
    
        /// <summary>
        /// There are no comments for AllowDiscontItemRtrns in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short AllowDiscontItemRtrns
        {
            get
            {
                short value = _AllowDiscontItemRtrns;
                OnGetAllowDiscontItemRtrns(ref value);
                return value;
            }
            set
            {
                if (_AllowDiscontItemRtrns != value)
                {
                  OnAllowDiscontItemRtrnsChanging(ref value);
                  ReportPropertyChanging("AllowDiscontItemRtrns");
                  _AllowDiscontItemRtrns = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AllowDiscontItemRtrns");
                  OnAllowDiscontItemRtrnsChanged();
              }
            }
        }
        private short _AllowDiscontItemRtrns = 0;
        partial void OnGetAllowDiscontItemRtrns(ref short value);
        partial void OnAllowDiscontItemRtrnsChanging(ref short value);
        partial void OnAllowDiscontItemRtrnsChanged();
    
        /// <summary>
        /// There are no comments for AllowDropShipRtrn in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short AllowDropShipRtrn
        {
            get
            {
                short value = _AllowDropShipRtrn;
                OnGetAllowDropShipRtrn(ref value);
                return value;
            }
            set
            {
                if (_AllowDropShipRtrn != value)
                {
                  OnAllowDropShipRtrnChanging(ref value);
                  ReportPropertyChanging("AllowDropShipRtrn");
                  _AllowDropShipRtrn = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AllowDropShipRtrn");
                  OnAllowDropShipRtrnChanged();
              }
            }
        }
        private short _AllowDropShipRtrn = 0;
        partial void OnGetAllowDropShipRtrn(ref short value);
        partial void OnAllowDropShipRtrnChanging(ref short value);
        partial void OnAllowDropShipRtrnChanged();
    
        /// <summary>
        /// There are no comments for AllowExpiredLotOnRtrn in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short AllowExpiredLotOnRtrn
        {
            get
            {
                short value = _AllowExpiredLotOnRtrn;
                OnGetAllowExpiredLotOnRtrn(ref value);
                return value;
            }
            set
            {
                if (_AllowExpiredLotOnRtrn != value)
                {
                  OnAllowExpiredLotOnRtrnChanging(ref value);
                  ReportPropertyChanging("AllowExpiredLotOnRtrn");
                  _AllowExpiredLotOnRtrn = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AllowExpiredLotOnRtrn");
                  OnAllowExpiredLotOnRtrnChanged();
              }
            }
        }
        private short _AllowExpiredLotOnRtrn = 0;
        partial void OnGetAllowExpiredLotOnRtrn(ref short value);
        partial void OnAllowExpiredLotOnRtrnChanging(ref short value);
        partial void OnAllowExpiredLotOnRtrnChanged();
    
        /// <summary>
        /// There are no comments for AllowMultSOPerShip in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short AllowMultSOPerShip
        {
            get
            {
                short value = _AllowMultSOPerShip;
                OnGetAllowMultSOPerShip(ref value);
                return value;
            }
            set
            {
                if (_AllowMultSOPerShip != value)
                {
                  OnAllowMultSOPerShipChanging(ref value);
                  ReportPropertyChanging("AllowMultSOPerShip");
                  _AllowMultSOPerShip = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AllowMultSOPerShip");
                  OnAllowMultSOPerShipChanged();
              }
            }
        }
        private short _AllowMultSOPerShip = 0;
        partial void OnGetAllowMultSOPerShip(ref short value);
        partial void OnAllowMultSOPerShipChanging(ref short value);
        partial void OnAllowMultSOPerShipChanged();
    
        /// <summary>
        /// There are no comments for AutoSubstInImmedPick in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short AutoSubstInImmedPick
        {
            get
            {
                short value = _AutoSubstInImmedPick;
                OnGetAutoSubstInImmedPick(ref value);
                return value;
            }
            set
            {
                if (_AutoSubstInImmedPick != value)
                {
                  OnAutoSubstInImmedPickChanging(ref value);
                  ReportPropertyChanging("AutoSubstInImmedPick");
                  _AutoSubstInImmedPick = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AutoSubstInImmedPick");
                  OnAutoSubstInImmedPickChanged();
              }
            }
        }
        private short _AutoSubstInImmedPick = 0;
        partial void OnGetAutoSubstInImmedPick(ref short value);
        partial void OnAutoSubstInImmedPickChanging(ref short value);
        partial void OnAutoSubstInImmedPickChanged();
    
        /// <summary>
        /// There are no comments for AutoSubstInPick in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short AutoSubstInPick
        {
            get
            {
                short value = _AutoSubstInPick;
                OnGetAutoSubstInPick(ref value);
                return value;
            }
            set
            {
                if (_AutoSubstInPick != value)
                {
                  OnAutoSubstInPickChanging(ref value);
                  ReportPropertyChanging("AutoSubstInPick");
                  _AutoSubstInPick = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AutoSubstInPick");
                  OnAutoSubstInPickChanged();
              }
            }
        }
        private short _AutoSubstInPick = 0;
        partial void OnGetAutoSubstInPick(ref short value);
        partial void OnAutoSubstInPickChanging(ref short value);
        partial void OnAutoSubstInPickChanged();
    
        /// <summary>
        /// There are no comments for CommitSOLine in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CommitSOLine
        {
            get
            {
                short value = _CommitSOLine;
                OnGetCommitSOLine(ref value);
                return value;
            }
            set
            {
                if (_CommitSOLine != value)
                {
                  OnCommitSOLineChanging(ref value);
                  ReportPropertyChanging("CommitSOLine");
                  _CommitSOLine = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CommitSOLine");
                  OnCommitSOLineChanged();
              }
            }
        }
        private short _CommitSOLine = 0;
        partial void OnGetCommitSOLine(ref short value);
        partial void OnCommitSOLineChanging(ref short value);
        partial void OnCommitSOLineChanged();
    
        /// <summary>
        /// There are no comments for CreditCheckAtOrderEntry in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CreditCheckAtOrderEntry
        {
            get
            {
                short value = _CreditCheckAtOrderEntry;
                OnGetCreditCheckAtOrderEntry(ref value);
                return value;
            }
            set
            {
                if (_CreditCheckAtOrderEntry != value)
                {
                  OnCreditCheckAtOrderEntryChanging(ref value);
                  ReportPropertyChanging("CreditCheckAtOrderEntry");
                  _CreditCheckAtOrderEntry = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreditCheckAtOrderEntry");
                  OnCreditCheckAtOrderEntryChanged();
              }
            }
        }
        private short _CreditCheckAtOrderEntry = 1;
        partial void OnGetCreditCheckAtOrderEntry(ref short value);
        partial void OnCreditCheckAtOrderEntryChanging(ref short value);
        partial void OnCreditCheckAtOrderEntryChanged();
    
        /// <summary>
        /// There are no comments for CreditCheckAtPicking in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CreditCheckAtPicking
        {
            get
            {
                short value = _CreditCheckAtPicking;
                OnGetCreditCheckAtPicking(ref value);
                return value;
            }
            set
            {
                if (_CreditCheckAtPicking != value)
                {
                  OnCreditCheckAtPickingChanging(ref value);
                  ReportPropertyChanging("CreditCheckAtPicking");
                  _CreditCheckAtPicking = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreditCheckAtPicking");
                  OnCreditCheckAtPickingChanged();
              }
            }
        }
        private short _CreditCheckAtPicking = 1;
        partial void OnGetCreditCheckAtPicking(ref short value);
        partial void OnCreditCheckAtPickingChanging(ref short value);
        partial void OnCreditCheckAtPickingChanged();
    
        /// <summary>
        /// There are no comments for CreditHoldAutoRelease in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CreditHoldAutoRelease
        {
            get
            {
                short value = _CreditHoldAutoRelease;
                OnGetCreditHoldAutoRelease(ref value);
                return value;
            }
            set
            {
                if (_CreditHoldAutoRelease != value)
                {
                  OnCreditHoldAutoReleaseChanging(ref value);
                  ReportPropertyChanging("CreditHoldAutoRelease");
                  _CreditHoldAutoRelease = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreditHoldAutoRelease");
                  OnCreditHoldAutoReleaseChanged();
              }
            }
        }
        private short _CreditHoldAutoRelease = 0;
        partial void OnGetCreditHoldAutoRelease(ref short value);
        partial void OnCreditHoldAutoReleaseChanging(ref short value);
        partial void OnCreditHoldAutoReleaseChanged();
    
        /// <summary>
        /// There are no comments for CreditLimitTol in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal CreditLimitTol
        {
            get
            {
                decimal value = _CreditLimitTol;
                OnGetCreditLimitTol(ref value);
                return value;
            }
            set
            {
                if (_CreditLimitTol != value)
                {
                  OnCreditLimitTolChanging(ref value);
                  ReportPropertyChanging("CreditLimitTol");
                  _CreditLimitTol = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreditLimitTol");
                  OnCreditLimitTolChanged();
              }
            }
        }
        private decimal _CreditLimitTol = 0m;
        partial void OnGetCreditLimitTol(ref decimal value);
        partial void OnCreditLimitTolChanging(ref decimal value);
        partial void OnCreditLimitTolChanged();
    
        /// <summary>
        /// There are no comments for DfltBOLFormKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? DfltBOLFormKey
        {
            get
            {
                int? value = _DfltBOLFormKey;
                OnGetDfltBOLFormKey(ref value);
                return value;
            }
            set
            {
                if (_DfltBOLFormKey != value)
                {
                  OnDfltBOLFormKeyChanging(ref value);
                  ReportPropertyChanging("DfltBOLFormKey");
                  _DfltBOLFormKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltBOLFormKey");
                  OnDfltBOLFormKeyChanged();
              }
            }
        }
        private int? _DfltBOLFormKey;
        partial void OnGetDfltBOLFormKey(ref int? value);
        partial void OnDfltBOLFormKeyChanging(ref int? value);
        partial void OnDfltBOLFormKeyChanged();
    
        /// <summary>
        /// There are no comments for DfltQuoteFormKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? DfltQuoteFormKey
        {
            get
            {
                int? value = _DfltQuoteFormKey;
                OnGetDfltQuoteFormKey(ref value);
                return value;
            }
            set
            {
                if (_DfltQuoteFormKey != value)
                {
                  OnDfltQuoteFormKeyChanging(ref value);
                  ReportPropertyChanging("DfltQuoteFormKey");
                  _DfltQuoteFormKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltQuoteFormKey");
                  OnDfltQuoteFormKeyChanged();
              }
            }
        }
        private int? _DfltQuoteFormKey;
        partial void OnGetDfltQuoteFormKey(ref int? value);
        partial void OnDfltQuoteFormKeyChanging(ref int? value);
        partial void OnDfltQuoteFormKeyChanged();
    
        /// <summary>
        /// There are no comments for DfltSOAckFormKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? DfltSOAckFormKey
        {
            get
            {
                int? value = _DfltSOAckFormKey;
                OnGetDfltSOAckFormKey(ref value);
                return value;
            }
            set
            {
                if (_DfltSOAckFormKey != value)
                {
                  OnDfltSOAckFormKeyChanging(ref value);
                  ReportPropertyChanging("DfltSOAckFormKey");
                  _DfltSOAckFormKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltSOAckFormKey");
                  OnDfltSOAckFormKeyChanged();
              }
            }
        }
        private int? _DfltSOAckFormKey;
        partial void OnGetDfltSOAckFormKey(ref int? value);
        partial void OnDfltSOAckFormKeyChanging(ref int? value);
        partial void OnDfltSOAckFormKeyChanged();
    
        /// <summary>
        /// There are no comments for DfltSpecItemtoDS in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short DfltSpecItemtoDS
        {
            get
            {
                short value = _DfltSpecItemtoDS;
                OnGetDfltSpecItemtoDS(ref value);
                return value;
            }
            set
            {
                if (_DfltSpecItemtoDS != value)
                {
                  OnDfltSpecItemtoDSChanging(ref value);
                  ReportPropertyChanging("DfltSpecItemtoDS");
                  _DfltSpecItemtoDS = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltSpecItemtoDS");
                  OnDfltSpecItemtoDSChanged();
              }
            }
        }
        private short _DfltSpecItemtoDS = 0;
        partial void OnGetDfltSpecItemtoDS(ref short value);
        partial void OnDfltSpecItemtoDSChanging(ref short value);
        partial void OnDfltSpecItemtoDSChanged();
    
        /// <summary>
        /// There are no comments for DfltTrnsfrPackListFormKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? DfltTrnsfrPackListFormKey
        {
            get
            {
                int? value = _DfltTrnsfrPackListFormKey;
                OnGetDfltTrnsfrPackListFormKey(ref value);
                return value;
            }
            set
            {
                if (_DfltTrnsfrPackListFormKey != value)
                {
                  OnDfltTrnsfrPackListFormKeyChanging(ref value);
                  ReportPropertyChanging("DfltTrnsfrPackListFormKey");
                  _DfltTrnsfrPackListFormKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltTrnsfrPackListFormKey");
                  OnDfltTrnsfrPackListFormKeyChanged();
              }
            }
        }
        private int? _DfltTrnsfrPackListFormKey;
        partial void OnGetDfltTrnsfrPackListFormKey(ref int? value);
        partial void OnDfltTrnsfrPackListFormKeyChanging(ref int? value);
        partial void OnDfltTrnsfrPackListFormKeyChanged();
    
        /// <summary>
        /// There are no comments for DfltWhseKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? DfltWhseKey
        {
            get
            {
                int? value = _DfltWhseKey;
                OnGetDfltWhseKey(ref value);
                return value;
            }
            set
            {
                if (_DfltWhseKey != value)
                {
                  OnDfltWhseKeyChanging(ref value);
                  ReportPropertyChanging("DfltWhseKey");
                  _DfltWhseKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltWhseKey");
                  OnDfltWhseKeyChanged();
              }
            }
        }
        private int? _DfltWhseKey;
        partial void OnGetDfltWhseKey(ref int? value);
        partial void OnDfltWhseKeyChanging(ref int? value);
        partial void OnDfltWhseKeyChanged();
    
        /// <summary>
        /// There are no comments for DropShipCostMeth in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short DropShipCostMeth
        {
            get
            {
                short value = _DropShipCostMeth;
                OnGetDropShipCostMeth(ref value);
                return value;
            }
            set
            {
                if (_DropShipCostMeth != value)
                {
                  OnDropShipCostMethChanging(ref value);
                  ReportPropertyChanging("DropShipCostMeth");
                  _DropShipCostMeth = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DropShipCostMeth");
                  OnDropShipCostMethChanged();
              }
            }
        }
        private short _DropShipCostMeth = 2;
        partial void OnGetDropShipCostMeth(ref short value);
        partial void OnDropShipCostMethChanging(ref short value);
        partial void OnDropShipCostMethChanged();
    
        /// <summary>
        /// There are no comments for DropShipHiddenBatchKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? DropShipHiddenBatchKey
        {
            get
            {
                int? value = _DropShipHiddenBatchKey;
                OnGetDropShipHiddenBatchKey(ref value);
                return value;
            }
            set
            {
                if (_DropShipHiddenBatchKey != value)
                {
                  OnDropShipHiddenBatchKeyChanging(ref value);
                  ReportPropertyChanging("DropShipHiddenBatchKey");
                  _DropShipHiddenBatchKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DropShipHiddenBatchKey");
                  OnDropShipHiddenBatchKeyChanged();
              }
            }
        }
        private int? _DropShipHiddenBatchKey;
        partial void OnGetDropShipHiddenBatchKey(ref int? value);
        partial void OnDropShipHiddenBatchKeyChanging(ref int? value);
        partial void OnDropShipHiddenBatchKeyChanged();
    
        /// <summary>
        /// There are no comments for DropShipLeadTime in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short DropShipLeadTime
        {
            get
            {
                short value = _DropShipLeadTime;
                OnGetDropShipLeadTime(ref value);
                return value;
            }
            set
            {
                if (_DropShipLeadTime != value)
                {
                  OnDropShipLeadTimeChanging(ref value);
                  ReportPropertyChanging("DropShipLeadTime");
                  _DropShipLeadTime = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DropShipLeadTime");
                  OnDropShipLeadTimeChanged();
              }
            }
        }
        private short _DropShipLeadTime = 0;
        partial void OnGetDropShipLeadTime(ref short value);
        partial void OnDropShipLeadTimeChanging(ref short value);
        partial void OnDropShipLeadTimeChanged();
    
        /// <summary>
        /// There are no comments for ExplBOMOnSO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ExplBOMOnSO
        {
            get
            {
                short value = _ExplBOMOnSO;
                OnGetExplBOMOnSO(ref value);
                return value;
            }
            set
            {
                if (_ExplBOMOnSO != value)
                {
                  OnExplBOMOnSOChanging(ref value);
                  ReportPropertyChanging("ExplBOMOnSO");
                  _ExplBOMOnSO = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ExplBOMOnSO");
                  OnExplBOMOnSOChanged();
              }
            }
        }
        private short _ExplBOMOnSO = 0;
        partial void OnGetExplBOMOnSO(ref short value);
        partial void OnExplBOMOnSOChanging(ref short value);
        partial void OnExplBOMOnSOChanged();
    
        /// <summary>
        /// There are no comments for ExplPCOnSO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ExplPCOnSO
        {
            get
            {
                short value = _ExplPCOnSO;
                OnGetExplPCOnSO(ref value);
                return value;
            }
            set
            {
                if (_ExplPCOnSO != value)
                {
                  OnExplPCOnSOChanging(ref value);
                  ReportPropertyChanging("ExplPCOnSO");
                  _ExplPCOnSO = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ExplPCOnSO");
                  OnExplPCOnSOChanged();
              }
            }
        }
        private short _ExplPCOnSO = 0;
        partial void OnGetExplPCOnSO(ref short value);
        partial void OnExplPCOnSOChanging(ref short value);
        partial void OnExplPCOnSOChanged();
    
        /// <summary>
        /// There are no comments for ExtShipSystem in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ExtShipSystem
        {
            get
            {
                short value = _ExtShipSystem;
                OnGetExtShipSystem(ref value);
                return value;
            }
            set
            {
                if (_ExtShipSystem != value)
                {
                  OnExtShipSystemChanging(ref value);
                  ReportPropertyChanging("ExtShipSystem");
                  _ExtShipSystem = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ExtShipSystem");
                  OnExtShipSystemChanged();
              }
            }
        }
        private short _ExtShipSystem = 0;
        partial void OnGetExtShipSystem(ref short value);
        partial void OnExtShipSystemChanging(ref short value);
        partial void OnExtShipSystemChanged();
    
        /// <summary>
        /// There are no comments for ExtShipSystemWeightUOMKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ExtShipSystemWeightUOMKey
        {
            get
            {
                int? value = _ExtShipSystemWeightUOMKey;
                OnGetExtShipSystemWeightUOMKey(ref value);
                return value;
            }
            set
            {
                if (_ExtShipSystemWeightUOMKey != value)
                {
                  OnExtShipSystemWeightUOMKeyChanging(ref value);
                  ReportPropertyChanging("ExtShipSystemWeightUOMKey");
                  _ExtShipSystemWeightUOMKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ExtShipSystemWeightUOMKey");
                  OnExtShipSystemWeightUOMKeyChanged();
              }
            }
        }
        private int? _ExtShipSystemWeightUOMKey;
        partial void OnGetExtShipSystemWeightUOMKey(ref int? value);
        partial void OnExtShipSystemWeightUOMKeyChanging(ref int? value);
        partial void OnExtShipSystemWeightUOMKeyChanged();
    
        /// <summary>
        /// There are no comments for GLPostRgstrFormat in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short GLPostRgstrFormat
        {
            get
            {
                short value = _GLPostRgstrFormat;
                OnGetGLPostRgstrFormat(ref value);
                return value;
            }
            set
            {
                if (_GLPostRgstrFormat != value)
                {
                  OnGLPostRgstrFormatChanging(ref value);
                  ReportPropertyChanging("GLPostRgstrFormat");
                  _GLPostRgstrFormat = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("GLPostRgstrFormat");
                  OnGLPostRgstrFormatChanged();
              }
            }
        }
        private short _GLPostRgstrFormat = 2;
        partial void OnGetGLPostRgstrFormat(ref short value);
        partial void OnGLPostRgstrFormatChanging(ref short value);
        partial void OnGLPostRgstrFormatChanged();
    
        /// <summary>
        /// There are no comments for GrossProfitCost in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short GrossProfitCost
        {
            get
            {
                short value = _GrossProfitCost;
                OnGetGrossProfitCost(ref value);
                return value;
            }
            set
            {
                if (_GrossProfitCost != value)
                {
                  OnGrossProfitCostChanging(ref value);
                  ReportPropertyChanging("GrossProfitCost");
                  _GrossProfitCost = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("GrossProfitCost");
                  OnGrossProfitCostChanged();
              }
            }
        }
        private short _GrossProfitCost = 1;
        partial void OnGetGrossProfitCost(ref short value);
        partial void OnGrossProfitCostChanging(ref short value);
        partial void OnGrossProfitCostChanged();
    
        /// <summary>
        /// There are no comments for IntegrateWithGL in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short IntegrateWithGL
        {
            get
            {
                short value = _IntegrateWithGL;
                OnGetIntegrateWithGL(ref value);
                return value;
            }
            set
            {
                if (_IntegrateWithGL != value)
                {
                  OnIntegrateWithGLChanging(ref value);
                  ReportPropertyChanging("IntegrateWithGL");
                  _IntegrateWithGL = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IntegrateWithGL");
                  OnIntegrateWithGLChanged();
              }
            }
        }
        private short _IntegrateWithGL = 0;
        partial void OnGetIntegrateWithGL(ref short value);
        partial void OnIntegrateWithGLChanging(ref short value);
        partial void OnIntegrateWithGLChanged();
    
        /// <summary>
        /// There are no comments for IntegrateWithIM in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short IntegrateWithIM
        {
            get
            {
                short value = _IntegrateWithIM;
                OnGetIntegrateWithIM(ref value);
                return value;
            }
            set
            {
                if (_IntegrateWithIM != value)
                {
                  OnIntegrateWithIMChanging(ref value);
                  ReportPropertyChanging("IntegrateWithIM");
                  _IntegrateWithIM = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IntegrateWithIM");
                  OnIntegrateWithIMChanged();
              }
            }
        }
        private short _IntegrateWithIM = 0;
        partial void OnGetIntegrateWithIM(ref short value);
        partial void OnIntegrateWithIMChanging(ref short value);
        partial void OnIntegrateWithIMChanged();
    
        /// <summary>
        /// There are no comments for IntegrateWithPO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short IntegrateWithPO
        {
            get
            {
                short value = _IntegrateWithPO;
                OnGetIntegrateWithPO(ref value);
                return value;
            }
            set
            {
                if (_IntegrateWithPO != value)
                {
                  OnIntegrateWithPOChanging(ref value);
                  ReportPropertyChanging("IntegrateWithPO");
                  _IntegrateWithPO = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IntegrateWithPO");
                  OnIntegrateWithPOChanged();
              }
            }
        }
        private short _IntegrateWithPO = 0;
        partial void OnGetIntegrateWithPO(ref short value);
        partial void OnIntegrateWithPOChanging(ref short value);
        partial void OnIntegrateWithPOChanged();
    
        /// <summary>
        /// There are no comments for LastSalesHistPurge in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? LastSalesHistPurge
        {
            get
            {
                global::System.DateTime? value = _LastSalesHistPurge;
                OnGetLastSalesHistPurge(ref value);
                return value;
            }
            set
            {
                if (_LastSalesHistPurge != value)
                {
                  OnLastSalesHistPurgeChanging(ref value);
                  ReportPropertyChanging("LastSalesHistPurge");
                  _LastSalesHistPurge = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LastSalesHistPurge");
                  OnLastSalesHistPurgeChanged();
              }
            }
        }
        private global::System.DateTime? _LastSalesHistPurge;
        partial void OnGetLastSalesHistPurge(ref global::System.DateTime? value);
        partial void OnLastSalesHistPurgeChanging(ref global::System.DateTime? value);
        partial void OnLastSalesHistPurgeChanged();
    
        /// <summary>
        /// There are no comments for LastSalesOrdPurge in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? LastSalesOrdPurge
        {
            get
            {
                global::System.DateTime? value = _LastSalesOrdPurge;
                OnGetLastSalesOrdPurge(ref value);
                return value;
            }
            set
            {
                if (_LastSalesOrdPurge != value)
                {
                  OnLastSalesOrdPurgeChanging(ref value);
                  ReportPropertyChanging("LastSalesOrdPurge");
                  _LastSalesOrdPurge = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LastSalesOrdPurge");
                  OnLastSalesOrdPurgeChanged();
              }
            }
        }
        private global::System.DateTime? _LastSalesOrdPurge;
        partial void OnGetLastSalesOrdPurge(ref global::System.DateTime? value);
        partial void OnLastSalesOrdPurgeChanging(ref global::System.DateTime? value);
        partial void OnLastSalesOrdPurgeChanged();
    
        /// <summary>
        /// There are no comments for LastShipPurge in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? LastShipPurge
        {
            get
            {
                global::System.DateTime? value = _LastShipPurge;
                OnGetLastShipPurge(ref value);
                return value;
            }
            set
            {
                if (_LastShipPurge != value)
                {
                  OnLastShipPurgeChanging(ref value);
                  ReportPropertyChanging("LastShipPurge");
                  _LastShipPurge = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LastShipPurge");
                  OnLastShipPurgeChanged();
              }
            }
        }
        private global::System.DateTime? _LastShipPurge;
        partial void OnGetLastShipPurge(ref global::System.DateTime? value);
        partial void OnLastShipPurgeChanging(ref global::System.DateTime? value);
        partial void OnLastShipPurgeChanged();
    
        /// <summary>
        /// There are no comments for MaintAuditRetnt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short MaintAuditRetnt
        {
            get
            {
                short value = _MaintAuditRetnt;
                OnGetMaintAuditRetnt(ref value);
                return value;
            }
            set
            {
                if (_MaintAuditRetnt != value)
                {
                  OnMaintAuditRetntChanging(ref value);
                  ReportPropertyChanging("MaintAuditRetnt");
                  _MaintAuditRetnt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MaintAuditRetnt");
                  OnMaintAuditRetntChanged();
              }
            }
        }
        private short _MaintAuditRetnt = 24;
        partial void OnGetMaintAuditRetnt(ref short value);
        partial void OnMaintAuditRetntChanging(ref short value);
        partial void OnMaintAuditRetntChanged();
    
        /// <summary>
        /// There are no comments for MaxSerialNbrsOnPickList in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short MaxSerialNbrsOnPickList
        {
            get
            {
                short value = _MaxSerialNbrsOnPickList;
                OnGetMaxSerialNbrsOnPickList(ref value);
                return value;
            }
            set
            {
                if (_MaxSerialNbrsOnPickList != value)
                {
                  OnMaxSerialNbrsOnPickListChanging(ref value);
                  ReportPropertyChanging("MaxSerialNbrsOnPickList");
                  _MaxSerialNbrsOnPickList = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MaxSerialNbrsOnPickList");
                  OnMaxSerialNbrsOnPickListChanged();
              }
            }
        }
        private short _MaxSerialNbrsOnPickList = 12;
        partial void OnGetMaxSerialNbrsOnPickList(ref short value);
        partial void OnMaxSerialNbrsOnPickListChanging(ref short value);
        partial void OnMaxSerialNbrsOnPickListChanged();
    
        /// <summary>
        /// There are no comments for OpenOrdCreditChk in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short OpenOrdCreditChk
        {
            get
            {
                short value = _OpenOrdCreditChk;
                OnGetOpenOrdCreditChk(ref value);
                return value;
            }
            set
            {
                if (_OpenOrdCreditChk != value)
                {
                  OnOpenOrdCreditChkChanging(ref value);
                  ReportPropertyChanging("OpenOrdCreditChk");
                  _OpenOrdCreditChk = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OpenOrdCreditChk");
                  OnOpenOrdCreditChkChanged();
              }
            }
        }
        private short _OpenOrdCreditChk = 0;
        partial void OnGetOpenOrdCreditChk(ref short value);
        partial void OnOpenOrdCreditChkChanging(ref short value);
        partial void OnOpenOrdCreditChkChanged();
    
        /// <summary>
        /// There are no comments for OverShipmentPolicy in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short OverShipmentPolicy
        {
            get
            {
                short value = _OverShipmentPolicy;
                OnGetOverShipmentPolicy(ref value);
                return value;
            }
            set
            {
                if (_OverShipmentPolicy != value)
                {
                  OnOverShipmentPolicyChanging(ref value);
                  ReportPropertyChanging("OverShipmentPolicy");
                  _OverShipmentPolicy = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OverShipmentPolicy");
                  OnOverShipmentPolicyChanged();
              }
            }
        }
        private short _OverShipmentPolicy;
        partial void OnGetOverShipmentPolicy(ref short value);
        partial void OnOverShipmentPolicyChanging(ref short value);
        partial void OnOverShipmentPolicyChanged();
    
        /// <summary>
        /// There are no comments for PerformValidationDuringSave in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PerformValidationDuringSave
        {
            get
            {
                short value = _PerformValidationDuringSave;
                OnGetPerformValidationDuringSave(ref value);
                return value;
            }
            set
            {
                if (_PerformValidationDuringSave != value)
                {
                  OnPerformValidationDuringSaveChanging(ref value);
                  ReportPropertyChanging("PerformValidationDuringSave");
                  _PerformValidationDuringSave = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PerformValidationDuringSave");
                  OnPerformValidationDuringSaveChanged();
              }
            }
        }
        private short _PerformValidationDuringSave = 1;
        partial void OnGetPerformValidationDuringSave(ref short value);
        partial void OnPerformValidationDuringSaveChanging(ref short value);
        partial void OnPerformValidationDuringSaveChanged();
    
        /// <summary>
        /// There are no comments for PostInDetlDropShip in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PostInDetlDropShip
        {
            get
            {
                short value = _PostInDetlDropShip;
                OnGetPostInDetlDropShip(ref value);
                return value;
            }
            set
            {
                if (_PostInDetlDropShip != value)
                {
                  OnPostInDetlDropShipChanging(ref value);
                  ReportPropertyChanging("PostInDetlDropShip");
                  _PostInDetlDropShip = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PostInDetlDropShip");
                  OnPostInDetlDropShipChanged();
              }
            }
        }
        private short _PostInDetlDropShip = 0;
        partial void OnGetPostInDetlDropShip(ref short value);
        partial void OnPostInDetlDropShipChanging(ref short value);
        partial void OnPostInDetlDropShipChanged();
    
        /// <summary>
        /// There are no comments for PostInDetlSalesClr in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PostInDetlSalesClr
        {
            get
            {
                short value = _PostInDetlSalesClr;
                OnGetPostInDetlSalesClr(ref value);
                return value;
            }
            set
            {
                if (_PostInDetlSalesClr != value)
                {
                  OnPostInDetlSalesClrChanging(ref value);
                  ReportPropertyChanging("PostInDetlSalesClr");
                  _PostInDetlSalesClr = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PostInDetlSalesClr");
                  OnPostInDetlSalesClrChanged();
              }
            }
        }
        private short _PostInDetlSalesClr = 0;
        partial void OnGetPostInDetlSalesClr(ref short value);
        partial void OnPostInDetlSalesClrChanging(ref short value);
        partial void OnPostInDetlSalesClrChanged();
    
        /// <summary>
        /// There are no comments for QuoteRetnt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short QuoteRetnt
        {
            get
            {
                short value = _QuoteRetnt;
                OnGetQuoteRetnt(ref value);
                return value;
            }
            set
            {
                if (_QuoteRetnt != value)
                {
                  OnQuoteRetntChanging(ref value);
                  ReportPropertyChanging("QuoteRetnt");
                  _QuoteRetnt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QuoteRetnt");
                  OnQuoteRetntChanged();
              }
            }
        }
        private short _QuoteRetnt = 24;
        partial void OnGetQuoteRetnt(ref short value);
        partial void OnQuoteRetntChanging(ref short value);
        partial void OnQuoteRetntChanged();
    
        /// <summary>
        /// There are no comments for RecentCustItemDays in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short RecentCustItemDays
        {
            get
            {
                short value = _RecentCustItemDays;
                OnGetRecentCustItemDays(ref value);
                return value;
            }
            set
            {
                if (_RecentCustItemDays != value)
                {
                  OnRecentCustItemDaysChanging(ref value);
                  ReportPropertyChanging("RecentCustItemDays");
                  _RecentCustItemDays = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RecentCustItemDays");
                  OnRecentCustItemDaysChanged();
              }
            }
        }
        private short _RecentCustItemDays = 120;
        partial void OnGetRecentCustItemDays(ref short value);
        partial void OnRecentCustItemDaysChanging(ref short value);
        partial void OnRecentCustItemDaysChanged();
    
        /// <summary>
        /// There are no comments for RecentRtrnDays in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short RecentRtrnDays
        {
            get
            {
                short value = _RecentRtrnDays;
                OnGetRecentRtrnDays(ref value);
                return value;
            }
            set
            {
                if (_RecentRtrnDays != value)
                {
                  OnRecentRtrnDaysChanging(ref value);
                  ReportPropertyChanging("RecentRtrnDays");
                  _RecentRtrnDays = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RecentRtrnDays");
                  OnRecentRtrnDaysChanged();
              }
            }
        }
        private short _RecentRtrnDays = 120;
        partial void OnGetRecentRtrnDays(ref short value);
        partial void OnRecentRtrnDaysChanging(ref short value);
        partial void OnRecentRtrnDaysChanged();
    
        /// <summary>
        /// There are no comments for RecentShipDays in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short RecentShipDays
        {
            get
            {
                short value = _RecentShipDays;
                OnGetRecentShipDays(ref value);
                return value;
            }
            set
            {
                if (_RecentShipDays != value)
                {
                  OnRecentShipDaysChanging(ref value);
                  ReportPropertyChanging("RecentShipDays");
                  _RecentShipDays = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RecentShipDays");
                  OnRecentShipDaysChanged();
              }
            }
        }
        private short _RecentShipDays = 120;
        partial void OnGetRecentShipDays(ref short value);
        partial void OnRecentShipDaysChanging(ref short value);
        partial void OnRecentShipDaysChanged();
    
        /// <summary>
        /// There are no comments for ReqCompletePacking in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ReqCompletePacking
        {
            get
            {
                short value = _ReqCompletePacking;
                OnGetReqCompletePacking(ref value);
                return value;
            }
            set
            {
                if (_ReqCompletePacking != value)
                {
                  OnReqCompletePackingChanging(ref value);
                  ReportPropertyChanging("ReqCompletePacking");
                  _ReqCompletePacking = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ReqCompletePacking");
                  OnReqCompletePackingChanged();
              }
            }
        }
        private short _ReqCompletePacking = 0;
        partial void OnGetReqCompletePacking(ref short value);
        partial void OnReqCompletePackingChanging(ref short value);
        partial void OnReqCompletePackingChanged();
    
        /// <summary>
        /// There are no comments for ReqLotSerialDistInPacking in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ReqLotSerialDistInPacking
        {
            get
            {
                short value = _ReqLotSerialDistInPacking;
                OnGetReqLotSerialDistInPacking(ref value);
                return value;
            }
            set
            {
                if (_ReqLotSerialDistInPacking != value)
                {
                  OnReqLotSerialDistInPackingChanging(ref value);
                  ReportPropertyChanging("ReqLotSerialDistInPacking");
                  _ReqLotSerialDistInPacking = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ReqLotSerialDistInPacking");
                  OnReqLotSerialDistInPackingChanged();
              }
            }
        }
        private short _ReqLotSerialDistInPacking = 0;
        partial void OnGetReqLotSerialDistInPacking(ref short value);
        partial void OnReqLotSerialDistInPackingChanging(ref short value);
        partial void OnReqLotSerialDistInPackingChanged();
    
        /// <summary>
        /// There are no comments for ReqSalesSourceOnSO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ReqSalesSourceOnSO
        {
            get
            {
                short value = _ReqSalesSourceOnSO;
                OnGetReqSalesSourceOnSO(ref value);
                return value;
            }
            set
            {
                if (_ReqSalesSourceOnSO != value)
                {
                  OnReqSalesSourceOnSOChanging(ref value);
                  ReportPropertyChanging("ReqSalesSourceOnSO");
                  _ReqSalesSourceOnSO = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ReqSalesSourceOnSO");
                  OnReqSalesSourceOnSOChanged();
              }
            }
        }
        private short _ReqSalesSourceOnSO = 0;
        partial void OnGetReqSalesSourceOnSO(ref short value);
        partial void OnReqSalesSourceOnSOChanging(ref short value);
        partial void OnReqSalesSourceOnSOChanged();
    
        /// <summary>
        /// There are no comments for RestckSTaxClassKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? RestckSTaxClassKey
        {
            get
            {
                int? value = _RestckSTaxClassKey;
                OnGetRestckSTaxClassKey(ref value);
                return value;
            }
            set
            {
                if (_RestckSTaxClassKey != value)
                {
                  OnRestckSTaxClassKeyChanging(ref value);
                  ReportPropertyChanging("RestckSTaxClassKey");
                  _RestckSTaxClassKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RestckSTaxClassKey");
                  OnRestckSTaxClassKeyChanged();
              }
            }
        }
        private int? _RestckSTaxClassKey;
        partial void OnGetRestckSTaxClassKey(ref int? value);
        partial void OnRestckSTaxClassKeyChanging(ref int? value);
        partial void OnRestckSTaxClassKeyChanged();
    
        /// <summary>
        /// There are no comments for ReStockAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ReStockAcctKey
        {
            get
            {
                int? value = _ReStockAcctKey;
                OnGetReStockAcctKey(ref value);
                return value;
            }
            set
            {
                if (_ReStockAcctKey != value)
                {
                  OnReStockAcctKeyChanging(ref value);
                  ReportPropertyChanging("ReStockAcctKey");
                  _ReStockAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ReStockAcctKey");
                  OnReStockAcctKeyChanged();
              }
            }
        }
        private int? _ReStockAcctKey;
        partial void OnGetReStockAcctKey(ref int? value);
        partial void OnReStockAcctKeyChanging(ref int? value);
        partial void OnReStockAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for ReverseCommOnRtrn in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ReverseCommOnRtrn
        {
            get
            {
                short value = _ReverseCommOnRtrn;
                OnGetReverseCommOnRtrn(ref value);
                return value;
            }
            set
            {
                if (_ReverseCommOnRtrn != value)
                {
                  OnReverseCommOnRtrnChanging(ref value);
                  ReportPropertyChanging("ReverseCommOnRtrn");
                  _ReverseCommOnRtrn = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ReverseCommOnRtrn");
                  OnReverseCommOnRtrnChanged();
              }
            }
        }
        private short _ReverseCommOnRtrn = 0;
        partial void OnGetReverseCommOnRtrn(ref short value);
        partial void OnReverseCommOnRtrnChanging(ref short value);
        partial void OnReverseCommOnRtrnChanged();
    
        /// <summary>
        /// There are no comments for ReverseFreightOnRtrn in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ReverseFreightOnRtrn
        {
            get
            {
                short value = _ReverseFreightOnRtrn;
                OnGetReverseFreightOnRtrn(ref value);
                return value;
            }
            set
            {
                if (_ReverseFreightOnRtrn != value)
                {
                  OnReverseFreightOnRtrnChanging(ref value);
                  ReportPropertyChanging("ReverseFreightOnRtrn");
                  _ReverseFreightOnRtrn = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ReverseFreightOnRtrn");
                  OnReverseFreightOnRtrnChanged();
              }
            }
        }
        private short _ReverseFreightOnRtrn = 0;
        partial void OnGetReverseFreightOnRtrn(ref short value);
        partial void OnReverseFreightOnRtrnChanging(ref short value);
        partial void OnReverseFreightOnRtrnChanged();
    
        /// <summary>
        /// There are no comments for RMAExpirationDays in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short RMAExpirationDays
        {
            get
            {
                short value = _RMAExpirationDays;
                OnGetRMAExpirationDays(ref value);
                return value;
            }
            set
            {
                if (_RMAExpirationDays != value)
                {
                  OnRMAExpirationDaysChanging(ref value);
                  ReportPropertyChanging("RMAExpirationDays");
                  _RMAExpirationDays = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RMAExpirationDays");
                  OnRMAExpirationDaysChanged();
              }
            }
        }
        private short _RMAExpirationDays = 30;
        partial void OnGetRMAExpirationDays(ref short value);
        partial void OnRMAExpirationDaysChanging(ref short value);
        partial void OnRMAExpirationDaysChanged();
    
        /// <summary>
        /// There are no comments for RMAReqd in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short RMAReqd
        {
            get
            {
                short value = _RMAReqd;
                OnGetRMAReqd(ref value);
                return value;
            }
            set
            {
                if (_RMAReqd != value)
                {
                  OnRMAReqdChanging(ref value);
                  ReportPropertyChanging("RMAReqd");
                  _RMAReqd = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RMAReqd");
                  OnRMAReqdChanged();
              }
            }
        }
        private short _RMAReqd = 0;
        partial void OnGetRMAReqd(ref short value);
        partial void OnRMAReqdChanging(ref short value);
        partial void OnRMAReqdChanged();
    
        /// <summary>
        /// There are no comments for RMAThresholdAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal RMAThresholdAmt
        {
            get
            {
                decimal value = _RMAThresholdAmt;
                OnGetRMAThresholdAmt(ref value);
                return value;
            }
            set
            {
                if (_RMAThresholdAmt != value)
                {
                  OnRMAThresholdAmtChanging(ref value);
                  ReportPropertyChanging("RMAThresholdAmt");
                  _RMAThresholdAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RMAThresholdAmt");
                  OnRMAThresholdAmtChanged();
              }
            }
        }
        private decimal _RMAThresholdAmt = 0m;
        partial void OnGetRMAThresholdAmt(ref decimal value);
        partial void OnRMAThresholdAmtChanging(ref decimal value);
        partial void OnRMAThresholdAmtChanged();
    
        /// <summary>
        /// There are no comments for SalesClearAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? SalesClearAcctKey
        {
            get
            {
                int? value = _SalesClearAcctKey;
                OnGetSalesClearAcctKey(ref value);
                return value;
            }
            set
            {
                if (_SalesClearAcctKey != value)
                {
                  OnSalesClearAcctKeyChanging(ref value);
                  ReportPropertyChanging("SalesClearAcctKey");
                  _SalesClearAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesClearAcctKey");
                  OnSalesClearAcctKeyChanged();
              }
            }
        }
        private int? _SalesClearAcctKey;
        partial void OnGetSalesClearAcctKey(ref int? value);
        partial void OnSalesClearAcctKeyChanging(ref int? value);
        partial void OnSalesClearAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for SalesHistRetnt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual short? SalesHistRetnt
        {
            get
            {
                short? value = _SalesHistRetnt;
                OnGetSalesHistRetnt(ref value);
                return value;
            }
            set
            {
                if (_SalesHistRetnt != value)
                {
                  OnSalesHistRetntChanging(ref value);
                  ReportPropertyChanging("SalesHistRetnt");
                  _SalesHistRetnt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesHistRetnt");
                  OnSalesHistRetntChanged();
              }
            }
        }
        private short? _SalesHistRetnt = 5;
        partial void OnGetSalesHistRetnt(ref short? value);
        partial void OnSalesHistRetntChanging(ref short? value);
        partial void OnSalesHistRetntChanged();
    
        /// <summary>
        /// There are no comments for SalesOrderReqdForRtrn in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short SalesOrderReqdForRtrn
        {
            get
            {
                short value = _SalesOrderReqdForRtrn;
                OnGetSalesOrderReqdForRtrn(ref value);
                return value;
            }
            set
            {
                if (_SalesOrderReqdForRtrn != value)
                {
                  OnSalesOrderReqdForRtrnChanging(ref value);
                  ReportPropertyChanging("SalesOrderReqdForRtrn");
                  _SalesOrderReqdForRtrn = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesOrderReqdForRtrn");
                  OnSalesOrderReqdForRtrnChanged();
              }
            }
        }
        private short _SalesOrderReqdForRtrn = 1;
        partial void OnGetSalesOrderReqdForRtrn(ref short value);
        partial void OnSalesOrderReqdForRtrnChanging(ref short value);
        partial void OnSalesOrderReqdForRtrnChanged();
    
        /// <summary>
        /// There are no comments for SalesOrdRetnt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short SalesOrdRetnt
        {
            get
            {
                short value = _SalesOrdRetnt;
                OnGetSalesOrdRetnt(ref value);
                return value;
            }
            set
            {
                if (_SalesOrdRetnt != value)
                {
                  OnSalesOrdRetntChanging(ref value);
                  ReportPropertyChanging("SalesOrdRetnt");
                  _SalesOrdRetnt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesOrdRetnt");
                  OnSalesOrdRetntChanged();
              }
            }
        }
        private short _SalesOrdRetnt = 24;
        partial void OnGetSalesOrdRetnt(ref short value);
        partial void OnSalesOrdRetntChanging(ref short value);
        partial void OnSalesOrdRetntChanged();
    
        /// <summary>
        /// There are no comments for SameRangeForBlnkt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short SameRangeForBlnkt
        {
            get
            {
                short value = _SameRangeForBlnkt;
                OnGetSameRangeForBlnkt(ref value);
                return value;
            }
            set
            {
                if (_SameRangeForBlnkt != value)
                {
                  OnSameRangeForBlnktChanging(ref value);
                  ReportPropertyChanging("SameRangeForBlnkt");
                  _SameRangeForBlnkt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SameRangeForBlnkt");
                  OnSameRangeForBlnktChanged();
              }
            }
        }
        private short _SameRangeForBlnkt = 1;
        partial void OnGetSameRangeForBlnkt(ref short value);
        partial void OnSameRangeForBlnktChanging(ref short value);
        partial void OnSameRangeForBlnktChanged();
    
        /// <summary>
        /// There are no comments for SameRangeForQuote in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short SameRangeForQuote
        {
            get
            {
                short value = _SameRangeForQuote;
                OnGetSameRangeForQuote(ref value);
                return value;
            }
            set
            {
                if (_SameRangeForQuote != value)
                {
                  OnSameRangeForQuoteChanging(ref value);
                  ReportPropertyChanging("SameRangeForQuote");
                  _SameRangeForQuote = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SameRangeForQuote");
                  OnSameRangeForQuoteChanged();
              }
            }
        }
        private short _SameRangeForQuote = 1;
        partial void OnGetSameRangeForQuote(ref short value);
        partial void OnSameRangeForQuoteChanging(ref short value);
        partial void OnSameRangeForQuoteChanged();
    
        /// <summary>
        /// There are no comments for ShipDeclaredAmtCostMeth in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ShipDeclaredAmtCostMeth
        {
            get
            {
                short value = _ShipDeclaredAmtCostMeth;
                OnGetShipDeclaredAmtCostMeth(ref value);
                return value;
            }
            set
            {
                if (_ShipDeclaredAmtCostMeth != value)
                {
                  OnShipDeclaredAmtCostMethChanging(ref value);
                  ReportPropertyChanging("ShipDeclaredAmtCostMeth");
                  _ShipDeclaredAmtCostMeth = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipDeclaredAmtCostMeth");
                  OnShipDeclaredAmtCostMethChanged();
              }
            }
        }
        private short _ShipDeclaredAmtCostMeth = 3;
        partial void OnGetShipDeclaredAmtCostMeth(ref short value);
        partial void OnShipDeclaredAmtCostMethChanging(ref short value);
        partial void OnShipDeclaredAmtCostMethChanged();
    
        /// <summary>
        /// There are no comments for ShipDeclaredAmtFixedAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal ShipDeclaredAmtFixedAmt
        {
            get
            {
                decimal value = _ShipDeclaredAmtFixedAmt;
                OnGetShipDeclaredAmtFixedAmt(ref value);
                return value;
            }
            set
            {
                if (_ShipDeclaredAmtFixedAmt != value)
                {
                  OnShipDeclaredAmtFixedAmtChanging(ref value);
                  ReportPropertyChanging("ShipDeclaredAmtFixedAmt");
                  _ShipDeclaredAmtFixedAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipDeclaredAmtFixedAmt");
                  OnShipDeclaredAmtFixedAmtChanged();
              }
            }
        }
        private decimal _ShipDeclaredAmtFixedAmt = 0m;
        partial void OnGetShipDeclaredAmtFixedAmt(ref decimal value);
        partial void OnShipDeclaredAmtFixedAmtChanging(ref decimal value);
        partial void OnShipDeclaredAmtFixedAmtChanged();
    
        /// <summary>
        /// There are no comments for ShipDeclaredAmtMarkupAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal ShipDeclaredAmtMarkupAmt
        {
            get
            {
                decimal value = _ShipDeclaredAmtMarkupAmt;
                OnGetShipDeclaredAmtMarkupAmt(ref value);
                return value;
            }
            set
            {
                if (_ShipDeclaredAmtMarkupAmt != value)
                {
                  OnShipDeclaredAmtMarkupAmtChanging(ref value);
                  ReportPropertyChanging("ShipDeclaredAmtMarkupAmt");
                  _ShipDeclaredAmtMarkupAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipDeclaredAmtMarkupAmt");
                  OnShipDeclaredAmtMarkupAmtChanged();
              }
            }
        }
        private decimal _ShipDeclaredAmtMarkupAmt = 0m;
        partial void OnGetShipDeclaredAmtMarkupAmt(ref decimal value);
        partial void OnShipDeclaredAmtMarkupAmtChanging(ref decimal value);
        partial void OnShipDeclaredAmtMarkupAmtChanged();
    
        /// <summary>
        /// There are no comments for ShipDeclaredAmtMarkupPct in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal ShipDeclaredAmtMarkupPct
        {
            get
            {
                decimal value = _ShipDeclaredAmtMarkupPct;
                OnGetShipDeclaredAmtMarkupPct(ref value);
                return value;
            }
            set
            {
                if (_ShipDeclaredAmtMarkupPct != value)
                {
                  OnShipDeclaredAmtMarkupPctChanging(ref value);
                  ReportPropertyChanging("ShipDeclaredAmtMarkupPct");
                  _ShipDeclaredAmtMarkupPct = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipDeclaredAmtMarkupPct");
                  OnShipDeclaredAmtMarkupPctChanged();
              }
            }
        }
        private decimal _ShipDeclaredAmtMarkupPct = 0m;
        partial void OnGetShipDeclaredAmtMarkupPct(ref decimal value);
        partial void OnShipDeclaredAmtMarkupPctChanging(ref decimal value);
        partial void OnShipDeclaredAmtMarkupPctChanged();
    
        /// <summary>
        /// There are no comments for ShipDeclaredAmtMeth in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ShipDeclaredAmtMeth
        {
            get
            {
                short value = _ShipDeclaredAmtMeth;
                OnGetShipDeclaredAmtMeth(ref value);
                return value;
            }
            set
            {
                if (_ShipDeclaredAmtMeth != value)
                {
                  OnShipDeclaredAmtMethChanging(ref value);
                  ReportPropertyChanging("ShipDeclaredAmtMeth");
                  _ShipDeclaredAmtMeth = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipDeclaredAmtMeth");
                  OnShipDeclaredAmtMethChanged();
              }
            }
        }
        private short _ShipDeclaredAmtMeth = 0;
        partial void OnGetShipDeclaredAmtMeth(ref short value);
        partial void OnShipDeclaredAmtMethChanging(ref short value);
        partial void OnShipDeclaredAmtMethChanged();
    
        /// <summary>
        /// There are no comments for ShipmentHiddenBatchKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ShipmentHiddenBatchKey
        {
            get
            {
                int? value = _ShipmentHiddenBatchKey;
                OnGetShipmentHiddenBatchKey(ref value);
                return value;
            }
            set
            {
                if (_ShipmentHiddenBatchKey != value)
                {
                  OnShipmentHiddenBatchKeyChanging(ref value);
                  ReportPropertyChanging("ShipmentHiddenBatchKey");
                  _ShipmentHiddenBatchKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipmentHiddenBatchKey");
                  OnShipmentHiddenBatchKeyChanged();
              }
            }
        }
        private int? _ShipmentHiddenBatchKey;
        partial void OnGetShipmentHiddenBatchKey(ref int? value);
        partial void OnShipmentHiddenBatchKeyChanging(ref int? value);
        partial void OnShipmentHiddenBatchKeyChanged();
    
        /// <summary>
        /// There are no comments for ShipRetnt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ShipRetnt
        {
            get
            {
                short value = _ShipRetnt;
                OnGetShipRetnt(ref value);
                return value;
            }
            set
            {
                if (_ShipRetnt != value)
                {
                  OnShipRetntChanging(ref value);
                  ReportPropertyChanging("ShipRetnt");
                  _ShipRetnt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipRetnt");
                  OnShipRetntChanged();
              }
            }
        }
        private short _ShipRetnt = 24;
        partial void OnGetShipRetnt(ref short value);
        partial void OnShipRetntChanging(ref short value);
        partial void OnShipRetntChanged();
    
        /// <summary>
        /// There are no comments for SingleUserSO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short SingleUserSO
        {
            get
            {
                short value = _SingleUserSO;
                OnGetSingleUserSO(ref value);
                return value;
            }
            set
            {
                if (_SingleUserSO != value)
                {
                  OnSingleUserSOChanging(ref value);
                  ReportPropertyChanging("SingleUserSO");
                  _SingleUserSO = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SingleUserSO");
                  OnSingleUserSOChanged();
              }
            }
        }
        private short _SingleUserSO = 0;
        partial void OnGetSingleUserSO(ref short value);
        partial void OnSingleUserSOChanging(ref short value);
        partial void OnSingleUserSOChanged();
    
        /// <summary>
        /// There are no comments for SOAuditAdd in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short SOAuditAdd
        {
            get
            {
                short value = _SOAuditAdd;
                OnGetSOAuditAdd(ref value);
                return value;
            }
            set
            {
                if (_SOAuditAdd != value)
                {
                  OnSOAuditAddChanging(ref value);
                  ReportPropertyChanging("SOAuditAdd");
                  _SOAuditAdd = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SOAuditAdd");
                  OnSOAuditAddChanged();
              }
            }
        }
        private short _SOAuditAdd = 1;
        partial void OnGetSOAuditAdd(ref short value);
        partial void OnSOAuditAddChanging(ref short value);
        partial void OnSOAuditAddChanged();
    
        /// <summary>
        /// There are no comments for SOAuditChange in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short SOAuditChange
        {
            get
            {
                short value = _SOAuditChange;
                OnGetSOAuditChange(ref value);
                return value;
            }
            set
            {
                if (_SOAuditChange != value)
                {
                  OnSOAuditChangeChanging(ref value);
                  ReportPropertyChanging("SOAuditChange");
                  _SOAuditChange = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SOAuditChange");
                  OnSOAuditChangeChanged();
              }
            }
        }
        private short _SOAuditChange = 2;
        partial void OnGetSOAuditChange(ref short value);
        partial void OnSOAuditChangeChanging(ref short value);
        partial void OnSOAuditChangeChanged();
    
        /// <summary>
        /// There are no comments for SOAuditDelete in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short SOAuditDelete
        {
            get
            {
                short value = _SOAuditDelete;
                OnGetSOAuditDelete(ref value);
                return value;
            }
            set
            {
                if (_SOAuditDelete != value)
                {
                  OnSOAuditDeleteChanging(ref value);
                  ReportPropertyChanging("SOAuditDelete");
                  _SOAuditDelete = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SOAuditDelete");
                  OnSOAuditDeleteChanged();
              }
            }
        }
        private short _SOAuditDelete = 1;
        partial void OnGetSOAuditDelete(ref short value);
        partial void OnSOAuditDeleteChanging(ref short value);
        partial void OnSOAuditDeleteChanged();
    
        /// <summary>
        /// There are no comments for SOPaymentBatchKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? SOPaymentBatchKey
        {
            get
            {
                int? value = _SOPaymentBatchKey;
                OnGetSOPaymentBatchKey(ref value);
                return value;
            }
            set
            {
                if (_SOPaymentBatchKey != value)
                {
                  OnSOPaymentBatchKeyChanging(ref value);
                  ReportPropertyChanging("SOPaymentBatchKey");
                  _SOPaymentBatchKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SOPaymentBatchKey");
                  OnSOPaymentBatchKeyChanged();
              }
            }
        }
        private int? _SOPaymentBatchKey;
        partial void OnGetSOPaymentBatchKey(ref int? value);
        partial void OnSOPaymentBatchKeyChanging(ref int? value);
        partial void OnSOPaymentBatchKeyChanged();
    
        /// <summary>
        /// There are no comments for SystemBatchKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? SystemBatchKey
        {
            get
            {
                int? value = _SystemBatchKey;
                OnGetSystemBatchKey(ref value);
                return value;
            }
            set
            {
                if (_SystemBatchKey != value)
                {
                  OnSystemBatchKeyChanging(ref value);
                  ReportPropertyChanging("SystemBatchKey");
                  _SystemBatchKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SystemBatchKey");
                  OnSystemBatchKeyChanged();
              }
            }
        }
        private int? _SystemBatchKey;
        partial void OnGetSystemBatchKey(ref int? value);
        partial void OnSystemBatchKeyChanging(ref int? value);
        partial void OnSystemBatchKeyChanged();
    
        /// <summary>
        /// There are no comments for TrackChngOrders in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short TrackChngOrders
        {
            get
            {
                short value = _TrackChngOrders;
                OnGetTrackChngOrders(ref value);
                return value;
            }
            set
            {
                if (_TrackChngOrders != value)
                {
                  OnTrackChngOrdersChanging(ref value);
                  ReportPropertyChanging("TrackChngOrders");
                  _TrackChngOrders = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TrackChngOrders");
                  OnTrackChngOrdersChanged();
              }
            }
        }
        private short _TrackChngOrders = 0;
        partial void OnGetTrackChngOrders(ref short value);
        partial void OnTrackChngOrdersChanging(ref short value);
        partial void OnTrackChngOrdersChanged();
    
        /// <summary>
        /// There are no comments for TrackDelSO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short TrackDelSO
        {
            get
            {
                short value = _TrackDelSO;
                OnGetTrackDelSO(ref value);
                return value;
            }
            set
            {
                if (_TrackDelSO != value)
                {
                  OnTrackDelSOChanging(ref value);
                  ReportPropertyChanging("TrackDelSO");
                  _TrackDelSO = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TrackDelSO");
                  OnTrackDelSOChanged();
              }
            }
        }
        private short _TrackDelSO = 0;
        partial void OnGetTrackDelSO(ref short value);
        partial void OnTrackDelSOChanging(ref short value);
        partial void OnTrackDelSOChanged();
    
        /// <summary>
        /// There are no comments for TranIDChngChar in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string TranIDChngChar
        {
            get
            {
                string value = _TranIDChngChar;
                OnGetTranIDChngChar(ref value);
                return value;
            }
            set
            {
                if (_TranIDChngChar != value)
                {
                  OnTranIDChngCharChanging(ref value);
                  ReportPropertyChanging("TranIDChngChar");
                  _TranIDChngChar = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TranIDChngChar");
                  OnTranIDChngCharChanged();
              }
            }
        }
        private string _TranIDChngChar = @"C";
        partial void OnGetTranIDChngChar(ref string value);
        partial void OnTranIDChngCharChanging(ref string value);
        partial void OnTranIDChngCharChanged();
    
        /// <summary>
        /// There are no comments for TranIDRelChar in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string TranIDRelChar
        {
            get
            {
                string value = _TranIDRelChar;
                OnGetTranIDRelChar(ref value);
                return value;
            }
            set
            {
                if (_TranIDRelChar != value)
                {
                  OnTranIDRelCharChanging(ref value);
                  ReportPropertyChanging("TranIDRelChar");
                  _TranIDRelChar = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TranIDRelChar");
                  OnTranIDRelCharChanged();
              }
            }
        }
        private string _TranIDRelChar = @"R";
        partial void OnGetTranIDRelChar(ref string value);
        partial void OnTranIDRelCharChanging(ref string value);
        partial void OnTranIDRelCharChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();
    
        /// <summary>
        /// There are no comments for UseBlnktRelNos in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short UseBlnktRelNos
        {
            get
            {
                short value = _UseBlnktRelNos;
                OnGetUseBlnktRelNos(ref value);
                return value;
            }
            set
            {
                if (_UseBlnktRelNos != value)
                {
                  OnUseBlnktRelNosChanging(ref value);
                  ReportPropertyChanging("UseBlnktRelNos");
                  _UseBlnktRelNos = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UseBlnktRelNos");
                  OnUseBlnktRelNosChanged();
              }
            }
        }
        private short _UseBlnktRelNos = 1;
        partial void OnGetUseBlnktRelNos(ref short value);
        partial void OnUseBlnktRelNosChanging(ref short value);
        partial void OnUseBlnktRelNosChanged();
    
        /// <summary>
        /// There are no comments for UseMultCurr in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short UseMultCurr
        {
            get
            {
                short value = _UseMultCurr;
                OnGetUseMultCurr(ref value);
                return value;
            }
            set
            {
                if (_UseMultCurr != value)
                {
                  OnUseMultCurrChanging(ref value);
                  ReportPropertyChanging("UseMultCurr");
                  _UseMultCurr = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UseMultCurr");
                  OnUseMultCurrChanged();
              }
            }
        }
        private short _UseMultCurr = 0;
        partial void OnGetUseMultCurr(ref short value);
        partial void OnUseMultCurrChanging(ref short value);
        partial void OnUseMultCurrChanged();
    
        /// <summary>
        /// There are no comments for ValidLotReqdForRtrn in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ValidLotReqdForRtrn
        {
            get
            {
                short value = _ValidLotReqdForRtrn;
                OnGetValidLotReqdForRtrn(ref value);
                return value;
            }
            set
            {
                if (_ValidLotReqdForRtrn != value)
                {
                  OnValidLotReqdForRtrnChanging(ref value);
                  ReportPropertyChanging("ValidLotReqdForRtrn");
                  _ValidLotReqdForRtrn = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ValidLotReqdForRtrn");
                  OnValidLotReqdForRtrnChanged();
              }
            }
        }
        private short _ValidLotReqdForRtrn = 1;
        partial void OnGetValidLotReqdForRtrn(ref short value);
        partial void OnValidLotReqdForRtrnChanging(ref short value);
        partial void OnValidLotReqdForRtrnChanged();
    
        /// <summary>
        /// There are no comments for ValidSerialReqdForRtrn in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ValidSerialReqdForRtrn
        {
            get
            {
                short value = _ValidSerialReqdForRtrn;
                OnGetValidSerialReqdForRtrn(ref value);
                return value;
            }
            set
            {
                if (_ValidSerialReqdForRtrn != value)
                {
                  OnValidSerialReqdForRtrnChanging(ref value);
                  ReportPropertyChanging("ValidSerialReqdForRtrn");
                  _ValidSerialReqdForRtrn = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ValidSerialReqdForRtrn");
                  OnValidSerialReqdForRtrnChanged();
              }
            }
        }
        private short _ValidSerialReqdForRtrn = 1;
        partial void OnGetValidSerialReqdForRtrn(ref short value);
        partial void OnValidSerialReqdForRtrnChanging(ref short value);
        partial void OnValidSerialReqdForRtrnChanged();
    
        /// <summary>
        /// There are no comments for WarnForGrossProfit in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short WarnForGrossProfit
        {
            get
            {
                short value = _WarnForGrossProfit;
                OnGetWarnForGrossProfit(ref value);
                return value;
            }
            set
            {
                if (_WarnForGrossProfit != value)
                {
                  OnWarnForGrossProfitChanging(ref value);
                  ReportPropertyChanging("WarnForGrossProfit");
                  _WarnForGrossProfit = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WarnForGrossProfit");
                  OnWarnForGrossProfitChanged();
              }
            }
        }
        private short _WarnForGrossProfit = 0;
        partial void OnGetWarnForGrossProfit(ref short value);
        partial void OnWarnForGrossProfitChanging(ref short value);
        partial void OnWarnForGrossProfitChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.PendShipment in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ShipKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="PendShipment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PendShipment : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new PendShipment object.
        /// </summary>
        /// <param name="shipKey">Initial value of ShipKey.</param>
        /// <param name="amtShipped">Initial value of AmtShipped.</param>
        /// <param name="batchKey">Initial value of BatchKey.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="createType">Initial value of CreateType.</param>
        /// <param name="extShipmentExists">Initial value of ExtShipmentExists.</param>
        /// <param name="freightAllocMeth">Initial value of FreightAllocMeth.</param>
        /// <param name="freightAmt">Initial value of FreightAmt.</param>
        /// <param name="freightAmtFromExtShipSys">Initial value of FreightAmtFromExtShipSys.</param>
        /// <param name="freightAmtFromInternal">Initial value of FreightAmtFromInternal.</param>
        /// <param name="holdFlag">Initial value of HoldFlag.</param>
        /// <param name="noShipLabels">Initial value of NoShipLabels.</param>
        /// <param name="packListPrinted">Initial value of PackListPrinted.</param>
        /// <param name="partialPackApproved">Initial value of PartialPackApproved.</param>
        /// <param name="readyToCommit">Initial value of ReadyToCommit.</param>
        /// <param name="shipLabelsPrinted">Initial value of ShipLabelsPrinted.</param>
        /// <param name="shipToAddrKey">Initial value of ShipToAddrKey.</param>
        /// <param name="tranDate">Initial value of TranDate.</param>
        /// <param name="tranID">Initial value of TranID.</param>
        /// <param name="tranNo">Initial value of TranNo.</param>
        /// <param name="tranType">Initial value of TranType.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        /// <param name="useInternalPackingDetail">Initial value of UseInternalPackingDetail.</param>
        public static PendShipment CreatePendShipment(int shipKey, decimal amtShipped, int batchKey, string companyID, short createType, short extShipmentExists, short freightAllocMeth, decimal freightAmt, decimal freightAmtFromExtShipSys, decimal freightAmtFromInternal, short holdFlag, short noShipLabels, short packListPrinted, short partialPackApproved, short readyToCommit, short shipLabelsPrinted, int shipToAddrKey, global::System.DateTime tranDate, string tranID, string tranNo, int tranType, int updateCounter, short useInternalPackingDetail)
        {
            PendShipment pendShipment = new PendShipment();
            pendShipment.ShipKey = shipKey;
            pendShipment.AmtShipped = amtShipped;
            pendShipment.BatchKey = batchKey;
            pendShipment.CompanyID = companyID;
            pendShipment.CreateType = createType;
            pendShipment.ExtShipmentExists = extShipmentExists;
            pendShipment.FreightAllocMeth = freightAllocMeth;
            pendShipment.FreightAmt = freightAmt;
            pendShipment.FreightAmtFromExtShipSys = freightAmtFromExtShipSys;
            pendShipment.FreightAmtFromInternal = freightAmtFromInternal;
            pendShipment.HoldFlag = holdFlag;
            pendShipment.NoShipLabels = noShipLabels;
            pendShipment.PackListPrinted = packListPrinted;
            pendShipment.PartialPackApproved = partialPackApproved;
            pendShipment.ReadyToCommit = readyToCommit;
            pendShipment.ShipLabelsPrinted = shipLabelsPrinted;
            pendShipment.ShipToAddrKey = shipToAddrKey;
            pendShipment.TranDate = tranDate;
            pendShipment.TranID = tranID;
            pendShipment.TranNo = tranNo;
            pendShipment.TranType = tranType;
            pendShipment.UpdateCounter = updateCounter;
            pendShipment.UseInternalPackingDetail = useInternalPackingDetail;
            return pendShipment;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ShipKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ShipKey
        {
            get
            {
                int value = _ShipKey;
                OnGetShipKey(ref value);
                return value;
            }
            set
            {
                if (_ShipKey != value)
                {
                  OnShipKeyChanging(ref value);
                  ReportPropertyChanging("ShipKey");
                  _ShipKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipKey");
                  OnShipKeyChanged();
              }
            }
        }
        private int _ShipKey;
        partial void OnGetShipKey(ref int value);
        partial void OnShipKeyChanging(ref int value);
        partial void OnShipKeyChanged();
    
        /// <summary>
        /// There are no comments for AmtShipped in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal AmtShipped
        {
            get
            {
                decimal value = _AmtShipped;
                OnGetAmtShipped(ref value);
                return value;
            }
            set
            {
                if (_AmtShipped != value)
                {
                  OnAmtShippedChanging(ref value);
                  ReportPropertyChanging("AmtShipped");
                  _AmtShipped = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AmtShipped");
                  OnAmtShippedChanged();
              }
            }
        }
        private decimal _AmtShipped = 0m;
        partial void OnGetAmtShipped(ref decimal value);
        partial void OnAmtShippedChanging(ref decimal value);
        partial void OnAmtShippedChanged();
    
        /// <summary>
        /// There are no comments for BatchKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int BatchKey
        {
            get
            {
                int value = _BatchKey;
                OnGetBatchKey(ref value);
                return value;
            }
            set
            {
                if (_BatchKey != value)
                {
                  OnBatchKeyChanging(ref value);
                  ReportPropertyChanging("BatchKey");
                  _BatchKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BatchKey");
                  OnBatchKeyChanged();
              }
            }
        }
        private int _BatchKey;
        partial void OnGetBatchKey(ref int value);
        partial void OnBatchKeyChanging(ref int value);
        partial void OnBatchKeyChanged();
    
        /// <summary>
        /// There are no comments for BOLFormKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? BOLFormKey
        {
            get
            {
                int? value = _BOLFormKey;
                OnGetBOLFormKey(ref value);
                return value;
            }
            set
            {
                if (_BOLFormKey != value)
                {
                  OnBOLFormKeyChanging(ref value);
                  ReportPropertyChanging("BOLFormKey");
                  _BOLFormKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BOLFormKey");
                  OnBOLFormKeyChanged();
              }
            }
        }
        private int? _BOLFormKey;
        partial void OnGetBOLFormKey(ref int? value);
        partial void OnBOLFormKeyChanging(ref int? value);
        partial void OnBOLFormKeyChanged();
    
        /// <summary>
        /// There are no comments for BOLPrinted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual short? BOLPrinted
        {
            get
            {
                short? value = _BOLPrinted;
                OnGetBOLPrinted(ref value);
                return value;
            }
            set
            {
                if (_BOLPrinted != value)
                {
                  OnBOLPrintedChanging(ref value);
                  ReportPropertyChanging("BOLPrinted");
                  _BOLPrinted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BOLPrinted");
                  OnBOLPrintedChanged();
              }
            }
        }
        private short? _BOLPrinted = 0;
        partial void OnGetBOLPrinted(ref short? value);
        partial void OnBOLPrintedChanging(ref short? value);
        partial void OnBOLPrintedChanged();
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for CreateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CreateDate
        {
            get
            {
                global::System.DateTime? value = _CreateDate;
                OnGetCreateDate(ref value);
                return value;
            }
            set
            {
                if (_CreateDate != value)
                {
                  OnCreateDateChanging(ref value);
                  ReportPropertyChanging("CreateDate");
                  _CreateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateDate");
                  OnCreateDateChanged();
              }
            }
        }
        private global::System.DateTime? _CreateDate;
        partial void OnGetCreateDate(ref global::System.DateTime? value);
        partial void OnCreateDateChanging(ref global::System.DateTime? value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// There are no comments for CreateType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CreateType
        {
            get
            {
                short value = _CreateType;
                OnGetCreateType(ref value);
                return value;
            }
            set
            {
                if (_CreateType != value)
                {
                  OnCreateTypeChanging(ref value);
                  ReportPropertyChanging("CreateType");
                  _CreateType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateType");
                  OnCreateTypeChanged();
              }
            }
        }
        private short _CreateType = 0;
        partial void OnGetCreateType(ref short value);
        partial void OnCreateTypeChanging(ref short value);
        partial void OnCreateTypeChanged();
    
        /// <summary>
        /// There are no comments for CreateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CreateUserID
        {
            get
            {
                string value = _CreateUserID;
                OnGetCreateUserID(ref value);
                return value;
            }
            set
            {
                if (_CreateUserID != value)
                {
                  OnCreateUserIDChanging(ref value);
                  ReportPropertyChanging("CreateUserID");
                  _CreateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CreateUserID");
                  OnCreateUserIDChanged();
              }
            }
        }
        private string _CreateUserID;
        partial void OnGetCreateUserID(ref string value);
        partial void OnCreateUserIDChanging(ref string value);
        partial void OnCreateUserIDChanged();
    
        /// <summary>
        /// There are no comments for CustKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CustKey
        {
            get
            {
                int? value = _CustKey;
                OnGetCustKey(ref value);
                return value;
            }
            set
            {
                if (_CustKey != value)
                {
                  OnCustKeyChanging(ref value);
                  ReportPropertyChanging("CustKey");
                  _CustKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustKey");
                  OnCustKeyChanged();
              }
            }
        }
        private int? _CustKey;
        partial void OnGetCustKey(ref int? value);
        partial void OnCustKeyChanging(ref int? value);
        partial void OnCustKeyChanged();
    
        /// <summary>
        /// There are no comments for DeletedInvcNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string DeletedInvcNo
        {
            get
            {
                string value = _DeletedInvcNo;
                OnGetDeletedInvcNo(ref value);
                return value;
            }
            set
            {
                if (_DeletedInvcNo != value)
                {
                  OnDeletedInvcNoChanging(ref value);
                  ReportPropertyChanging("DeletedInvcNo");
                  _DeletedInvcNo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DeletedInvcNo");
                  OnDeletedInvcNoChanged();
              }
            }
        }
        private string _DeletedInvcNo;
        partial void OnGetDeletedInvcNo(ref string value);
        partial void OnDeletedInvcNoChanging(ref string value);
        partial void OnDeletedInvcNoChanged();
    
        /// <summary>
        /// There are no comments for DlvryShipMethKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? DlvryShipMethKey
        {
            get
            {
                int? value = _DlvryShipMethKey;
                OnGetDlvryShipMethKey(ref value);
                return value;
            }
            set
            {
                if (_DlvryShipMethKey != value)
                {
                  OnDlvryShipMethKeyChanging(ref value);
                  ReportPropertyChanging("DlvryShipMethKey");
                  _DlvryShipMethKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DlvryShipMethKey");
                  OnDlvryShipMethKeyChanged();
              }
            }
        }
        private int? _DlvryShipMethKey;
        partial void OnGetDlvryShipMethKey(ref int? value);
        partial void OnDlvryShipMethKeyChanging(ref int? value);
        partial void OnDlvryShipMethKeyChanged();
    
        /// <summary>
        /// There are no comments for DlvryTrnsfrID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string DlvryTrnsfrID
        {
            get
            {
                string value = _DlvryTrnsfrID;
                OnGetDlvryTrnsfrID(ref value);
                return value;
            }
            set
            {
                if (_DlvryTrnsfrID != value)
                {
                  OnDlvryTrnsfrIDChanging(ref value);
                  ReportPropertyChanging("DlvryTrnsfrID");
                  _DlvryTrnsfrID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DlvryTrnsfrID");
                  OnDlvryTrnsfrIDChanged();
              }
            }
        }
        private string _DlvryTrnsfrID;
        partial void OnGetDlvryTrnsfrID(ref string value);
        partial void OnDlvryTrnsfrIDChanging(ref string value);
        partial void OnDlvryTrnsfrIDChanged();
    
        /// <summary>
        /// There are no comments for ExtShipmentExists in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ExtShipmentExists
        {
            get
            {
                short value = _ExtShipmentExists;
                OnGetExtShipmentExists(ref value);
                return value;
            }
            set
            {
                if (_ExtShipmentExists != value)
                {
                  OnExtShipmentExistsChanging(ref value);
                  ReportPropertyChanging("ExtShipmentExists");
                  _ExtShipmentExists = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ExtShipmentExists");
                  OnExtShipmentExistsChanged();
              }
            }
        }
        private short _ExtShipmentExists = 0;
        partial void OnGetExtShipmentExists(ref short value);
        partial void OnExtShipmentExistsChanging(ref short value);
        partial void OnExtShipmentExistsChanged();
    
        /// <summary>
        /// There are no comments for FreightAllocMeth in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short FreightAllocMeth
        {
            get
            {
                short value = _FreightAllocMeth;
                OnGetFreightAllocMeth(ref value);
                return value;
            }
            set
            {
                if (_FreightAllocMeth != value)
                {
                  OnFreightAllocMethChanging(ref value);
                  ReportPropertyChanging("FreightAllocMeth");
                  _FreightAllocMeth = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FreightAllocMeth");
                  OnFreightAllocMethChanged();
              }
            }
        }
        private short _FreightAllocMeth = 1;
        partial void OnGetFreightAllocMeth(ref short value);
        partial void OnFreightAllocMethChanging(ref short value);
        partial void OnFreightAllocMethChanged();
    
        /// <summary>
        /// There are no comments for FreightAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal FreightAmt
        {
            get
            {
                decimal value = _FreightAmt;
                OnGetFreightAmt(ref value);
                return value;
            }
            set
            {
                if (_FreightAmt != value)
                {
                  OnFreightAmtChanging(ref value);
                  ReportPropertyChanging("FreightAmt");
                  _FreightAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FreightAmt");
                  OnFreightAmtChanged();
              }
            }
        }
        private decimal _FreightAmt = 0m;
        partial void OnGetFreightAmt(ref decimal value);
        partial void OnFreightAmtChanging(ref decimal value);
        partial void OnFreightAmtChanged();
    
        /// <summary>
        /// There are no comments for FreightAmtFromExtShipSys in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal FreightAmtFromExtShipSys
        {
            get
            {
                decimal value = _FreightAmtFromExtShipSys;
                OnGetFreightAmtFromExtShipSys(ref value);
                return value;
            }
            set
            {
                if (_FreightAmtFromExtShipSys != value)
                {
                  OnFreightAmtFromExtShipSysChanging(ref value);
                  ReportPropertyChanging("FreightAmtFromExtShipSys");
                  _FreightAmtFromExtShipSys = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FreightAmtFromExtShipSys");
                  OnFreightAmtFromExtShipSysChanged();
              }
            }
        }
        private decimal _FreightAmtFromExtShipSys = 0m;
        partial void OnGetFreightAmtFromExtShipSys(ref decimal value);
        partial void OnFreightAmtFromExtShipSysChanging(ref decimal value);
        partial void OnFreightAmtFromExtShipSysChanged();
    
        /// <summary>
        /// There are no comments for FreightAmtFromInternal in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal FreightAmtFromInternal
        {
            get
            {
                decimal value = _FreightAmtFromInternal;
                OnGetFreightAmtFromInternal(ref value);
                return value;
            }
            set
            {
                if (_FreightAmtFromInternal != value)
                {
                  OnFreightAmtFromInternalChanging(ref value);
                  ReportPropertyChanging("FreightAmtFromInternal");
                  _FreightAmtFromInternal = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FreightAmtFromInternal");
                  OnFreightAmtFromInternalChanged();
              }
            }
        }
        private decimal _FreightAmtFromInternal = 0m;
        partial void OnGetFreightAmtFromInternal(ref decimal value);
        partial void OnFreightAmtFromInternalChanging(ref decimal value);
        partial void OnFreightAmtFromInternalChanged();
    
        /// <summary>
        /// There are no comments for HoldFlag in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short HoldFlag
        {
            get
            {
                short value = _HoldFlag;
                OnGetHoldFlag(ref value);
                return value;
            }
            set
            {
                if (_HoldFlag != value)
                {
                  OnHoldFlagChanging(ref value);
                  ReportPropertyChanging("HoldFlag");
                  _HoldFlag = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("HoldFlag");
                  OnHoldFlagChanged();
              }
            }
        }
        private short _HoldFlag = 0;
        partial void OnGetHoldFlag(ref short value);
        partial void OnHoldFlagChanging(ref short value);
        partial void OnHoldFlagChanged();
    
        /// <summary>
        /// There are no comments for HoldReason in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string HoldReason
        {
            get
            {
                string value = _HoldReason;
                OnGetHoldReason(ref value);
                return value;
            }
            set
            {
                if (_HoldReason != value)
                {
                  OnHoldReasonChanging(ref value);
                  ReportPropertyChanging("HoldReason");
                  _HoldReason = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("HoldReason");
                  OnHoldReasonChanged();
              }
            }
        }
        private string _HoldReason;
        partial void OnGetHoldReason(ref string value);
        partial void OnHoldReasonChanging(ref string value);
        partial void OnHoldReasonChanged();
    
        /// <summary>
        /// There are no comments for NoShipLabels in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short NoShipLabels
        {
            get
            {
                short value = _NoShipLabels;
                OnGetNoShipLabels(ref value);
                return value;
            }
            set
            {
                if (_NoShipLabels != value)
                {
                  OnNoShipLabelsChanging(ref value);
                  ReportPropertyChanging("NoShipLabels");
                  _NoShipLabels = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NoShipLabels");
                  OnNoShipLabelsChanged();
              }
            }
        }
        private short _NoShipLabels = 0;
        partial void OnGetNoShipLabels(ref short value);
        partial void OnNoShipLabelsChanging(ref short value);
        partial void OnNoShipLabelsChanged();
    
        /// <summary>
        /// There are no comments for PackListContentsPrinted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual short? PackListContentsPrinted
        {
            get
            {
                short? value = _PackListContentsPrinted;
                OnGetPackListContentsPrinted(ref value);
                return value;
            }
            set
            {
                if (_PackListContentsPrinted != value)
                {
                  OnPackListContentsPrintedChanging(ref value);
                  ReportPropertyChanging("PackListContentsPrinted");
                  _PackListContentsPrinted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PackListContentsPrinted");
                  OnPackListContentsPrintedChanged();
              }
            }
        }
        private short? _PackListContentsPrinted = 0;
        partial void OnGetPackListContentsPrinted(ref short? value);
        partial void OnPackListContentsPrintedChanging(ref short? value);
        partial void OnPackListContentsPrintedChanged();
    
        /// <summary>
        /// There are no comments for PackListFormKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? PackListFormKey
        {
            get
            {
                int? value = _PackListFormKey;
                OnGetPackListFormKey(ref value);
                return value;
            }
            set
            {
                if (_PackListFormKey != value)
                {
                  OnPackListFormKeyChanging(ref value);
                  ReportPropertyChanging("PackListFormKey");
                  _PackListFormKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PackListFormKey");
                  OnPackListFormKeyChanged();
              }
            }
        }
        private int? _PackListFormKey;
        partial void OnGetPackListFormKey(ref int? value);
        partial void OnPackListFormKeyChanging(ref int? value);
        partial void OnPackListFormKeyChanged();
    
        /// <summary>
        /// There are no comments for PackListPrinted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PackListPrinted
        {
            get
            {
                short value = _PackListPrinted;
                OnGetPackListPrinted(ref value);
                return value;
            }
            set
            {
                if (_PackListPrinted != value)
                {
                  OnPackListPrintedChanging(ref value);
                  ReportPropertyChanging("PackListPrinted");
                  _PackListPrinted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PackListPrinted");
                  OnPackListPrintedChanged();
              }
            }
        }
        private short _PackListPrinted = 0;
        partial void OnGetPackListPrinted(ref short value);
        partial void OnPackListPrintedChanging(ref short value);
        partial void OnPackListPrintedChanged();
    
        /// <summary>
        /// There are no comments for PackUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PackUserID
        {
            get
            {
                string value = _PackUserID;
                OnGetPackUserID(ref value);
                return value;
            }
            set
            {
                if (_PackUserID != value)
                {
                  OnPackUserIDChanging(ref value);
                  ReportPropertyChanging("PackUserID");
                  _PackUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PackUserID");
                  OnPackUserIDChanged();
              }
            }
        }
        private string _PackUserID;
        partial void OnGetPackUserID(ref string value);
        partial void OnPackUserIDChanging(ref string value);
        partial void OnPackUserIDChanged();
    
        /// <summary>
        /// There are no comments for PartialPackApproved in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PartialPackApproved
        {
            get
            {
                short value = _PartialPackApproved;
                OnGetPartialPackApproved(ref value);
                return value;
            }
            set
            {
                if (_PartialPackApproved != value)
                {
                  OnPartialPackApprovedChanging(ref value);
                  ReportPropertyChanging("PartialPackApproved");
                  _PartialPackApproved = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PartialPackApproved");
                  OnPartialPackApprovedChanged();
              }
            }
        }
        private short _PartialPackApproved = 0;
        partial void OnGetPartialPackApproved(ref short value);
        partial void OnPartialPackApprovedChanging(ref short value);
        partial void OnPartialPackApprovedChanged();
    
        /// <summary>
        /// There are no comments for ReadyToCommit in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ReadyToCommit
        {
            get
            {
                short value = _ReadyToCommit;
                OnGetReadyToCommit(ref value);
                return value;
            }
            set
            {
                if (_ReadyToCommit != value)
                {
                  OnReadyToCommitChanging(ref value);
                  ReportPropertyChanging("ReadyToCommit");
                  _ReadyToCommit = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ReadyToCommit");
                  OnReadyToCommitChanged();
              }
            }
        }
        private short _ReadyToCommit = 0;
        partial void OnGetReadyToCommit(ref short value);
        partial void OnReadyToCommitChanging(ref short value);
        partial void OnReadyToCommitChanged();
    
        /// <summary>
        /// There are no comments for RcvgWhseKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? RcvgWhseKey
        {
            get
            {
                int? value = _RcvgWhseKey;
                OnGetRcvgWhseKey(ref value);
                return value;
            }
            set
            {
                if (_RcvgWhseKey != value)
                {
                  OnRcvgWhseKeyChanging(ref value);
                  ReportPropertyChanging("RcvgWhseKey");
                  _RcvgWhseKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RcvgWhseKey");
                  OnRcvgWhseKeyChanged();
              }
            }
        }
        private int? _RcvgWhseKey;
        partial void OnGetRcvgWhseKey(ref int? value);
        partial void OnRcvgWhseKeyChanging(ref int? value);
        partial void OnRcvgWhseKeyChanged();
    
        /// <summary>
        /// There are no comments for ShipLabelFormKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ShipLabelFormKey
        {
            get
            {
                int? value = _ShipLabelFormKey;
                OnGetShipLabelFormKey(ref value);
                return value;
            }
            set
            {
                if (_ShipLabelFormKey != value)
                {
                  OnShipLabelFormKeyChanging(ref value);
                  ReportPropertyChanging("ShipLabelFormKey");
                  _ShipLabelFormKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipLabelFormKey");
                  OnShipLabelFormKeyChanged();
              }
            }
        }
        private int? _ShipLabelFormKey;
        partial void OnGetShipLabelFormKey(ref int? value);
        partial void OnShipLabelFormKeyChanging(ref int? value);
        partial void OnShipLabelFormKeyChanged();
    
        /// <summary>
        /// There are no comments for ShipLabelsPrinted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ShipLabelsPrinted
        {
            get
            {
                short value = _ShipLabelsPrinted;
                OnGetShipLabelsPrinted(ref value);
                return value;
            }
            set
            {
                if (_ShipLabelsPrinted != value)
                {
                  OnShipLabelsPrintedChanging(ref value);
                  ReportPropertyChanging("ShipLabelsPrinted");
                  _ShipLabelsPrinted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipLabelsPrinted");
                  OnShipLabelsPrintedChanged();
              }
            }
        }
        private short _ShipLabelsPrinted = 0;
        partial void OnGetShipLabelsPrinted(ref short value);
        partial void OnShipLabelsPrintedChanging(ref short value);
        partial void OnShipLabelsPrintedChanged();
    
        /// <summary>
        /// There are no comments for ShipMethKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ShipMethKey
        {
            get
            {
                int? value = _ShipMethKey;
                OnGetShipMethKey(ref value);
                return value;
            }
            set
            {
                if (_ShipMethKey != value)
                {
                  OnShipMethKeyChanging(ref value);
                  ReportPropertyChanging("ShipMethKey");
                  _ShipMethKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipMethKey");
                  OnShipMethKeyChanged();
              }
            }
        }
        private int? _ShipMethKey;
        partial void OnGetShipMethKey(ref int? value);
        partial void OnShipMethKeyChanging(ref int? value);
        partial void OnShipMethKeyChanged();
    
        /// <summary>
        /// There are no comments for ShipToAddrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ShipToAddrKey
        {
            get
            {
                int value = _ShipToAddrKey;
                OnGetShipToAddrKey(ref value);
                return value;
            }
            set
            {
                if (_ShipToAddrKey != value)
                {
                  OnShipToAddrKeyChanging(ref value);
                  ReportPropertyChanging("ShipToAddrKey");
                  _ShipToAddrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipToAddrKey");
                  OnShipToAddrKeyChanged();
              }
            }
        }
        private int _ShipToAddrKey;
        partial void OnGetShipToAddrKey(ref int value);
        partial void OnShipToAddrKeyChanging(ref int value);
        partial void OnShipToAddrKeyChanged();
    
        /// <summary>
        /// There are no comments for ShipToCustAddrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ShipToCustAddrKey
        {
            get
            {
                int? value = _ShipToCustAddrKey;
                OnGetShipToCustAddrKey(ref value);
                return value;
            }
            set
            {
                if (_ShipToCustAddrKey != value)
                {
                  OnShipToCustAddrKeyChanging(ref value);
                  ReportPropertyChanging("ShipToCustAddrKey");
                  _ShipToCustAddrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipToCustAddrKey");
                  OnShipToCustAddrKeyChanged();
              }
            }
        }
        private int? _ShipToCustAddrKey;
        partial void OnGetShipToCustAddrKey(ref int? value);
        partial void OnShipToCustAddrKeyChanging(ref int? value);
        partial void OnShipToCustAddrKeyChanged();
    
        /// <summary>
        /// There are no comments for ShipTrackNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ShipTrackNo
        {
            get
            {
                string value = _ShipTrackNo;
                OnGetShipTrackNo(ref value);
                return value;
            }
            set
            {
                if (_ShipTrackNo != value)
                {
                  OnShipTrackNoChanging(ref value);
                  ReportPropertyChanging("ShipTrackNo");
                  _ShipTrackNo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ShipTrackNo");
                  OnShipTrackNoChanged();
              }
            }
        }
        private string _ShipTrackNo;
        partial void OnGetShipTrackNo(ref string value);
        partial void OnShipTrackNoChanging(ref string value);
        partial void OnShipTrackNoChanged();
    
        /// <summary>
        /// There are no comments for ShipTrnsfrID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ShipTrnsfrID
        {
            get
            {
                string value = _ShipTrnsfrID;
                OnGetShipTrnsfrID(ref value);
                return value;
            }
            set
            {
                if (_ShipTrnsfrID != value)
                {
                  OnShipTrnsfrIDChanging(ref value);
                  ReportPropertyChanging("ShipTrnsfrID");
                  _ShipTrnsfrID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ShipTrnsfrID");
                  OnShipTrnsfrIDChanged();
              }
            }
        }
        private string _ShipTrnsfrID;
        partial void OnGetShipTrnsfrID(ref string value);
        partial void OnShipTrnsfrIDChanging(ref string value);
        partial void OnShipTrnsfrIDChanged();
    
        /// <summary>
        /// There are no comments for TrailerNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string TrailerNo
        {
            get
            {
                string value = _TrailerNo;
                OnGetTrailerNo(ref value);
                return value;
            }
            set
            {
                if (_TrailerNo != value)
                {
                  OnTrailerNoChanging(ref value);
                  ReportPropertyChanging("TrailerNo");
                  _TrailerNo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TrailerNo");
                  OnTrailerNoChanged();
              }
            }
        }
        private string _TrailerNo;
        partial void OnGetTrailerNo(ref string value);
        partial void OnTrailerNoChanging(ref string value);
        partial void OnTrailerNoChanged();
    
        /// <summary>
        /// There are no comments for TranCmnt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string TranCmnt
        {
            get
            {
                string value = _TranCmnt;
                OnGetTranCmnt(ref value);
                return value;
            }
            set
            {
                if (_TranCmnt != value)
                {
                  OnTranCmntChanging(ref value);
                  ReportPropertyChanging("TranCmnt");
                  _TranCmnt = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TranCmnt");
                  OnTranCmntChanged();
              }
            }
        }
        private string _TranCmnt;
        partial void OnGetTranCmnt(ref string value);
        partial void OnTranCmntChanging(ref string value);
        partial void OnTranCmntChanged();
    
        /// <summary>
        /// There are no comments for TranDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime TranDate
        {
            get
            {
                global::System.DateTime value = _TranDate;
                OnGetTranDate(ref value);
                return value;
            }
            set
            {
                if (_TranDate != value)
                {
                  OnTranDateChanging(ref value);
                  ReportPropertyChanging("TranDate");
                  _TranDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranDate");
                  OnTranDateChanged();
              }
            }
        }
        private global::System.DateTime _TranDate;
        partial void OnGetTranDate(ref global::System.DateTime value);
        partial void OnTranDateChanging(ref global::System.DateTime value);
        partial void OnTranDateChanged();
    
        /// <summary>
        /// There are no comments for TranID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string TranID
        {
            get
            {
                string value = _TranID;
                OnGetTranID(ref value);
                return value;
            }
            set
            {
                if (_TranID != value)
                {
                  OnTranIDChanging(ref value);
                  ReportPropertyChanging("TranID");
                  _TranID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TranID");
                  OnTranIDChanged();
              }
            }
        }
        private string _TranID;
        partial void OnGetTranID(ref string value);
        partial void OnTranIDChanging(ref string value);
        partial void OnTranIDChanged();
    
        /// <summary>
        /// There are no comments for TranNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string TranNo
        {
            get
            {
                string value = _TranNo;
                OnGetTranNo(ref value);
                return value;
            }
            set
            {
                if (_TranNo != value)
                {
                  OnTranNoChanging(ref value);
                  ReportPropertyChanging("TranNo");
                  _TranNo = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TranNo");
                  OnTranNoChanged();
              }
            }
        }
        private string _TranNo;
        partial void OnGetTranNo(ref string value);
        partial void OnTranNoChanging(ref string value);
        partial void OnTranNoChanged();
    
        /// <summary>
        /// There are no comments for TransitPoint in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string TransitPoint
        {
            get
            {
                string value = _TransitPoint;
                OnGetTransitPoint(ref value);
                return value;
            }
            set
            {
                if (_TransitPoint != value)
                {
                  OnTransitPointChanging(ref value);
                  ReportPropertyChanging("TransitPoint");
                  _TransitPoint = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TransitPoint");
                  OnTransitPointChanged();
              }
            }
        }
        private string _TransitPoint;
        partial void OnGetTransitPoint(ref string value);
        partial void OnTransitPointChanging(ref string value);
        partial void OnTransitPointChanged();
    
        /// <summary>
        /// There are no comments for TranType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int TranType
        {
            get
            {
                int value = _TranType;
                OnGetTranType(ref value);
                return value;
            }
            set
            {
                if (_TranType != value)
                {
                  OnTranTypeChanging(ref value);
                  ReportPropertyChanging("TranType");
                  _TranType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranType");
                  OnTranTypeChanged();
              }
            }
        }
        private int _TranType;
        partial void OnGetTranType(ref int value);
        partial void OnTranTypeChanging(ref int value);
        partial void OnTranTypeChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();
    
        /// <summary>
        /// There are no comments for UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? UpdateDate
        {
            get
            {
                global::System.DateTime? value = _UpdateDate;
                OnGetUpdateDate(ref value);
                return value;
            }
            set
            {
                if (_UpdateDate != value)
                {
                  OnUpdateDateChanging(ref value);
                  ReportPropertyChanging("UpdateDate");
                  _UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateDate");
                  OnUpdateDateChanged();
              }
            }
        }
        private global::System.DateTime? _UpdateDate;
        partial void OnGetUpdateDate(ref global::System.DateTime? value);
        partial void OnUpdateDateChanging(ref global::System.DateTime? value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// There are no comments for UpdateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UpdateUserID
        {
            get
            {
                string value = _UpdateUserID;
                OnGetUpdateUserID(ref value);
                return value;
            }
            set
            {
                if (_UpdateUserID != value)
                {
                  OnUpdateUserIDChanging(ref value);
                  ReportPropertyChanging("UpdateUserID");
                  _UpdateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UpdateUserID");
                  OnUpdateUserIDChanged();
              }
            }
        }
        private string _UpdateUserID;
        partial void OnGetUpdateUserID(ref string value);
        partial void OnUpdateUserIDChanging(ref string value);
        partial void OnUpdateUserIDChanged();
    
        /// <summary>
        /// There are no comments for UseInternalPackingDetail in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short UseInternalPackingDetail
        {
            get
            {
                short value = _UseInternalPackingDetail;
                OnGetUseInternalPackingDetail(ref value);
                return value;
            }
            set
            {
                if (_UseInternalPackingDetail != value)
                {
                  OnUseInternalPackingDetailChanging(ref value);
                  ReportPropertyChanging("UseInternalPackingDetail");
                  _UseInternalPackingDetail = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UseInternalPackingDetail");
                  OnUseInternalPackingDetailChanged();
              }
            }
        }
        private short _UseInternalPackingDetail = 1;
        partial void OnGetUseInternalPackingDetail(ref short value);
        partial void OnUseInternalPackingDetailChanging(ref short value);
        partial void OnUseInternalPackingDetailChanged();
    
        /// <summary>
        /// There are no comments for UserFld1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld1
        {
            get
            {
                string value = _UserFld1;
                OnGetUserFld1(ref value);
                return value;
            }
            set
            {
                if (_UserFld1 != value)
                {
                  OnUserFld1Changing(ref value);
                  ReportPropertyChanging("UserFld1");
                  _UserFld1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld1");
                  OnUserFld1Changed();
              }
            }
        }
        private string _UserFld1;
        partial void OnGetUserFld1(ref string value);
        partial void OnUserFld1Changing(ref string value);
        partial void OnUserFld1Changed();
    
        /// <summary>
        /// There are no comments for UserFld2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld2
        {
            get
            {
                string value = _UserFld2;
                OnGetUserFld2(ref value);
                return value;
            }
            set
            {
                if (_UserFld2 != value)
                {
                  OnUserFld2Changing(ref value);
                  ReportPropertyChanging("UserFld2");
                  _UserFld2 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld2");
                  OnUserFld2Changed();
              }
            }
        }
        private string _UserFld2;
        partial void OnGetUserFld2(ref string value);
        partial void OnUserFld2Changing(ref string value);
        partial void OnUserFld2Changed();
    
        /// <summary>
        /// There are no comments for UserFld3 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld3
        {
            get
            {
                string value = _UserFld3;
                OnGetUserFld3(ref value);
                return value;
            }
            set
            {
                if (_UserFld3 != value)
                {
                  OnUserFld3Changing(ref value);
                  ReportPropertyChanging("UserFld3");
                  _UserFld3 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld3");
                  OnUserFld3Changed();
              }
            }
        }
        private string _UserFld3;
        partial void OnGetUserFld3(ref string value);
        partial void OnUserFld3Changing(ref string value);
        partial void OnUserFld3Changed();
    
        /// <summary>
        /// There are no comments for UserFld4 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld4
        {
            get
            {
                string value = _UserFld4;
                OnGetUserFld4(ref value);
                return value;
            }
            set
            {
                if (_UserFld4 != value)
                {
                  OnUserFld4Changing(ref value);
                  ReportPropertyChanging("UserFld4");
                  _UserFld4 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld4");
                  OnUserFld4Changed();
              }
            }
        }
        private string _UserFld4;
        partial void OnGetUserFld4(ref string value);
        partial void OnUserFld4Changing(ref string value);
        partial void OnUserFld4Changed();
    
        /// <summary>
        /// There are no comments for WhseKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? WhseKey
        {
            get
            {
                int? value = _WhseKey;
                OnGetWhseKey(ref value);
                return value;
            }
            set
            {
                if (_WhseKey != value)
                {
                  OnWhseKeyChanging(ref value);
                  ReportPropertyChanging("WhseKey");
                  _WhseKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WhseKey");
                  OnWhseKeyChanged();
              }
            }
        }
        private int? _WhseKey;
        partial void OnGetWhseKey(ref int? value);
        partial void OnWhseKeyChanging(ref int? value);
        partial void OnWhseKeyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ShipmentLog in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "ShipmentLog_PendShipment", "ShipmentLog")]
        public virtual ShipmentLog ShipmentLog
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ShipmentLog>("Net4Sage.DataAccessModel.ShipmentLog_PendShipment", "ShipmentLog").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ShipmentLog>("Net4Sage.DataAccessModel.ShipmentLog_PendShipment", "ShipmentLog").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for ShipmentLog in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ShipmentLog> ShipmentLogReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ShipmentLog>("Net4Sage.DataAccessModel.ShipmentLog_PendShipment", "ShipmentLog");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<ShipmentLog>("Net4Sage.DataAccessModel.ShipmentLog_PendShipment", "ShipmentLog", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ShipmentLog>("Net4Sage.DataAccessModel.ShipmentLog_PendShipment", "ShipmentLog").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.PickList in the schema.
    /// </summary>
    /// <KeyProperties>
    /// PickListKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="PickList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PickList : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new PickList object.
        /// </summary>
        /// <param name="pickListKey">Initial value of PickListKey.</param>
        /// <param name="binSortOrder">Initial value of BinSortOrder.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="deliveryMeth">Initial value of DeliveryMeth.</param>
        /// <param name="inclAbbrShipToAddr">Initial value of InclAbbrShipToAddr.</param>
        /// <param name="inclBinLoc">Initial value of InclBinLoc.</param>
        /// <param name="inclBTOKitList">Initial value of InclBTOKitList.</param>
        /// <param name="inclComments">Initial value of InclComments.</param>
        /// <param name="inclKitCompInd">Initial value of InclKitCompInd.</param>
        /// <param name="inclNonStock">Initial value of InclNonStock.</param>
        /// <param name="inclPriority">Initial value of InclPriority.</param>
        /// <param name="inclShipCompIeteInd">Initial value of InclShipCompIeteInd.</param>
        /// <param name="inclShipDate">Initial value of InclShipDate.</param>
        /// <param name="inclShipMethod">Initial value of InclShipMethod.</param>
        /// <param name="inclShipToAddr">Initial value of InclShipToAddr.</param>
        /// <param name="inclSubInd">Initial value of InclSubInd.</param>
        /// <param name="pickListNo">Initial value of PickListNo.</param>
        /// <param name="printCount">Initial value of PrintCount.</param>
        /// <param name="rptFormat">Initial value of RptFormat.</param>
        /// <param name="sortByZone">Initial value of SortByZone.</param>
        public static PickList CreatePickList(int pickListKey, short binSortOrder, string companyID, short deliveryMeth, short inclAbbrShipToAddr, short inclBinLoc, short inclBTOKitList, short inclComments, short inclKitCompInd, short inclNonStock, short inclPriority, short inclShipCompIeteInd, short inclShipDate, short inclShipMethod, short inclShipToAddr, short inclSubInd, string pickListNo, short printCount, short rptFormat, short sortByZone)
        {
            PickList pickList = new PickList();
            pickList.PickListKey = pickListKey;
            pickList.BinSortOrder = binSortOrder;
            pickList.CompanyID = companyID;
            pickList.DeliveryMeth = deliveryMeth;
            pickList.InclAbbrShipToAddr = inclAbbrShipToAddr;
            pickList.InclBinLoc = inclBinLoc;
            pickList.InclBTOKitList = inclBTOKitList;
            pickList.InclComments = inclComments;
            pickList.InclKitCompInd = inclKitCompInd;
            pickList.InclNonStock = inclNonStock;
            pickList.InclPriority = inclPriority;
            pickList.InclShipCompIeteInd = inclShipCompIeteInd;
            pickList.InclShipDate = inclShipDate;
            pickList.InclShipMethod = inclShipMethod;
            pickList.InclShipToAddr = inclShipToAddr;
            pickList.InclSubInd = inclSubInd;
            pickList.PickListNo = pickListNo;
            pickList.PrintCount = printCount;
            pickList.RptFormat = rptFormat;
            pickList.SortByZone = sortByZone;
            return pickList;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for PickListKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int PickListKey
        {
            get
            {
                int value = _PickListKey;
                OnGetPickListKey(ref value);
                return value;
            }
            set
            {
                if (_PickListKey != value)
                {
                  OnPickListKeyChanging(ref value);
                  ReportPropertyChanging("PickListKey");
                  _PickListKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PickListKey");
                  OnPickListKeyChanged();
              }
            }
        }
        private int _PickListKey;
        partial void OnGetPickListKey(ref int value);
        partial void OnPickListKeyChanging(ref int value);
        partial void OnPickListKeyChanged();
    
        /// <summary>
        /// There are no comments for BinSortOrder in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short BinSortOrder
        {
            get
            {
                short value = _BinSortOrder;
                OnGetBinSortOrder(ref value);
                return value;
            }
            set
            {
                if (_BinSortOrder != value)
                {
                  OnBinSortOrderChanging(ref value);
                  ReportPropertyChanging("BinSortOrder");
                  _BinSortOrder = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BinSortOrder");
                  OnBinSortOrderChanged();
              }
            }
        }
        private short _BinSortOrder = 0;
        partial void OnGetBinSortOrder(ref short value);
        partial void OnBinSortOrderChanging(ref short value);
        partial void OnBinSortOrderChanged();
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for CreateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CreateDate
        {
            get
            {
                global::System.DateTime? value = _CreateDate;
                OnGetCreateDate(ref value);
                return value;
            }
            set
            {
                if (_CreateDate != value)
                {
                  OnCreateDateChanging(ref value);
                  ReportPropertyChanging("CreateDate");
                  _CreateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateDate");
                  OnCreateDateChanged();
              }
            }
        }
        private global::System.DateTime? _CreateDate;
        partial void OnGetCreateDate(ref global::System.DateTime? value);
        partial void OnCreateDateChanging(ref global::System.DateTime? value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// There are no comments for CreateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CreateUserID
        {
            get
            {
                string value = _CreateUserID;
                OnGetCreateUserID(ref value);
                return value;
            }
            set
            {
                if (_CreateUserID != value)
                {
                  OnCreateUserIDChanging(ref value);
                  ReportPropertyChanging("CreateUserID");
                  _CreateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CreateUserID");
                  OnCreateUserIDChanged();
              }
            }
        }
        private string _CreateUserID;
        partial void OnGetCreateUserID(ref string value);
        partial void OnCreateUserIDChanging(ref string value);
        partial void OnCreateUserIDChanged();
    
        /// <summary>
        /// There are no comments for DeliveryMeth in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short DeliveryMeth
        {
            get
            {
                short value = _DeliveryMeth;
                OnGetDeliveryMeth(ref value);
                return value;
            }
            set
            {
                if (_DeliveryMeth != value)
                {
                  OnDeliveryMethChanging(ref value);
                  ReportPropertyChanging("DeliveryMeth");
                  _DeliveryMeth = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DeliveryMeth");
                  OnDeliveryMethChanged();
              }
            }
        }
        private short _DeliveryMeth = 1;
        partial void OnGetDeliveryMeth(ref short value);
        partial void OnDeliveryMethChanging(ref short value);
        partial void OnDeliveryMethChanged();
    
        /// <summary>
        /// There are no comments for InclAbbrShipToAddr in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short InclAbbrShipToAddr
        {
            get
            {
                short value = _InclAbbrShipToAddr;
                OnGetInclAbbrShipToAddr(ref value);
                return value;
            }
            set
            {
                if (_InclAbbrShipToAddr != value)
                {
                  OnInclAbbrShipToAddrChanging(ref value);
                  ReportPropertyChanging("InclAbbrShipToAddr");
                  _InclAbbrShipToAddr = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InclAbbrShipToAddr");
                  OnInclAbbrShipToAddrChanged();
              }
            }
        }
        private short _InclAbbrShipToAddr = 0;
        partial void OnGetInclAbbrShipToAddr(ref short value);
        partial void OnInclAbbrShipToAddrChanging(ref short value);
        partial void OnInclAbbrShipToAddrChanged();
    
        /// <summary>
        /// There are no comments for InclBinLoc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short InclBinLoc
        {
            get
            {
                short value = _InclBinLoc;
                OnGetInclBinLoc(ref value);
                return value;
            }
            set
            {
                if (_InclBinLoc != value)
                {
                  OnInclBinLocChanging(ref value);
                  ReportPropertyChanging("InclBinLoc");
                  _InclBinLoc = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InclBinLoc");
                  OnInclBinLocChanged();
              }
            }
        }
        private short _InclBinLoc = 1;
        partial void OnGetInclBinLoc(ref short value);
        partial void OnInclBinLocChanging(ref short value);
        partial void OnInclBinLocChanged();
    
        /// <summary>
        /// There are no comments for InclBTOKitList in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short InclBTOKitList
        {
            get
            {
                short value = _InclBTOKitList;
                OnGetInclBTOKitList(ref value);
                return value;
            }
            set
            {
                if (_InclBTOKitList != value)
                {
                  OnInclBTOKitListChanging(ref value);
                  ReportPropertyChanging("InclBTOKitList");
                  _InclBTOKitList = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InclBTOKitList");
                  OnInclBTOKitListChanged();
              }
            }
        }
        private short _InclBTOKitList = 0;
        partial void OnGetInclBTOKitList(ref short value);
        partial void OnInclBTOKitListChanging(ref short value);
        partial void OnInclBTOKitListChanged();
    
        /// <summary>
        /// There are no comments for InclComments in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short InclComments
        {
            get
            {
                short value = _InclComments;
                OnGetInclComments(ref value);
                return value;
            }
            set
            {
                if (_InclComments != value)
                {
                  OnInclCommentsChanging(ref value);
                  ReportPropertyChanging("InclComments");
                  _InclComments = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InclComments");
                  OnInclCommentsChanged();
              }
            }
        }
        private short _InclComments = 0;
        partial void OnGetInclComments(ref short value);
        partial void OnInclCommentsChanging(ref short value);
        partial void OnInclCommentsChanged();
    
        /// <summary>
        /// There are no comments for InclKitCompInd in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short InclKitCompInd
        {
            get
            {
                short value = _InclKitCompInd;
                OnGetInclKitCompInd(ref value);
                return value;
            }
            set
            {
                if (_InclKitCompInd != value)
                {
                  OnInclKitCompIndChanging(ref value);
                  ReportPropertyChanging("InclKitCompInd");
                  _InclKitCompInd = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InclKitCompInd");
                  OnInclKitCompIndChanged();
              }
            }
        }
        private short _InclKitCompInd = 1;
        partial void OnGetInclKitCompInd(ref short value);
        partial void OnInclKitCompIndChanging(ref short value);
        partial void OnInclKitCompIndChanged();
    
        /// <summary>
        /// There are no comments for InclNonStock in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short InclNonStock
        {
            get
            {
                short value = _InclNonStock;
                OnGetInclNonStock(ref value);
                return value;
            }
            set
            {
                if (_InclNonStock != value)
                {
                  OnInclNonStockChanging(ref value);
                  ReportPropertyChanging("InclNonStock");
                  _InclNonStock = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InclNonStock");
                  OnInclNonStockChanged();
              }
            }
        }
        private short _InclNonStock = 0;
        partial void OnGetInclNonStock(ref short value);
        partial void OnInclNonStockChanging(ref short value);
        partial void OnInclNonStockChanged();
    
        /// <summary>
        /// There are no comments for InclPriority in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short InclPriority
        {
            get
            {
                short value = _InclPriority;
                OnGetInclPriority(ref value);
                return value;
            }
            set
            {
                if (_InclPriority != value)
                {
                  OnInclPriorityChanging(ref value);
                  ReportPropertyChanging("InclPriority");
                  _InclPriority = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InclPriority");
                  OnInclPriorityChanged();
              }
            }
        }
        private short _InclPriority = 1;
        partial void OnGetInclPriority(ref short value);
        partial void OnInclPriorityChanging(ref short value);
        partial void OnInclPriorityChanged();
    
        /// <summary>
        /// There are no comments for InclShipCompIeteInd in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short InclShipCompIeteInd
        {
            get
            {
                short value = _InclShipCompIeteInd;
                OnGetInclShipCompIeteInd(ref value);
                return value;
            }
            set
            {
                if (_InclShipCompIeteInd != value)
                {
                  OnInclShipCompIeteIndChanging(ref value);
                  ReportPropertyChanging("InclShipCompIeteInd");
                  _InclShipCompIeteInd = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InclShipCompIeteInd");
                  OnInclShipCompIeteIndChanged();
              }
            }
        }
        private short _InclShipCompIeteInd = 1;
        partial void OnGetInclShipCompIeteInd(ref short value);
        partial void OnInclShipCompIeteIndChanging(ref short value);
        partial void OnInclShipCompIeteIndChanged();
    
        /// <summary>
        /// There are no comments for InclShipDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short InclShipDate
        {
            get
            {
                short value = _InclShipDate;
                OnGetInclShipDate(ref value);
                return value;
            }
            set
            {
                if (_InclShipDate != value)
                {
                  OnInclShipDateChanging(ref value);
                  ReportPropertyChanging("InclShipDate");
                  _InclShipDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InclShipDate");
                  OnInclShipDateChanged();
              }
            }
        }
        private short _InclShipDate = 1;
        partial void OnGetInclShipDate(ref short value);
        partial void OnInclShipDateChanging(ref short value);
        partial void OnInclShipDateChanged();
    
        /// <summary>
        /// There are no comments for InclShipMethod in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short InclShipMethod
        {
            get
            {
                short value = _InclShipMethod;
                OnGetInclShipMethod(ref value);
                return value;
            }
            set
            {
                if (_InclShipMethod != value)
                {
                  OnInclShipMethodChanging(ref value);
                  ReportPropertyChanging("InclShipMethod");
                  _InclShipMethod = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InclShipMethod");
                  OnInclShipMethodChanged();
              }
            }
        }
        private short _InclShipMethod = 1;
        partial void OnGetInclShipMethod(ref short value);
        partial void OnInclShipMethodChanging(ref short value);
        partial void OnInclShipMethodChanged();
    
        /// <summary>
        /// There are no comments for InclShipToAddr in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short InclShipToAddr
        {
            get
            {
                short value = _InclShipToAddr;
                OnGetInclShipToAddr(ref value);
                return value;
            }
            set
            {
                if (_InclShipToAddr != value)
                {
                  OnInclShipToAddrChanging(ref value);
                  ReportPropertyChanging("InclShipToAddr");
                  _InclShipToAddr = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InclShipToAddr");
                  OnInclShipToAddrChanged();
              }
            }
        }
        private short _InclShipToAddr = 0;
        partial void OnGetInclShipToAddr(ref short value);
        partial void OnInclShipToAddrChanging(ref short value);
        partial void OnInclShipToAddrChanged();
    
        /// <summary>
        /// There are no comments for InclSubInd in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short InclSubInd
        {
            get
            {
                short value = _InclSubInd;
                OnGetInclSubInd(ref value);
                return value;
            }
            set
            {
                if (_InclSubInd != value)
                {
                  OnInclSubIndChanging(ref value);
                  ReportPropertyChanging("InclSubInd");
                  _InclSubInd = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InclSubInd");
                  OnInclSubIndChanged();
              }
            }
        }
        private short _InclSubInd = 1;
        partial void OnGetInclSubInd(ref short value);
        partial void OnInclSubIndChanging(ref short value);
        partial void OnInclSubIndChanged();
    
        /// <summary>
        /// There are no comments for PickListNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string PickListNo
        {
            get
            {
                string value = _PickListNo;
                OnGetPickListNo(ref value);
                return value;
            }
            set
            {
                if (_PickListNo != value)
                {
                  OnPickListNoChanging(ref value);
                  ReportPropertyChanging("PickListNo");
                  _PickListNo = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("PickListNo");
                  OnPickListNoChanged();
              }
            }
        }
        private string _PickListNo;
        partial void OnGetPickListNo(ref string value);
        partial void OnPickListNoChanging(ref string value);
        partial void OnPickListNoChanged();
    
        /// <summary>
        /// There are no comments for PrintCount in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PrintCount
        {
            get
            {
                short value = _PrintCount;
                OnGetPrintCount(ref value);
                return value;
            }
            set
            {
                if (_PrintCount != value)
                {
                  OnPrintCountChanging(ref value);
                  ReportPropertyChanging("PrintCount");
                  _PrintCount = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PrintCount");
                  OnPrintCountChanged();
              }
            }
        }
        private short _PrintCount = 0;
        partial void OnGetPrintCount(ref short value);
        partial void OnPrintCountChanging(ref short value);
        partial void OnPrintCountChanged();
    
        /// <summary>
        /// There are no comments for RptFormat in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short RptFormat
        {
            get
            {
                short value = _RptFormat;
                OnGetRptFormat(ref value);
                return value;
            }
            set
            {
                if (_RptFormat != value)
                {
                  OnRptFormatChanging(ref value);
                  ReportPropertyChanging("RptFormat");
                  _RptFormat = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RptFormat");
                  OnRptFormatChanged();
              }
            }
        }
        private short _RptFormat = 2;
        partial void OnGetRptFormat(ref short value);
        partial void OnRptFormatChanging(ref short value);
        partial void OnRptFormatChanged();
    
        /// <summary>
        /// There are no comments for SortByZone in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short SortByZone
        {
            get
            {
                short value = _SortByZone;
                OnGetSortByZone(ref value);
                return value;
            }
            set
            {
                if (_SortByZone != value)
                {
                  OnSortByZoneChanging(ref value);
                  ReportPropertyChanging("SortByZone");
                  _SortByZone = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SortByZone");
                  OnSortByZoneChanged();
              }
            }
        }
        private short _SortByZone = 0;
        partial void OnGetSortByZone(ref short value);
        partial void OnSortByZoneChanging(ref short value);
        partial void OnSortByZoneChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.ShipLine in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ShipLineKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="ShipLine")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ShipLine : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ShipLine object.
        /// </summary>
        /// <param name="shipLineKey">Initial value of ShipLineKey.</param>
        /// <param name="confirmedPick">Initial value of ConfirmedPick.</param>
        /// <param name="pickingComplete">Initial value of PickingComplete.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        public static ShipLine CreateShipLine(int shipLineKey, short confirmedPick, short pickingComplete, int updateCounter)
        {
            ShipLine shipLine = new ShipLine();
            shipLine.ShipLineKey = shipLineKey;
            shipLine.ConfirmedPick = confirmedPick;
            shipLine.PickingComplete = pickingComplete;
            shipLine.UpdateCounter = updateCounter;
            return shipLine;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ShipLineKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ShipLineKey
        {
            get
            {
                int value = _ShipLineKey;
                OnGetShipLineKey(ref value);
                return value;
            }
            set
            {
                if (_ShipLineKey != value)
                {
                  OnShipLineKeyChanging(ref value);
                  ReportPropertyChanging("ShipLineKey");
                  _ShipLineKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipLineKey");
                  OnShipLineKeyChanged();
              }
            }
        }
        private int _ShipLineKey;
        partial void OnGetShipLineKey(ref int value);
        partial void OnShipLineKeyChanging(ref int value);
        partial void OnShipLineKeyChanged();
    
        /// <summary>
        /// There are no comments for ConfirmedPick in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ConfirmedPick
        {
            get
            {
                short value = _ConfirmedPick;
                OnGetConfirmedPick(ref value);
                return value;
            }
            set
            {
                if (_ConfirmedPick != value)
                {
                  OnConfirmedPickChanging(ref value);
                  ReportPropertyChanging("ConfirmedPick");
                  _ConfirmedPick = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ConfirmedPick");
                  OnConfirmedPickChanged();
              }
            }
        }
        private short _ConfirmedPick = 0;
        partial void OnGetConfirmedPick(ref short value);
        partial void OnConfirmedPickChanging(ref short value);
        partial void OnConfirmedPickChanged();
    
        /// <summary>
        /// There are no comments for InvtTranKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? InvtTranKey
        {
            get
            {
                int? value = _InvtTranKey;
                OnGetInvtTranKey(ref value);
                return value;
            }
            set
            {
                if (_InvtTranKey != value)
                {
                  OnInvtTranKeyChanging(ref value);
                  ReportPropertyChanging("InvtTranKey");
                  _InvtTranKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvtTranKey");
                  OnInvtTranKeyChanged();
              }
            }
        }
        private int? _InvtTranKey;
        partial void OnGetInvtTranKey(ref int? value);
        partial void OnInvtTranKeyChanging(ref int? value);
        partial void OnInvtTranKeyChanged();
    
        /// <summary>
        /// There are no comments for ItemKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ItemKey
        {
            get
            {
                int? value = _ItemKey;
                OnGetItemKey(ref value);
                return value;
            }
            set
            {
                if (_ItemKey != value)
                {
                  OnItemKeyChanging(ref value);
                  ReportPropertyChanging("ItemKey");
                  _ItemKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ItemKey");
                  OnItemKeyChanged();
              }
            }
        }
        private int? _ItemKey;
        partial void OnGetItemKey(ref int? value);
        partial void OnItemKeyChanging(ref int? value);
        partial void OnItemKeyChanged();
    
        /// <summary>
        /// There are no comments for ItemShippedKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ItemShippedKey
        {
            get
            {
                int? value = _ItemShippedKey;
                OnGetItemShippedKey(ref value);
                return value;
            }
            set
            {
                if (_ItemShippedKey != value)
                {
                  OnItemShippedKeyChanging(ref value);
                  ReportPropertyChanging("ItemShippedKey");
                  _ItemShippedKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ItemShippedKey");
                  OnItemShippedKeyChanged();
              }
            }
        }
        private int? _ItemShippedKey;
        partial void OnGetItemShippedKey(ref int? value);
        partial void OnItemShippedKeyChanging(ref int? value);
        partial void OnItemShippedKeyChanged();
    
        /// <summary>
        /// There are no comments for KitShipLineKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? KitShipLineKey
        {
            get
            {
                int? value = _KitShipLineKey;
                OnGetKitShipLineKey(ref value);
                return value;
            }
            set
            {
                if (_KitShipLineKey != value)
                {
                  OnKitShipLineKeyChanging(ref value);
                  ReportPropertyChanging("KitShipLineKey");
                  _KitShipLineKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("KitShipLineKey");
                  OnKitShipLineKeyChanged();
              }
            }
        }
        private int? _KitShipLineKey;
        partial void OnGetKitShipLineKey(ref int? value);
        partial void OnKitShipLineKeyChanging(ref int? value);
        partial void OnKitShipLineKeyChanged();
    
        /// <summary>
        /// There are no comments for PickingComplete in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PickingComplete
        {
            get
            {
                short value = _PickingComplete;
                OnGetPickingComplete(ref value);
                return value;
            }
            set
            {
                if (_PickingComplete != value)
                {
                  OnPickingCompleteChanging(ref value);
                  ReportPropertyChanging("PickingComplete");
                  _PickingComplete = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PickingComplete");
                  OnPickingCompleteChanged();
              }
            }
        }
        private short _PickingComplete = 0;
        partial void OnGetPickingComplete(ref short value);
        partial void OnPickingCompleteChanging(ref short value);
        partial void OnPickingCompleteChanged();
    
        /// <summary>
        /// There are no comments for PickListKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? PickListKey
        {
            get
            {
                int? value = _PickListKey;
                OnGetPickListKey(ref value);
                return value;
            }
            set
            {
                if (_PickListKey != value)
                {
                  OnPickListKeyChanging(ref value);
                  ReportPropertyChanging("PickListKey");
                  _PickListKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PickListKey");
                  OnPickListKeyChanged();
              }
            }
        }
        private int? _PickListKey;
        partial void OnGetPickListKey(ref int? value);
        partial void OnPickListKeyChanging(ref int? value);
        partial void OnPickListKeyChanged();
    
        /// <summary>
        /// There are no comments for PickListLineNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? PickListLineNo
        {
            get
            {
                int? value = _PickListLineNo;
                OnGetPickListLineNo(ref value);
                return value;
            }
            set
            {
                if (_PickListLineNo != value)
                {
                  OnPickListLineNoChanging(ref value);
                  ReportPropertyChanging("PickListLineNo");
                  _PickListLineNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PickListLineNo");
                  OnPickListLineNoChanged();
              }
            }
        }
        private int? _PickListLineNo;
        partial void OnGetPickListLineNo(ref int? value);
        partial void OnPickListLineNoChanging(ref int? value);
        partial void OnPickListLineNoChanged();
    
        /// <summary>
        /// There are no comments for ShipDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? ShipDate
        {
            get
            {
                global::System.DateTime? value = _ShipDate;
                OnGetShipDate(ref value);
                return value;
            }
            set
            {
                if (_ShipDate != value)
                {
                  OnShipDateChanging(ref value);
                  ReportPropertyChanging("ShipDate");
                  _ShipDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipDate");
                  OnShipDateChanged();
              }
            }
        }
        private global::System.DateTime? _ShipDate;
        partial void OnGetShipDate(ref global::System.DateTime? value);
        partial void OnShipDateChanging(ref global::System.DateTime? value);
        partial void OnShipDateChanged();
    
        /// <summary>
        /// There are no comments for ShipKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ShipKey
        {
            get
            {
                int? value = _ShipKey;
                OnGetShipKey(ref value);
                return value;
            }
            set
            {
                if (_ShipKey != value)
                {
                  OnShipKeyChanging(ref value);
                  ReportPropertyChanging("ShipKey");
                  _ShipKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipKey");
                  OnShipKeyChanged();
              }
            }
        }
        private int? _ShipKey;
        partial void OnGetShipKey(ref int? value);
        partial void OnShipKeyChanging(ref int? value);
        partial void OnShipKeyChanged();
    
        /// <summary>
        /// There are no comments for ShipLineNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ShipLineNo
        {
            get
            {
                int? value = _ShipLineNo;
                OnGetShipLineNo(ref value);
                return value;
            }
            set
            {
                if (_ShipLineNo != value)
                {
                  OnShipLineNoChanging(ref value);
                  ReportPropertyChanging("ShipLineNo");
                  _ShipLineNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipLineNo");
                  OnShipLineNoChanged();
              }
            }
        }
        private int? _ShipLineNo;
        partial void OnGetShipLineNo(ref int? value);
        partial void OnShipLineNoChanging(ref int? value);
        partial void OnShipLineNoChanged();
    
        /// <summary>
        /// There are no comments for ShipUnitMeasKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ShipUnitMeasKey
        {
            get
            {
                int? value = _ShipUnitMeasKey;
                OnGetShipUnitMeasKey(ref value);
                return value;
            }
            set
            {
                if (_ShipUnitMeasKey != value)
                {
                  OnShipUnitMeasKeyChanging(ref value);
                  ReportPropertyChanging("ShipUnitMeasKey");
                  _ShipUnitMeasKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipUnitMeasKey");
                  OnShipUnitMeasKeyChanged();
              }
            }
        }
        private int? _ShipUnitMeasKey;
        partial void OnGetShipUnitMeasKey(ref int? value);
        partial void OnShipUnitMeasKeyChanging(ref int? value);
        partial void OnShipUnitMeasKeyChanged();
    
        /// <summary>
        /// There are no comments for SOLineKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? SOLineKey
        {
            get
            {
                int? value = _SOLineKey;
                OnGetSOLineKey(ref value);
                return value;
            }
            set
            {
                if (_SOLineKey != value)
                {
                  OnSOLineKeyChanging(ref value);
                  ReportPropertyChanging("SOLineKey");
                  _SOLineKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SOLineKey");
                  OnSOLineKeyChanged();
              }
            }
        }
        private int? _SOLineKey;
        partial void OnGetSOLineKey(ref int? value);
        partial void OnSOLineKeyChanging(ref int? value);
        partial void OnSOLineKeyChanged();
    
        /// <summary>
        /// There are no comments for TransitInvtTranKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? TransitInvtTranKey
        {
            get
            {
                int? value = _TransitInvtTranKey;
                OnGetTransitInvtTranKey(ref value);
                return value;
            }
            set
            {
                if (_TransitInvtTranKey != value)
                {
                  OnTransitInvtTranKeyChanging(ref value);
                  ReportPropertyChanging("TransitInvtTranKey");
                  _TransitInvtTranKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TransitInvtTranKey");
                  OnTransitInvtTranKeyChanged();
              }
            }
        }
        private int? _TransitInvtTranKey;
        partial void OnGetTransitInvtTranKey(ref int? value);
        partial void OnTransitInvtTranKeyChanging(ref int? value);
        partial void OnTransitInvtTranKeyChanged();
    
        /// <summary>
        /// There are no comments for TrnsfrOrderLineKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? TrnsfrOrderLineKey
        {
            get
            {
                int? value = _TrnsfrOrderLineKey;
                OnGetTrnsfrOrderLineKey(ref value);
                return value;
            }
            set
            {
                if (_TrnsfrOrderLineKey != value)
                {
                  OnTrnsfrOrderLineKeyChanging(ref value);
                  ReportPropertyChanging("TrnsfrOrderLineKey");
                  _TrnsfrOrderLineKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TrnsfrOrderLineKey");
                  OnTrnsfrOrderLineKeyChanged();
              }
            }
        }
        private int? _TrnsfrOrderLineKey;
        partial void OnGetTrnsfrOrderLineKey(ref int? value);
        partial void OnTrnsfrOrderLineKeyChanging(ref int? value);
        partial void OnTrnsfrOrderLineKeyChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();
    
        /// <summary>
        /// There are no comments for UserFld1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld1
        {
            get
            {
                string value = _UserFld1;
                OnGetUserFld1(ref value);
                return value;
            }
            set
            {
                if (_UserFld1 != value)
                {
                  OnUserFld1Changing(ref value);
                  ReportPropertyChanging("UserFld1");
                  _UserFld1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld1");
                  OnUserFld1Changed();
              }
            }
        }
        private string _UserFld1;
        partial void OnGetUserFld1(ref string value);
        partial void OnUserFld1Changing(ref string value);
        partial void OnUserFld1Changed();
    
        /// <summary>
        /// There are no comments for UserFld2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld2
        {
            get
            {
                string value = _UserFld2;
                OnGetUserFld2(ref value);
                return value;
            }
            set
            {
                if (_UserFld2 != value)
                {
                  OnUserFld2Changing(ref value);
                  ReportPropertyChanging("UserFld2");
                  _UserFld2 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld2");
                  OnUserFld2Changed();
              }
            }
        }
        private string _UserFld2;
        partial void OnGetUserFld2(ref string value);
        partial void OnUserFld2Changing(ref string value);
        partial void OnUserFld2Changed();
    
        /// <summary>
        /// There are no comments for UserFld3 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld3
        {
            get
            {
                string value = _UserFld3;
                OnGetUserFld3(ref value);
                return value;
            }
            set
            {
                if (_UserFld3 != value)
                {
                  OnUserFld3Changing(ref value);
                  ReportPropertyChanging("UserFld3");
                  _UserFld3 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld3");
                  OnUserFld3Changed();
              }
            }
        }
        private string _UserFld3;
        partial void OnGetUserFld3(ref string value);
        partial void OnUserFld3Changing(ref string value);
        partial void OnUserFld3Changed();
    
        /// <summary>
        /// There are no comments for UserFld4 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld4
        {
            get
            {
                string value = _UserFld4;
                OnGetUserFld4(ref value);
                return value;
            }
            set
            {
                if (_UserFld4 != value)
                {
                  OnUserFld4Changing(ref value);
                  ReportPropertyChanging("UserFld4");
                  _UserFld4 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld4");
                  OnUserFld4Changed();
              }
            }
        }
        private string _UserFld4;
        partial void OnGetUserFld4(ref string value);
        partial void OnUserFld4Changing(ref string value);
        partial void OnUserFld4Changed();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ShipLineDists in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "ShipLine_ShipLineDist", "ShipLineDists")]
        public virtual EntityCollection<ShipLineDist> ShipLineDists
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ShipLineDist>("Net4Sage.DataAccessModel.ShipLine_ShipLineDist", "ShipLineDists");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ShipLineDist>("Net4Sage.DataAccessModel.ShipLine_ShipLineDist", "ShipLineDists", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ShipmentLog in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "ShipmentLog_ShipLine", "ShipmentLog")]
        public virtual ShipmentLog ShipmentLog
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ShipmentLog>("Net4Sage.DataAccessModel.ShipmentLog_ShipLine", "ShipmentLog").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ShipmentLog>("Net4Sage.DataAccessModel.ShipmentLog_ShipLine", "ShipmentLog").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for ShipmentLog in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ShipmentLog> ShipmentLogReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ShipmentLog>("Net4Sage.DataAccessModel.ShipmentLog_ShipLine", "ShipmentLog");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<ShipmentLog>("Net4Sage.DataAccessModel.ShipmentLog_ShipLine", "ShipmentLog", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ShipmentLog>("Net4Sage.DataAccessModel.ShipmentLog_ShipLine", "ShipmentLog").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SOLine in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "SOLine_ShipLine", "SOLine")]
        public virtual SOLine SOLine
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SOLine>("Net4Sage.DataAccessModel.SOLine_ShipLine", "SOLine").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SOLine>("Net4Sage.DataAccessModel.SOLine_ShipLine", "SOLine").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SOLine in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SOLine> SOLineReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SOLine>("Net4Sage.DataAccessModel.SOLine_ShipLine", "SOLine");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SOLine>("Net4Sage.DataAccessModel.SOLine_ShipLine", "SOLine", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SOLine>("Net4Sage.DataAccessModel.SOLine_ShipLine", "SOLine").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.ShipLineDist in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ShipLineDistKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="ShipLineDist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ShipLineDist : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ShipLineDist object.
        /// </summary>
        /// <param name="shipLineDistKey">Initial value of ShipLineDistKey.</param>
        /// <param name="firstShipment">Initial value of FirstShipment.</param>
        /// <param name="freightAmt">Initial value of FreightAmt.</param>
        /// <param name="qtyBackOrdered">Initial value of QtyBackOrdered.</param>
        /// <param name="qtyShipped">Initial value of QtyShipped.</param>
        /// <param name="qtyToPick">Initial value of QtyToPick.</param>
        /// <param name="shipLineKey">Initial value of ShipLineKey.</param>
        /// <param name="surchargeAmt">Initial value of SurchargeAmt.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        public static ShipLineDist CreateShipLineDist(int shipLineDistKey, short firstShipment, decimal freightAmt, decimal qtyBackOrdered, decimal qtyShipped, decimal qtyToPick, int shipLineKey, decimal surchargeAmt, int updateCounter)
        {
            ShipLineDist shipLineDist = new ShipLineDist();
            shipLineDist.ShipLineDistKey = shipLineDistKey;
            shipLineDist.FirstShipment = firstShipment;
            shipLineDist.FreightAmt = freightAmt;
            shipLineDist.QtyBackOrdered = qtyBackOrdered;
            shipLineDist.QtyShipped = qtyShipped;
            shipLineDist.QtyToPick = qtyToPick;
            shipLineDist.ShipLineKey = shipLineKey;
            shipLineDist.SurchargeAmt = surchargeAmt;
            shipLineDist.UpdateCounter = updateCounter;
            return shipLineDist;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ShipLineDistKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ShipLineDistKey
        {
            get
            {
                int value = _ShipLineDistKey;
                OnGetShipLineDistKey(ref value);
                return value;
            }
            set
            {
                if (_ShipLineDistKey != value)
                {
                  OnShipLineDistKeyChanging(ref value);
                  ReportPropertyChanging("ShipLineDistKey");
                  _ShipLineDistKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipLineDistKey");
                  OnShipLineDistKeyChanged();
              }
            }
        }
        private int _ShipLineDistKey;
        partial void OnGetShipLineDistKey(ref int value);
        partial void OnShipLineDistKeyChanging(ref int value);
        partial void OnShipLineDistKeyChanged();
    
        /// <summary>
        /// There are no comments for FirstShipment in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short FirstShipment
        {
            get
            {
                short value = _FirstShipment;
                OnGetFirstShipment(ref value);
                return value;
            }
            set
            {
                if (_FirstShipment != value)
                {
                  OnFirstShipmentChanging(ref value);
                  ReportPropertyChanging("FirstShipment");
                  _FirstShipment = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FirstShipment");
                  OnFirstShipmentChanged();
              }
            }
        }
        private short _FirstShipment = 0;
        partial void OnGetFirstShipment(ref short value);
        partial void OnFirstShipmentChanging(ref short value);
        partial void OnFirstShipmentChanged();
    
        /// <summary>
        /// There are no comments for FreightAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal FreightAmt
        {
            get
            {
                decimal value = _FreightAmt;
                OnGetFreightAmt(ref value);
                return value;
            }
            set
            {
                if (_FreightAmt != value)
                {
                  OnFreightAmtChanging(ref value);
                  ReportPropertyChanging("FreightAmt");
                  _FreightAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FreightAmt");
                  OnFreightAmtChanged();
              }
            }
        }
        private decimal _FreightAmt = 0m;
        partial void OnGetFreightAmt(ref decimal value);
        partial void OnFreightAmtChanging(ref decimal value);
        partial void OnFreightAmtChanged();
    
        /// <summary>
        /// There are no comments for QtyBackOrdered in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal QtyBackOrdered
        {
            get
            {
                decimal value = _QtyBackOrdered;
                OnGetQtyBackOrdered(ref value);
                return value;
            }
            set
            {
                if (_QtyBackOrdered != value)
                {
                  OnQtyBackOrderedChanging(ref value);
                  ReportPropertyChanging("QtyBackOrdered");
                  _QtyBackOrdered = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QtyBackOrdered");
                  OnQtyBackOrderedChanged();
              }
            }
        }
        private decimal _QtyBackOrdered = 0m;
        partial void OnGetQtyBackOrdered(ref decimal value);
        partial void OnQtyBackOrderedChanging(ref decimal value);
        partial void OnQtyBackOrderedChanged();
    
        /// <summary>
        /// There are no comments for QtyShipped in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal QtyShipped
        {
            get
            {
                decimal value = _QtyShipped;
                OnGetQtyShipped(ref value);
                return value;
            }
            set
            {
                if (_QtyShipped != value)
                {
                  OnQtyShippedChanging(ref value);
                  ReportPropertyChanging("QtyShipped");
                  _QtyShipped = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QtyShipped");
                  OnQtyShippedChanged();
              }
            }
        }
        private decimal _QtyShipped = 0m;
        partial void OnGetQtyShipped(ref decimal value);
        partial void OnQtyShippedChanging(ref decimal value);
        partial void OnQtyShippedChanged();
    
        /// <summary>
        /// There are no comments for QtyToPick in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal QtyToPick
        {
            get
            {
                decimal value = _QtyToPick;
                OnGetQtyToPick(ref value);
                return value;
            }
            set
            {
                if (_QtyToPick != value)
                {
                  OnQtyToPickChanging(ref value);
                  ReportPropertyChanging("QtyToPick");
                  _QtyToPick = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QtyToPick");
                  OnQtyToPickChanged();
              }
            }
        }
        private decimal _QtyToPick = 0m;
        partial void OnGetQtyToPick(ref decimal value);
        partial void OnQtyToPickChanging(ref decimal value);
        partial void OnQtyToPickChanged();
    
        /// <summary>
        /// There are no comments for ShipLineKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ShipLineKey
        {
            get
            {
                int value = _ShipLineKey;
                OnGetShipLineKey(ref value);
                return value;
            }
            set
            {
                if (_ShipLineKey != value)
                {
                  OnShipLineKeyChanging(ref value);
                  ReportPropertyChanging("ShipLineKey");
                  _ShipLineKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipLineKey");
                  OnShipLineKeyChanged();
              }
            }
        }
        private int _ShipLineKey;
        partial void OnGetShipLineKey(ref int value);
        partial void OnShipLineKeyChanging(ref int value);
        partial void OnShipLineKeyChanged();
    
        /// <summary>
        /// There are no comments for SOLineDistKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? SOLineDistKey
        {
            get
            {
                int? value = _SOLineDistKey;
                OnGetSOLineDistKey(ref value);
                return value;
            }
            set
            {
                if (_SOLineDistKey != value)
                {
                  OnSOLineDistKeyChanging(ref value);
                  ReportPropertyChanging("SOLineDistKey");
                  _SOLineDistKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SOLineDistKey");
                  OnSOLineDistKeyChanged();
              }
            }
        }
        private int? _SOLineDistKey;
        partial void OnGetSOLineDistKey(ref int? value);
        partial void OnSOLineDistKeyChanging(ref int? value);
        partial void OnSOLineDistKeyChanged();
    
        /// <summary>
        /// There are no comments for SurchargeAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal SurchargeAmt
        {
            get
            {
                decimal value = _SurchargeAmt;
                OnGetSurchargeAmt(ref value);
                return value;
            }
            set
            {
                if (_SurchargeAmt != value)
                {
                  OnSurchargeAmtChanging(ref value);
                  ReportPropertyChanging("SurchargeAmt");
                  _SurchargeAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SurchargeAmt");
                  OnSurchargeAmtChanged();
              }
            }
        }
        private decimal _SurchargeAmt = 0m;
        partial void OnGetSurchargeAmt(ref decimal value);
        partial void OnSurchargeAmtChanging(ref decimal value);
        partial void OnSurchargeAmtChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ShipLine in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "ShipLine_ShipLineDist", "ShipLine")]
        public virtual ShipLine ShipLine
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ShipLine>("Net4Sage.DataAccessModel.ShipLine_ShipLineDist", "ShipLine").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ShipLine>("Net4Sage.DataAccessModel.ShipLine_ShipLineDist", "ShipLine").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for ShipLine in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ShipLine> ShipLineReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ShipLine>("Net4Sage.DataAccessModel.ShipLine_ShipLineDist", "ShipLine");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<ShipLine>("Net4Sage.DataAccessModel.ShipLine_ShipLineDist", "ShipLine", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ShipLine>("Net4Sage.DataAccessModel.ShipLine_ShipLineDist", "ShipLine").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.Shipment in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ShipKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="Shipment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Shipment : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Shipment object.
        /// </summary>
        /// <param name="shipKey">Initial value of ShipKey.</param>
        /// <param name="amtShipped">Initial value of AmtShipped.</param>
        /// <param name="batchKey">Initial value of BatchKey.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="createType">Initial value of CreateType.</param>
        /// <param name="extShipmentExists">Initial value of ExtShipmentExists.</param>
        /// <param name="freightAllocMeth">Initial value of FreightAllocMeth.</param>
        /// <param name="freightAmt">Initial value of FreightAmt.</param>
        /// <param name="freightAmtFromExtShipSys">Initial value of FreightAmtFromExtShipSys.</param>
        /// <param name="freightAmtFromInternal">Initial value of FreightAmtFromInternal.</param>
        /// <param name="noShipLabels">Initial value of NoShipLabels.</param>
        /// <param name="packListContentsPrinted">Initial value of PackListContentsPrinted.</param>
        /// <param name="packListPrinted">Initial value of PackListPrinted.</param>
        /// <param name="partialPackApproved">Initial value of PartialPackApproved.</param>
        /// <param name="postDate">Initial value of PostDate.</param>
        /// <param name="shipLabelsPrinted">Initial value of ShipLabelsPrinted.</param>
        /// <param name="shipToAddrKey">Initial value of ShipToAddrKey.</param>
        /// <param name="tranDate">Initial value of TranDate.</param>
        /// <param name="tranID">Initial value of TranID.</param>
        /// <param name="tranNo">Initial value of TranNo.</param>
        /// <param name="tranType">Initial value of TranType.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        /// <param name="useInternalPackingDetail">Initial value of UseInternalPackingDetail.</param>
        public static Shipment CreateShipment(int shipKey, decimal amtShipped, int batchKey, string companyID, short createType, short extShipmentExists, short freightAllocMeth, decimal freightAmt, decimal freightAmtFromExtShipSys, decimal freightAmtFromInternal, short noShipLabels, short packListContentsPrinted, short packListPrinted, short partialPackApproved, global::System.DateTime postDate, short shipLabelsPrinted, int shipToAddrKey, global::System.DateTime tranDate, string tranID, string tranNo, int tranType, int updateCounter, short useInternalPackingDetail)
        {
            Shipment shipment = new Shipment();
            shipment.ShipKey = shipKey;
            shipment.AmtShipped = amtShipped;
            shipment.BatchKey = batchKey;
            shipment.CompanyID = companyID;
            shipment.CreateType = createType;
            shipment.ExtShipmentExists = extShipmentExists;
            shipment.FreightAllocMeth = freightAllocMeth;
            shipment.FreightAmt = freightAmt;
            shipment.FreightAmtFromExtShipSys = freightAmtFromExtShipSys;
            shipment.FreightAmtFromInternal = freightAmtFromInternal;
            shipment.NoShipLabels = noShipLabels;
            shipment.PackListContentsPrinted = packListContentsPrinted;
            shipment.PackListPrinted = packListPrinted;
            shipment.PartialPackApproved = partialPackApproved;
            shipment.PostDate = postDate;
            shipment.ShipLabelsPrinted = shipLabelsPrinted;
            shipment.ShipToAddrKey = shipToAddrKey;
            shipment.TranDate = tranDate;
            shipment.TranID = tranID;
            shipment.TranNo = tranNo;
            shipment.TranType = tranType;
            shipment.UpdateCounter = updateCounter;
            shipment.UseInternalPackingDetail = useInternalPackingDetail;
            return shipment;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ShipKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ShipKey
        {
            get
            {
                int value = _ShipKey;
                OnGetShipKey(ref value);
                return value;
            }
            set
            {
                if (_ShipKey != value)
                {
                  OnShipKeyChanging(ref value);
                  ReportPropertyChanging("ShipKey");
                  _ShipKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipKey");
                  OnShipKeyChanged();
              }
            }
        }
        private int _ShipKey;
        partial void OnGetShipKey(ref int value);
        partial void OnShipKeyChanging(ref int value);
        partial void OnShipKeyChanged();
    
        /// <summary>
        /// There are no comments for AmtShipped in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal AmtShipped
        {
            get
            {
                decimal value = _AmtShipped;
                OnGetAmtShipped(ref value);
                return value;
            }
            set
            {
                if (_AmtShipped != value)
                {
                  OnAmtShippedChanging(ref value);
                  ReportPropertyChanging("AmtShipped");
                  _AmtShipped = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AmtShipped");
                  OnAmtShippedChanged();
              }
            }
        }
        private decimal _AmtShipped = 0m;
        partial void OnGetAmtShipped(ref decimal value);
        partial void OnAmtShippedChanging(ref decimal value);
        partial void OnAmtShippedChanged();
    
        /// <summary>
        /// There are no comments for BatchKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int BatchKey
        {
            get
            {
                int value = _BatchKey;
                OnGetBatchKey(ref value);
                return value;
            }
            set
            {
                if (_BatchKey != value)
                {
                  OnBatchKeyChanging(ref value);
                  ReportPropertyChanging("BatchKey");
                  _BatchKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BatchKey");
                  OnBatchKeyChanged();
              }
            }
        }
        private int _BatchKey;
        partial void OnGetBatchKey(ref int value);
        partial void OnBatchKeyChanging(ref int value);
        partial void OnBatchKeyChanged();
    
        /// <summary>
        /// There are no comments for BOLFormKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? BOLFormKey
        {
            get
            {
                int? value = _BOLFormKey;
                OnGetBOLFormKey(ref value);
                return value;
            }
            set
            {
                if (_BOLFormKey != value)
                {
                  OnBOLFormKeyChanging(ref value);
                  ReportPropertyChanging("BOLFormKey");
                  _BOLFormKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BOLFormKey");
                  OnBOLFormKeyChanged();
              }
            }
        }
        private int? _BOLFormKey;
        partial void OnGetBOLFormKey(ref int? value);
        partial void OnBOLFormKeyChanging(ref int? value);
        partial void OnBOLFormKeyChanged();
    
        /// <summary>
        /// There are no comments for BOLPrinted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual short? BOLPrinted
        {
            get
            {
                short? value = _BOLPrinted;
                OnGetBOLPrinted(ref value);
                return value;
            }
            set
            {
                if (_BOLPrinted != value)
                {
                  OnBOLPrintedChanging(ref value);
                  ReportPropertyChanging("BOLPrinted");
                  _BOLPrinted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BOLPrinted");
                  OnBOLPrintedChanged();
              }
            }
        }
        private short? _BOLPrinted = 0;
        partial void OnGetBOLPrinted(ref short? value);
        partial void OnBOLPrintedChanging(ref short? value);
        partial void OnBOLPrintedChanged();
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for CreateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CreateDate
        {
            get
            {
                global::System.DateTime? value = _CreateDate;
                OnGetCreateDate(ref value);
                return value;
            }
            set
            {
                if (_CreateDate != value)
                {
                  OnCreateDateChanging(ref value);
                  ReportPropertyChanging("CreateDate");
                  _CreateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateDate");
                  OnCreateDateChanged();
              }
            }
        }
        private global::System.DateTime? _CreateDate;
        partial void OnGetCreateDate(ref global::System.DateTime? value);
        partial void OnCreateDateChanging(ref global::System.DateTime? value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// There are no comments for CreateType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CreateType
        {
            get
            {
                short value = _CreateType;
                OnGetCreateType(ref value);
                return value;
            }
            set
            {
                if (_CreateType != value)
                {
                  OnCreateTypeChanging(ref value);
                  ReportPropertyChanging("CreateType");
                  _CreateType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateType");
                  OnCreateTypeChanged();
              }
            }
        }
        private short _CreateType = 0;
        partial void OnGetCreateType(ref short value);
        partial void OnCreateTypeChanging(ref short value);
        partial void OnCreateTypeChanged();
    
        /// <summary>
        /// There are no comments for CreateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CreateUserID
        {
            get
            {
                string value = _CreateUserID;
                OnGetCreateUserID(ref value);
                return value;
            }
            set
            {
                if (_CreateUserID != value)
                {
                  OnCreateUserIDChanging(ref value);
                  ReportPropertyChanging("CreateUserID");
                  _CreateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CreateUserID");
                  OnCreateUserIDChanged();
              }
            }
        }
        private string _CreateUserID;
        partial void OnGetCreateUserID(ref string value);
        partial void OnCreateUserIDChanging(ref string value);
        partial void OnCreateUserIDChanged();
    
        /// <summary>
        /// There are no comments for CustKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CustKey
        {
            get
            {
                int? value = _CustKey;
                OnGetCustKey(ref value);
                return value;
            }
            set
            {
                if (_CustKey != value)
                {
                  OnCustKeyChanging(ref value);
                  ReportPropertyChanging("CustKey");
                  _CustKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustKey");
                  OnCustKeyChanged();
              }
            }
        }
        private int? _CustKey;
        partial void OnGetCustKey(ref int? value);
        partial void OnCustKeyChanging(ref int? value);
        partial void OnCustKeyChanged();
    
        /// <summary>
        /// There are no comments for DlvryShipMethKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? DlvryShipMethKey
        {
            get
            {
                int? value = _DlvryShipMethKey;
                OnGetDlvryShipMethKey(ref value);
                return value;
            }
            set
            {
                if (_DlvryShipMethKey != value)
                {
                  OnDlvryShipMethKeyChanging(ref value);
                  ReportPropertyChanging("DlvryShipMethKey");
                  _DlvryShipMethKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DlvryShipMethKey");
                  OnDlvryShipMethKeyChanged();
              }
            }
        }
        private int? _DlvryShipMethKey;
        partial void OnGetDlvryShipMethKey(ref int? value);
        partial void OnDlvryShipMethKeyChanging(ref int? value);
        partial void OnDlvryShipMethKeyChanged();
    
        /// <summary>
        /// There are no comments for DlvryTrnsfrID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string DlvryTrnsfrID
        {
            get
            {
                string value = _DlvryTrnsfrID;
                OnGetDlvryTrnsfrID(ref value);
                return value;
            }
            set
            {
                if (_DlvryTrnsfrID != value)
                {
                  OnDlvryTrnsfrIDChanging(ref value);
                  ReportPropertyChanging("DlvryTrnsfrID");
                  _DlvryTrnsfrID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DlvryTrnsfrID");
                  OnDlvryTrnsfrIDChanged();
              }
            }
        }
        private string _DlvryTrnsfrID;
        partial void OnGetDlvryTrnsfrID(ref string value);
        partial void OnDlvryTrnsfrIDChanging(ref string value);
        partial void OnDlvryTrnsfrIDChanged();
    
        /// <summary>
        /// There are no comments for ExtShipmentExists in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ExtShipmentExists
        {
            get
            {
                short value = _ExtShipmentExists;
                OnGetExtShipmentExists(ref value);
                return value;
            }
            set
            {
                if (_ExtShipmentExists != value)
                {
                  OnExtShipmentExistsChanging(ref value);
                  ReportPropertyChanging("ExtShipmentExists");
                  _ExtShipmentExists = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ExtShipmentExists");
                  OnExtShipmentExistsChanged();
              }
            }
        }
        private short _ExtShipmentExists = 0;
        partial void OnGetExtShipmentExists(ref short value);
        partial void OnExtShipmentExistsChanging(ref short value);
        partial void OnExtShipmentExistsChanged();
    
        /// <summary>
        /// There are no comments for FreightAllocMeth in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short FreightAllocMeth
        {
            get
            {
                short value = _FreightAllocMeth;
                OnGetFreightAllocMeth(ref value);
                return value;
            }
            set
            {
                if (_FreightAllocMeth != value)
                {
                  OnFreightAllocMethChanging(ref value);
                  ReportPropertyChanging("FreightAllocMeth");
                  _FreightAllocMeth = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FreightAllocMeth");
                  OnFreightAllocMethChanged();
              }
            }
        }
        private short _FreightAllocMeth = 1;
        partial void OnGetFreightAllocMeth(ref short value);
        partial void OnFreightAllocMethChanging(ref short value);
        partial void OnFreightAllocMethChanged();
    
        /// <summary>
        /// There are no comments for FreightAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal FreightAmt
        {
            get
            {
                decimal value = _FreightAmt;
                OnGetFreightAmt(ref value);
                return value;
            }
            set
            {
                if (_FreightAmt != value)
                {
                  OnFreightAmtChanging(ref value);
                  ReportPropertyChanging("FreightAmt");
                  _FreightAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FreightAmt");
                  OnFreightAmtChanged();
              }
            }
        }
        private decimal _FreightAmt = 0m;
        partial void OnGetFreightAmt(ref decimal value);
        partial void OnFreightAmtChanging(ref decimal value);
        partial void OnFreightAmtChanged();
    
        /// <summary>
        /// There are no comments for FreightAmtFromExtShipSys in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal FreightAmtFromExtShipSys
        {
            get
            {
                decimal value = _FreightAmtFromExtShipSys;
                OnGetFreightAmtFromExtShipSys(ref value);
                return value;
            }
            set
            {
                if (_FreightAmtFromExtShipSys != value)
                {
                  OnFreightAmtFromExtShipSysChanging(ref value);
                  ReportPropertyChanging("FreightAmtFromExtShipSys");
                  _FreightAmtFromExtShipSys = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FreightAmtFromExtShipSys");
                  OnFreightAmtFromExtShipSysChanged();
              }
            }
        }
        private decimal _FreightAmtFromExtShipSys = 0m;
        partial void OnGetFreightAmtFromExtShipSys(ref decimal value);
        partial void OnFreightAmtFromExtShipSysChanging(ref decimal value);
        partial void OnFreightAmtFromExtShipSysChanged();
    
        /// <summary>
        /// There are no comments for FreightAmtFromInternal in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal FreightAmtFromInternal
        {
            get
            {
                decimal value = _FreightAmtFromInternal;
                OnGetFreightAmtFromInternal(ref value);
                return value;
            }
            set
            {
                if (_FreightAmtFromInternal != value)
                {
                  OnFreightAmtFromInternalChanging(ref value);
                  ReportPropertyChanging("FreightAmtFromInternal");
                  _FreightAmtFromInternal = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FreightAmtFromInternal");
                  OnFreightAmtFromInternalChanged();
              }
            }
        }
        private decimal _FreightAmtFromInternal = 0m;
        partial void OnGetFreightAmtFromInternal(ref decimal value);
        partial void OnFreightAmtFromInternalChanging(ref decimal value);
        partial void OnFreightAmtFromInternalChanged();
    
        /// <summary>
        /// There are no comments for NoShipLabels in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short NoShipLabels
        {
            get
            {
                short value = _NoShipLabels;
                OnGetNoShipLabels(ref value);
                return value;
            }
            set
            {
                if (_NoShipLabels != value)
                {
                  OnNoShipLabelsChanging(ref value);
                  ReportPropertyChanging("NoShipLabels");
                  _NoShipLabels = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NoShipLabels");
                  OnNoShipLabelsChanged();
              }
            }
        }
        private short _NoShipLabels = 0;
        partial void OnGetNoShipLabels(ref short value);
        partial void OnNoShipLabelsChanging(ref short value);
        partial void OnNoShipLabelsChanged();
    
        /// <summary>
        /// There are no comments for PackListFormKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? PackListFormKey
        {
            get
            {
                int? value = _PackListFormKey;
                OnGetPackListFormKey(ref value);
                return value;
            }
            set
            {
                if (_PackListFormKey != value)
                {
                  OnPackListFormKeyChanging(ref value);
                  ReportPropertyChanging("PackListFormKey");
                  _PackListFormKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PackListFormKey");
                  OnPackListFormKeyChanged();
              }
            }
        }
        private int? _PackListFormKey;
        partial void OnGetPackListFormKey(ref int? value);
        partial void OnPackListFormKeyChanging(ref int? value);
        partial void OnPackListFormKeyChanged();
    
        /// <summary>
        /// There are no comments for PackListContentsPrinted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PackListContentsPrinted
        {
            get
            {
                short value = _PackListContentsPrinted;
                OnGetPackListContentsPrinted(ref value);
                return value;
            }
            set
            {
                if (_PackListContentsPrinted != value)
                {
                  OnPackListContentsPrintedChanging(ref value);
                  ReportPropertyChanging("PackListContentsPrinted");
                  _PackListContentsPrinted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PackListContentsPrinted");
                  OnPackListContentsPrintedChanged();
              }
            }
        }
        private short _PackListContentsPrinted = 0;
        partial void OnGetPackListContentsPrinted(ref short value);
        partial void OnPackListContentsPrintedChanging(ref short value);
        partial void OnPackListContentsPrintedChanged();
    
        /// <summary>
        /// There are no comments for PackListPrinted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PackListPrinted
        {
            get
            {
                short value = _PackListPrinted;
                OnGetPackListPrinted(ref value);
                return value;
            }
            set
            {
                if (_PackListPrinted != value)
                {
                  OnPackListPrintedChanging(ref value);
                  ReportPropertyChanging("PackListPrinted");
                  _PackListPrinted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PackListPrinted");
                  OnPackListPrintedChanged();
              }
            }
        }
        private short _PackListPrinted = 0;
        partial void OnGetPackListPrinted(ref short value);
        partial void OnPackListPrintedChanging(ref short value);
        partial void OnPackListPrintedChanged();
    
        /// <summary>
        /// There are no comments for PackUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PackUserID
        {
            get
            {
                string value = _PackUserID;
                OnGetPackUserID(ref value);
                return value;
            }
            set
            {
                if (_PackUserID != value)
                {
                  OnPackUserIDChanging(ref value);
                  ReportPropertyChanging("PackUserID");
                  _PackUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PackUserID");
                  OnPackUserIDChanged();
              }
            }
        }
        private string _PackUserID;
        partial void OnGetPackUserID(ref string value);
        partial void OnPackUserIDChanging(ref string value);
        partial void OnPackUserIDChanged();
    
        /// <summary>
        /// There are no comments for PartialPackApproved in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PartialPackApproved
        {
            get
            {
                short value = _PartialPackApproved;
                OnGetPartialPackApproved(ref value);
                return value;
            }
            set
            {
                if (_PartialPackApproved != value)
                {
                  OnPartialPackApprovedChanging(ref value);
                  ReportPropertyChanging("PartialPackApproved");
                  _PartialPackApproved = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PartialPackApproved");
                  OnPartialPackApprovedChanged();
              }
            }
        }
        private short _PartialPackApproved = 0;
        partial void OnGetPartialPackApproved(ref short value);
        partial void OnPartialPackApprovedChanging(ref short value);
        partial void OnPartialPackApprovedChanged();
    
        /// <summary>
        /// There are no comments for PostDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime PostDate
        {
            get
            {
                global::System.DateTime value = _PostDate;
                OnGetPostDate(ref value);
                return value;
            }
            set
            {
                if (_PostDate != value)
                {
                  OnPostDateChanging(ref value);
                  ReportPropertyChanging("PostDate");
                  _PostDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PostDate");
                  OnPostDateChanged();
              }
            }
        }
        private global::System.DateTime _PostDate;
        partial void OnGetPostDate(ref global::System.DateTime value);
        partial void OnPostDateChanging(ref global::System.DateTime value);
        partial void OnPostDateChanged();
    
        /// <summary>
        /// There are no comments for RcvgWhseKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? RcvgWhseKey
        {
            get
            {
                int? value = _RcvgWhseKey;
                OnGetRcvgWhseKey(ref value);
                return value;
            }
            set
            {
                if (_RcvgWhseKey != value)
                {
                  OnRcvgWhseKeyChanging(ref value);
                  ReportPropertyChanging("RcvgWhseKey");
                  _RcvgWhseKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RcvgWhseKey");
                  OnRcvgWhseKeyChanged();
              }
            }
        }
        private int? _RcvgWhseKey;
        partial void OnGetRcvgWhseKey(ref int? value);
        partial void OnRcvgWhseKeyChanging(ref int? value);
        partial void OnRcvgWhseKeyChanged();
    
        /// <summary>
        /// There are no comments for ShipLabelFormKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ShipLabelFormKey
        {
            get
            {
                int? value = _ShipLabelFormKey;
                OnGetShipLabelFormKey(ref value);
                return value;
            }
            set
            {
                if (_ShipLabelFormKey != value)
                {
                  OnShipLabelFormKeyChanging(ref value);
                  ReportPropertyChanging("ShipLabelFormKey");
                  _ShipLabelFormKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipLabelFormKey");
                  OnShipLabelFormKeyChanged();
              }
            }
        }
        private int? _ShipLabelFormKey;
        partial void OnGetShipLabelFormKey(ref int? value);
        partial void OnShipLabelFormKeyChanging(ref int? value);
        partial void OnShipLabelFormKeyChanged();
    
        /// <summary>
        /// There are no comments for ShipLabelsPrinted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ShipLabelsPrinted
        {
            get
            {
                short value = _ShipLabelsPrinted;
                OnGetShipLabelsPrinted(ref value);
                return value;
            }
            set
            {
                if (_ShipLabelsPrinted != value)
                {
                  OnShipLabelsPrintedChanging(ref value);
                  ReportPropertyChanging("ShipLabelsPrinted");
                  _ShipLabelsPrinted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipLabelsPrinted");
                  OnShipLabelsPrintedChanged();
              }
            }
        }
        private short _ShipLabelsPrinted = 0;
        partial void OnGetShipLabelsPrinted(ref short value);
        partial void OnShipLabelsPrintedChanging(ref short value);
        partial void OnShipLabelsPrintedChanged();
    
        /// <summary>
        /// There are no comments for ShipMethKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ShipMethKey
        {
            get
            {
                int? value = _ShipMethKey;
                OnGetShipMethKey(ref value);
                return value;
            }
            set
            {
                if (_ShipMethKey != value)
                {
                  OnShipMethKeyChanging(ref value);
                  ReportPropertyChanging("ShipMethKey");
                  _ShipMethKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipMethKey");
                  OnShipMethKeyChanged();
              }
            }
        }
        private int? _ShipMethKey;
        partial void OnGetShipMethKey(ref int? value);
        partial void OnShipMethKeyChanging(ref int? value);
        partial void OnShipMethKeyChanged();
    
        /// <summary>
        /// There are no comments for ShipToAddrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ShipToAddrKey
        {
            get
            {
                int value = _ShipToAddrKey;
                OnGetShipToAddrKey(ref value);
                return value;
            }
            set
            {
                if (_ShipToAddrKey != value)
                {
                  OnShipToAddrKeyChanging(ref value);
                  ReportPropertyChanging("ShipToAddrKey");
                  _ShipToAddrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipToAddrKey");
                  OnShipToAddrKeyChanged();
              }
            }
        }
        private int _ShipToAddrKey;
        partial void OnGetShipToAddrKey(ref int value);
        partial void OnShipToAddrKeyChanging(ref int value);
        partial void OnShipToAddrKeyChanged();
    
        /// <summary>
        /// There are no comments for ShipToCustAddrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ShipToCustAddrKey
        {
            get
            {
                int? value = _ShipToCustAddrKey;
                OnGetShipToCustAddrKey(ref value);
                return value;
            }
            set
            {
                if (_ShipToCustAddrKey != value)
                {
                  OnShipToCustAddrKeyChanging(ref value);
                  ReportPropertyChanging("ShipToCustAddrKey");
                  _ShipToCustAddrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipToCustAddrKey");
                  OnShipToCustAddrKeyChanged();
              }
            }
        }
        private int? _ShipToCustAddrKey;
        partial void OnGetShipToCustAddrKey(ref int? value);
        partial void OnShipToCustAddrKeyChanging(ref int? value);
        partial void OnShipToCustAddrKeyChanged();
    
        /// <summary>
        /// There are no comments for ShipTrackNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ShipTrackNo
        {
            get
            {
                string value = _ShipTrackNo;
                OnGetShipTrackNo(ref value);
                return value;
            }
            set
            {
                if (_ShipTrackNo != value)
                {
                  OnShipTrackNoChanging(ref value);
                  ReportPropertyChanging("ShipTrackNo");
                  _ShipTrackNo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ShipTrackNo");
                  OnShipTrackNoChanged();
              }
            }
        }
        private string _ShipTrackNo;
        partial void OnGetShipTrackNo(ref string value);
        partial void OnShipTrackNoChanging(ref string value);
        partial void OnShipTrackNoChanged();
    
        /// <summary>
        /// There are no comments for ShipTrnsfrID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ShipTrnsfrID
        {
            get
            {
                string value = _ShipTrnsfrID;
                OnGetShipTrnsfrID(ref value);
                return value;
            }
            set
            {
                if (_ShipTrnsfrID != value)
                {
                  OnShipTrnsfrIDChanging(ref value);
                  ReportPropertyChanging("ShipTrnsfrID");
                  _ShipTrnsfrID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ShipTrnsfrID");
                  OnShipTrnsfrIDChanged();
              }
            }
        }
        private string _ShipTrnsfrID;
        partial void OnGetShipTrnsfrID(ref string value);
        partial void OnShipTrnsfrIDChanging(ref string value);
        partial void OnShipTrnsfrIDChanged();
    
        /// <summary>
        /// There are no comments for TrailerNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string TrailerNo
        {
            get
            {
                string value = _TrailerNo;
                OnGetTrailerNo(ref value);
                return value;
            }
            set
            {
                if (_TrailerNo != value)
                {
                  OnTrailerNoChanging(ref value);
                  ReportPropertyChanging("TrailerNo");
                  _TrailerNo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TrailerNo");
                  OnTrailerNoChanged();
              }
            }
        }
        private string _TrailerNo;
        partial void OnGetTrailerNo(ref string value);
        partial void OnTrailerNoChanging(ref string value);
        partial void OnTrailerNoChanged();
    
        /// <summary>
        /// There are no comments for TranCmnt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string TranCmnt
        {
            get
            {
                string value = _TranCmnt;
                OnGetTranCmnt(ref value);
                return value;
            }
            set
            {
                if (_TranCmnt != value)
                {
                  OnTranCmntChanging(ref value);
                  ReportPropertyChanging("TranCmnt");
                  _TranCmnt = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TranCmnt");
                  OnTranCmntChanged();
              }
            }
        }
        private string _TranCmnt;
        partial void OnGetTranCmnt(ref string value);
        partial void OnTranCmntChanging(ref string value);
        partial void OnTranCmntChanged();
    
        /// <summary>
        /// There are no comments for TranDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime TranDate
        {
            get
            {
                global::System.DateTime value = _TranDate;
                OnGetTranDate(ref value);
                return value;
            }
            set
            {
                if (_TranDate != value)
                {
                  OnTranDateChanging(ref value);
                  ReportPropertyChanging("TranDate");
                  _TranDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranDate");
                  OnTranDateChanged();
              }
            }
        }
        private global::System.DateTime _TranDate;
        partial void OnGetTranDate(ref global::System.DateTime value);
        partial void OnTranDateChanging(ref global::System.DateTime value);
        partial void OnTranDateChanged();
    
        /// <summary>
        /// There are no comments for TranID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string TranID
        {
            get
            {
                string value = _TranID;
                OnGetTranID(ref value);
                return value;
            }
            set
            {
                if (_TranID != value)
                {
                  OnTranIDChanging(ref value);
                  ReportPropertyChanging("TranID");
                  _TranID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TranID");
                  OnTranIDChanged();
              }
            }
        }
        private string _TranID;
        partial void OnGetTranID(ref string value);
        partial void OnTranIDChanging(ref string value);
        partial void OnTranIDChanged();
    
        /// <summary>
        /// There are no comments for TranNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string TranNo
        {
            get
            {
                string value = _TranNo;
                OnGetTranNo(ref value);
                return value;
            }
            set
            {
                if (_TranNo != value)
                {
                  OnTranNoChanging(ref value);
                  ReportPropertyChanging("TranNo");
                  _TranNo = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TranNo");
                  OnTranNoChanged();
              }
            }
        }
        private string _TranNo;
        partial void OnGetTranNo(ref string value);
        partial void OnTranNoChanging(ref string value);
        partial void OnTranNoChanged();
    
        /// <summary>
        /// There are no comments for TransitPoint in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string TransitPoint
        {
            get
            {
                string value = _TransitPoint;
                OnGetTransitPoint(ref value);
                return value;
            }
            set
            {
                if (_TransitPoint != value)
                {
                  OnTransitPointChanging(ref value);
                  ReportPropertyChanging("TransitPoint");
                  _TransitPoint = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TransitPoint");
                  OnTransitPointChanged();
              }
            }
        }
        private string _TransitPoint;
        partial void OnGetTransitPoint(ref string value);
        partial void OnTransitPointChanging(ref string value);
        partial void OnTransitPointChanged();
    
        /// <summary>
        /// There are no comments for TranType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int TranType
        {
            get
            {
                int value = _TranType;
                OnGetTranType(ref value);
                return value;
            }
            set
            {
                if (_TranType != value)
                {
                  OnTranTypeChanging(ref value);
                  ReportPropertyChanging("TranType");
                  _TranType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranType");
                  OnTranTypeChanged();
              }
            }
        }
        private int _TranType;
        partial void OnGetTranType(ref int value);
        partial void OnTranTypeChanging(ref int value);
        partial void OnTranTypeChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();
    
        /// <summary>
        /// There are no comments for UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? UpdateDate
        {
            get
            {
                global::System.DateTime? value = _UpdateDate;
                OnGetUpdateDate(ref value);
                return value;
            }
            set
            {
                if (_UpdateDate != value)
                {
                  OnUpdateDateChanging(ref value);
                  ReportPropertyChanging("UpdateDate");
                  _UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateDate");
                  OnUpdateDateChanged();
              }
            }
        }
        private global::System.DateTime? _UpdateDate;
        partial void OnGetUpdateDate(ref global::System.DateTime? value);
        partial void OnUpdateDateChanging(ref global::System.DateTime? value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// There are no comments for UpdateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UpdateUserID
        {
            get
            {
                string value = _UpdateUserID;
                OnGetUpdateUserID(ref value);
                return value;
            }
            set
            {
                if (_UpdateUserID != value)
                {
                  OnUpdateUserIDChanging(ref value);
                  ReportPropertyChanging("UpdateUserID");
                  _UpdateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UpdateUserID");
                  OnUpdateUserIDChanged();
              }
            }
        }
        private string _UpdateUserID;
        partial void OnGetUpdateUserID(ref string value);
        partial void OnUpdateUserIDChanging(ref string value);
        partial void OnUpdateUserIDChanged();
    
        /// <summary>
        /// There are no comments for UseInternalPackingDetail in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short UseInternalPackingDetail
        {
            get
            {
                short value = _UseInternalPackingDetail;
                OnGetUseInternalPackingDetail(ref value);
                return value;
            }
            set
            {
                if (_UseInternalPackingDetail != value)
                {
                  OnUseInternalPackingDetailChanging(ref value);
                  ReportPropertyChanging("UseInternalPackingDetail");
                  _UseInternalPackingDetail = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UseInternalPackingDetail");
                  OnUseInternalPackingDetailChanged();
              }
            }
        }
        private short _UseInternalPackingDetail = 0;
        partial void OnGetUseInternalPackingDetail(ref short value);
        partial void OnUseInternalPackingDetailChanging(ref short value);
        partial void OnUseInternalPackingDetailChanged();
    
        /// <summary>
        /// There are no comments for UserFld1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld1
        {
            get
            {
                string value = _UserFld1;
                OnGetUserFld1(ref value);
                return value;
            }
            set
            {
                if (_UserFld1 != value)
                {
                  OnUserFld1Changing(ref value);
                  ReportPropertyChanging("UserFld1");
                  _UserFld1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld1");
                  OnUserFld1Changed();
              }
            }
        }
        private string _UserFld1;
        partial void OnGetUserFld1(ref string value);
        partial void OnUserFld1Changing(ref string value);
        partial void OnUserFld1Changed();
    
        /// <summary>
        /// There are no comments for UserFld2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld2
        {
            get
            {
                string value = _UserFld2;
                OnGetUserFld2(ref value);
                return value;
            }
            set
            {
                if (_UserFld2 != value)
                {
                  OnUserFld2Changing(ref value);
                  ReportPropertyChanging("UserFld2");
                  _UserFld2 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld2");
                  OnUserFld2Changed();
              }
            }
        }
        private string _UserFld2;
        partial void OnGetUserFld2(ref string value);
        partial void OnUserFld2Changing(ref string value);
        partial void OnUserFld2Changed();
    
        /// <summary>
        /// There are no comments for UserFld3 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld3
        {
            get
            {
                string value = _UserFld3;
                OnGetUserFld3(ref value);
                return value;
            }
            set
            {
                if (_UserFld3 != value)
                {
                  OnUserFld3Changing(ref value);
                  ReportPropertyChanging("UserFld3");
                  _UserFld3 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld3");
                  OnUserFld3Changed();
              }
            }
        }
        private string _UserFld3;
        partial void OnGetUserFld3(ref string value);
        partial void OnUserFld3Changing(ref string value);
        partial void OnUserFld3Changed();
    
        /// <summary>
        /// There are no comments for UserFld4 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld4
        {
            get
            {
                string value = _UserFld4;
                OnGetUserFld4(ref value);
                return value;
            }
            set
            {
                if (_UserFld4 != value)
                {
                  OnUserFld4Changing(ref value);
                  ReportPropertyChanging("UserFld4");
                  _UserFld4 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld4");
                  OnUserFld4Changed();
              }
            }
        }
        private string _UserFld4;
        partial void OnGetUserFld4(ref string value);
        partial void OnUserFld4Changing(ref string value);
        partial void OnUserFld4Changed();
    
        /// <summary>
        /// There are no comments for WhseKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? WhseKey
        {
            get
            {
                int? value = _WhseKey;
                OnGetWhseKey(ref value);
                return value;
            }
            set
            {
                if (_WhseKey != value)
                {
                  OnWhseKeyChanging(ref value);
                  ReportPropertyChanging("WhseKey");
                  _WhseKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WhseKey");
                  OnWhseKeyChanged();
              }
            }
        }
        private int? _WhseKey;
        partial void OnGetWhseKey(ref int? value);
        partial void OnWhseKeyChanging(ref int? value);
        partial void OnWhseKeyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ShipmentLog in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "ShipmentLog_Shipment", "ShipmentLog")]
        public virtual ShipmentLog ShipmentLog
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ShipmentLog>("Net4Sage.DataAccessModel.ShipmentLog_Shipment", "ShipmentLog").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ShipmentLog>("Net4Sage.DataAccessModel.ShipmentLog_Shipment", "ShipmentLog").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for ShipmentLog in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ShipmentLog> ShipmentLogReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ShipmentLog>("Net4Sage.DataAccessModel.ShipmentLog_Shipment", "ShipmentLog");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<ShipmentLog>("Net4Sage.DataAccessModel.ShipmentLog_Shipment", "ShipmentLog", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ShipmentLog>("Net4Sage.DataAccessModel.ShipmentLog_Shipment", "ShipmentLog").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.ShipmentLog in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ShipKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="ShipmentLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ShipmentLog : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ShipmentLog object.
        /// </summary>
        /// <param name="shipKey">Initial value of ShipKey.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="tranNo">Initial value of TranNo.</param>
        /// <param name="tranStatus">Initial value of TranStatus.</param>
        /// <param name="tranType">Initial value of TranType.</param>
        public static ShipmentLog CreateShipmentLog(int shipKey, string companyID, string tranNo, short tranStatus, int tranType)
        {
            ShipmentLog shipmentLog = new ShipmentLog();
            shipmentLog.ShipKey = shipKey;
            shipmentLog.CompanyID = companyID;
            shipmentLog.TranNo = tranNo;
            shipmentLog.TranStatus = tranStatus;
            shipmentLog.TranType = tranType;
            return shipmentLog;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ShipKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ShipKey
        {
            get
            {
                int value = _ShipKey;
                OnGetShipKey(ref value);
                return value;
            }
            set
            {
                if (_ShipKey != value)
                {
                  OnShipKeyChanging(ref value);
                  ReportPropertyChanging("ShipKey");
                  _ShipKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipKey");
                  OnShipKeyChanged();
              }
            }
        }
        private int _ShipKey;
        partial void OnGetShipKey(ref int value);
        partial void OnShipKeyChanging(ref int value);
        partial void OnShipKeyChanged();
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for TranDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? TranDate
        {
            get
            {
                global::System.DateTime? value = _TranDate;
                OnGetTranDate(ref value);
                return value;
            }
            set
            {
                if (_TranDate != value)
                {
                  OnTranDateChanging(ref value);
                  ReportPropertyChanging("TranDate");
                  _TranDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranDate");
                  OnTranDateChanged();
              }
            }
        }
        private global::System.DateTime? _TranDate;
        partial void OnGetTranDate(ref global::System.DateTime? value);
        partial void OnTranDateChanging(ref global::System.DateTime? value);
        partial void OnTranDateChanged();
    
        /// <summary>
        /// There are no comments for TranNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string TranNo
        {
            get
            {
                string value = _TranNo;
                OnGetTranNo(ref value);
                return value;
            }
            set
            {
                if (_TranNo != value)
                {
                  OnTranNoChanging(ref value);
                  ReportPropertyChanging("TranNo");
                  _TranNo = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TranNo");
                  OnTranNoChanged();
              }
            }
        }
        private string _TranNo;
        partial void OnGetTranNo(ref string value);
        partial void OnTranNoChanging(ref string value);
        partial void OnTranNoChanged();
    
        /// <summary>
        /// There are no comments for TranStatus in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short TranStatus
        {
            get
            {
                short value = _TranStatus;
                OnGetTranStatus(ref value);
                return value;
            }
            set
            {
                if (_TranStatus != value)
                {
                  OnTranStatusChanging(ref value);
                  ReportPropertyChanging("TranStatus");
                  _TranStatus = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranStatus");
                  OnTranStatusChanged();
              }
            }
        }
        private short _TranStatus = 1;
        partial void OnGetTranStatus(ref short value);
        partial void OnTranStatusChanging(ref short value);
        partial void OnTranStatusChanged();
    
        /// <summary>
        /// There are no comments for TranType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int TranType
        {
            get
            {
                int value = _TranType;
                OnGetTranType(ref value);
                return value;
            }
            set
            {
                if (_TranType != value)
                {
                  OnTranTypeChanging(ref value);
                  ReportPropertyChanging("TranType");
                  _TranType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranType");
                  OnTranTypeChanged();
              }
            }
        }
        private int _TranType;
        partial void OnGetTranType(ref int value);
        partial void OnTranTypeChanging(ref int value);
        partial void OnTranTypeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ShipLines in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "ShipmentLog_ShipLine", "ShipLines")]
        public virtual EntityCollection<ShipLine> ShipLines
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ShipLine>("Net4Sage.DataAccessModel.ShipmentLog_ShipLine", "ShipLines");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ShipLine>("Net4Sage.DataAccessModel.ShipmentLog_ShipLine", "ShipLines", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Shipment in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "ShipmentLog_Shipment", "Shipment")]
        public virtual Shipment Shipment
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Shipment>("Net4Sage.DataAccessModel.ShipmentLog_Shipment", "Shipment").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Shipment>("Net4Sage.DataAccessModel.ShipmentLog_Shipment", "Shipment").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Shipment in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Shipment> ShipmentReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Shipment>("Net4Sage.DataAccessModel.ShipmentLog_Shipment", "Shipment");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Shipment>("Net4Sage.DataAccessModel.ShipmentLog_Shipment", "Shipment", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Shipment>("Net4Sage.DataAccessModel.ShipmentLog_Shipment", "Shipment").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for PendShipment in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "ShipmentLog_PendShipment", "PendShipment")]
        public virtual PendShipment PendShipment
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<PendShipment>("Net4Sage.DataAccessModel.ShipmentLog_PendShipment", "PendShipment").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<PendShipment>("Net4Sage.DataAccessModel.ShipmentLog_PendShipment", "PendShipment").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for PendShipment in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PendShipment> PendShipmentReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<PendShipment>("Net4Sage.DataAccessModel.ShipmentLog_PendShipment", "PendShipment");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<PendShipment>("Net4Sage.DataAccessModel.ShipmentLog_PendShipment", "PendShipment", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<PendShipment>("Net4Sage.DataAccessModel.ShipmentLog_PendShipment", "PendShipment").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.InvoiceLog in the schema.
    /// </summary>
    /// <KeyProperties>
    /// InvcKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="InvoiceLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [Net4Sage.Controls.Lookup.LookupAutoShowColumns(false)]
    [Net4Sage.Controls.Lookup.LookupFormTitle(@"Buscar Factura")]
    public partial class InvoiceLog : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvoiceLog object.
        /// </summary>
        /// <param name="invcKey">Initial value of InvcKey.</param>
        /// <param name="tranNo">Initial value of TranNo.</param>
        /// <param name="tranID">Initial value of TranID.</param>
        /// <param name="tranAmtHC">Initial value of TranAmtHC.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="tranStatus">Initial value of TranStatus.</param>
        /// <param name="tranType">Initial value of TranType.</param>
        public static InvoiceLog CreateInvoiceLog(int invcKey, string tranNo, string tranID, decimal tranAmtHC, string companyID, short tranStatus, int tranType)
        {
            InvoiceLog invoiceLog = new InvoiceLog();
            invoiceLog.InvcKey = invcKey;
            invoiceLog.TranNo = tranNo;
            invoiceLog.TranID = tranID;
            invoiceLog.TranAmtHC = tranAmtHC;
            invoiceLog.CompanyID = companyID;
            invoiceLog.TranStatus = tranStatus;
            invoiceLog.TranType = tranType;
            return invoiceLog;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for InvcKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupKeyReturn]
        public virtual int InvcKey
        {
            get
            {
                int value = _InvcKey;
                OnGetInvcKey(ref value);
                return value;
            }
            set
            {
                if (_InvcKey != value)
                {
                  OnInvcKeyChanging(ref value);
                  ReportPropertyChanging("InvcKey");
                  _InvcKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvcKey");
                  OnInvcKeyChanged();
              }
            }
        }
        private int _InvcKey;
        partial void OnGetInvcKey(ref int value);
        partial void OnInvcKeyChanging(ref int value);
        partial void OnInvcKeyChanged();
    
        /// <summary>
        /// There are no comments for TranNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"No Transacción")]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"No Transacción")]
        [Net4Sage.Controls.Lookup.LookupTextReturn]
        public virtual string TranNo
        {
            get
            {
                string value = _TranNo;
                OnGetTranNo(ref value);
                return value;
            }
            set
            {
                if (_TranNo != value)
                {
                  OnTranNoChanging(ref value);
                  ReportPropertyChanging("TranNo");
                  _TranNo = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TranNo");
                  OnTranNoChanged();
              }
            }
        }
        private string _TranNo;
        partial void OnGetTranNo(ref string value);
        partial void OnTranNoChanging(ref string value);
        partial void OnTranNoChanged();
    
        /// <summary>
        /// There are no comments for TranID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Transacción")]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"Transacción")]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        public virtual string TranID
        {
            get
            {
                string value = _TranID;
                OnGetTranID(ref value);
                return value;
            }
            set
            {
                if (_TranID != value)
                {
                  OnTranIDChanging(ref value);
                  ReportPropertyChanging("TranID");
                  _TranID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TranID");
                  OnTranIDChanged();
              }
            }
        }
        private string _TranID;
        partial void OnGetTranID(ref string value);
        partial void OnTranIDChanging(ref string value);
        partial void OnTranIDChanged();
    
        /// <summary>
        /// There are no comments for TranDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"Fecha")]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Fecha")]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        public virtual global::System.DateTime? TranDate
        {
            get
            {
                global::System.DateTime? value = _TranDate;
                OnGetTranDate(ref value);
                return value;
            }
            set
            {
                if (_TranDate != value)
                {
                  OnTranDateChanging(ref value);
                  ReportPropertyChanging("TranDate");
                  _TranDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranDate");
                  OnTranDateChanged();
              }
            }
        }
        private global::System.DateTime? _TranDate;
        partial void OnGetTranDate(ref global::System.DateTime? value);
        partial void OnTranDateChanging(ref global::System.DateTime? value);
        partial void OnTranDateChanged();
    
        /// <summary>
        /// There are no comments for TranAmtHC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Importe ML")]
        public virtual decimal TranAmtHC
        {
            get
            {
                decimal value = _TranAmtHC;
                OnGetTranAmtHC(ref value);
                return value;
            }
            set
            {
                if (_TranAmtHC != value)
                {
                  OnTranAmtHCChanging(ref value);
                  ReportPropertyChanging("TranAmtHC");
                  _TranAmtHC = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranAmtHC");
                  OnTranAmtHCChanged();
              }
            }
        }
        private decimal _TranAmtHC = 0m;
        partial void OnGetTranAmtHC(ref decimal value);
        partial void OnTranAmtHCChanging(ref decimal value);
        partial void OnTranAmtHCChanged();
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for TranStatus in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short TranStatus
        {
            get
            {
                short value = _TranStatus;
                OnGetTranStatus(ref value);
                return value;
            }
            set
            {
                if (_TranStatus != value)
                {
                  OnTranStatusChanging(ref value);
                  ReportPropertyChanging("TranStatus");
                  _TranStatus = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranStatus");
                  OnTranStatusChanged();
              }
            }
        }
        private short _TranStatus = 1;
        partial void OnGetTranStatus(ref short value);
        partial void OnTranStatusChanging(ref short value);
        partial void OnTranStatusChanged();
    
        /// <summary>
        /// There are no comments for TranType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int TranType
        {
            get
            {
                int value = _TranType;
                OnGetTranType(ref value);
                return value;
            }
            set
            {
                if (_TranType != value)
                {
                  OnTranTypeChanging(ref value);
                  ReportPropertyChanging("TranType");
                  _TranType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranType");
                  OnTranTypeChanged();
              }
            }
        }
        private int _TranType;
        partial void OnGetTranType(ref int value);
        partial void OnTranTypeChanging(ref int value);
        partial void OnTranTypeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Invoice in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "InvoiceLog_Invoice", "Invoice")]
        public virtual Invoice Invoice
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Invoice>("Net4Sage.DataAccessModel.InvoiceLog_Invoice", "Invoice").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Invoice>("Net4Sage.DataAccessModel.InvoiceLog_Invoice", "Invoice").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Invoice in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Invoice> InvoiceReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Invoice>("Net4Sage.DataAccessModel.InvoiceLog_Invoice", "Invoice");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Invoice>("Net4Sage.DataAccessModel.InvoiceLog_Invoice", "Invoice", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Invoice>("Net4Sage.DataAccessModel.InvoiceLog_Invoice", "Invoice").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for PendInvoice in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "InvoiceLog_PendInvoice", "PendInvoice")]
        public virtual PendInvoice PendInvoice
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<PendInvoice>("Net4Sage.DataAccessModel.InvoiceLog_PendInvoice", "PendInvoice").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<PendInvoice>("Net4Sage.DataAccessModel.InvoiceLog_PendInvoice", "PendInvoice").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for PendInvoice in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PendInvoice> PendInvoiceReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<PendInvoice>("Net4Sage.DataAccessModel.InvoiceLog_PendInvoice", "PendInvoice");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<PendInvoice>("Net4Sage.DataAccessModel.InvoiceLog_PendInvoice", "PendInvoice", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<PendInvoice>("Net4Sage.DataAccessModel.InvoiceLog_PendInvoice", "PendInvoice").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvoiceDetls in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "InvoiceLog_InvoiceDetl", "InvoiceDetls")]
        public virtual EntityCollection<InvoiceDetl> InvoiceDetls
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvoiceDetl>("Net4Sage.DataAccessModel.InvoiceLog_InvoiceDetl", "InvoiceDetls");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvoiceDetl>("Net4Sage.DataAccessModel.InvoiceLog_InvoiceDetl", "InvoiceDetls", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.PendInvoice in the schema.
    /// </summary>
    /// <KeyProperties>
    /// InvcKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="PendInvoice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PendInvoice : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new PendInvoice object.
        /// </summary>
        /// <param name="invcKey">Initial value of InvcKey.</param>
        /// <param name="authOvrdAmt">Initial value of AuthOvrdAmt.</param>
        /// <param name="batchKey">Initial value of BatchKey.</param>
        /// <param name="billToAddrKey">Initial value of BillToAddrKey.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="costOfSales">Initial value of CostOfSales.</param>
        /// <param name="createType">Initial value of CreateType.</param>
        /// <param name="crHold">Initial value of CrHold.</param>
        /// <param name="currExchRate">Initial value of CurrExchRate.</param>
        /// <param name="currID">Initial value of CurrID.</param>
        /// <param name="custClassKey">Initial value of CustClassKey.</param>
        /// <param name="custKey">Initial value of CustKey.</param>
        /// <param name="discAmt">Initial value of DiscAmt.</param>
        /// <param name="handlAmt">Initial value of HandlAmt.</param>
        /// <param name="printed">Initial value of Printed.</param>
        /// <param name="retntAmt">Initial value of RetntAmt.</param>
        /// <param name="salesAmt">Initial value of SalesAmt.</param>
        /// <param name="seqNo">Initial value of SeqNo.</param>
        /// <param name="shipAmt">Initial value of ShipAmt.</param>
        /// <param name="shipToAddrKey">Initial value of ShipToAddrKey.</param>
        /// <param name="sourceModule">Initial value of SourceModule.</param>
        /// <param name="status">Initial value of Status.</param>
        /// <param name="sTaxAmt">Initial value of STaxAmt.</param>
        /// <param name="sTaxCalc">Initial value of STaxCalc.</param>
        /// <param name="tradeDiscAmt">Initial value of TradeDiscAmt.</param>
        /// <param name="tranAmt">Initial value of TranAmt.</param>
        /// <param name="tranAmtHC">Initial value of TranAmtHC.</param>
        /// <param name="tranDate">Initial value of TranDate.</param>
        /// <param name="tranID">Initial value of TranID.</param>
        /// <param name="tranNo">Initial value of TranNo.</param>
        /// <param name="transmitted">Initial value of Transmitted.</param>
        /// <param name="tranType">Initial value of TranType.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        public static PendInvoice CreatePendInvoice(int invcKey, decimal authOvrdAmt, int batchKey, int billToAddrKey, string companyID, decimal costOfSales, short createType, short crHold, double currExchRate, string currID, int custClassKey, int custKey, decimal discAmt, decimal handlAmt, short printed, decimal retntAmt, decimal salesAmt, int seqNo, decimal shipAmt, int shipToAddrKey, short sourceModule, short status, decimal sTaxAmt, short sTaxCalc, decimal tradeDiscAmt, decimal tranAmt, decimal tranAmtHC, global::System.DateTime tranDate, string tranID, string tranNo, short transmitted, int tranType, int updateCounter)
        {
            PendInvoice pendInvoice = new PendInvoice();
            pendInvoice.InvcKey = invcKey;
            pendInvoice.AuthOvrdAmt = authOvrdAmt;
            pendInvoice.BatchKey = batchKey;
            pendInvoice.BillToAddrKey = billToAddrKey;
            pendInvoice.CompanyID = companyID;
            pendInvoice.CostOfSales = costOfSales;
            pendInvoice.CreateType = createType;
            pendInvoice.CrHold = crHold;
            pendInvoice.CurrExchRate = currExchRate;
            pendInvoice.CurrID = currID;
            pendInvoice.CustClassKey = custClassKey;
            pendInvoice.CustKey = custKey;
            pendInvoice.DiscAmt = discAmt;
            pendInvoice.HandlAmt = handlAmt;
            pendInvoice.Printed = printed;
            pendInvoice.RetntAmt = retntAmt;
            pendInvoice.SalesAmt = salesAmt;
            pendInvoice.SeqNo = seqNo;
            pendInvoice.ShipAmt = shipAmt;
            pendInvoice.ShipToAddrKey = shipToAddrKey;
            pendInvoice.SourceModule = sourceModule;
            pendInvoice.Status = status;
            pendInvoice.STaxAmt = sTaxAmt;
            pendInvoice.STaxCalc = sTaxCalc;
            pendInvoice.TradeDiscAmt = tradeDiscAmt;
            pendInvoice.TranAmt = tranAmt;
            pendInvoice.TranAmtHC = tranAmtHC;
            pendInvoice.TranDate = tranDate;
            pendInvoice.TranID = tranID;
            pendInvoice.TranNo = tranNo;
            pendInvoice.Transmitted = transmitted;
            pendInvoice.TranType = tranType;
            pendInvoice.UpdateCounter = updateCounter;
            return pendInvoice;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for InvcKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvcKey
        {
            get
            {
                int value = _InvcKey;
                OnGetInvcKey(ref value);
                return value;
            }
            set
            {
                if (_InvcKey != value)
                {
                  OnInvcKeyChanging(ref value);
                  ReportPropertyChanging("InvcKey");
                  _InvcKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvcKey");
                  OnInvcKeyChanged();
              }
            }
        }
        private int _InvcKey;
        partial void OnGetInvcKey(ref int value);
        partial void OnInvcKeyChanging(ref int value);
        partial void OnInvcKeyChanged();
    
        /// <summary>
        /// There are no comments for ApplyToInvcKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ApplyToInvcKey
        {
            get
            {
                int? value = _ApplyToInvcKey;
                OnGetApplyToInvcKey(ref value);
                return value;
            }
            set
            {
                if (_ApplyToInvcKey != value)
                {
                  OnApplyToInvcKeyChanging(ref value);
                  ReportPropertyChanging("ApplyToInvcKey");
                  _ApplyToInvcKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ApplyToInvcKey");
                  OnApplyToInvcKeyChanged();
              }
            }
        }
        private int? _ApplyToInvcKey;
        partial void OnGetApplyToInvcKey(ref int? value);
        partial void OnApplyToInvcKeyChanging(ref int? value);
        partial void OnApplyToInvcKeyChanged();
    
        /// <summary>
        /// There are no comments for AuthOvrdAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal AuthOvrdAmt
        {
            get
            {
                decimal value = _AuthOvrdAmt;
                OnGetAuthOvrdAmt(ref value);
                return value;
            }
            set
            {
                if (_AuthOvrdAmt != value)
                {
                  OnAuthOvrdAmtChanging(ref value);
                  ReportPropertyChanging("AuthOvrdAmt");
                  _AuthOvrdAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AuthOvrdAmt");
                  OnAuthOvrdAmtChanged();
              }
            }
        }
        private decimal _AuthOvrdAmt = 0m;
        partial void OnGetAuthOvrdAmt(ref decimal value);
        partial void OnAuthOvrdAmtChanging(ref decimal value);
        partial void OnAuthOvrdAmtChanged();
    
        /// <summary>
        /// There are no comments for BatchKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int BatchKey
        {
            get
            {
                int value = _BatchKey;
                OnGetBatchKey(ref value);
                return value;
            }
            set
            {
                if (_BatchKey != value)
                {
                  OnBatchKeyChanging(ref value);
                  ReportPropertyChanging("BatchKey");
                  _BatchKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BatchKey");
                  OnBatchKeyChanged();
              }
            }
        }
        private int _BatchKey;
        partial void OnGetBatchKey(ref int value);
        partial void OnBatchKeyChanging(ref int value);
        partial void OnBatchKeyChanged();
    
        /// <summary>
        /// There are no comments for BillToAddrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int BillToAddrKey
        {
            get
            {
                int value = _BillToAddrKey;
                OnGetBillToAddrKey(ref value);
                return value;
            }
            set
            {
                if (_BillToAddrKey != value)
                {
                  OnBillToAddrKeyChanging(ref value);
                  ReportPropertyChanging("BillToAddrKey");
                  _BillToAddrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BillToAddrKey");
                  OnBillToAddrKeyChanged();
              }
            }
        }
        private int _BillToAddrKey;
        partial void OnGetBillToAddrKey(ref int value);
        partial void OnBillToAddrKeyChanging(ref int value);
        partial void OnBillToAddrKeyChanged();
    
        /// <summary>
        /// There are no comments for BillToCustAddrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? BillToCustAddrKey
        {
            get
            {
                int? value = _BillToCustAddrKey;
                OnGetBillToCustAddrKey(ref value);
                return value;
            }
            set
            {
                if (_BillToCustAddrKey != value)
                {
                  OnBillToCustAddrKeyChanging(ref value);
                  ReportPropertyChanging("BillToCustAddrKey");
                  _BillToCustAddrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BillToCustAddrKey");
                  OnBillToCustAddrKeyChanged();
              }
            }
        }
        private int? _BillToCustAddrKey;
        partial void OnGetBillToCustAddrKey(ref int? value);
        partial void OnBillToCustAddrKeyChanging(ref int? value);
        partial void OnBillToCustAddrKeyChanged();
    
        /// <summary>
        /// There are no comments for CommPlanKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CommPlanKey
        {
            get
            {
                int? value = _CommPlanKey;
                OnGetCommPlanKey(ref value);
                return value;
            }
            set
            {
                if (_CommPlanKey != value)
                {
                  OnCommPlanKeyChanging(ref value);
                  ReportPropertyChanging("CommPlanKey");
                  _CommPlanKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CommPlanKey");
                  OnCommPlanKeyChanged();
              }
            }
        }
        private int? _CommPlanKey;
        partial void OnGetCommPlanKey(ref int? value);
        partial void OnCommPlanKeyChanging(ref int? value);
        partial void OnCommPlanKeyChanged();
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for ConfirmToCntctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ConfirmToCntctKey
        {
            get
            {
                int? value = _ConfirmToCntctKey;
                OnGetConfirmToCntctKey(ref value);
                return value;
            }
            set
            {
                if (_ConfirmToCntctKey != value)
                {
                  OnConfirmToCntctKeyChanging(ref value);
                  ReportPropertyChanging("ConfirmToCntctKey");
                  _ConfirmToCntctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ConfirmToCntctKey");
                  OnConfirmToCntctKeyChanged();
              }
            }
        }
        private int? _ConfirmToCntctKey;
        partial void OnGetConfirmToCntctKey(ref int? value);
        partial void OnConfirmToCntctKeyChanging(ref int? value);
        partial void OnConfirmToCntctKeyChanged();
    
        /// <summary>
        /// There are no comments for CostOfSales in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal CostOfSales
        {
            get
            {
                decimal value = _CostOfSales;
                OnGetCostOfSales(ref value);
                return value;
            }
            set
            {
                if (_CostOfSales != value)
                {
                  OnCostOfSalesChanging(ref value);
                  ReportPropertyChanging("CostOfSales");
                  _CostOfSales = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CostOfSales");
                  OnCostOfSalesChanged();
              }
            }
        }
        private decimal _CostOfSales = 0m;
        partial void OnGetCostOfSales(ref decimal value);
        partial void OnCostOfSalesChanging(ref decimal value);
        partial void OnCostOfSalesChanged();
    
        /// <summary>
        /// There are no comments for CreateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CreateDate
        {
            get
            {
                global::System.DateTime? value = _CreateDate;
                OnGetCreateDate(ref value);
                return value;
            }
            set
            {
                if (_CreateDate != value)
                {
                  OnCreateDateChanging(ref value);
                  ReportPropertyChanging("CreateDate");
                  _CreateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateDate");
                  OnCreateDateChanged();
              }
            }
        }
        private global::System.DateTime? _CreateDate;
        partial void OnGetCreateDate(ref global::System.DateTime? value);
        partial void OnCreateDateChanging(ref global::System.DateTime? value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// There are no comments for CreateType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CreateType
        {
            get
            {
                short value = _CreateType;
                OnGetCreateType(ref value);
                return value;
            }
            set
            {
                if (_CreateType != value)
                {
                  OnCreateTypeChanging(ref value);
                  ReportPropertyChanging("CreateType");
                  _CreateType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateType");
                  OnCreateTypeChanged();
              }
            }
        }
        private short _CreateType = 0;
        partial void OnGetCreateType(ref short value);
        partial void OnCreateTypeChanging(ref short value);
        partial void OnCreateTypeChanged();
    
        /// <summary>
        /// There are no comments for CreateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CreateUserID
        {
            get
            {
                string value = _CreateUserID;
                OnGetCreateUserID(ref value);
                return value;
            }
            set
            {
                if (_CreateUserID != value)
                {
                  OnCreateUserIDChanging(ref value);
                  ReportPropertyChanging("CreateUserID");
                  _CreateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CreateUserID");
                  OnCreateUserIDChanged();
              }
            }
        }
        private string _CreateUserID;
        partial void OnGetCreateUserID(ref string value);
        partial void OnCreateUserIDChanging(ref string value);
        partial void OnCreateUserIDChanged();
    
        /// <summary>
        /// There are no comments for CrHold in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CrHold
        {
            get
            {
                short value = _CrHold;
                OnGetCrHold(ref value);
                return value;
            }
            set
            {
                if (_CrHold != value)
                {
                  OnCrHoldChanging(ref value);
                  ReportPropertyChanging("CrHold");
                  _CrHold = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CrHold");
                  OnCrHoldChanged();
              }
            }
        }
        private short _CrHold = 0;
        partial void OnGetCrHold(ref short value);
        partial void OnCrHoldChanging(ref short value);
        partial void OnCrHoldChanged();
    
        /// <summary>
        /// There are no comments for CurrExchRate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual double CurrExchRate
        {
            get
            {
                double value = _CurrExchRate;
                OnGetCurrExchRate(ref value);
                return value;
            }
            set
            {
                if (_CurrExchRate != value)
                {
                  OnCurrExchRateChanging(ref value);
                  ReportPropertyChanging("CurrExchRate");
                  _CurrExchRate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CurrExchRate");
                  OnCurrExchRateChanged();
              }
            }
        }
        private double _CurrExchRate = 1;
        partial void OnGetCurrExchRate(ref double value);
        partial void OnCurrExchRateChanging(ref double value);
        partial void OnCurrExchRateChanged();
    
        /// <summary>
        /// There are no comments for CurrExchSchdKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CurrExchSchdKey
        {
            get
            {
                int? value = _CurrExchSchdKey;
                OnGetCurrExchSchdKey(ref value);
                return value;
            }
            set
            {
                if (_CurrExchSchdKey != value)
                {
                  OnCurrExchSchdKeyChanging(ref value);
                  ReportPropertyChanging("CurrExchSchdKey");
                  _CurrExchSchdKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CurrExchSchdKey");
                  OnCurrExchSchdKeyChanged();
              }
            }
        }
        private int? _CurrExchSchdKey;
        partial void OnGetCurrExchSchdKey(ref int? value);
        partial void OnCurrExchSchdKeyChanging(ref int? value);
        partial void OnCurrExchSchdKeyChanged();
    
        /// <summary>
        /// There are no comments for CurrID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CurrID
        {
            get
            {
                string value = _CurrID;
                OnGetCurrID(ref value);
                return value;
            }
            set
            {
                if (_CurrID != value)
                {
                  OnCurrIDChanging(ref value);
                  ReportPropertyChanging("CurrID");
                  _CurrID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CurrID");
                  OnCurrIDChanged();
              }
            }
        }
        private string _CurrID;
        partial void OnGetCurrID(ref string value);
        partial void OnCurrIDChanging(ref string value);
        partial void OnCurrIDChanged();
    
        /// <summary>
        /// There are no comments for CustClassKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustClassKey
        {
            get
            {
                int value = _CustClassKey;
                OnGetCustClassKey(ref value);
                return value;
            }
            set
            {
                if (_CustClassKey != value)
                {
                  OnCustClassKeyChanging(ref value);
                  ReportPropertyChanging("CustClassKey");
                  _CustClassKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustClassKey");
                  OnCustClassKeyChanged();
              }
            }
        }
        private int _CustClassKey;
        partial void OnGetCustClassKey(ref int value);
        partial void OnCustClassKeyChanging(ref int value);
        partial void OnCustClassKeyChanged();
    
        /// <summary>
        /// There are no comments for CustKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustKey
        {
            get
            {
                int value = _CustKey;
                OnGetCustKey(ref value);
                return value;
            }
            set
            {
                if (_CustKey != value)
                {
                  OnCustKeyChanging(ref value);
                  ReportPropertyChanging("CustKey");
                  _CustKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustKey");
                  OnCustKeyChanged();
              }
            }
        }
        private int _CustKey;
        partial void OnGetCustKey(ref int value);
        partial void OnCustKeyChanging(ref int value);
        partial void OnCustKeyChanged();
    
        /// <summary>
        /// There are no comments for CustPONo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CustPONo
        {
            get
            {
                string value = _CustPONo;
                OnGetCustPONo(ref value);
                return value;
            }
            set
            {
                if (_CustPONo != value)
                {
                  OnCustPONoChanging(ref value);
                  ReportPropertyChanging("CustPONo");
                  _CustPONo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CustPONo");
                  OnCustPONoChanged();
              }
            }
        }
        private string _CustPONo;
        partial void OnGetCustPONo(ref string value);
        partial void OnCustPONoChanging(ref string value);
        partial void OnCustPONoChanged();
    
        /// <summary>
        /// There are no comments for DiscAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal DiscAmt
        {
            get
            {
                decimal value = _DiscAmt;
                OnGetDiscAmt(ref value);
                return value;
            }
            set
            {
                if (_DiscAmt != value)
                {
                  OnDiscAmtChanging(ref value);
                  ReportPropertyChanging("DiscAmt");
                  _DiscAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DiscAmt");
                  OnDiscAmtChanged();
              }
            }
        }
        private decimal _DiscAmt = 0m;
        partial void OnGetDiscAmt(ref decimal value);
        partial void OnDiscAmtChanging(ref decimal value);
        partial void OnDiscAmtChanged();
    
        /// <summary>
        /// There are no comments for DiscDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? DiscDate
        {
            get
            {
                global::System.DateTime? value = _DiscDate;
                OnGetDiscDate(ref value);
                return value;
            }
            set
            {
                if (_DiscDate != value)
                {
                  OnDiscDateChanging(ref value);
                  ReportPropertyChanging("DiscDate");
                  _DiscDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DiscDate");
                  OnDiscDateChanged();
              }
            }
        }
        private global::System.DateTime? _DiscDate;
        partial void OnGetDiscDate(ref global::System.DateTime? value);
        partial void OnDiscDateChanging(ref global::System.DateTime? value);
        partial void OnDiscDateChanged();
    
        /// <summary>
        /// There are no comments for DownPmtCustPmtKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? DownPmtCustPmtKey
        {
            get
            {
                int? value = _DownPmtCustPmtKey;
                OnGetDownPmtCustPmtKey(ref value);
                return value;
            }
            set
            {
                if (_DownPmtCustPmtKey != value)
                {
                  OnDownPmtCustPmtKeyChanging(ref value);
                  ReportPropertyChanging("DownPmtCustPmtKey");
                  _DownPmtCustPmtKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DownPmtCustPmtKey");
                  OnDownPmtCustPmtKeyChanged();
              }
            }
        }
        private int? _DownPmtCustPmtKey;
        partial void OnGetDownPmtCustPmtKey(ref int? value);
        partial void OnDownPmtCustPmtKeyChanging(ref int? value);
        partial void OnDownPmtCustPmtKeyChanged();
    
        /// <summary>
        /// There are no comments for DueDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? DueDate
        {
            get
            {
                global::System.DateTime? value = _DueDate;
                OnGetDueDate(ref value);
                return value;
            }
            set
            {
                if (_DueDate != value)
                {
                  OnDueDateChanging(ref value);
                  ReportPropertyChanging("DueDate");
                  _DueDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DueDate");
                  OnDueDateChanged();
              }
            }
        }
        private global::System.DateTime? _DueDate;
        partial void OnGetDueDate(ref global::System.DateTime? value);
        partial void OnDueDateChanging(ref global::System.DateTime? value);
        partial void OnDueDateChanged();
    
        /// <summary>
        /// There are no comments for FOBKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? FOBKey
        {
            get
            {
                int? value = _FOBKey;
                OnGetFOBKey(ref value);
                return value;
            }
            set
            {
                if (_FOBKey != value)
                {
                  OnFOBKeyChanging(ref value);
                  ReportPropertyChanging("FOBKey");
                  _FOBKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FOBKey");
                  OnFOBKeyChanged();
              }
            }
        }
        private int? _FOBKey;
        partial void OnGetFOBKey(ref int? value);
        partial void OnFOBKeyChanging(ref int? value);
        partial void OnFOBKeyChanged();
    
        /// <summary>
        /// There are no comments for HandlAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal HandlAmt
        {
            get
            {
                decimal value = _HandlAmt;
                OnGetHandlAmt(ref value);
                return value;
            }
            set
            {
                if (_HandlAmt != value)
                {
                  OnHandlAmtChanging(ref value);
                  ReportPropertyChanging("HandlAmt");
                  _HandlAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("HandlAmt");
                  OnHandlAmtChanged();
              }
            }
        }
        private decimal _HandlAmt = 0m;
        partial void OnGetHandlAmt(ref decimal value);
        partial void OnHandlAmtChanging(ref decimal value);
        partial void OnHandlAmtChanged();
    
        /// <summary>
        /// There are no comments for ImportLogKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ImportLogKey
        {
            get
            {
                int? value = _ImportLogKey;
                OnGetImportLogKey(ref value);
                return value;
            }
            set
            {
                if (_ImportLogKey != value)
                {
                  OnImportLogKeyChanging(ref value);
                  ReportPropertyChanging("ImportLogKey");
                  _ImportLogKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ImportLogKey");
                  OnImportLogKeyChanged();
              }
            }
        }
        private int? _ImportLogKey;
        partial void OnGetImportLogKey(ref int? value);
        partial void OnImportLogKeyChanging(ref int? value);
        partial void OnImportLogKeyChanged();
    
        /// <summary>
        /// There are no comments for InvcFormKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? InvcFormKey
        {
            get
            {
                int? value = _InvcFormKey;
                OnGetInvcFormKey(ref value);
                return value;
            }
            set
            {
                if (_InvcFormKey != value)
                {
                  OnInvcFormKeyChanging(ref value);
                  ReportPropertyChanging("InvcFormKey");
                  _InvcFormKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvcFormKey");
                  OnInvcFormKeyChanged();
              }
            }
        }
        private int? _InvcFormKey;
        partial void OnGetInvcFormKey(ref int? value);
        partial void OnInvcFormKeyChanging(ref int? value);
        partial void OnInvcFormKeyChanged();
    
        /// <summary>
        /// There are no comments for PmtTermsKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? PmtTermsKey
        {
            get
            {
                int? value = _PmtTermsKey;
                OnGetPmtTermsKey(ref value);
                return value;
            }
            set
            {
                if (_PmtTermsKey != value)
                {
                  OnPmtTermsKeyChanging(ref value);
                  ReportPropertyChanging("PmtTermsKey");
                  _PmtTermsKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PmtTermsKey");
                  OnPmtTermsKeyChanged();
              }
            }
        }
        private int? _PmtTermsKey;
        partial void OnGetPmtTermsKey(ref int? value);
        partial void OnPmtTermsKeyChanging(ref int? value);
        partial void OnPmtTermsKeyChanged();
    
        /// <summary>
        /// There are no comments for PrimarySperKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? PrimarySperKey
        {
            get
            {
                int? value = _PrimarySperKey;
                OnGetPrimarySperKey(ref value);
                return value;
            }
            set
            {
                if (_PrimarySperKey != value)
                {
                  OnPrimarySperKeyChanging(ref value);
                  ReportPropertyChanging("PrimarySperKey");
                  _PrimarySperKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PrimarySperKey");
                  OnPrimarySperKeyChanged();
              }
            }
        }
        private int? _PrimarySperKey;
        partial void OnGetPrimarySperKey(ref int? value);
        partial void OnPrimarySperKeyChanging(ref int? value);
        partial void OnPrimarySperKeyChanged();
    
        /// <summary>
        /// There are no comments for Printed in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Printed
        {
            get
            {
                short value = _Printed;
                OnGetPrinted(ref value);
                return value;
            }
            set
            {
                if (_Printed != value)
                {
                  OnPrintedChanging(ref value);
                  ReportPropertyChanging("Printed");
                  _Printed = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Printed");
                  OnPrintedChanged();
              }
            }
        }
        private short _Printed = 0;
        partial void OnGetPrinted(ref short value);
        partial void OnPrintedChanging(ref short value);
        partial void OnPrintedChanged();
    
        /// <summary>
        /// There are no comments for ReasonCodeKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ReasonCodeKey
        {
            get
            {
                int? value = _ReasonCodeKey;
                OnGetReasonCodeKey(ref value);
                return value;
            }
            set
            {
                if (_ReasonCodeKey != value)
                {
                  OnReasonCodeKeyChanging(ref value);
                  ReportPropertyChanging("ReasonCodeKey");
                  _ReasonCodeKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ReasonCodeKey");
                  OnReasonCodeKeyChanged();
              }
            }
        }
        private int? _ReasonCodeKey;
        partial void OnGetReasonCodeKey(ref int? value);
        partial void OnReasonCodeKeyChanging(ref int? value);
        partial void OnReasonCodeKeyChanged();
    
        /// <summary>
        /// There are no comments for RecurInvoiceKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? RecurInvoiceKey
        {
            get
            {
                int? value = _RecurInvoiceKey;
                OnGetRecurInvoiceKey(ref value);
                return value;
            }
            set
            {
                if (_RecurInvoiceKey != value)
                {
                  OnRecurInvoiceKeyChanging(ref value);
                  ReportPropertyChanging("RecurInvoiceKey");
                  _RecurInvoiceKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RecurInvoiceKey");
                  OnRecurInvoiceKeyChanged();
              }
            }
        }
        private int? _RecurInvoiceKey;
        partial void OnGetRecurInvoiceKey(ref int? value);
        partial void OnRecurInvoiceKeyChanging(ref int? value);
        partial void OnRecurInvoiceKeyChanged();
    
        /// <summary>
        /// There are no comments for RetntAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal RetntAmt
        {
            get
            {
                decimal value = _RetntAmt;
                OnGetRetntAmt(ref value);
                return value;
            }
            set
            {
                if (_RetntAmt != value)
                {
                  OnRetntAmtChanging(ref value);
                  ReportPropertyChanging("RetntAmt");
                  _RetntAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RetntAmt");
                  OnRetntAmtChanged();
              }
            }
        }
        private decimal _RetntAmt = 0m;
        partial void OnGetRetntAmt(ref decimal value);
        partial void OnRetntAmtChanging(ref decimal value);
        partial void OnRetntAmtChanged();
    
        /// <summary>
        /// There are no comments for RetntPct in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? RetntPct
        {
            get
            {
                decimal? value = _RetntPct;
                OnGetRetntPct(ref value);
                return value;
            }
            set
            {
                if (_RetntPct != value)
                {
                  OnRetntPctChanging(ref value);
                  ReportPropertyChanging("RetntPct");
                  _RetntPct = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RetntPct");
                  OnRetntPctChanged();
              }
            }
        }
        private decimal? _RetntPct = 0m;
        partial void OnGetRetntPct(ref decimal? value);
        partial void OnRetntPctChanging(ref decimal? value);
        partial void OnRetntPctChanged();
    
        /// <summary>
        /// There are no comments for SalesAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal SalesAmt
        {
            get
            {
                decimal value = _SalesAmt;
                OnGetSalesAmt(ref value);
                return value;
            }
            set
            {
                if (_SalesAmt != value)
                {
                  OnSalesAmtChanging(ref value);
                  ReportPropertyChanging("SalesAmt");
                  _SalesAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesAmt");
                  OnSalesAmtChanged();
              }
            }
        }
        private decimal _SalesAmt = 0m;
        partial void OnGetSalesAmt(ref decimal value);
        partial void OnSalesAmtChanging(ref decimal value);
        partial void OnSalesAmtChanged();
    
        /// <summary>
        /// There are no comments for SeqNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SeqNo
        {
            get
            {
                int value = _SeqNo;
                OnGetSeqNo(ref value);
                return value;
            }
            set
            {
                if (_SeqNo != value)
                {
                  OnSeqNoChanging(ref value);
                  ReportPropertyChanging("SeqNo");
                  _SeqNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SeqNo");
                  OnSeqNoChanged();
              }
            }
        }
        private int _SeqNo;
        partial void OnGetSeqNo(ref int value);
        partial void OnSeqNoChanging(ref int value);
        partial void OnSeqNoChanged();
    
        /// <summary>
        /// There are no comments for ShipAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal ShipAmt
        {
            get
            {
                decimal value = _ShipAmt;
                OnGetShipAmt(ref value);
                return value;
            }
            set
            {
                if (_ShipAmt != value)
                {
                  OnShipAmtChanging(ref value);
                  ReportPropertyChanging("ShipAmt");
                  _ShipAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipAmt");
                  OnShipAmtChanged();
              }
            }
        }
        private decimal _ShipAmt = 0m;
        partial void OnGetShipAmt(ref decimal value);
        partial void OnShipAmtChanging(ref decimal value);
        partial void OnShipAmtChanged();
    
        /// <summary>
        /// There are no comments for ShipMethKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ShipMethKey
        {
            get
            {
                int? value = _ShipMethKey;
                OnGetShipMethKey(ref value);
                return value;
            }
            set
            {
                if (_ShipMethKey != value)
                {
                  OnShipMethKeyChanging(ref value);
                  ReportPropertyChanging("ShipMethKey");
                  _ShipMethKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipMethKey");
                  OnShipMethKeyChanged();
              }
            }
        }
        private int? _ShipMethKey;
        partial void OnGetShipMethKey(ref int? value);
        partial void OnShipMethKeyChanging(ref int? value);
        partial void OnShipMethKeyChanged();
    
        /// <summary>
        /// There are no comments for ShipToAddrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ShipToAddrKey
        {
            get
            {
                int value = _ShipToAddrKey;
                OnGetShipToAddrKey(ref value);
                return value;
            }
            set
            {
                if (_ShipToAddrKey != value)
                {
                  OnShipToAddrKeyChanging(ref value);
                  ReportPropertyChanging("ShipToAddrKey");
                  _ShipToAddrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipToAddrKey");
                  OnShipToAddrKeyChanged();
              }
            }
        }
        private int _ShipToAddrKey;
        partial void OnGetShipToAddrKey(ref int value);
        partial void OnShipToAddrKeyChanging(ref int value);
        partial void OnShipToAddrKeyChanged();
    
        /// <summary>
        /// There are no comments for ShipToCustAddrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ShipToCustAddrKey
        {
            get
            {
                int? value = _ShipToCustAddrKey;
                OnGetShipToCustAddrKey(ref value);
                return value;
            }
            set
            {
                if (_ShipToCustAddrKey != value)
                {
                  OnShipToCustAddrKeyChanging(ref value);
                  ReportPropertyChanging("ShipToCustAddrKey");
                  _ShipToCustAddrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipToCustAddrKey");
                  OnShipToCustAddrKeyChanged();
              }
            }
        }
        private int? _ShipToCustAddrKey;
        partial void OnGetShipToCustAddrKey(ref int? value);
        partial void OnShipToCustAddrKeyChanging(ref int? value);
        partial void OnShipToCustAddrKeyChanged();
    
        /// <summary>
        /// There are no comments for ShipZoneKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ShipZoneKey
        {
            get
            {
                int? value = _ShipZoneKey;
                OnGetShipZoneKey(ref value);
                return value;
            }
            set
            {
                if (_ShipZoneKey != value)
                {
                  OnShipZoneKeyChanging(ref value);
                  ReportPropertyChanging("ShipZoneKey");
                  _ShipZoneKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipZoneKey");
                  OnShipZoneKeyChanged();
              }
            }
        }
        private int? _ShipZoneKey;
        partial void OnGetShipZoneKey(ref int? value);
        partial void OnShipZoneKeyChanging(ref int? value);
        partial void OnShipZoneKeyChanged();
    
        /// <summary>
        /// There are no comments for SourceModule in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short SourceModule
        {
            get
            {
                short value = _SourceModule;
                OnGetSourceModule(ref value);
                return value;
            }
            set
            {
                if (_SourceModule != value)
                {
                  OnSourceModuleChanging(ref value);
                  ReportPropertyChanging("SourceModule");
                  _SourceModule = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SourceModule");
                  OnSourceModuleChanged();
              }
            }
        }
        private short _SourceModule = 5;
        partial void OnGetSourceModule(ref short value);
        partial void OnSourceModuleChanging(ref short value);
        partial void OnSourceModuleChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Status
        {
            get
            {
                short value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private short _Status = 1;
        partial void OnGetStatus(ref short value);
        partial void OnStatusChanging(ref short value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// There are no comments for STaxAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal STaxAmt
        {
            get
            {
                decimal value = _STaxAmt;
                OnGetSTaxAmt(ref value);
                return value;
            }
            set
            {
                if (_STaxAmt != value)
                {
                  OnSTaxAmtChanging(ref value);
                  ReportPropertyChanging("STaxAmt");
                  _STaxAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("STaxAmt");
                  OnSTaxAmtChanged();
              }
            }
        }
        private decimal _STaxAmt = 0m;
        partial void OnGetSTaxAmt(ref decimal value);
        partial void OnSTaxAmtChanging(ref decimal value);
        partial void OnSTaxAmtChanged();
    
        /// <summary>
        /// There are no comments for STaxCalc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short STaxCalc
        {
            get
            {
                short value = _STaxCalc;
                OnGetSTaxCalc(ref value);
                return value;
            }
            set
            {
                if (_STaxCalc != value)
                {
                  OnSTaxCalcChanging(ref value);
                  ReportPropertyChanging("STaxCalc");
                  _STaxCalc = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("STaxCalc");
                  OnSTaxCalcChanged();
              }
            }
        }
        private short _STaxCalc = 1;
        partial void OnGetSTaxCalc(ref short value);
        partial void OnSTaxCalcChanging(ref short value);
        partial void OnSTaxCalcChanged();
    
        /// <summary>
        /// There are no comments for STaxTranKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? STaxTranKey
        {
            get
            {
                int? value = _STaxTranKey;
                OnGetSTaxTranKey(ref value);
                return value;
            }
            set
            {
                if (_STaxTranKey != value)
                {
                  OnSTaxTranKeyChanging(ref value);
                  ReportPropertyChanging("STaxTranKey");
                  _STaxTranKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("STaxTranKey");
                  OnSTaxTranKeyChanged();
              }
            }
        }
        private int? _STaxTranKey;
        partial void OnGetSTaxTranKey(ref int? value);
        partial void OnSTaxTranKeyChanging(ref int? value);
        partial void OnSTaxTranKeyChanged();
    
        /// <summary>
        /// There are no comments for TradeDiscAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal TradeDiscAmt
        {
            get
            {
                decimal value = _TradeDiscAmt;
                OnGetTradeDiscAmt(ref value);
                return value;
            }
            set
            {
                if (_TradeDiscAmt != value)
                {
                  OnTradeDiscAmtChanging(ref value);
                  ReportPropertyChanging("TradeDiscAmt");
                  _TradeDiscAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TradeDiscAmt");
                  OnTradeDiscAmtChanged();
              }
            }
        }
        private decimal _TradeDiscAmt = 0m;
        partial void OnGetTradeDiscAmt(ref decimal value);
        partial void OnTradeDiscAmtChanging(ref decimal value);
        partial void OnTradeDiscAmtChanged();
    
        /// <summary>
        /// There are no comments for TranAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal TranAmt
        {
            get
            {
                decimal value = _TranAmt;
                OnGetTranAmt(ref value);
                return value;
            }
            set
            {
                if (_TranAmt != value)
                {
                  OnTranAmtChanging(ref value);
                  ReportPropertyChanging("TranAmt");
                  _TranAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranAmt");
                  OnTranAmtChanged();
              }
            }
        }
        private decimal _TranAmt = 0m;
        partial void OnGetTranAmt(ref decimal value);
        partial void OnTranAmtChanging(ref decimal value);
        partial void OnTranAmtChanged();
    
        /// <summary>
        /// There are no comments for TranAmtHC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal TranAmtHC
        {
            get
            {
                decimal value = _TranAmtHC;
                OnGetTranAmtHC(ref value);
                return value;
            }
            set
            {
                if (_TranAmtHC != value)
                {
                  OnTranAmtHCChanging(ref value);
                  ReportPropertyChanging("TranAmtHC");
                  _TranAmtHC = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranAmtHC");
                  OnTranAmtHCChanged();
              }
            }
        }
        private decimal _TranAmtHC = 0m;
        partial void OnGetTranAmtHC(ref decimal value);
        partial void OnTranAmtHCChanging(ref decimal value);
        partial void OnTranAmtHCChanged();
    
        /// <summary>
        /// There are no comments for TranCmnt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string TranCmnt
        {
            get
            {
                string value = _TranCmnt;
                OnGetTranCmnt(ref value);
                return value;
            }
            set
            {
                if (_TranCmnt != value)
                {
                  OnTranCmntChanging(ref value);
                  ReportPropertyChanging("TranCmnt");
                  _TranCmnt = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TranCmnt");
                  OnTranCmntChanged();
              }
            }
        }
        private string _TranCmnt;
        partial void OnGetTranCmnt(ref string value);
        partial void OnTranCmntChanging(ref string value);
        partial void OnTranCmntChanged();
    
        /// <summary>
        /// There are no comments for TranDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime TranDate
        {
            get
            {
                global::System.DateTime value = _TranDate;
                OnGetTranDate(ref value);
                return value;
            }
            set
            {
                if (_TranDate != value)
                {
                  OnTranDateChanging(ref value);
                  ReportPropertyChanging("TranDate");
                  _TranDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranDate");
                  OnTranDateChanged();
              }
            }
        }
        private global::System.DateTime _TranDate;
        partial void OnGetTranDate(ref global::System.DateTime value);
        partial void OnTranDateChanging(ref global::System.DateTime value);
        partial void OnTranDateChanged();
    
        /// <summary>
        /// There are no comments for TranID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string TranID
        {
            get
            {
                string value = _TranID;
                OnGetTranID(ref value);
                return value;
            }
            set
            {
                if (_TranID != value)
                {
                  OnTranIDChanging(ref value);
                  ReportPropertyChanging("TranID");
                  _TranID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TranID");
                  OnTranIDChanged();
              }
            }
        }
        private string _TranID;
        partial void OnGetTranID(ref string value);
        partial void OnTranIDChanging(ref string value);
        partial void OnTranIDChanged();
    
        /// <summary>
        /// There are no comments for TranNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string TranNo
        {
            get
            {
                string value = _TranNo;
                OnGetTranNo(ref value);
                return value;
            }
            set
            {
                if (_TranNo != value)
                {
                  OnTranNoChanging(ref value);
                  ReportPropertyChanging("TranNo");
                  _TranNo = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TranNo");
                  OnTranNoChanged();
              }
            }
        }
        private string _TranNo;
        partial void OnGetTranNo(ref string value);
        partial void OnTranNoChanging(ref string value);
        partial void OnTranNoChanged();
    
        /// <summary>
        /// There are no comments for Transmitted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Transmitted
        {
            get
            {
                short value = _Transmitted;
                OnGetTransmitted(ref value);
                return value;
            }
            set
            {
                if (_Transmitted != value)
                {
                  OnTransmittedChanging(ref value);
                  ReportPropertyChanging("Transmitted");
                  _Transmitted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Transmitted");
                  OnTransmittedChanged();
              }
            }
        }
        private short _Transmitted = 0;
        partial void OnGetTransmitted(ref short value);
        partial void OnTransmittedChanging(ref short value);
        partial void OnTransmittedChanged();
    
        /// <summary>
        /// There are no comments for TranType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int TranType
        {
            get
            {
                int value = _TranType;
                OnGetTranType(ref value);
                return value;
            }
            set
            {
                if (_TranType != value)
                {
                  OnTranTypeChanging(ref value);
                  ReportPropertyChanging("TranType");
                  _TranType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranType");
                  OnTranTypeChanged();
              }
            }
        }
        private int _TranType;
        partial void OnGetTranType(ref int value);
        partial void OnTranTypeChanging(ref int value);
        partial void OnTranTypeChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();
    
        /// <summary>
        /// There are no comments for UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? UpdateDate
        {
            get
            {
                global::System.DateTime? value = _UpdateDate;
                OnGetUpdateDate(ref value);
                return value;
            }
            set
            {
                if (_UpdateDate != value)
                {
                  OnUpdateDateChanging(ref value);
                  ReportPropertyChanging("UpdateDate");
                  _UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateDate");
                  OnUpdateDateChanged();
              }
            }
        }
        private global::System.DateTime? _UpdateDate;
        partial void OnGetUpdateDate(ref global::System.DateTime? value);
        partial void OnUpdateDateChanging(ref global::System.DateTime? value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// There are no comments for UpdateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UpdateUserID
        {
            get
            {
                string value = _UpdateUserID;
                OnGetUpdateUserID(ref value);
                return value;
            }
            set
            {
                if (_UpdateUserID != value)
                {
                  OnUpdateUserIDChanging(ref value);
                  ReportPropertyChanging("UpdateUserID");
                  _UpdateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UpdateUserID");
                  OnUpdateUserIDChanged();
              }
            }
        }
        private string _UpdateUserID;
        partial void OnGetUpdateUserID(ref string value);
        partial void OnUpdateUserIDChanging(ref string value);
        partial void OnUpdateUserIDChanged();
    
        /// <summary>
        /// There are no comments for VoucherKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? VoucherKey
        {
            get
            {
                int? value = _VoucherKey;
                OnGetVoucherKey(ref value);
                return value;
            }
            set
            {
                if (_VoucherKey != value)
                {
                  OnVoucherKeyChanging(ref value);
                  ReportPropertyChanging("VoucherKey");
                  _VoucherKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VoucherKey");
                  OnVoucherKeyChanged();
              }
            }
        }
        private int? _VoucherKey;
        partial void OnGetVoucherKey(ref int? value);
        partial void OnVoucherKeyChanging(ref int? value);
        partial void OnVoucherKeyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvoiceLog in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "InvoiceLog_PendInvoice", "InvoiceLog")]
        public virtual InvoiceLog InvoiceLog
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvoiceLog>("Net4Sage.DataAccessModel.InvoiceLog_PendInvoice", "InvoiceLog").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvoiceLog>("Net4Sage.DataAccessModel.InvoiceLog_PendInvoice", "InvoiceLog").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvoiceLog in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvoiceLog> InvoiceLogReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvoiceLog>("Net4Sage.DataAccessModel.InvoiceLog_PendInvoice", "InvoiceLog");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvoiceLog>("Net4Sage.DataAccessModel.InvoiceLog_PendInvoice", "InvoiceLog", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvoiceLog>("Net4Sage.DataAccessModel.InvoiceLog_PendInvoice", "InvoiceLog").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.InvoiceDetl in the schema.
    /// </summary>
    /// <KeyProperties>
    /// InvoiceLineKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="InvoiceDetl")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvoiceDetl : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvoiceDetl object.
        /// </summary>
        /// <param name="invoiceLineKey">Initial value of InvoiceLineKey.</param>
        /// <param name="actCommAmt">Initial value of ActCommAmt.</param>
        /// <param name="calcCommAmt">Initial value of CalcCommAmt.</param>
        /// <param name="cmntOnly">Initial value of CmntOnly.</param>
        /// <param name="commBase">Initial value of CommBase.</param>
        /// <param name="extAmt">Initial value of ExtAmt.</param>
        /// <param name="invcKey">Initial value of InvcKey.</param>
        /// <param name="rtrnType">Initial value of RtrnType.</param>
        /// <param name="seqNo">Initial value of SeqNo.</param>
        /// <param name="tradeDiscAmt">Initial value of TradeDiscAmt.</param>
        /// <param name="unitPriceOvrd">Initial value of UnitPriceOvrd.</param>
        public static InvoiceDetl CreateInvoiceDetl(int invoiceLineKey, decimal actCommAmt, decimal calcCommAmt, short cmntOnly, short commBase, decimal extAmt, int invcKey, short rtrnType, int seqNo, decimal tradeDiscAmt, short unitPriceOvrd)
        {
            InvoiceDetl invoiceDetl = new InvoiceDetl();
            invoiceDetl.InvoiceLineKey = invoiceLineKey;
            invoiceDetl.ActCommAmt = actCommAmt;
            invoiceDetl.CalcCommAmt = calcCommAmt;
            invoiceDetl.CmntOnly = cmntOnly;
            invoiceDetl.CommBase = commBase;
            invoiceDetl.ExtAmt = extAmt;
            invoiceDetl.InvcKey = invcKey;
            invoiceDetl.RtrnType = rtrnType;
            invoiceDetl.SeqNo = seqNo;
            invoiceDetl.TradeDiscAmt = tradeDiscAmt;
            invoiceDetl.UnitPriceOvrd = unitPriceOvrd;
            return invoiceDetl;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for InvoiceLineKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvoiceLineKey
        {
            get
            {
                int value = _InvoiceLineKey;
                OnGetInvoiceLineKey(ref value);
                return value;
            }
            set
            {
                if (_InvoiceLineKey != value)
                {
                  OnInvoiceLineKeyChanging(ref value);
                  ReportPropertyChanging("InvoiceLineKey");
                  _InvoiceLineKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvoiceLineKey");
                  OnInvoiceLineKeyChanged();
              }
            }
        }
        private int _InvoiceLineKey;
        partial void OnGetInvoiceLineKey(ref int value);
        partial void OnInvoiceLineKeyChanging(ref int value);
        partial void OnInvoiceLineKeyChanged();
    
        /// <summary>
        /// There are no comments for ActCommAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal ActCommAmt
        {
            get
            {
                decimal value = _ActCommAmt;
                OnGetActCommAmt(ref value);
                return value;
            }
            set
            {
                if (_ActCommAmt != value)
                {
                  OnActCommAmtChanging(ref value);
                  ReportPropertyChanging("ActCommAmt");
                  _ActCommAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ActCommAmt");
                  OnActCommAmtChanged();
              }
            }
        }
        private decimal _ActCommAmt = 0m;
        partial void OnGetActCommAmt(ref decimal value);
        partial void OnActCommAmtChanging(ref decimal value);
        partial void OnActCommAmtChanged();
    
        /// <summary>
        /// There are no comments for CalcCommAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal CalcCommAmt
        {
            get
            {
                decimal value = _CalcCommAmt;
                OnGetCalcCommAmt(ref value);
                return value;
            }
            set
            {
                if (_CalcCommAmt != value)
                {
                  OnCalcCommAmtChanging(ref value);
                  ReportPropertyChanging("CalcCommAmt");
                  _CalcCommAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CalcCommAmt");
                  OnCalcCommAmtChanged();
              }
            }
        }
        private decimal _CalcCommAmt = 0m;
        partial void OnGetCalcCommAmt(ref decimal value);
        partial void OnCalcCommAmtChanging(ref decimal value);
        partial void OnCalcCommAmtChanged();
    
        /// <summary>
        /// There are no comments for CmntOnly in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CmntOnly
        {
            get
            {
                short value = _CmntOnly;
                OnGetCmntOnly(ref value);
                return value;
            }
            set
            {
                if (_CmntOnly != value)
                {
                  OnCmntOnlyChanging(ref value);
                  ReportPropertyChanging("CmntOnly");
                  _CmntOnly = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CmntOnly");
                  OnCmntOnlyChanged();
              }
            }
        }
        private short _CmntOnly = 0;
        partial void OnGetCmntOnly(ref short value);
        partial void OnCmntOnlyChanging(ref short value);
        partial void OnCmntOnlyChanged();
    
        /// <summary>
        /// There are no comments for CommBase in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CommBase
        {
            get
            {
                short value = _CommBase;
                OnGetCommBase(ref value);
                return value;
            }
            set
            {
                if (_CommBase != value)
                {
                  OnCommBaseChanging(ref value);
                  ReportPropertyChanging("CommBase");
                  _CommBase = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CommBase");
                  OnCommBaseChanged();
              }
            }
        }
        private short _CommBase;
        partial void OnGetCommBase(ref short value);
        partial void OnCommBaseChanging(ref short value);
        partial void OnCommBaseChanged();
    
        /// <summary>
        /// There are no comments for CommClassKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CommClassKey
        {
            get
            {
                int? value = _CommClassKey;
                OnGetCommClassKey(ref value);
                return value;
            }
            set
            {
                if (_CommClassKey != value)
                {
                  OnCommClassKeyChanging(ref value);
                  ReportPropertyChanging("CommClassKey");
                  _CommClassKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CommClassKey");
                  OnCommClassKeyChanged();
              }
            }
        }
        private int? _CommClassKey;
        partial void OnGetCommClassKey(ref int? value);
        partial void OnCommClassKeyChanging(ref int? value);
        partial void OnCommClassKeyChanged();
    
        /// <summary>
        /// There are no comments for CommPlanKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CommPlanKey
        {
            get
            {
                int? value = _CommPlanKey;
                OnGetCommPlanKey(ref value);
                return value;
            }
            set
            {
                if (_CommPlanKey != value)
                {
                  OnCommPlanKeyChanging(ref value);
                  ReportPropertyChanging("CommPlanKey");
                  _CommPlanKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CommPlanKey");
                  OnCommPlanKeyChanged();
              }
            }
        }
        private int? _CommPlanKey;
        partial void OnGetCommPlanKey(ref int? value);
        partial void OnCommPlanKeyChanging(ref int? value);
        partial void OnCommPlanKeyChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for ExtAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal ExtAmt
        {
            get
            {
                decimal value = _ExtAmt;
                OnGetExtAmt(ref value);
                return value;
            }
            set
            {
                if (_ExtAmt != value)
                {
                  OnExtAmtChanging(ref value);
                  ReportPropertyChanging("ExtAmt");
                  _ExtAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ExtAmt");
                  OnExtAmtChanged();
              }
            }
        }
        private decimal _ExtAmt = 0m;
        partial void OnGetExtAmt(ref decimal value);
        partial void OnExtAmtChanging(ref decimal value);
        partial void OnExtAmtChanged();
    
        /// <summary>
        /// There are no comments for ExtCmnt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ExtCmnt
        {
            get
            {
                string value = _ExtCmnt;
                OnGetExtCmnt(ref value);
                return value;
            }
            set
            {
                if (_ExtCmnt != value)
                {
                  OnExtCmntChanging(ref value);
                  ReportPropertyChanging("ExtCmnt");
                  _ExtCmnt = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ExtCmnt");
                  OnExtCmntChanged();
              }
            }
        }
        private string _ExtCmnt;
        partial void OnGetExtCmnt(ref string value);
        partial void OnExtCmntChanging(ref string value);
        partial void OnExtCmntChanged();
    
        /// <summary>
        /// There are no comments for InvcKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvcKey
        {
            get
            {
                int value = _InvcKey;
                OnGetInvcKey(ref value);
                return value;
            }
            set
            {
                if (_InvcKey != value)
                {
                  OnInvcKeyChanging(ref value);
                  ReportPropertyChanging("InvcKey");
                  _InvcKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvcKey");
                  OnInvcKeyChanged();
              }
            }
        }
        private int _InvcKey;
        partial void OnGetInvcKey(ref int value);
        partial void OnInvcKeyChanging(ref int value);
        partial void OnInvcKeyChanged();
    
        /// <summary>
        /// There are no comments for ItemAliasKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ItemAliasKey
        {
            get
            {
                int? value = _ItemAliasKey;
                OnGetItemAliasKey(ref value);
                return value;
            }
            set
            {
                if (_ItemAliasKey != value)
                {
                  OnItemAliasKeyChanging(ref value);
                  ReportPropertyChanging("ItemAliasKey");
                  _ItemAliasKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ItemAliasKey");
                  OnItemAliasKeyChanged();
              }
            }
        }
        private int? _ItemAliasKey;
        partial void OnGetItemAliasKey(ref int? value);
        partial void OnItemAliasKeyChanging(ref int? value);
        partial void OnItemAliasKeyChanged();
    
        /// <summary>
        /// There are no comments for ItemKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ItemKey
        {
            get
            {
                int? value = _ItemKey;
                OnGetItemKey(ref value);
                return value;
            }
            set
            {
                if (_ItemKey != value)
                {
                  OnItemKeyChanging(ref value);
                  ReportPropertyChanging("ItemKey");
                  _ItemKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ItemKey");
                  OnItemKeyChanged();
              }
            }
        }
        private int? _ItemKey;
        partial void OnGetItemKey(ref int? value);
        partial void OnItemKeyChanging(ref int? value);
        partial void OnItemKeyChanged();
    
        /// <summary>
        /// There are no comments for KitInvoiceLineKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? KitInvoiceLineKey
        {
            get
            {
                int? value = _KitInvoiceLineKey;
                OnGetKitInvoiceLineKey(ref value);
                return value;
            }
            set
            {
                if (_KitInvoiceLineKey != value)
                {
                  OnKitInvoiceLineKeyChanging(ref value);
                  ReportPropertyChanging("KitInvoiceLineKey");
                  _KitInvoiceLineKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("KitInvoiceLineKey");
                  OnKitInvoiceLineKeyChanged();
              }
            }
        }
        private int? _KitInvoiceLineKey;
        partial void OnGetKitInvoiceLineKey(ref int? value);
        partial void OnKitInvoiceLineKeyChanging(ref int? value);
        partial void OnKitInvoiceLineKeyChanged();
    
        /// <summary>
        /// There are no comments for ProjClientID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ProjClientID
        {
            get
            {
                string value = _ProjClientID;
                OnGetProjClientID(ref value);
                return value;
            }
            set
            {
                if (_ProjClientID != value)
                {
                  OnProjClientIDChanging(ref value);
                  ReportPropertyChanging("ProjClientID");
                  _ProjClientID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ProjClientID");
                  OnProjClientIDChanged();
              }
            }
        }
        private string _ProjClientID;
        partial void OnGetProjClientID(ref string value);
        partial void OnProjClientIDChanging(ref string value);
        partial void OnProjClientIDChanged();
    
        /// <summary>
        /// There are no comments for ProjID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ProjID
        {
            get
            {
                string value = _ProjID;
                OnGetProjID(ref value);
                return value;
            }
            set
            {
                if (_ProjID != value)
                {
                  OnProjIDChanging(ref value);
                  ReportPropertyChanging("ProjID");
                  _ProjID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ProjID");
                  OnProjIDChanged();
              }
            }
        }
        private string _ProjID;
        partial void OnGetProjID(ref string value);
        partial void OnProjIDChanging(ref string value);
        partial void OnProjIDChanged();
    
        /// <summary>
        /// There are no comments for RtrnType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short RtrnType
        {
            get
            {
                short value = _RtrnType;
                OnGetRtrnType(ref value);
                return value;
            }
            set
            {
                if (_RtrnType != value)
                {
                  OnRtrnTypeChanging(ref value);
                  ReportPropertyChanging("RtrnType");
                  _RtrnType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RtrnType");
                  OnRtrnTypeChanged();
              }
            }
        }
        private short _RtrnType = 0;
        partial void OnGetRtrnType(ref short value);
        partial void OnRtrnTypeChanging(ref short value);
        partial void OnRtrnTypeChanged();
    
        /// <summary>
        /// There are no comments for SeqNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SeqNo
        {
            get
            {
                int value = _SeqNo;
                OnGetSeqNo(ref value);
                return value;
            }
            set
            {
                if (_SeqNo != value)
                {
                  OnSeqNoChanging(ref value);
                  ReportPropertyChanging("SeqNo");
                  _SeqNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SeqNo");
                  OnSeqNoChanged();
              }
            }
        }
        private int _SeqNo;
        partial void OnGetSeqNo(ref int value);
        partial void OnSeqNoChanging(ref int value);
        partial void OnSeqNoChanged();
    
        /// <summary>
        /// There are no comments for ShipLineKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ShipLineKey
        {
            get
            {
                int? value = _ShipLineKey;
                OnGetShipLineKey(ref value);
                return value;
            }
            set
            {
                if (_ShipLineKey != value)
                {
                  OnShipLineKeyChanging(ref value);
                  ReportPropertyChanging("ShipLineKey");
                  _ShipLineKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipLineKey");
                  OnShipLineKeyChanged();
              }
            }
        }
        private int? _ShipLineKey;
        partial void OnGetShipLineKey(ref int? value);
        partial void OnShipLineKeyChanging(ref int? value);
        partial void OnShipLineKeyChanged();
    
        /// <summary>
        /// There are no comments for SOLineKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? SOLineKey
        {
            get
            {
                int? value = _SOLineKey;
                OnGetSOLineKey(ref value);
                return value;
            }
            set
            {
                if (_SOLineKey != value)
                {
                  OnSOLineKeyChanging(ref value);
                  ReportPropertyChanging("SOLineKey");
                  _SOLineKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SOLineKey");
                  OnSOLineKeyChanged();
              }
            }
        }
        private int? _SOLineKey;
        partial void OnGetSOLineKey(ref int? value);
        partial void OnSOLineKeyChanging(ref int? value);
        partial void OnSOLineKeyChanged();
    
        /// <summary>
        /// There are no comments for STaxClassKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? STaxClassKey
        {
            get
            {
                int? value = _STaxClassKey;
                OnGetSTaxClassKey(ref value);
                return value;
            }
            set
            {
                if (_STaxClassKey != value)
                {
                  OnSTaxClassKeyChanging(ref value);
                  ReportPropertyChanging("STaxClassKey");
                  _STaxClassKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("STaxClassKey");
                  OnSTaxClassKeyChanged();
              }
            }
        }
        private int? _STaxClassKey;
        partial void OnGetSTaxClassKey(ref int? value);
        partial void OnSTaxClassKeyChanging(ref int? value);
        partial void OnSTaxClassKeyChanged();
    
        /// <summary>
        /// There are no comments for TradeDiscAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal TradeDiscAmt
        {
            get
            {
                decimal value = _TradeDiscAmt;
                OnGetTradeDiscAmt(ref value);
                return value;
            }
            set
            {
                if (_TradeDiscAmt != value)
                {
                  OnTradeDiscAmtChanging(ref value);
                  ReportPropertyChanging("TradeDiscAmt");
                  _TradeDiscAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TradeDiscAmt");
                  OnTradeDiscAmtChanged();
              }
            }
        }
        private decimal _TradeDiscAmt = 0m;
        partial void OnGetTradeDiscAmt(ref decimal value);
        partial void OnTradeDiscAmtChanging(ref decimal value);
        partial void OnTradeDiscAmtChanged();
    
        /// <summary>
        /// There are no comments for UnitCost in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? UnitCost
        {
            get
            {
                decimal? value = _UnitCost;
                OnGetUnitCost(ref value);
                return value;
            }
            set
            {
                if (_UnitCost != value)
                {
                  OnUnitCostChanging(ref value);
                  ReportPropertyChanging("UnitCost");
                  _UnitCost = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UnitCost");
                  OnUnitCostChanged();
              }
            }
        }
        private decimal? _UnitCost = 0m;
        partial void OnGetUnitCost(ref decimal? value);
        partial void OnUnitCostChanging(ref decimal? value);
        partial void OnUnitCostChanged();
    
        /// <summary>
        /// There are no comments for UnitMeasKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? UnitMeasKey
        {
            get
            {
                int? value = _UnitMeasKey;
                OnGetUnitMeasKey(ref value);
                return value;
            }
            set
            {
                if (_UnitMeasKey != value)
                {
                  OnUnitMeasKeyChanging(ref value);
                  ReportPropertyChanging("UnitMeasKey");
                  _UnitMeasKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UnitMeasKey");
                  OnUnitMeasKeyChanged();
              }
            }
        }
        private int? _UnitMeasKey;
        partial void OnGetUnitMeasKey(ref int? value);
        partial void OnUnitMeasKeyChanging(ref int? value);
        partial void OnUnitMeasKeyChanged();
    
        /// <summary>
        /// There are no comments for UnitPrice in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? UnitPrice
        {
            get
            {
                decimal? value = _UnitPrice;
                OnGetUnitPrice(ref value);
                return value;
            }
            set
            {
                if (_UnitPrice != value)
                {
                  OnUnitPriceChanging(ref value);
                  ReportPropertyChanging("UnitPrice");
                  _UnitPrice = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UnitPrice");
                  OnUnitPriceChanged();
              }
            }
        }
        private decimal? _UnitPrice = 0m;
        partial void OnGetUnitPrice(ref decimal? value);
        partial void OnUnitPriceChanging(ref decimal? value);
        partial void OnUnitPriceChanged();
    
        /// <summary>
        /// There are no comments for UnitPriceOvrd in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short UnitPriceOvrd
        {
            get
            {
                short value = _UnitPriceOvrd;
                OnGetUnitPriceOvrd(ref value);
                return value;
            }
            set
            {
                if (_UnitPriceOvrd != value)
                {
                  OnUnitPriceOvrdChanging(ref value);
                  ReportPropertyChanging("UnitPriceOvrd");
                  _UnitPriceOvrd = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UnitPriceOvrd");
                  OnUnitPriceOvrdChanged();
              }
            }
        }
        private short _UnitPriceOvrd = 0;
        partial void OnGetUnitPriceOvrd(ref short value);
        partial void OnUnitPriceOvrdChanging(ref short value);
        partial void OnUnitPriceOvrdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvoiceLineDists in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "InvoiceDetl_InvoiceLineDist", "InvoiceLineDists")]
        public virtual EntityCollection<InvoiceLineDist> InvoiceLineDists
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InvoiceLineDist>("Net4Sage.DataAccessModel.InvoiceDetl_InvoiceLineDist", "InvoiceLineDists");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InvoiceLineDist>("Net4Sage.DataAccessModel.InvoiceDetl_InvoiceLineDist", "InvoiceLineDists", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for InvoiceLog in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "InvoiceLog_InvoiceDetl", "InvoiceLog")]
        public virtual InvoiceLog InvoiceLog
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvoiceLog>("Net4Sage.DataAccessModel.InvoiceLog_InvoiceDetl", "InvoiceLog").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvoiceLog>("Net4Sage.DataAccessModel.InvoiceLog_InvoiceDetl", "InvoiceLog").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvoiceLog in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvoiceLog> InvoiceLogReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvoiceLog>("Net4Sage.DataAccessModel.InvoiceLog_InvoiceDetl", "InvoiceLog");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvoiceLog>("Net4Sage.DataAccessModel.InvoiceLog_InvoiceDetl", "InvoiceLog", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvoiceLog>("Net4Sage.DataAccessModel.InvoiceLog_InvoiceDetl", "InvoiceLog").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Item in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Item_InvoiceDetl", "Item")]
        public virtual Item Item
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Item>("Net4Sage.DataAccessModel.Item_InvoiceDetl", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Item>("Net4Sage.DataAccessModel.Item_InvoiceDetl", "Item").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Item in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Item>("Net4Sage.DataAccessModel.Item_InvoiceDetl", "Item");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Item>("Net4Sage.DataAccessModel.Item_InvoiceDetl", "Item", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Item>("Net4Sage.DataAccessModel.Item_InvoiceDetl", "Item").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.InvoiceLineDist in the schema.
    /// </summary>
    /// <KeyProperties>
    /// InvoiceLineDistKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="InvoiceLineDist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvoiceLineDist : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InvoiceLineDist object.
        /// </summary>
        /// <param name="invoiceLineDistKey">Initial value of InvoiceLineDistKey.</param>
        /// <param name="extAmt">Initial value of ExtAmt.</param>
        /// <param name="freightAmt">Initial value of FreightAmt.</param>
        /// <param name="invoiceLineKey">Initial value of InvoiceLineKey.</param>
        /// <param name="qtyShipped">Initial value of QtyShipped.</param>
        /// <param name="salesAcctKey">Initial value of SalesAcctKey.</param>
        /// <param name="tradeDiscAmt">Initial value of TradeDiscAmt.</param>
        public static InvoiceLineDist CreateInvoiceLineDist(int invoiceLineDistKey, decimal extAmt, decimal freightAmt, int invoiceLineKey, decimal qtyShipped, int salesAcctKey, decimal tradeDiscAmt)
        {
            InvoiceLineDist invoiceLineDist = new InvoiceLineDist();
            invoiceLineDist.InvoiceLineDistKey = invoiceLineDistKey;
            invoiceLineDist.ExtAmt = extAmt;
            invoiceLineDist.FreightAmt = freightAmt;
            invoiceLineDist.InvoiceLineKey = invoiceLineKey;
            invoiceLineDist.QtyShipped = qtyShipped;
            invoiceLineDist.SalesAcctKey = salesAcctKey;
            invoiceLineDist.TradeDiscAmt = tradeDiscAmt;
            return invoiceLineDist;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for InvoiceLineDistKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvoiceLineDistKey
        {
            get
            {
                int value = _InvoiceLineDistKey;
                OnGetInvoiceLineDistKey(ref value);
                return value;
            }
            set
            {
                if (_InvoiceLineDistKey != value)
                {
                  OnInvoiceLineDistKeyChanging(ref value);
                  ReportPropertyChanging("InvoiceLineDistKey");
                  _InvoiceLineDistKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvoiceLineDistKey");
                  OnInvoiceLineDistKeyChanged();
              }
            }
        }
        private int _InvoiceLineDistKey;
        partial void OnGetInvoiceLineDistKey(ref int value);
        partial void OnInvoiceLineDistKeyChanging(ref int value);
        partial void OnInvoiceLineDistKeyChanged();
    
        /// <summary>
        /// There are no comments for AcctRefKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? AcctRefKey
        {
            get
            {
                int? value = _AcctRefKey;
                OnGetAcctRefKey(ref value);
                return value;
            }
            set
            {
                if (_AcctRefKey != value)
                {
                  OnAcctRefKeyChanging(ref value);
                  ReportPropertyChanging("AcctRefKey");
                  _AcctRefKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AcctRefKey");
                  OnAcctRefKeyChanged();
              }
            }
        }
        private int? _AcctRefKey;
        partial void OnGetAcctRefKey(ref int? value);
        partial void OnAcctRefKeyChanging(ref int? value);
        partial void OnAcctRefKeyChanged();
    
        /// <summary>
        /// There are no comments for ExtAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal ExtAmt
        {
            get
            {
                decimal value = _ExtAmt;
                OnGetExtAmt(ref value);
                return value;
            }
            set
            {
                if (_ExtAmt != value)
                {
                  OnExtAmtChanging(ref value);
                  ReportPropertyChanging("ExtAmt");
                  _ExtAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ExtAmt");
                  OnExtAmtChanged();
              }
            }
        }
        private decimal _ExtAmt = 0m;
        partial void OnGetExtAmt(ref decimal value);
        partial void OnExtAmtChanging(ref decimal value);
        partial void OnExtAmtChanged();
    
        /// <summary>
        /// There are no comments for FOBKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? FOBKey
        {
            get
            {
                int? value = _FOBKey;
                OnGetFOBKey(ref value);
                return value;
            }
            set
            {
                if (_FOBKey != value)
                {
                  OnFOBKeyChanging(ref value);
                  ReportPropertyChanging("FOBKey");
                  _FOBKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FOBKey");
                  OnFOBKeyChanged();
              }
            }
        }
        private int? _FOBKey;
        partial void OnGetFOBKey(ref int? value);
        partial void OnFOBKeyChanging(ref int? value);
        partial void OnFOBKeyChanged();
    
        /// <summary>
        /// There are no comments for FreightAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal FreightAmt
        {
            get
            {
                decimal value = _FreightAmt;
                OnGetFreightAmt(ref value);
                return value;
            }
            set
            {
                if (_FreightAmt != value)
                {
                  OnFreightAmtChanging(ref value);
                  ReportPropertyChanging("FreightAmt");
                  _FreightAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FreightAmt");
                  OnFreightAmtChanged();
              }
            }
        }
        private decimal _FreightAmt = 0m;
        partial void OnGetFreightAmt(ref decimal value);
        partial void OnFreightAmtChanging(ref decimal value);
        partial void OnFreightAmtChanged();
    
        /// <summary>
        /// There are no comments for InvoiceLineKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int InvoiceLineKey
        {
            get
            {
                int value = _InvoiceLineKey;
                OnGetInvoiceLineKey(ref value);
                return value;
            }
            set
            {
                if (_InvoiceLineKey != value)
                {
                  OnInvoiceLineKeyChanging(ref value);
                  ReportPropertyChanging("InvoiceLineKey");
                  _InvoiceLineKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvoiceLineKey");
                  OnInvoiceLineKeyChanged();
              }
            }
        }
        private int _InvoiceLineKey;
        partial void OnGetInvoiceLineKey(ref int value);
        partial void OnInvoiceLineKeyChanging(ref int value);
        partial void OnInvoiceLineKeyChanged();
    
        /// <summary>
        /// There are no comments for QtyShipped in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal QtyShipped
        {
            get
            {
                decimal value = _QtyShipped;
                OnGetQtyShipped(ref value);
                return value;
            }
            set
            {
                if (_QtyShipped != value)
                {
                  OnQtyShippedChanging(ref value);
                  ReportPropertyChanging("QtyShipped");
                  _QtyShipped = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QtyShipped");
                  OnQtyShippedChanged();
              }
            }
        }
        private decimal _QtyShipped = 0m;
        partial void OnGetQtyShipped(ref decimal value);
        partial void OnQtyShippedChanging(ref decimal value);
        partial void OnQtyShippedChanged();
    
        /// <summary>
        /// There are no comments for SalesAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SalesAcctKey
        {
            get
            {
                int value = _SalesAcctKey;
                OnGetSalesAcctKey(ref value);
                return value;
            }
            set
            {
                if (_SalesAcctKey != value)
                {
                  OnSalesAcctKeyChanging(ref value);
                  ReportPropertyChanging("SalesAcctKey");
                  _SalesAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesAcctKey");
                  OnSalesAcctKeyChanged();
              }
            }
        }
        private int _SalesAcctKey;
        partial void OnGetSalesAcctKey(ref int value);
        partial void OnSalesAcctKeyChanging(ref int value);
        partial void OnSalesAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for ShipLineDistKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ShipLineDistKey
        {
            get
            {
                int? value = _ShipLineDistKey;
                OnGetShipLineDistKey(ref value);
                return value;
            }
            set
            {
                if (_ShipLineDistKey != value)
                {
                  OnShipLineDistKeyChanging(ref value);
                  ReportPropertyChanging("ShipLineDistKey");
                  _ShipLineDistKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipLineDistKey");
                  OnShipLineDistKeyChanged();
              }
            }
        }
        private int? _ShipLineDistKey;
        partial void OnGetShipLineDistKey(ref int? value);
        partial void OnShipLineDistKeyChanging(ref int? value);
        partial void OnShipLineDistKeyChanged();
    
        /// <summary>
        /// There are no comments for ShipMethKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ShipMethKey
        {
            get
            {
                int? value = _ShipMethKey;
                OnGetShipMethKey(ref value);
                return value;
            }
            set
            {
                if (_ShipMethKey != value)
                {
                  OnShipMethKeyChanging(ref value);
                  ReportPropertyChanging("ShipMethKey");
                  _ShipMethKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipMethKey");
                  OnShipMethKeyChanged();
              }
            }
        }
        private int? _ShipMethKey;
        partial void OnGetShipMethKey(ref int? value);
        partial void OnShipMethKeyChanging(ref int? value);
        partial void OnShipMethKeyChanged();
    
        /// <summary>
        /// There are no comments for ShipZoneKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ShipZoneKey
        {
            get
            {
                int? value = _ShipZoneKey;
                OnGetShipZoneKey(ref value);
                return value;
            }
            set
            {
                if (_ShipZoneKey != value)
                {
                  OnShipZoneKeyChanging(ref value);
                  ReportPropertyChanging("ShipZoneKey");
                  _ShipZoneKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipZoneKey");
                  OnShipZoneKeyChanged();
              }
            }
        }
        private int? _ShipZoneKey;
        partial void OnGetShipZoneKey(ref int? value);
        partial void OnShipZoneKeyChanging(ref int? value);
        partial void OnShipZoneKeyChanged();
    
        /// <summary>
        /// There are no comments for SOLineDistKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? SOLineDistKey
        {
            get
            {
                int? value = _SOLineDistKey;
                OnGetSOLineDistKey(ref value);
                return value;
            }
            set
            {
                if (_SOLineDistKey != value)
                {
                  OnSOLineDistKeyChanging(ref value);
                  ReportPropertyChanging("SOLineDistKey");
                  _SOLineDistKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SOLineDistKey");
                  OnSOLineDistKeyChanged();
              }
            }
        }
        private int? _SOLineDistKey;
        partial void OnGetSOLineDistKey(ref int? value);
        partial void OnSOLineDistKeyChanging(ref int? value);
        partial void OnSOLineDistKeyChanged();
    
        /// <summary>
        /// There are no comments for STaxTranKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? STaxTranKey
        {
            get
            {
                int? value = _STaxTranKey;
                OnGetSTaxTranKey(ref value);
                return value;
            }
            set
            {
                if (_STaxTranKey != value)
                {
                  OnSTaxTranKeyChanging(ref value);
                  ReportPropertyChanging("STaxTranKey");
                  _STaxTranKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("STaxTranKey");
                  OnSTaxTranKeyChanged();
              }
            }
        }
        private int? _STaxTranKey;
        partial void OnGetSTaxTranKey(ref int? value);
        partial void OnSTaxTranKeyChanging(ref int? value);
        partial void OnSTaxTranKeyChanged();
    
        /// <summary>
        /// There are no comments for TradeDiscAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal TradeDiscAmt
        {
            get
            {
                decimal value = _TradeDiscAmt;
                OnGetTradeDiscAmt(ref value);
                return value;
            }
            set
            {
                if (_TradeDiscAmt != value)
                {
                  OnTradeDiscAmtChanging(ref value);
                  ReportPropertyChanging("TradeDiscAmt");
                  _TradeDiscAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TradeDiscAmt");
                  OnTradeDiscAmtChanged();
              }
            }
        }
        private decimal _TradeDiscAmt = 0m;
        partial void OnGetTradeDiscAmt(ref decimal value);
        partial void OnTradeDiscAmtChanging(ref decimal value);
        partial void OnTradeDiscAmtChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InvoiceDetl in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "InvoiceDetl_InvoiceLineDist", "InvoiceDetl")]
        public virtual InvoiceDetl InvoiceDetl
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvoiceDetl>("Net4Sage.DataAccessModel.InvoiceDetl_InvoiceLineDist", "InvoiceDetl").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvoiceDetl>("Net4Sage.DataAccessModel.InvoiceDetl_InvoiceLineDist", "InvoiceDetl").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InvoiceDetl in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvoiceDetl> InvoiceDetlReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvoiceDetl>("Net4Sage.DataAccessModel.InvoiceDetl_InvoiceLineDist", "InvoiceDetl");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InvoiceDetl>("Net4Sage.DataAccessModel.InvoiceDetl_InvoiceLineDist", "InvoiceDetl", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InvoiceDetl>("Net4Sage.DataAccessModel.InvoiceDetl_InvoiceLineDist", "InvoiceDetl").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.Country in the schema.
    /// </summary>
    /// <KeyProperties>
    /// CountryID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [Net4Sage.Controls.Lookup.LookupAutoShowColumns(false)]
    [Net4Sage.Controls.Lookup.LookupFormTitle(@"Buscar País")]
    public partial class Country : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Country object.
        /// </summary>
        /// <param name="countryID">Initial value of CountryID.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        public static Country CreateCountry(string countryID, int updateCounter)
        {
            Country country = new Country();
            country.CountryID = countryID;
            country.UpdateCounter = updateCounter;
            return country;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for CountryID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupTextReturn]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Código de País")]
        public virtual string CountryID
        {
            get
            {
                string value = _CountryID;
                OnGetCountryID(ref value);
                return value;
            }
            set
            {
                if (_CountryID != value)
                {
                  OnCountryIDChanging(ref value);
                  ReportPropertyChanging("CountryID");
                  _CountryID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CountryID");
                  OnCountryIDChanged();
              }
            }
        }
        private string _CountryID;
        partial void OnGetCountryID(ref string value);
        partial void OnCountryIDChanging(ref string value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// There are no comments for CurrID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CurrID
        {
            get
            {
                string value = _CurrID;
                OnGetCurrID(ref value);
                return value;
            }
            set
            {
                if (_CurrID != value)
                {
                  OnCurrIDChanging(ref value);
                  ReportPropertyChanging("CurrID");
                  _CurrID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CurrID");
                  OnCurrIDChanged();
              }
            }
        }
        private string _CurrID;
        partial void OnGetCurrID(ref string value);
        partial void OnCurrIDChanging(ref string value);
        partial void OnCurrIDChanged();
    
        /// <summary>
        /// There are no comments for DateMask in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string DateMask
        {
            get
            {
                string value = _DateMask;
                OnGetDateMask(ref value);
                return value;
            }
            set
            {
                if (_DateMask != value)
                {
                  OnDateMaskChanging(ref value);
                  ReportPropertyChanging("DateMask");
                  _DateMask = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DateMask");
                  OnDateMaskChanged();
              }
            }
        }
        private string _DateMask = @" ";
        partial void OnGetDateMask(ref string value);
        partial void OnDateMaskChanging(ref string value);
        partial void OnDateMaskChanged();
    
        /// <summary>
        /// There are no comments for ISOCode in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ISOCode
        {
            get
            {
                string value = _ISOCode;
                OnGetISOCode(ref value);
                return value;
            }
            set
            {
                if (_ISOCode != value)
                {
                  OnISOCodeChanging(ref value);
                  ReportPropertyChanging("ISOCode");
                  _ISOCode = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ISOCode");
                  OnISOCodeChanged();
              }
            }
        }
        private string _ISOCode;
        partial void OnGetISOCode(ref string value);
        partial void OnISOCodeChanging(ref string value);
        partial void OnISOCodeChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"Nombre")]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Nombre")]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        public virtual string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name = @" ";
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for PhoneMask in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PhoneMask
        {
            get
            {
                string value = _PhoneMask;
                OnGetPhoneMask(ref value);
                return value;
            }
            set
            {
                if (_PhoneMask != value)
                {
                  OnPhoneMaskChanging(ref value);
                  ReportPropertyChanging("PhoneMask");
                  _PhoneMask = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PhoneMask");
                  OnPhoneMaskChanged();
              }
            }
        }
        private string _PhoneMask = @" ";
        partial void OnGetPhoneMask(ref string value);
        partial void OnPhoneMaskChanging(ref string value);
        partial void OnPhoneMaskChanged();
    
        /// <summary>
        /// There are no comments for PostalCodeMask in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PostalCodeMask
        {
            get
            {
                string value = _PostalCodeMask;
                OnGetPostalCodeMask(ref value);
                return value;
            }
            set
            {
                if (_PostalCodeMask != value)
                {
                  OnPostalCodeMaskChanging(ref value);
                  ReportPropertyChanging("PostalCodeMask");
                  _PostalCodeMask = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PostalCodeMask");
                  OnPostalCodeMaskChanged();
              }
            }
        }
        private string _PostalCodeMask;
        partial void OnGetPostalCodeMask(ref string value);
        partial void OnPostalCodeMaskChanging(ref string value);
        partial void OnPostalCodeMaskChanged();
    
        /// <summary>
        /// There are no comments for PrintAddrLine1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PrintAddrLine1
        {
            get
            {
                string value = _PrintAddrLine1;
                OnGetPrintAddrLine1(ref value);
                return value;
            }
            set
            {
                if (_PrintAddrLine1 != value)
                {
                  OnPrintAddrLine1Changing(ref value);
                  ReportPropertyChanging("PrintAddrLine1");
                  _PrintAddrLine1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PrintAddrLine1");
                  OnPrintAddrLine1Changed();
              }
            }
        }
        private string _PrintAddrLine1 = @" ";
        partial void OnGetPrintAddrLine1(ref string value);
        partial void OnPrintAddrLine1Changing(ref string value);
        partial void OnPrintAddrLine1Changed();
    
        /// <summary>
        /// There are no comments for PrintAddrLine2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PrintAddrLine2
        {
            get
            {
                string value = _PrintAddrLine2;
                OnGetPrintAddrLine2(ref value);
                return value;
            }
            set
            {
                if (_PrintAddrLine2 != value)
                {
                  OnPrintAddrLine2Changing(ref value);
                  ReportPropertyChanging("PrintAddrLine2");
                  _PrintAddrLine2 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PrintAddrLine2");
                  OnPrintAddrLine2Changed();
              }
            }
        }
        private string _PrintAddrLine2 = @" ";
        partial void OnGetPrintAddrLine2(ref string value);
        partial void OnPrintAddrLine2Changing(ref string value);
        partial void OnPrintAddrLine2Changed();
    
        /// <summary>
        /// There are no comments for PrintAddrLine3 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PrintAddrLine3
        {
            get
            {
                string value = _PrintAddrLine3;
                OnGetPrintAddrLine3(ref value);
                return value;
            }
            set
            {
                if (_PrintAddrLine3 != value)
                {
                  OnPrintAddrLine3Changing(ref value);
                  ReportPropertyChanging("PrintAddrLine3");
                  _PrintAddrLine3 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PrintAddrLine3");
                  OnPrintAddrLine3Changed();
              }
            }
        }
        private string _PrintAddrLine3 = @" ";
        partial void OnGetPrintAddrLine3(ref string value);
        partial void OnPrintAddrLine3Changing(ref string value);
        partial void OnPrintAddrLine3Changed();
    
        /// <summary>
        /// There are no comments for PrintAddrLine4 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PrintAddrLine4
        {
            get
            {
                string value = _PrintAddrLine4;
                OnGetPrintAddrLine4(ref value);
                return value;
            }
            set
            {
                if (_PrintAddrLine4 != value)
                {
                  OnPrintAddrLine4Changing(ref value);
                  ReportPropertyChanging("PrintAddrLine4");
                  _PrintAddrLine4 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PrintAddrLine4");
                  OnPrintAddrLine4Changed();
              }
            }
        }
        private string _PrintAddrLine4 = @" ";
        partial void OnGetPrintAddrLine4(ref string value);
        partial void OnPrintAddrLine4Changing(ref string value);
        partial void OnPrintAddrLine4Changed();
    
        /// <summary>
        /// There are no comments for PrintAddrLine5 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PrintAddrLine5
        {
            get
            {
                string value = _PrintAddrLine5;
                OnGetPrintAddrLine5(ref value);
                return value;
            }
            set
            {
                if (_PrintAddrLine5 != value)
                {
                  OnPrintAddrLine5Changing(ref value);
                  ReportPropertyChanging("PrintAddrLine5");
                  _PrintAddrLine5 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PrintAddrLine5");
                  OnPrintAddrLine5Changed();
              }
            }
        }
        private string _PrintAddrLine5 = @" ";
        partial void OnGetPrintAddrLine5(ref string value);
        partial void OnPrintAddrLine5Changing(ref string value);
        partial void OnPrintAddrLine5Changed();
    
        /// <summary>
        /// There are no comments for PrintAddrLine6 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PrintAddrLine6
        {
            get
            {
                string value = _PrintAddrLine6;
                OnGetPrintAddrLine6(ref value);
                return value;
            }
            set
            {
                if (_PrintAddrLine6 != value)
                {
                  OnPrintAddrLine6Changing(ref value);
                  ReportPropertyChanging("PrintAddrLine6");
                  _PrintAddrLine6 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PrintAddrLine6");
                  OnPrintAddrLine6Changed();
              }
            }
        }
        private string _PrintAddrLine6 = @" ";
        partial void OnGetPrintAddrLine6(ref string value);
        partial void OnPrintAddrLine6Changing(ref string value);
        partial void OnPrintAddrLine6Changed();
    
        /// <summary>
        /// There are no comments for PrintAddrLine7 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PrintAddrLine7
        {
            get
            {
                string value = _PrintAddrLine7;
                OnGetPrintAddrLine7(ref value);
                return value;
            }
            set
            {
                if (_PrintAddrLine7 != value)
                {
                  OnPrintAddrLine7Changing(ref value);
                  ReportPropertyChanging("PrintAddrLine7");
                  _PrintAddrLine7 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PrintAddrLine7");
                  OnPrintAddrLine7Changed();
              }
            }
        }
        private string _PrintAddrLine7 = @" ";
        partial void OnGetPrintAddrLine7(ref string value);
        partial void OnPrintAddrLine7Changing(ref string value);
        partial void OnPrintAddrLine7Changed();
    
        /// <summary>
        /// There are no comments for PrintAddrLine8 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PrintAddrLine8
        {
            get
            {
                string value = _PrintAddrLine8;
                OnGetPrintAddrLine8(ref value);
                return value;
            }
            set
            {
                if (_PrintAddrLine8 != value)
                {
                  OnPrintAddrLine8Changing(ref value);
                  ReportPropertyChanging("PrintAddrLine8");
                  _PrintAddrLine8 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PrintAddrLine8");
                  OnPrintAddrLine8Changed();
              }
            }
        }
        private string _PrintAddrLine8 = @" ";
        partial void OnGetPrintAddrLine8(ref string value);
        partial void OnPrintAddrLine8Changing(ref string value);
        partial void OnPrintAddrLine8Changed();
    
        /// <summary>
        /// There are no comments for PrintAddrLine9 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PrintAddrLine9
        {
            get
            {
                string value = _PrintAddrLine9;
                OnGetPrintAddrLine9(ref value);
                return value;
            }
            set
            {
                if (_PrintAddrLine9 != value)
                {
                  OnPrintAddrLine9Changing(ref value);
                  ReportPropertyChanging("PrintAddrLine9");
                  _PrintAddrLine9 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PrintAddrLine9");
                  OnPrintAddrLine9Changed();
              }
            }
        }
        private string _PrintAddrLine9 = @" ";
        partial void OnGetPrintAddrLine9(ref string value);
        partial void OnPrintAddrLine9Changing(ref string value);
        partial void OnPrintAddrLine9Changed();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for States in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Country_State", "States")]
        public virtual EntityCollection<State> States
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<State>("Net4Sage.DataAccessModel.Country_State", "States");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<State>("Net4Sage.DataAccessModel.Country_State", "States", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Companies in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Country_Company", "Companies")]
        public virtual EntityCollection<Company> Companies
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Company>("Net4Sage.DataAccessModel.Country_Company", "Companies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Company>("Net4Sage.DataAccessModel.Country_Company", "Companies", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.State in the schema.
    /// </summary>
    /// <KeyProperties>
    /// CountryID
    /// StateID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="State")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [Net4Sage.Controls.Lookup.LookupAutoShowColumns(false)]
    [Net4Sage.Controls.Lookup.LookupFormTitle(@"Buscar Provincia")]
    public partial class State : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new State object.
        /// </summary>
        /// <param name="countryID">Initial value of CountryID.</param>
        /// <param name="stateID">Initial value of StateID.</param>
        /// <param name="minDiv">Initial value of MinDiv.</param>
        /// <param name="minInt">Initial value of MinInt.</param>
        /// <param name="minMisc">Initial value of MinMisc.</param>
        /// <param name="stateName">Initial value of StateName.</param>
        /// <param name="v1099No">Initial value of V1099No.</param>
        public static State CreateState(string countryID, string stateID, decimal minDiv, decimal minInt, decimal minMisc, string stateName, string v1099No)
        {
            State state = new State();
            state.CountryID = countryID;
            state.StateID = stateID;
            state.MinDiv = minDiv;
            state.MinInt = minInt;
            state.MinMisc = minMisc;
            state.StateName = stateName;
            state.V1099No = v1099No;
            return state;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for CountryID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"País")]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"País")]
        public virtual string CountryID
        {
            get
            {
                string value = _CountryID;
                OnGetCountryID(ref value);
                return value;
            }
            set
            {
                if (_CountryID != value)
                {
                  OnCountryIDChanging(ref value);
                  ReportPropertyChanging("CountryID");
                  _CountryID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CountryID");
                  OnCountryIDChanged();
              }
            }
        }
        private string _CountryID;
        partial void OnGetCountryID(ref string value);
        partial void OnCountryIDChanging(ref string value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// There are no comments for StateID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupKeyReturn]
        public virtual string StateID
        {
            get
            {
                string value = _StateID;
                OnGetStateID(ref value);
                return value;
            }
            set
            {
                if (_StateID != value)
                {
                  OnStateIDChanging(ref value);
                  ReportPropertyChanging("StateID");
                  _StateID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("StateID");
                  OnStateIDChanged();
              }
            }
        }
        private string _StateID = @" ";
        partial void OnGetStateID(ref string value);
        partial void OnStateIDChanging(ref string value);
        partial void OnStateIDChanged();
    
        /// <summary>
        /// There are no comments for MinDiv in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal MinDiv
        {
            get
            {
                decimal value = _MinDiv;
                OnGetMinDiv(ref value);
                return value;
            }
            set
            {
                if (_MinDiv != value)
                {
                  OnMinDivChanging(ref value);
                  ReportPropertyChanging("MinDiv");
                  _MinDiv = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MinDiv");
                  OnMinDivChanged();
              }
            }
        }
        private decimal _MinDiv = 0m;
        partial void OnGetMinDiv(ref decimal value);
        partial void OnMinDivChanging(ref decimal value);
        partial void OnMinDivChanged();
    
        /// <summary>
        /// There are no comments for MinInt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal MinInt
        {
            get
            {
                decimal value = _MinInt;
                OnGetMinInt(ref value);
                return value;
            }
            set
            {
                if (_MinInt != value)
                {
                  OnMinIntChanging(ref value);
                  ReportPropertyChanging("MinInt");
                  _MinInt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MinInt");
                  OnMinIntChanged();
              }
            }
        }
        private decimal _MinInt = 0m;
        partial void OnGetMinInt(ref decimal value);
        partial void OnMinIntChanging(ref decimal value);
        partial void OnMinIntChanged();
    
        /// <summary>
        /// There are no comments for MinMisc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal MinMisc
        {
            get
            {
                decimal value = _MinMisc;
                OnGetMinMisc(ref value);
                return value;
            }
            set
            {
                if (_MinMisc != value)
                {
                  OnMinMiscChanging(ref value);
                  ReportPropertyChanging("MinMisc");
                  _MinMisc = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MinMisc");
                  OnMinMiscChanged();
              }
            }
        }
        private decimal _MinMisc = 0m;
        partial void OnGetMinMisc(ref decimal value);
        partial void OnMinMiscChanging(ref decimal value);
        partial void OnMinMiscChanged();
    
        /// <summary>
        /// There are no comments for StateName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupTextReturn]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Provincia")]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"Nombre")]
        public virtual string StateName
        {
            get
            {
                string value = _StateName;
                OnGetStateName(ref value);
                return value;
            }
            set
            {
                if (_StateName != value)
                {
                  OnStateNameChanging(ref value);
                  ReportPropertyChanging("StateName");
                  _StateName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("StateName");
                  OnStateNameChanged();
              }
            }
        }
        private string _StateName;
        partial void OnGetStateName(ref string value);
        partial void OnStateNameChanging(ref string value);
        partial void OnStateNameChanged();
    
        /// <summary>
        /// There are no comments for V1099No in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string V1099No
        {
            get
            {
                string value = _V1099No;
                OnGetV1099No(ref value);
                return value;
            }
            set
            {
                if (_V1099No != value)
                {
                  OnV1099NoChanging(ref value);
                  ReportPropertyChanging("V1099No");
                  _V1099No = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("V1099No");
                  OnV1099NoChanged();
              }
            }
        }
        private string _V1099No = @" ";
        partial void OnGetV1099No(ref string value);
        partial void OnV1099NoChanging(ref string value);
        partial void OnV1099NoChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Country in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "Country_State", "Country")]
        public virtual Country Country
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Country>("Net4Sage.DataAccessModel.Country_State", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Country>("Net4Sage.DataAccessModel.Country_State", "Country").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Country in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Country>("Net4Sage.DataAccessModel.Country_State", "Country");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Country>("Net4Sage.DataAccessModel.Country_State", "Country", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Country>("Net4Sage.DataAccessModel.Country_State", "Country").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for StateZones in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "State_StateZone", "StateZones")]
        public virtual EntityCollection<StateZone> StateZones
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<StateZone>("Net4Sage.DataAccessModel.State_StateZone", "StateZones");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<StateZone>("Net4Sage.DataAccessModel.State_StateZone", "StateZones", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.StateZone in the schema.
    /// </summary>
    /// <KeyProperties>
    /// StateZoneName
    /// StateID
    /// CountryID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="StateZone")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [Net4Sage.Controls.Lookup.LookupAutoShowColumns(false)]
    [Net4Sage.Controls.Lookup.LookupFormTitle(@"Buscar Municipio")]
    public partial class StateZone : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new StateZone object.
        /// </summary>
        /// <param name="stateZoneName">Initial value of StateZoneName.</param>
        /// <param name="stateID">Initial value of StateID.</param>
        /// <param name="countryID">Initial value of CountryID.</param>
        public static StateZone CreateStateZone(string stateZoneName, string stateID, string countryID)
        {
            StateZone stateZone = new StateZone();
            stateZone.StateZoneName = stateZoneName;
            stateZone.StateID = stateID;
            stateZone.CountryID = countryID;
            return stateZone;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for StateZoneName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"Municipio")]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Municipio")]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        [Net4Sage.Controls.Lookup.LookupTextReturn]
        [Net4Sage.Controls.Lookup.LookupKeyReturn]
        public virtual string StateZoneName
        {
            get
            {
                string value = _StateZoneName;
                OnGetStateZoneName(ref value);
                return value;
            }
            set
            {
                if (_StateZoneName != value)
                {
                  OnStateZoneNameChanging(ref value);
                  ReportPropertyChanging("StateZoneName");
                  _StateZoneName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("StateZoneName");
                  OnStateZoneNameChanged();
              }
            }
        }
        private string _StateZoneName;
        partial void OnGetStateZoneName(ref string value);
        partial void OnStateZoneNameChanging(ref string value);
        partial void OnStateZoneNameChanged();
    
        /// <summary>
        /// There are no comments for StateID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string StateID
        {
            get
            {
                string value = _StateID;
                OnGetStateID(ref value);
                return value;
            }
            set
            {
                if (_StateID != value)
                {
                  OnStateIDChanging(ref value);
                  ReportPropertyChanging("StateID");
                  _StateID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("StateID");
                  OnStateIDChanged();
              }
            }
        }
        private string _StateID;
        partial void OnGetStateID(ref string value);
        partial void OnStateIDChanging(ref string value);
        partial void OnStateIDChanged();
    
        /// <summary>
        /// There are no comments for CountryID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CountryID
        {
            get
            {
                string value = _CountryID;
                OnGetCountryID(ref value);
                return value;
            }
            set
            {
                if (_CountryID != value)
                {
                  OnCountryIDChanging(ref value);
                  ReportPropertyChanging("CountryID");
                  _CountryID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CountryID");
                  OnCountryIDChanged();
              }
            }
        }
        private string _CountryID;
        partial void OnGetCountryID(ref string value);
        partial void OnCountryIDChanging(ref string value);
        partial void OnCountryIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for State in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "State_StateZone", "State")]
        public virtual State State
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<State>("Net4Sage.DataAccessModel.State_StateZone", "State").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<State>("Net4Sage.DataAccessModel.State_StateZone", "State").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for State in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<State> StateReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<State>("Net4Sage.DataAccessModel.State_StateZone", "State");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<State>("Net4Sage.DataAccessModel.State_StateZone", "State", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<State>("Net4Sage.DataAccessModel.State_StateZone", "State").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.SalesOrderImport in the schema.
    /// </summary>
    /// <KeyProperties>
    /// SalesOrderImportKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="SalesOrderImport")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesOrderImport : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SalesOrderImport object.
        /// </summary>
        /// <param name="salesOrderImportKey">Initial value of SalesOrderImportKey.</param>
        /// <param name="crHold">Initial value of CrHold.</param>
        /// <param name="currExchRate">Initial value of CurrExchRate.</param>
        /// <param name="errorStatus">Initial value of ErrorStatus.</param>
        /// <param name="freightAmt">Initial value of FreightAmt.</param>
        /// <param name="salesAmt">Initial value of SalesAmt.</param>
        /// <param name="salesAmtHC">Initial value of SalesAmtHC.</param>
        /// <param name="status">Initial value of Status.</param>
        /// <param name="tradeDiscAmt">Initial value of TradeDiscAmt.</param>
        /// <param name="tranAmt">Initial value of TranAmt.</param>
        /// <param name="tranAmtHC">Initial value of TranAmtHC.</param>
        public static SalesOrderImport CreateSalesOrderImport(int salesOrderImportKey, short crHold, double currExchRate, short errorStatus, decimal freightAmt, decimal salesAmt, decimal salesAmtHC, short status, decimal tradeDiscAmt, decimal tranAmt, decimal tranAmtHC)
        {
            SalesOrderImport salesOrderImport = new SalesOrderImport();
            salesOrderImport.SalesOrderImportKey = salesOrderImportKey;
            salesOrderImport.CrHold = crHold;
            salesOrderImport.CurrExchRate = currExchRate;
            salesOrderImport.ErrorStatus = errorStatus;
            salesOrderImport.FreightAmt = freightAmt;
            salesOrderImport.SalesAmt = salesAmt;
            salesOrderImport.SalesAmtHC = salesAmtHC;
            salesOrderImport.Status = status;
            salesOrderImport.TradeDiscAmt = tradeDiscAmt;
            salesOrderImport.TranAmt = tranAmt;
            salesOrderImport.TranAmtHC = tranAmtHC;
            return salesOrderImport;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for SalesOrderImportKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SalesOrderImportKey
        {
            get
            {
                int value = _SalesOrderImportKey;
                OnGetSalesOrderImportKey(ref value);
                return value;
            }
            set
            {
                if (_SalesOrderImportKey != value)
                {
                  OnSalesOrderImportKeyChanging(ref value);
                  ReportPropertyChanging("SalesOrderImportKey");
                  _SalesOrderImportKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesOrderImportKey");
                  OnSalesOrderImportKeyChanged();
              }
            }
        }
        private int _SalesOrderImportKey;
        partial void OnGetSalesOrderImportKey(ref int value);
        partial void OnSalesOrderImportKeyChanging(ref int value);
        partial void OnSalesOrderImportKeyChanged();
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for ConfirmNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ConfirmNo
        {
            get
            {
                string value = _ConfirmNo;
                OnGetConfirmNo(ref value);
                return value;
            }
            set
            {
                if (_ConfirmNo != value)
                {
                  OnConfirmNoChanging(ref value);
                  ReportPropertyChanging("ConfirmNo");
                  _ConfirmNo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ConfirmNo");
                  OnConfirmNoChanged();
              }
            }
        }
        private string _ConfirmNo;
        partial void OnGetConfirmNo(ref string value);
        partial void OnConfirmNoChanging(ref string value);
        partial void OnConfirmNoChanged();
    
        /// <summary>
        /// There are no comments for CrCardAuthNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CrCardAuthNo
        {
            get
            {
                string value = _CrCardAuthNo;
                OnGetCrCardAuthNo(ref value);
                return value;
            }
            set
            {
                if (_CrCardAuthNo != value)
                {
                  OnCrCardAuthNoChanging(ref value);
                  ReportPropertyChanging("CrCardAuthNo");
                  _CrCardAuthNo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CrCardAuthNo");
                  OnCrCardAuthNoChanged();
              }
            }
        }
        private string _CrCardAuthNo;
        partial void OnGetCrCardAuthNo(ref string value);
        partial void OnCrCardAuthNoChanging(ref string value);
        partial void OnCrCardAuthNoChanged();
    
        /// <summary>
        /// There are no comments for CrCardExpiration in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CrCardExpiration
        {
            get
            {
                string value = _CrCardExpiration;
                OnGetCrCardExpiration(ref value);
                return value;
            }
            set
            {
                if (_CrCardExpiration != value)
                {
                  OnCrCardExpirationChanging(ref value);
                  ReportPropertyChanging("CrCardExpiration");
                  _CrCardExpiration = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CrCardExpiration");
                  OnCrCardExpirationChanged();
              }
            }
        }
        private string _CrCardExpiration;
        partial void OnGetCrCardExpiration(ref string value);
        partial void OnCrCardExpirationChanging(ref string value);
        partial void OnCrCardExpirationChanged();
    
        /// <summary>
        /// There are no comments for CrCardNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CrCardNo
        {
            get
            {
                string value = _CrCardNo;
                OnGetCrCardNo(ref value);
                return value;
            }
            set
            {
                if (_CrCardNo != value)
                {
                  OnCrCardNoChanging(ref value);
                  ReportPropertyChanging("CrCardNo");
                  _CrCardNo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CrCardNo");
                  OnCrCardNoChanged();
              }
            }
        }
        private string _CrCardNo;
        partial void OnGetCrCardNo(ref string value);
        partial void OnCrCardNoChanging(ref string value);
        partial void OnCrCardNoChanged();
    
        /// <summary>
        /// There are no comments for CrHold in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CrHold
        {
            get
            {
                short value = _CrHold;
                OnGetCrHold(ref value);
                return value;
            }
            set
            {
                if (_CrHold != value)
                {
                  OnCrHoldChanging(ref value);
                  ReportPropertyChanging("CrHold");
                  _CrHold = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CrHold");
                  OnCrHoldChanged();
              }
            }
        }
        private short _CrHold = 0;
        partial void OnGetCrHold(ref short value);
        partial void OnCrHoldChanging(ref short value);
        partial void OnCrHoldChanged();
    
        /// <summary>
        /// There are no comments for CurrExchRate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual double CurrExchRate
        {
            get
            {
                double value = _CurrExchRate;
                OnGetCurrExchRate(ref value);
                return value;
            }
            set
            {
                if (_CurrExchRate != value)
                {
                  OnCurrExchRateChanging(ref value);
                  ReportPropertyChanging("CurrExchRate");
                  _CurrExchRate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CurrExchRate");
                  OnCurrExchRateChanged();
              }
            }
        }
        private double _CurrExchRate = 1;
        partial void OnGetCurrExchRate(ref double value);
        partial void OnCurrExchRateChanging(ref double value);
        partial void OnCurrExchRateChanged();
    
        /// <summary>
        /// There are no comments for CurrExchSchdKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CurrExchSchdKey
        {
            get
            {
                int? value = _CurrExchSchdKey;
                OnGetCurrExchSchdKey(ref value);
                return value;
            }
            set
            {
                if (_CurrExchSchdKey != value)
                {
                  OnCurrExchSchdKeyChanging(ref value);
                  ReportPropertyChanging("CurrExchSchdKey");
                  _CurrExchSchdKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CurrExchSchdKey");
                  OnCurrExchSchdKeyChanged();
              }
            }
        }
        private int? _CurrExchSchdKey;
        partial void OnGetCurrExchSchdKey(ref int? value);
        partial void OnCurrExchSchdKeyChanging(ref int? value);
        partial void OnCurrExchSchdKeyChanged();
    
        /// <summary>
        /// There are no comments for CurrID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CurrID
        {
            get
            {
                string value = _CurrID;
                OnGetCurrID(ref value);
                return value;
            }
            set
            {
                if (_CurrID != value)
                {
                  OnCurrIDChanging(ref value);
                  ReportPropertyChanging("CurrID");
                  _CurrID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CurrID");
                  OnCurrIDChanged();
              }
            }
        }
        private string _CurrID;
        partial void OnGetCurrID(ref string value);
        partial void OnCurrIDChanging(ref string value);
        partial void OnCurrIDChanged();
    
        /// <summary>
        /// There are no comments for CustKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CustKey
        {
            get
            {
                int? value = _CustKey;
                OnGetCustKey(ref value);
                return value;
            }
            set
            {
                if (_CustKey != value)
                {
                  OnCustKeyChanging(ref value);
                  ReportPropertyChanging("CustKey");
                  _CustKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustKey");
                  OnCustKeyChanged();
              }
            }
        }
        private int? _CustKey;
        partial void OnGetCustKey(ref int? value);
        partial void OnCustKeyChanging(ref int? value);
        partial void OnCustKeyChanged();
    
        /// <summary>
        /// There are no comments for CustPONo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CustPONo
        {
            get
            {
                string value = _CustPONo;
                OnGetCustPONo(ref value);
                return value;
            }
            set
            {
                if (_CustPONo != value)
                {
                  OnCustPONoChanging(ref value);
                  ReportPropertyChanging("CustPONo");
                  _CustPONo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CustPONo");
                  OnCustPONoChanged();
              }
            }
        }
        private string _CustPONo;
        partial void OnGetCustPONo(ref string value);
        partial void OnCustPONoChanging(ref string value);
        partial void OnCustPONoChanged();
    
        /// <summary>
        /// There are no comments for ErrorSessionID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ErrorSessionID
        {
            get
            {
                int? value = _ErrorSessionID;
                OnGetErrorSessionID(ref value);
                return value;
            }
            set
            {
                if (_ErrorSessionID != value)
                {
                  OnErrorSessionIDChanging(ref value);
                  ReportPropertyChanging("ErrorSessionID");
                  _ErrorSessionID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ErrorSessionID");
                  OnErrorSessionIDChanged();
              }
            }
        }
        private int? _ErrorSessionID;
        partial void OnGetErrorSessionID(ref int? value);
        partial void OnErrorSessionIDChanging(ref int? value);
        partial void OnErrorSessionIDChanged();
    
        /// <summary>
        /// There are no comments for ErrorStatus in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ErrorStatus
        {
            get
            {
                short value = _ErrorStatus;
                OnGetErrorStatus(ref value);
                return value;
            }
            set
            {
                if (_ErrorStatus != value)
                {
                  OnErrorStatusChanging(ref value);
                  ReportPropertyChanging("ErrorStatus");
                  _ErrorStatus = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ErrorStatus");
                  OnErrorStatusChanged();
              }
            }
        }
        private short _ErrorStatus = 0;
        partial void OnGetErrorStatus(ref short value);
        partial void OnErrorStatusChanging(ref short value);
        partial void OnErrorStatusChanged();
    
        /// <summary>
        /// There are no comments for ExtUserKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ExtUserKey
        {
            get
            {
                int? value = _ExtUserKey;
                OnGetExtUserKey(ref value);
                return value;
            }
            set
            {
                if (_ExtUserKey != value)
                {
                  OnExtUserKeyChanging(ref value);
                  ReportPropertyChanging("ExtUserKey");
                  _ExtUserKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ExtUserKey");
                  OnExtUserKeyChanged();
              }
            }
        }
        private int? _ExtUserKey;
        partial void OnGetExtUserKey(ref int? value);
        partial void OnExtUserKeyChanging(ref int? value);
        partial void OnExtUserKeyChanged();
    
        /// <summary>
        /// There are no comments for FreightAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal FreightAmt
        {
            get
            {
                decimal value = _FreightAmt;
                OnGetFreightAmt(ref value);
                return value;
            }
            set
            {
                if (_FreightAmt != value)
                {
                  OnFreightAmtChanging(ref value);
                  ReportPropertyChanging("FreightAmt");
                  _FreightAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FreightAmt");
                  OnFreightAmtChanged();
              }
            }
        }
        private decimal _FreightAmt = 0m;
        partial void OnGetFreightAmt(ref decimal value);
        partial void OnFreightAmtChanging(ref decimal value);
        partial void OnFreightAmtChanged();
    
        /// <summary>
        /// There are no comments for PmtTermsKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? PmtTermsKey
        {
            get
            {
                int? value = _PmtTermsKey;
                OnGetPmtTermsKey(ref value);
                return value;
            }
            set
            {
                if (_PmtTermsKey != value)
                {
                  OnPmtTermsKeyChanging(ref value);
                  ReportPropertyChanging("PmtTermsKey");
                  _PmtTermsKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PmtTermsKey");
                  OnPmtTermsKeyChanged();
              }
            }
        }
        private int? _PmtTermsKey;
        partial void OnGetPmtTermsKey(ref int? value);
        partial void OnPmtTermsKeyChanging(ref int? value);
        partial void OnPmtTermsKeyChanged();
    
        /// <summary>
        /// There are no comments for ReqDelvDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? ReqDelvDate
        {
            get
            {
                global::System.DateTime? value = _ReqDelvDate;
                OnGetReqDelvDate(ref value);
                return value;
            }
            set
            {
                if (_ReqDelvDate != value)
                {
                  OnReqDelvDateChanging(ref value);
                  ReportPropertyChanging("ReqDelvDate");
                  _ReqDelvDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ReqDelvDate");
                  OnReqDelvDateChanged();
              }
            }
        }
        private global::System.DateTime? _ReqDelvDate;
        partial void OnGetReqDelvDate(ref global::System.DateTime? value);
        partial void OnReqDelvDateChanging(ref global::System.DateTime? value);
        partial void OnReqDelvDateChanged();
    
        /// <summary>
        /// There are no comments for SalesAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal SalesAmt
        {
            get
            {
                decimal value = _SalesAmt;
                OnGetSalesAmt(ref value);
                return value;
            }
            set
            {
                if (_SalesAmt != value)
                {
                  OnSalesAmtChanging(ref value);
                  ReportPropertyChanging("SalesAmt");
                  _SalesAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesAmt");
                  OnSalesAmtChanged();
              }
            }
        }
        private decimal _SalesAmt = 0m;
        partial void OnGetSalesAmt(ref decimal value);
        partial void OnSalesAmtChanging(ref decimal value);
        partial void OnSalesAmtChanged();
    
        /// <summary>
        /// There are no comments for SalesAmtHC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal SalesAmtHC
        {
            get
            {
                decimal value = _SalesAmtHC;
                OnGetSalesAmtHC(ref value);
                return value;
            }
            set
            {
                if (_SalesAmtHC != value)
                {
                  OnSalesAmtHCChanging(ref value);
                  ReportPropertyChanging("SalesAmtHC");
                  _SalesAmtHC = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesAmtHC");
                  OnSalesAmtHCChanged();
              }
            }
        }
        private decimal _SalesAmtHC = 0m;
        partial void OnGetSalesAmtHC(ref decimal value);
        partial void OnSalesAmtHCChanging(ref decimal value);
        partial void OnSalesAmtHCChanged();
    
        /// <summary>
        /// There are no comments for ShipMethKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ShipMethKey
        {
            get
            {
                int? value = _ShipMethKey;
                OnGetShipMethKey(ref value);
                return value;
            }
            set
            {
                if (_ShipMethKey != value)
                {
                  OnShipMethKeyChanging(ref value);
                  ReportPropertyChanging("ShipMethKey");
                  _ShipMethKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipMethKey");
                  OnShipMethKeyChanged();
              }
            }
        }
        private int? _ShipMethKey;
        partial void OnGetShipMethKey(ref int? value);
        partial void OnShipMethKeyChanging(ref int? value);
        partial void OnShipMethKeyChanged();
    
        /// <summary>
        /// There are no comments for ShipToCustAddrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ShipToCustAddrKey
        {
            get
            {
                int? value = _ShipToCustAddrKey;
                OnGetShipToCustAddrKey(ref value);
                return value;
            }
            set
            {
                if (_ShipToCustAddrKey != value)
                {
                  OnShipToCustAddrKeyChanging(ref value);
                  ReportPropertyChanging("ShipToCustAddrKey");
                  _ShipToCustAddrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipToCustAddrKey");
                  OnShipToCustAddrKeyChanged();
              }
            }
        }
        private int? _ShipToCustAddrKey;
        partial void OnGetShipToCustAddrKey(ref int? value);
        partial void OnShipToCustAddrKeyChanging(ref int? value);
        partial void OnShipToCustAddrKeyChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Status
        {
            get
            {
                short value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private short _Status = 0;
        partial void OnGetStatus(ref short value);
        partial void OnStatusChanging(ref short value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// There are no comments for TenderTypeKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? TenderTypeKey
        {
            get
            {
                int? value = _TenderTypeKey;
                OnGetTenderTypeKey(ref value);
                return value;
            }
            set
            {
                if (_TenderTypeKey != value)
                {
                  OnTenderTypeKeyChanging(ref value);
                  ReportPropertyChanging("TenderTypeKey");
                  _TenderTypeKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TenderTypeKey");
                  OnTenderTypeKeyChanged();
              }
            }
        }
        private int? _TenderTypeKey;
        partial void OnGetTenderTypeKey(ref int? value);
        partial void OnTenderTypeKeyChanging(ref int? value);
        partial void OnTenderTypeKeyChanged();
    
        /// <summary>
        /// There are no comments for TradeDiscAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal TradeDiscAmt
        {
            get
            {
                decimal value = _TradeDiscAmt;
                OnGetTradeDiscAmt(ref value);
                return value;
            }
            set
            {
                if (_TradeDiscAmt != value)
                {
                  OnTradeDiscAmtChanging(ref value);
                  ReportPropertyChanging("TradeDiscAmt");
                  _TradeDiscAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TradeDiscAmt");
                  OnTradeDiscAmtChanged();
              }
            }
        }
        private decimal _TradeDiscAmt = 0m;
        partial void OnGetTradeDiscAmt(ref decimal value);
        partial void OnTradeDiscAmtChanging(ref decimal value);
        partial void OnTradeDiscAmtChanged();
    
        /// <summary>
        /// There are no comments for TranAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal TranAmt
        {
            get
            {
                decimal value = _TranAmt;
                OnGetTranAmt(ref value);
                return value;
            }
            set
            {
                if (_TranAmt != value)
                {
                  OnTranAmtChanging(ref value);
                  ReportPropertyChanging("TranAmt");
                  _TranAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranAmt");
                  OnTranAmtChanged();
              }
            }
        }
        private decimal _TranAmt = 0m;
        partial void OnGetTranAmt(ref decimal value);
        partial void OnTranAmtChanging(ref decimal value);
        partial void OnTranAmtChanged();
    
        /// <summary>
        /// There are no comments for TranAmtHC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal TranAmtHC
        {
            get
            {
                decimal value = _TranAmtHC;
                OnGetTranAmtHC(ref value);
                return value;
            }
            set
            {
                if (_TranAmtHC != value)
                {
                  OnTranAmtHCChanging(ref value);
                  ReportPropertyChanging("TranAmtHC");
                  _TranAmtHC = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranAmtHC");
                  OnTranAmtHCChanged();
              }
            }
        }
        private decimal _TranAmtHC = 0m;
        partial void OnGetTranAmtHC(ref decimal value);
        partial void OnTranAmtHCChanging(ref decimal value);
        partial void OnTranAmtHCChanged();
    
        /// <summary>
        /// There are no comments for TranCmnt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string TranCmnt
        {
            get
            {
                string value = _TranCmnt;
                OnGetTranCmnt(ref value);
                return value;
            }
            set
            {
                if (_TranCmnt != value)
                {
                  OnTranCmntChanging(ref value);
                  ReportPropertyChanging("TranCmnt");
                  _TranCmnt = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TranCmnt");
                  OnTranCmntChanged();
              }
            }
        }
        private string _TranCmnt;
        partial void OnGetTranCmnt(ref string value);
        partial void OnTranCmntChanging(ref string value);
        partial void OnTranCmntChanged();
    
        /// <summary>
        /// There are no comments for TranDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? TranDate
        {
            get
            {
                global::System.DateTime? value = _TranDate;
                OnGetTranDate(ref value);
                return value;
            }
            set
            {
                if (_TranDate != value)
                {
                  OnTranDateChanging(ref value);
                  ReportPropertyChanging("TranDate");
                  _TranDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranDate");
                  OnTranDateChanged();
              }
            }
        }
        private global::System.DateTime? _TranDate;
        partial void OnGetTranDate(ref global::System.DateTime? value);
        partial void OnTranDateChanging(ref global::System.DateTime? value);
        partial void OnTranDateChanged();
    
        /// <summary>
        /// There are no comments for TranType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? TranType
        {
            get
            {
                int? value = _TranType;
                OnGetTranType(ref value);
                return value;
            }
            set
            {
                if (_TranType != value)
                {
                  OnTranTypeChanging(ref value);
                  ReportPropertyChanging("TranType");
                  _TranType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranType");
                  OnTranTypeChanged();
              }
            }
        }
        private int? _TranType;
        partial void OnGetTranType(ref int? value);
        partial void OnTranTypeChanging(ref int? value);
        partial void OnTranTypeChanged();
    
        /// <summary>
        /// There are no comments for WhseKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? WhseKey
        {
            get
            {
                int? value = _WhseKey;
                OnGetWhseKey(ref value);
                return value;
            }
            set
            {
                if (_WhseKey != value)
                {
                  OnWhseKeyChanging(ref value);
                  ReportPropertyChanging("WhseKey");
                  _WhseKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WhseKey");
                  OnWhseKeyChanged();
              }
            }
        }
        private int? _WhseKey;
        partial void OnGetWhseKey(ref int? value);
        partial void OnWhseKeyChanging(ref int? value);
        partial void OnWhseKeyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SOLineImports in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "SalesOrderImport_SOLineImport", "SOLineImports")]
        public virtual EntityCollection<SOLineImport> SOLineImports
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SOLineImport>("Net4Sage.DataAccessModel.SalesOrderImport_SOLineImport", "SOLineImports");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SOLineImport>("Net4Sage.DataAccessModel.SalesOrderImport_SOLineImport", "SOLineImports", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.SOLineImport in the schema.
    /// </summary>
    /// <KeyProperties>
    /// SOLineImportKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="SOLineImport")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SOLineImport : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SOLineImport object.
        /// </summary>
        /// <param name="sOLineImportKey">Initial value of SOLineImportKey.</param>
        /// <param name="extAmt">Initial value of ExtAmt.</param>
        /// <param name="freightAmt">Initial value of FreightAmt.</param>
        /// <param name="qtyOrd">Initial value of QtyOrd.</param>
        /// <param name="salesOrderImportKey">Initial value of SalesOrderImportKey.</param>
        /// <param name="status">Initial value of Status.</param>
        /// <param name="unitPrice">Initial value of UnitPrice.</param>
        public static SOLineImport CreateSOLineImport(int sOLineImportKey, decimal extAmt, decimal freightAmt, decimal qtyOrd, int salesOrderImportKey, short status, decimal unitPrice)
        {
            SOLineImport sOLineImport = new SOLineImport();
            sOLineImport.SOLineImportKey = sOLineImportKey;
            sOLineImport.ExtAmt = extAmt;
            sOLineImport.FreightAmt = freightAmt;
            sOLineImport.QtyOrd = qtyOrd;
            sOLineImport.SalesOrderImportKey = salesOrderImportKey;
            sOLineImport.Status = status;
            sOLineImport.UnitPrice = unitPrice;
            return sOLineImport;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for SOLineImportKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SOLineImportKey
        {
            get
            {
                int value = _SOLineImportKey;
                OnGetSOLineImportKey(ref value);
                return value;
            }
            set
            {
                if (_SOLineImportKey != value)
                {
                  OnSOLineImportKeyChanging(ref value);
                  ReportPropertyChanging("SOLineImportKey");
                  _SOLineImportKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SOLineImportKey");
                  OnSOLineImportKeyChanged();
              }
            }
        }
        private int _SOLineImportKey;
        partial void OnGetSOLineImportKey(ref int value);
        partial void OnSOLineImportKeyChanging(ref int value);
        partial void OnSOLineImportKeyChanged();
    
        /// <summary>
        /// There are no comments for CustItemNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CustItemNo
        {
            get
            {
                string value = _CustItemNo;
                OnGetCustItemNo(ref value);
                return value;
            }
            set
            {
                if (_CustItemNo != value)
                {
                  OnCustItemNoChanging(ref value);
                  ReportPropertyChanging("CustItemNo");
                  _CustItemNo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CustItemNo");
                  OnCustItemNoChanged();
              }
            }
        }
        private string _CustItemNo;
        partial void OnGetCustItemNo(ref string value);
        partial void OnCustItemNoChanging(ref string value);
        partial void OnCustItemNoChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for ExtAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal ExtAmt
        {
            get
            {
                decimal value = _ExtAmt;
                OnGetExtAmt(ref value);
                return value;
            }
            set
            {
                if (_ExtAmt != value)
                {
                  OnExtAmtChanging(ref value);
                  ReportPropertyChanging("ExtAmt");
                  _ExtAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ExtAmt");
                  OnExtAmtChanged();
              }
            }
        }
        private decimal _ExtAmt = 0m;
        partial void OnGetExtAmt(ref decimal value);
        partial void OnExtAmtChanging(ref decimal value);
        partial void OnExtAmtChanged();
    
        /// <summary>
        /// There are no comments for FreightAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal FreightAmt
        {
            get
            {
                decimal value = _FreightAmt;
                OnGetFreightAmt(ref value);
                return value;
            }
            set
            {
                if (_FreightAmt != value)
                {
                  OnFreightAmtChanging(ref value);
                  ReportPropertyChanging("FreightAmt");
                  _FreightAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FreightAmt");
                  OnFreightAmtChanged();
              }
            }
        }
        private decimal _FreightAmt = 0m;
        partial void OnGetFreightAmt(ref decimal value);
        partial void OnFreightAmtChanging(ref decimal value);
        partial void OnFreightAmtChanged();
    
        /// <summary>
        /// There are no comments for ItemID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ItemID
        {
            get
            {
                string value = _ItemID;
                OnGetItemID(ref value);
                return value;
            }
            set
            {
                if (_ItemID != value)
                {
                  OnItemIDChanging(ref value);
                  ReportPropertyChanging("ItemID");
                  _ItemID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ItemID");
                  OnItemIDChanged();
              }
            }
        }
        private string _ItemID;
        partial void OnGetItemID(ref string value);
        partial void OnItemIDChanging(ref string value);
        partial void OnItemIDChanged();
    
        /// <summary>
        /// There are no comments for ItemKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ItemKey
        {
            get
            {
                int? value = _ItemKey;
                OnGetItemKey(ref value);
                return value;
            }
            set
            {
                if (_ItemKey != value)
                {
                  OnItemKeyChanging(ref value);
                  ReportPropertyChanging("ItemKey");
                  _ItemKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ItemKey");
                  OnItemKeyChanged();
              }
            }
        }
        private int? _ItemKey;
        partial void OnGetItemKey(ref int? value);
        partial void OnItemKeyChanging(ref int? value);
        partial void OnItemKeyChanged();
    
        /// <summary>
        /// There are no comments for QtyOrd in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal QtyOrd
        {
            get
            {
                decimal value = _QtyOrd;
                OnGetQtyOrd(ref value);
                return value;
            }
            set
            {
                if (_QtyOrd != value)
                {
                  OnQtyOrdChanging(ref value);
                  ReportPropertyChanging("QtyOrd");
                  _QtyOrd = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QtyOrd");
                  OnQtyOrdChanged();
              }
            }
        }
        private decimal _QtyOrd = 0m;
        partial void OnGetQtyOrd(ref decimal value);
        partial void OnQtyOrdChanging(ref decimal value);
        partial void OnQtyOrdChanged();
    
        /// <summary>
        /// There are no comments for SalesOrderImportKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SalesOrderImportKey
        {
            get
            {
                int value = _SalesOrderImportKey;
                OnGetSalesOrderImportKey(ref value);
                return value;
            }
            set
            {
                if (_SalesOrderImportKey != value)
                {
                  OnSalesOrderImportKeyChanging(ref value);
                  ReportPropertyChanging("SalesOrderImportKey");
                  _SalesOrderImportKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesOrderImportKey");
                  OnSalesOrderImportKeyChanged();
              }
            }
        }
        private int _SalesOrderImportKey;
        partial void OnGetSalesOrderImportKey(ref int value);
        partial void OnSalesOrderImportKeyChanging(ref int value);
        partial void OnSalesOrderImportKeyChanged();
    
        /// <summary>
        /// There are no comments for SOLineNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual short? SOLineNo
        {
            get
            {
                short? value = _SOLineNo;
                OnGetSOLineNo(ref value);
                return value;
            }
            set
            {
                if (_SOLineNo != value)
                {
                  OnSOLineNoChanging(ref value);
                  ReportPropertyChanging("SOLineNo");
                  _SOLineNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SOLineNo");
                  OnSOLineNoChanged();
              }
            }
        }
        private short? _SOLineNo;
        partial void OnGetSOLineNo(ref short? value);
        partial void OnSOLineNoChanging(ref short? value);
        partial void OnSOLineNoChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Status
        {
            get
            {
                short value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private short _Status = 0;
        partial void OnGetStatus(ref short value);
        partial void OnStatusChanging(ref short value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// There are no comments for STaxClassKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? STaxClassKey
        {
            get
            {
                int? value = _STaxClassKey;
                OnGetSTaxClassKey(ref value);
                return value;
            }
            set
            {
                if (_STaxClassKey != value)
                {
                  OnSTaxClassKeyChanging(ref value);
                  ReportPropertyChanging("STaxClassKey");
                  _STaxClassKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("STaxClassKey");
                  OnSTaxClassKeyChanged();
              }
            }
        }
        private int? _STaxClassKey;
        partial void OnGetSTaxClassKey(ref int? value);
        partial void OnSTaxClassKeyChanging(ref int? value);
        partial void OnSTaxClassKeyChanged();
    
        /// <summary>
        /// There are no comments for UnitMeasKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? UnitMeasKey
        {
            get
            {
                int? value = _UnitMeasKey;
                OnGetUnitMeasKey(ref value);
                return value;
            }
            set
            {
                if (_UnitMeasKey != value)
                {
                  OnUnitMeasKeyChanging(ref value);
                  ReportPropertyChanging("UnitMeasKey");
                  _UnitMeasKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UnitMeasKey");
                  OnUnitMeasKeyChanged();
              }
            }
        }
        private int? _UnitMeasKey;
        partial void OnGetUnitMeasKey(ref int? value);
        partial void OnUnitMeasKeyChanging(ref int? value);
        partial void OnUnitMeasKeyChanged();
    
        /// <summary>
        /// There are no comments for UnitPrice in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal UnitPrice
        {
            get
            {
                decimal value = _UnitPrice;
                OnGetUnitPrice(ref value);
                return value;
            }
            set
            {
                if (_UnitPrice != value)
                {
                  OnUnitPriceChanging(ref value);
                  ReportPropertyChanging("UnitPrice");
                  _UnitPrice = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UnitPrice");
                  OnUnitPriceChanged();
              }
            }
        }
        private decimal _UnitPrice = 0m;
        partial void OnGetUnitPrice(ref decimal value);
        partial void OnUnitPriceChanging(ref decimal value);
        partial void OnUnitPriceChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for SalesOrderImport in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "SalesOrderImport_SOLineImport", "SalesOrderImport")]
        public virtual SalesOrderImport SalesOrderImport
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesOrderImport>("Net4Sage.DataAccessModel.SalesOrderImport_SOLineImport", "SalesOrderImport").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesOrderImport>("Net4Sage.DataAccessModel.SalesOrderImport_SOLineImport", "SalesOrderImport").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for SalesOrderImport in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SalesOrderImport> SalesOrderImportReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesOrderImport>("Net4Sage.DataAccessModel.SalesOrderImport_SOLineImport", "SalesOrderImport");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<SalesOrderImport>("Net4Sage.DataAccessModel.SalesOrderImport_SOLineImport", "SalesOrderImport", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<SalesOrderImport>("Net4Sage.DataAccessModel.SalesOrderImport_SOLineImport", "SalesOrderImport").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.PendReceiver in the schema.
    /// </summary>
    /// <KeyProperties>
    /// RcvrKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="PendReceiver")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PendReceiver : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new PendReceiver object.
        /// </summary>
        /// <param name="rcvrKey">Initial value of RcvrKey.</param>
        /// <param name="batchKey">Initial value of BatchKey.</param>
        /// <param name="billOfLadingNo">Initial value of BillOfLadingNo.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="createType">Initial value of CreateType.</param>
        /// <param name="currExchRate">Initial value of CurrExchRate.</param>
        /// <param name="currID">Initial value of CurrID.</param>
        /// <param name="purchCompanyID">Initial value of PurchCompanyID.</param>
        /// <param name="seqNo">Initial value of SeqNo.</param>
        /// <param name="tranDate">Initial value of TranDate.</param>
        /// <param name="tranID">Initial value of TranID.</param>
        /// <param name="tranNo">Initial value of TranNo.</param>
        /// <param name="tranType">Initial value of TranType.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        /// <param name="vendPerfDeliveryWrongDate">Initial value of VendPerfDeliveryWrongDate.</param>
        /// <param name="vendPerfDeliveryWrongDest">Initial value of VendPerfDeliveryWrongDest.</param>
        /// <param name="vendPerfDeliveryWrongTime">Initial value of VendPerfDeliveryWrongTime.</param>
        /// <param name="vendPerfExceptional">Initial value of VendPerfExceptional.</param>
        /// <param name="vendPerfOtherProblem">Initial value of VendPerfOtherProblem.</param>
        /// <param name="vendPerfPoorCustService">Initial value of VendPerfPoorCustService.</param>
        /// <param name="vendPerfUpgradeSubstItem">Initial value of VendPerfUpgradeSubstItem.</param>
        /// <param name="vendPerfUnauthSubstItem">Initial value of VendPerfUnauthSubstItem.</param>
        public static PendReceiver CreatePendReceiver(int rcvrKey, int batchKey, string billOfLadingNo, string companyID, short createType, double currExchRate, string currID, string purchCompanyID, int seqNo, global::System.DateTime tranDate, string tranID, string tranNo, int tranType, int updateCounter, short vendPerfDeliveryWrongDate, short vendPerfDeliveryWrongDest, short vendPerfDeliveryWrongTime, short vendPerfExceptional, short vendPerfOtherProblem, short vendPerfPoorCustService, short vendPerfUpgradeSubstItem, short vendPerfUnauthSubstItem)
        {
            PendReceiver pendReceiver = new PendReceiver();
            pendReceiver.RcvrKey = rcvrKey;
            pendReceiver.BatchKey = batchKey;
            pendReceiver.BillOfLadingNo = billOfLadingNo;
            pendReceiver.CompanyID = companyID;
            pendReceiver.CreateType = createType;
            pendReceiver.CurrExchRate = currExchRate;
            pendReceiver.CurrID = currID;
            pendReceiver.PurchCompanyID = purchCompanyID;
            pendReceiver.SeqNo = seqNo;
            pendReceiver.TranDate = tranDate;
            pendReceiver.TranID = tranID;
            pendReceiver.TranNo = tranNo;
            pendReceiver.TranType = tranType;
            pendReceiver.UpdateCounter = updateCounter;
            pendReceiver.VendPerfDeliveryWrongDate = vendPerfDeliveryWrongDate;
            pendReceiver.VendPerfDeliveryWrongDest = vendPerfDeliveryWrongDest;
            pendReceiver.VendPerfDeliveryWrongTime = vendPerfDeliveryWrongTime;
            pendReceiver.VendPerfExceptional = vendPerfExceptional;
            pendReceiver.VendPerfOtherProblem = vendPerfOtherProblem;
            pendReceiver.VendPerfPoorCustService = vendPerfPoorCustService;
            pendReceiver.VendPerfUpgradeSubstItem = vendPerfUpgradeSubstItem;
            pendReceiver.VendPerfUnauthSubstItem = vendPerfUnauthSubstItem;
            return pendReceiver;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for RcvrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int RcvrKey
        {
            get
            {
                int value = _RcvrKey;
                OnGetRcvrKey(ref value);
                return value;
            }
            set
            {
                if (_RcvrKey != value)
                {
                  OnRcvrKeyChanging(ref value);
                  ReportPropertyChanging("RcvrKey");
                  _RcvrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RcvrKey");
                  OnRcvrKeyChanged();
              }
            }
        }
        private int _RcvrKey;
        partial void OnGetRcvrKey(ref int value);
        partial void OnRcvrKeyChanging(ref int value);
        partial void OnRcvrKeyChanged();
    
        /// <summary>
        /// There are no comments for BatchKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int BatchKey
        {
            get
            {
                int value = _BatchKey;
                OnGetBatchKey(ref value);
                return value;
            }
            set
            {
                if (_BatchKey != value)
                {
                  OnBatchKeyChanging(ref value);
                  ReportPropertyChanging("BatchKey");
                  _BatchKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BatchKey");
                  OnBatchKeyChanged();
              }
            }
        }
        private int _BatchKey;
        partial void OnGetBatchKey(ref int value);
        partial void OnBatchKeyChanging(ref int value);
        partial void OnBatchKeyChanged();
    
        /// <summary>
        /// There are no comments for BillOfLadingNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string BillOfLadingNo
        {
            get
            {
                string value = _BillOfLadingNo;
                OnGetBillOfLadingNo(ref value);
                return value;
            }
            set
            {
                if (_BillOfLadingNo != value)
                {
                  OnBillOfLadingNoChanging(ref value);
                  ReportPropertyChanging("BillOfLadingNo");
                  _BillOfLadingNo = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("BillOfLadingNo");
                  OnBillOfLadingNoChanged();
              }
            }
        }
        private string _BillOfLadingNo;
        partial void OnGetBillOfLadingNo(ref string value);
        partial void OnBillOfLadingNoChanging(ref string value);
        partial void OnBillOfLadingNoChanged();
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for CreateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CreateDate
        {
            get
            {
                global::System.DateTime? value = _CreateDate;
                OnGetCreateDate(ref value);
                return value;
            }
            set
            {
                if (_CreateDate != value)
                {
                  OnCreateDateChanging(ref value);
                  ReportPropertyChanging("CreateDate");
                  _CreateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateDate");
                  OnCreateDateChanged();
              }
            }
        }
        private global::System.DateTime? _CreateDate;
        partial void OnGetCreateDate(ref global::System.DateTime? value);
        partial void OnCreateDateChanging(ref global::System.DateTime? value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// There are no comments for CreateType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CreateType
        {
            get
            {
                short value = _CreateType;
                OnGetCreateType(ref value);
                return value;
            }
            set
            {
                if (_CreateType != value)
                {
                  OnCreateTypeChanging(ref value);
                  ReportPropertyChanging("CreateType");
                  _CreateType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateType");
                  OnCreateTypeChanged();
              }
            }
        }
        private short _CreateType = 0;
        partial void OnGetCreateType(ref short value);
        partial void OnCreateTypeChanging(ref short value);
        partial void OnCreateTypeChanged();
    
        /// <summary>
        /// There are no comments for CreateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CreateUserID
        {
            get
            {
                string value = _CreateUserID;
                OnGetCreateUserID(ref value);
                return value;
            }
            set
            {
                if (_CreateUserID != value)
                {
                  OnCreateUserIDChanging(ref value);
                  ReportPropertyChanging("CreateUserID");
                  _CreateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CreateUserID");
                  OnCreateUserIDChanged();
              }
            }
        }
        private string _CreateUserID;
        partial void OnGetCreateUserID(ref string value);
        partial void OnCreateUserIDChanging(ref string value);
        partial void OnCreateUserIDChanged();
    
        /// <summary>
        /// There are no comments for CurrExchRate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual double CurrExchRate
        {
            get
            {
                double value = _CurrExchRate;
                OnGetCurrExchRate(ref value);
                return value;
            }
            set
            {
                if (_CurrExchRate != value)
                {
                  OnCurrExchRateChanging(ref value);
                  ReportPropertyChanging("CurrExchRate");
                  _CurrExchRate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CurrExchRate");
                  OnCurrExchRateChanged();
              }
            }
        }
        private double _CurrExchRate = 1;
        partial void OnGetCurrExchRate(ref double value);
        partial void OnCurrExchRateChanging(ref double value);
        partial void OnCurrExchRateChanged();
    
        /// <summary>
        /// There are no comments for CurrID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CurrID
        {
            get
            {
                string value = _CurrID;
                OnGetCurrID(ref value);
                return value;
            }
            set
            {
                if (_CurrID != value)
                {
                  OnCurrIDChanging(ref value);
                  ReportPropertyChanging("CurrID");
                  _CurrID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CurrID");
                  OnCurrIDChanged();
              }
            }
        }
        private string _CurrID;
        partial void OnGetCurrID(ref string value);
        partial void OnCurrIDChanging(ref string value);
        partial void OnCurrIDChanged();
    
        /// <summary>
        /// There are no comments for LTExcptReasCodeKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? LTExcptReasCodeKey
        {
            get
            {
                int? value = _LTExcptReasCodeKey;
                OnGetLTExcptReasCodeKey(ref value);
                return value;
            }
            set
            {
                if (_LTExcptReasCodeKey != value)
                {
                  OnLTExcptReasCodeKeyChanging(ref value);
                  ReportPropertyChanging("LTExcptReasCodeKey");
                  _LTExcptReasCodeKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LTExcptReasCodeKey");
                  OnLTExcptReasCodeKeyChanged();
              }
            }
        }
        private int? _LTExcptReasCodeKey;
        partial void OnGetLTExcptReasCodeKey(ref int? value);
        partial void OnLTExcptReasCodeKeyChanging(ref int? value);
        partial void OnLTExcptReasCodeKeyChanged();
    
        /// <summary>
        /// There are no comments for POKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? POKey
        {
            get
            {
                int? value = _POKey;
                OnGetPOKey(ref value);
                return value;
            }
            set
            {
                if (_POKey != value)
                {
                  OnPOKeyChanging(ref value);
                  ReportPropertyChanging("POKey");
                  _POKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("POKey");
                  OnPOKeyChanged();
              }
            }
        }
        private int? _POKey;
        partial void OnGetPOKey(ref int? value);
        partial void OnPOKeyChanging(ref int? value);
        partial void OnPOKeyChanged();
    
        /// <summary>
        /// There are no comments for PurchCompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string PurchCompanyID
        {
            get
            {
                string value = _PurchCompanyID;
                OnGetPurchCompanyID(ref value);
                return value;
            }
            set
            {
                if (_PurchCompanyID != value)
                {
                  OnPurchCompanyIDChanging(ref value);
                  ReportPropertyChanging("PurchCompanyID");
                  _PurchCompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("PurchCompanyID");
                  OnPurchCompanyIDChanged();
              }
            }
        }
        private string _PurchCompanyID;
        partial void OnGetPurchCompanyID(ref string value);
        partial void OnPurchCompanyIDChanging(ref string value);
        partial void OnPurchCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for RMA in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string RMA
        {
            get
            {
                string value = _RMA;
                OnGetRMA(ref value);
                return value;
            }
            set
            {
                if (_RMA != value)
                {
                  OnRMAChanging(ref value);
                  ReportPropertyChanging("RMA");
                  _RMA = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("RMA");
                  OnRMAChanged();
              }
            }
        }
        private string _RMA;
        partial void OnGetRMA(ref string value);
        partial void OnRMAChanging(ref string value);
        partial void OnRMAChanged();
    
        /// <summary>
        /// There are no comments for RtrnRcvrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? RtrnRcvrKey
        {
            get
            {
                int? value = _RtrnRcvrKey;
                OnGetRtrnRcvrKey(ref value);
                return value;
            }
            set
            {
                if (_RtrnRcvrKey != value)
                {
                  OnRtrnRcvrKeyChanging(ref value);
                  ReportPropertyChanging("RtrnRcvrKey");
                  _RtrnRcvrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RtrnRcvrKey");
                  OnRtrnRcvrKeyChanged();
              }
            }
        }
        private int? _RtrnRcvrKey;
        partial void OnGetRtrnRcvrKey(ref int? value);
        partial void OnRtrnRcvrKeyChanging(ref int? value);
        partial void OnRtrnRcvrKeyChanged();
    
        /// <summary>
        /// There are no comments for SeqNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SeqNo
        {
            get
            {
                int value = _SeqNo;
                OnGetSeqNo(ref value);
                return value;
            }
            set
            {
                if (_SeqNo != value)
                {
                  OnSeqNoChanging(ref value);
                  ReportPropertyChanging("SeqNo");
                  _SeqNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SeqNo");
                  OnSeqNoChanged();
              }
            }
        }
        private int _SeqNo;
        partial void OnGetSeqNo(ref int value);
        partial void OnSeqNoChanging(ref int value);
        partial void OnSeqNoChanged();
    
        /// <summary>
        /// There are no comments for TranCmnt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string TranCmnt
        {
            get
            {
                string value = _TranCmnt;
                OnGetTranCmnt(ref value);
                return value;
            }
            set
            {
                if (_TranCmnt != value)
                {
                  OnTranCmntChanging(ref value);
                  ReportPropertyChanging("TranCmnt");
                  _TranCmnt = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TranCmnt");
                  OnTranCmntChanged();
              }
            }
        }
        private string _TranCmnt;
        partial void OnGetTranCmnt(ref string value);
        partial void OnTranCmntChanging(ref string value);
        partial void OnTranCmntChanged();
    
        /// <summary>
        /// There are no comments for TranDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime TranDate
        {
            get
            {
                global::System.DateTime value = _TranDate;
                OnGetTranDate(ref value);
                return value;
            }
            set
            {
                if (_TranDate != value)
                {
                  OnTranDateChanging(ref value);
                  ReportPropertyChanging("TranDate");
                  _TranDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranDate");
                  OnTranDateChanged();
              }
            }
        }
        private global::System.DateTime _TranDate;
        partial void OnGetTranDate(ref global::System.DateTime value);
        partial void OnTranDateChanging(ref global::System.DateTime value);
        partial void OnTranDateChanged();
    
        /// <summary>
        /// There are no comments for TranID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string TranID
        {
            get
            {
                string value = _TranID;
                OnGetTranID(ref value);
                return value;
            }
            set
            {
                if (_TranID != value)
                {
                  OnTranIDChanging(ref value);
                  ReportPropertyChanging("TranID");
                  _TranID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TranID");
                  OnTranIDChanged();
              }
            }
        }
        private string _TranID;
        partial void OnGetTranID(ref string value);
        partial void OnTranIDChanging(ref string value);
        partial void OnTranIDChanged();
    
        /// <summary>
        /// There are no comments for TranNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string TranNo
        {
            get
            {
                string value = _TranNo;
                OnGetTranNo(ref value);
                return value;
            }
            set
            {
                if (_TranNo != value)
                {
                  OnTranNoChanging(ref value);
                  ReportPropertyChanging("TranNo");
                  _TranNo = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TranNo");
                  OnTranNoChanged();
              }
            }
        }
        private string _TranNo;
        partial void OnGetTranNo(ref string value);
        partial void OnTranNoChanging(ref string value);
        partial void OnTranNoChanged();
    
        /// <summary>
        /// There are no comments for TranType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int TranType
        {
            get
            {
                int value = _TranType;
                OnGetTranType(ref value);
                return value;
            }
            set
            {
                if (_TranType != value)
                {
                  OnTranTypeChanging(ref value);
                  ReportPropertyChanging("TranType");
                  _TranType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranType");
                  OnTranTypeChanged();
              }
            }
        }
        private int _TranType;
        partial void OnGetTranType(ref int value);
        partial void OnTranTypeChanging(ref int value);
        partial void OnTranTypeChanged();
    
        /// <summary>
        /// There are no comments for TrnsfrOrderKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? TrnsfrOrderKey
        {
            get
            {
                int? value = _TrnsfrOrderKey;
                OnGetTrnsfrOrderKey(ref value);
                return value;
            }
            set
            {
                if (_TrnsfrOrderKey != value)
                {
                  OnTrnsfrOrderKeyChanging(ref value);
                  ReportPropertyChanging("TrnsfrOrderKey");
                  _TrnsfrOrderKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TrnsfrOrderKey");
                  OnTrnsfrOrderKeyChanged();
              }
            }
        }
        private int? _TrnsfrOrderKey;
        partial void OnGetTrnsfrOrderKey(ref int? value);
        partial void OnTrnsfrOrderKeyChanging(ref int? value);
        partial void OnTrnsfrOrderKeyChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();
    
        /// <summary>
        /// There are no comments for UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? UpdateDate
        {
            get
            {
                global::System.DateTime? value = _UpdateDate;
                OnGetUpdateDate(ref value);
                return value;
            }
            set
            {
                if (_UpdateDate != value)
                {
                  OnUpdateDateChanging(ref value);
                  ReportPropertyChanging("UpdateDate");
                  _UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateDate");
                  OnUpdateDateChanged();
              }
            }
        }
        private global::System.DateTime? _UpdateDate;
        partial void OnGetUpdateDate(ref global::System.DateTime? value);
        partial void OnUpdateDateChanging(ref global::System.DateTime? value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// There are no comments for UpdateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UpdateUserID
        {
            get
            {
                string value = _UpdateUserID;
                OnGetUpdateUserID(ref value);
                return value;
            }
            set
            {
                if (_UpdateUserID != value)
                {
                  OnUpdateUserIDChanging(ref value);
                  ReportPropertyChanging("UpdateUserID");
                  _UpdateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UpdateUserID");
                  OnUpdateUserIDChanged();
              }
            }
        }
        private string _UpdateUserID;
        partial void OnGetUpdateUserID(ref string value);
        partial void OnUpdateUserIDChanging(ref string value);
        partial void OnUpdateUserIDChanged();
    
        /// <summary>
        /// There are no comments for VendKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? VendKey
        {
            get
            {
                int? value = _VendKey;
                OnGetVendKey(ref value);
                return value;
            }
            set
            {
                if (_VendKey != value)
                {
                  OnVendKeyChanging(ref value);
                  ReportPropertyChanging("VendKey");
                  _VendKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VendKey");
                  OnVendKeyChanged();
              }
            }
        }
        private int? _VendKey;
        partial void OnGetVendKey(ref int? value);
        partial void OnVendKeyChanging(ref int? value);
        partial void OnVendKeyChanged();
    
        /// <summary>
        /// There are no comments for VendPerfComment in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string VendPerfComment
        {
            get
            {
                string value = _VendPerfComment;
                OnGetVendPerfComment(ref value);
                return value;
            }
            set
            {
                if (_VendPerfComment != value)
                {
                  OnVendPerfCommentChanging(ref value);
                  ReportPropertyChanging("VendPerfComment");
                  _VendPerfComment = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("VendPerfComment");
                  OnVendPerfCommentChanged();
              }
            }
        }
        private string _VendPerfComment;
        partial void OnGetVendPerfComment(ref string value);
        partial void OnVendPerfCommentChanging(ref string value);
        partial void OnVendPerfCommentChanged();
    
        /// <summary>
        /// There are no comments for VendPerfDeliveryWrongDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short VendPerfDeliveryWrongDate
        {
            get
            {
                short value = _VendPerfDeliveryWrongDate;
                OnGetVendPerfDeliveryWrongDate(ref value);
                return value;
            }
            set
            {
                if (_VendPerfDeliveryWrongDate != value)
                {
                  OnVendPerfDeliveryWrongDateChanging(ref value);
                  ReportPropertyChanging("VendPerfDeliveryWrongDate");
                  _VendPerfDeliveryWrongDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VendPerfDeliveryWrongDate");
                  OnVendPerfDeliveryWrongDateChanged();
              }
            }
        }
        private short _VendPerfDeliveryWrongDate = 0;
        partial void OnGetVendPerfDeliveryWrongDate(ref short value);
        partial void OnVendPerfDeliveryWrongDateChanging(ref short value);
        partial void OnVendPerfDeliveryWrongDateChanged();
    
        /// <summary>
        /// There are no comments for VendPerfDeliveryWrongDest in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short VendPerfDeliveryWrongDest
        {
            get
            {
                short value = _VendPerfDeliveryWrongDest;
                OnGetVendPerfDeliveryWrongDest(ref value);
                return value;
            }
            set
            {
                if (_VendPerfDeliveryWrongDest != value)
                {
                  OnVendPerfDeliveryWrongDestChanging(ref value);
                  ReportPropertyChanging("VendPerfDeliveryWrongDest");
                  _VendPerfDeliveryWrongDest = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VendPerfDeliveryWrongDest");
                  OnVendPerfDeliveryWrongDestChanged();
              }
            }
        }
        private short _VendPerfDeliveryWrongDest = 0;
        partial void OnGetVendPerfDeliveryWrongDest(ref short value);
        partial void OnVendPerfDeliveryWrongDestChanging(ref short value);
        partial void OnVendPerfDeliveryWrongDestChanged();
    
        /// <summary>
        /// There are no comments for VendPerfDeliveryWrongTime in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short VendPerfDeliveryWrongTime
        {
            get
            {
                short value = _VendPerfDeliveryWrongTime;
                OnGetVendPerfDeliveryWrongTime(ref value);
                return value;
            }
            set
            {
                if (_VendPerfDeliveryWrongTime != value)
                {
                  OnVendPerfDeliveryWrongTimeChanging(ref value);
                  ReportPropertyChanging("VendPerfDeliveryWrongTime");
                  _VendPerfDeliveryWrongTime = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VendPerfDeliveryWrongTime");
                  OnVendPerfDeliveryWrongTimeChanged();
              }
            }
        }
        private short _VendPerfDeliveryWrongTime = 0;
        partial void OnGetVendPerfDeliveryWrongTime(ref short value);
        partial void OnVendPerfDeliveryWrongTimeChanging(ref short value);
        partial void OnVendPerfDeliveryWrongTimeChanged();
    
        /// <summary>
        /// There are no comments for VendPerfExceptional in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short VendPerfExceptional
        {
            get
            {
                short value = _VendPerfExceptional;
                OnGetVendPerfExceptional(ref value);
                return value;
            }
            set
            {
                if (_VendPerfExceptional != value)
                {
                  OnVendPerfExceptionalChanging(ref value);
                  ReportPropertyChanging("VendPerfExceptional");
                  _VendPerfExceptional = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VendPerfExceptional");
                  OnVendPerfExceptionalChanged();
              }
            }
        }
        private short _VendPerfExceptional = 0;
        partial void OnGetVendPerfExceptional(ref short value);
        partial void OnVendPerfExceptionalChanging(ref short value);
        partial void OnVendPerfExceptionalChanged();
    
        /// <summary>
        /// There are no comments for VendPerfOtherProblem in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short VendPerfOtherProblem
        {
            get
            {
                short value = _VendPerfOtherProblem;
                OnGetVendPerfOtherProblem(ref value);
                return value;
            }
            set
            {
                if (_VendPerfOtherProblem != value)
                {
                  OnVendPerfOtherProblemChanging(ref value);
                  ReportPropertyChanging("VendPerfOtherProblem");
                  _VendPerfOtherProblem = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VendPerfOtherProblem");
                  OnVendPerfOtherProblemChanged();
              }
            }
        }
        private short _VendPerfOtherProblem = 0;
        partial void OnGetVendPerfOtherProblem(ref short value);
        partial void OnVendPerfOtherProblemChanging(ref short value);
        partial void OnVendPerfOtherProblemChanged();
    
        /// <summary>
        /// There are no comments for VendPerfPoorCustService in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short VendPerfPoorCustService
        {
            get
            {
                short value = _VendPerfPoorCustService;
                OnGetVendPerfPoorCustService(ref value);
                return value;
            }
            set
            {
                if (_VendPerfPoorCustService != value)
                {
                  OnVendPerfPoorCustServiceChanging(ref value);
                  ReportPropertyChanging("VendPerfPoorCustService");
                  _VendPerfPoorCustService = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VendPerfPoorCustService");
                  OnVendPerfPoorCustServiceChanged();
              }
            }
        }
        private short _VendPerfPoorCustService = 0;
        partial void OnGetVendPerfPoorCustService(ref short value);
        partial void OnVendPerfPoorCustServiceChanging(ref short value);
        partial void OnVendPerfPoorCustServiceChanged();
    
        /// <summary>
        /// There are no comments for VendPerfUpgradeSubstItem in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short VendPerfUpgradeSubstItem
        {
            get
            {
                short value = _VendPerfUpgradeSubstItem;
                OnGetVendPerfUpgradeSubstItem(ref value);
                return value;
            }
            set
            {
                if (_VendPerfUpgradeSubstItem != value)
                {
                  OnVendPerfUpgradeSubstItemChanging(ref value);
                  ReportPropertyChanging("VendPerfUpgradeSubstItem");
                  _VendPerfUpgradeSubstItem = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VendPerfUpgradeSubstItem");
                  OnVendPerfUpgradeSubstItemChanged();
              }
            }
        }
        private short _VendPerfUpgradeSubstItem = 0;
        partial void OnGetVendPerfUpgradeSubstItem(ref short value);
        partial void OnVendPerfUpgradeSubstItemChanging(ref short value);
        partial void OnVendPerfUpgradeSubstItemChanged();
    
        /// <summary>
        /// There are no comments for VendPerfUnauthSubstItem in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short VendPerfUnauthSubstItem
        {
            get
            {
                short value = _VendPerfUnauthSubstItem;
                OnGetVendPerfUnauthSubstItem(ref value);
                return value;
            }
            set
            {
                if (_VendPerfUnauthSubstItem != value)
                {
                  OnVendPerfUnauthSubstItemChanging(ref value);
                  ReportPropertyChanging("VendPerfUnauthSubstItem");
                  _VendPerfUnauthSubstItem = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VendPerfUnauthSubstItem");
                  OnVendPerfUnauthSubstItemChanged();
              }
            }
        }
        private short _VendPerfUnauthSubstItem = 0;
        partial void OnGetVendPerfUnauthSubstItem(ref short value);
        partial void OnVendPerfUnauthSubstItemChanging(ref short value);
        partial void OnVendPerfUnauthSubstItemChanged();
    
        /// <summary>
        /// There are no comments for WhseKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? WhseKey
        {
            get
            {
                int? value = _WhseKey;
                OnGetWhseKey(ref value);
                return value;
            }
            set
            {
                if (_WhseKey != value)
                {
                  OnWhseKeyChanging(ref value);
                  ReportPropertyChanging("WhseKey");
                  _WhseKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WhseKey");
                  OnWhseKeyChanged();
              }
            }
        }
        private int? _WhseKey;
        partial void OnGetWhseKey(ref int? value);
        partial void OnWhseKeyChanging(ref int? value);
        partial void OnWhseKeyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ReceiverLog in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "ReceiverLog_PendReceiver", "ReceiverLog")]
        public virtual ReceiverLog ReceiverLog
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ReceiverLog>("Net4Sage.DataAccessModel.ReceiverLog_PendReceiver", "ReceiverLog").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ReceiverLog>("Net4Sage.DataAccessModel.ReceiverLog_PendReceiver", "ReceiverLog").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for ReceiverLog in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ReceiverLog> ReceiverLogReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ReceiverLog>("Net4Sage.DataAccessModel.ReceiverLog_PendReceiver", "ReceiverLog");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<ReceiverLog>("Net4Sage.DataAccessModel.ReceiverLog_PendReceiver", "ReceiverLog", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ReceiverLog>("Net4Sage.DataAccessModel.ReceiverLog_PendReceiver", "ReceiverLog").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.POLine in the schema.
    /// </summary>
    /// <KeyProperties>
    /// POLineKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="POLine")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class POLine : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new POLine object.
        /// </summary>
        /// <param name="pOLineKey">Initial value of POLineKey.</param>
        /// <param name="closedForInvc">Initial value of ClosedForInvc.</param>
        /// <param name="closedForRcvg">Initial value of ClosedForRcvg.</param>
        /// <param name="cmntOnly">Initial value of CmntOnly.</param>
        /// <param name="exclLastCost">Initial value of ExclLastCost.</param>
        /// <param name="extAmt">Initial value of ExtAmt.</param>
        /// <param name="pOKey">Initial value of POKey.</param>
        /// <param name="pOLineNo">Initial value of POLineNo.</param>
        /// <param name="rcptReq">Initial value of RcptReq.</param>
        /// <param name="status">Initial value of Status.</param>
        /// <param name="targetCompanyID">Initial value of TargetCompanyID.</param>
        /// <param name="unitCostExact">Initial value of UnitCostExact.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        public static POLine CreatePOLine(int pOLineKey, short closedForInvc, short closedForRcvg, short cmntOnly, short exclLastCost, decimal extAmt, int pOKey, int pOLineNo, short rcptReq, short status, string targetCompanyID, decimal unitCostExact, int updateCounter)
        {
            POLine pOLine = new POLine();
            pOLine.POLineKey = pOLineKey;
            pOLine.ClosedForInvc = closedForInvc;
            pOLine.ClosedForRcvg = closedForRcvg;
            pOLine.CmntOnly = cmntOnly;
            pOLine.ExclLastCost = exclLastCost;
            pOLine.ExtAmt = extAmt;
            pOLine.POKey = pOKey;
            pOLine.POLineNo = pOLineNo;
            pOLine.RcptReq = rcptReq;
            pOLine.Status = status;
            pOLine.TargetCompanyID = targetCompanyID;
            pOLine.UnitCostExact = unitCostExact;
            pOLine.UpdateCounter = updateCounter;
            return pOLine;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for POLineKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int POLineKey
        {
            get
            {
                int value = _POLineKey;
                OnGetPOLineKey(ref value);
                return value;
            }
            set
            {
                if (_POLineKey != value)
                {
                  OnPOLineKeyChanging(ref value);
                  ReportPropertyChanging("POLineKey");
                  _POLineKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("POLineKey");
                  OnPOLineKeyChanged();
              }
            }
        }
        private int _POLineKey;
        partial void OnGetPOLineKey(ref int value);
        partial void OnPOLineKeyChanging(ref int value);
        partial void OnPOLineKeyChanged();
    
        /// <summary>
        /// There are no comments for CloseDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CloseDate
        {
            get
            {
                global::System.DateTime? value = _CloseDate;
                OnGetCloseDate(ref value);
                return value;
            }
            set
            {
                if (_CloseDate != value)
                {
                  OnCloseDateChanging(ref value);
                  ReportPropertyChanging("CloseDate");
                  _CloseDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CloseDate");
                  OnCloseDateChanged();
              }
            }
        }
        private global::System.DateTime? _CloseDate;
        partial void OnGetCloseDate(ref global::System.DateTime? value);
        partial void OnCloseDateChanging(ref global::System.DateTime? value);
        partial void OnCloseDateChanged();
    
        /// <summary>
        /// There are no comments for ClosedForInvc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ClosedForInvc
        {
            get
            {
                short value = _ClosedForInvc;
                OnGetClosedForInvc(ref value);
                return value;
            }
            set
            {
                if (_ClosedForInvc != value)
                {
                  OnClosedForInvcChanging(ref value);
                  ReportPropertyChanging("ClosedForInvc");
                  _ClosedForInvc = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ClosedForInvc");
                  OnClosedForInvcChanged();
              }
            }
        }
        private short _ClosedForInvc = 0;
        partial void OnGetClosedForInvc(ref short value);
        partial void OnClosedForInvcChanging(ref short value);
        partial void OnClosedForInvcChanged();
    
        /// <summary>
        /// There are no comments for ClosedForRcvg in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ClosedForRcvg
        {
            get
            {
                short value = _ClosedForRcvg;
                OnGetClosedForRcvg(ref value);
                return value;
            }
            set
            {
                if (_ClosedForRcvg != value)
                {
                  OnClosedForRcvgChanging(ref value);
                  ReportPropertyChanging("ClosedForRcvg");
                  _ClosedForRcvg = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ClosedForRcvg");
                  OnClosedForRcvgChanged();
              }
            }
        }
        private short _ClosedForRcvg = 0;
        partial void OnGetClosedForRcvg(ref short value);
        partial void OnClosedForRcvgChanging(ref short value);
        partial void OnClosedForRcvgChanged();
    
        /// <summary>
        /// There are no comments for CmntOnly in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CmntOnly
        {
            get
            {
                short value = _CmntOnly;
                OnGetCmntOnly(ref value);
                return value;
            }
            set
            {
                if (_CmntOnly != value)
                {
                  OnCmntOnlyChanging(ref value);
                  ReportPropertyChanging("CmntOnly");
                  _CmntOnly = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CmntOnly");
                  OnCmntOnlyChanged();
              }
            }
        }
        private short _CmntOnly = 0;
        partial void OnGetCmntOnly(ref short value);
        partial void OnCmntOnlyChanging(ref short value);
        partial void OnCmntOnlyChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for ExclLastCost in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ExclLastCost
        {
            get
            {
                short value = _ExclLastCost;
                OnGetExclLastCost(ref value);
                return value;
            }
            set
            {
                if (_ExclLastCost != value)
                {
                  OnExclLastCostChanging(ref value);
                  ReportPropertyChanging("ExclLastCost");
                  _ExclLastCost = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ExclLastCost");
                  OnExclLastCostChanged();
              }
            }
        }
        private short _ExclLastCost = 0;
        partial void OnGetExclLastCost(ref short value);
        partial void OnExclLastCostChanging(ref short value);
        partial void OnExclLastCostChanged();
    
        /// <summary>
        /// There are no comments for ExtAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal ExtAmt
        {
            get
            {
                decimal value = _ExtAmt;
                OnGetExtAmt(ref value);
                return value;
            }
            set
            {
                if (_ExtAmt != value)
                {
                  OnExtAmtChanging(ref value);
                  ReportPropertyChanging("ExtAmt");
                  _ExtAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ExtAmt");
                  OnExtAmtChanged();
              }
            }
        }
        private decimal _ExtAmt = 0m;
        partial void OnGetExtAmt(ref decimal value);
        partial void OnExtAmtChanging(ref decimal value);
        partial void OnExtAmtChanged();
    
        /// <summary>
        /// There are no comments for ExtCmnt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ExtCmnt
        {
            get
            {
                string value = _ExtCmnt;
                OnGetExtCmnt(ref value);
                return value;
            }
            set
            {
                if (_ExtCmnt != value)
                {
                  OnExtCmntChanging(ref value);
                  ReportPropertyChanging("ExtCmnt");
                  _ExtCmnt = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ExtCmnt");
                  OnExtCmntChanged();
              }
            }
        }
        private string _ExtCmnt;
        partial void OnGetExtCmnt(ref string value);
        partial void OnExtCmntChanging(ref string value);
        partial void OnExtCmntChanged();
    
        /// <summary>
        /// There are no comments for ItemAliasKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ItemAliasKey
        {
            get
            {
                int? value = _ItemAliasKey;
                OnGetItemAliasKey(ref value);
                return value;
            }
            set
            {
                if (_ItemAliasKey != value)
                {
                  OnItemAliasKeyChanging(ref value);
                  ReportPropertyChanging("ItemAliasKey");
                  _ItemAliasKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ItemAliasKey");
                  OnItemAliasKeyChanged();
              }
            }
        }
        private int? _ItemAliasKey;
        partial void OnGetItemAliasKey(ref int? value);
        partial void OnItemAliasKeyChanging(ref int? value);
        partial void OnItemAliasKeyChanged();
    
        /// <summary>
        /// There are no comments for ItemKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ItemKey
        {
            get
            {
                int? value = _ItemKey;
                OnGetItemKey(ref value);
                return value;
            }
            set
            {
                if (_ItemKey != value)
                {
                  OnItemKeyChanging(ref value);
                  ReportPropertyChanging("ItemKey");
                  _ItemKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ItemKey");
                  OnItemKeyChanged();
              }
            }
        }
        private int? _ItemKey;
        partial void OnGetItemKey(ref int? value);
        partial void OnItemKeyChanging(ref int? value);
        partial void OnItemKeyChanged();
    
        /// <summary>
        /// There are no comments for MatchToleranceKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? MatchToleranceKey
        {
            get
            {
                int? value = _MatchToleranceKey;
                OnGetMatchToleranceKey(ref value);
                return value;
            }
            set
            {
                if (_MatchToleranceKey != value)
                {
                  OnMatchToleranceKeyChanging(ref value);
                  ReportPropertyChanging("MatchToleranceKey");
                  _MatchToleranceKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MatchToleranceKey");
                  OnMatchToleranceKeyChanged();
              }
            }
        }
        private int? _MatchToleranceKey;
        partial void OnGetMatchToleranceKey(ref int? value);
        partial void OnMatchToleranceKeyChanging(ref int? value);
        partial void OnMatchToleranceKeyChanged();
    
        /// <summary>
        /// There are no comments for POKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int POKey
        {
            get
            {
                int value = _POKey;
                OnGetPOKey(ref value);
                return value;
            }
            set
            {
                if (_POKey != value)
                {
                  OnPOKeyChanging(ref value);
                  ReportPropertyChanging("POKey");
                  _POKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("POKey");
                  OnPOKeyChanged();
              }
            }
        }
        private int _POKey;
        partial void OnGetPOKey(ref int value);
        partial void OnPOKeyChanging(ref int value);
        partial void OnPOKeyChanged();
    
        /// <summary>
        /// There are no comments for POLineNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int POLineNo
        {
            get
            {
                int value = _POLineNo;
                OnGetPOLineNo(ref value);
                return value;
            }
            set
            {
                if (_POLineNo != value)
                {
                  OnPOLineNoChanging(ref value);
                  ReportPropertyChanging("POLineNo");
                  _POLineNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("POLineNo");
                  OnPOLineNoChanged();
              }
            }
        }
        private int _POLineNo;
        partial void OnGetPOLineNo(ref int value);
        partial void OnPOLineNoChanging(ref int value);
        partial void OnPOLineNoChanged();
    
        /// <summary>
        /// There are no comments for RcptReq in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short RcptReq
        {
            get
            {
                short value = _RcptReq;
                OnGetRcptReq(ref value);
                return value;
            }
            set
            {
                if (_RcptReq != value)
                {
                  OnRcptReqChanging(ref value);
                  ReportPropertyChanging("RcptReq");
                  _RcptReq = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RcptReq");
                  OnRcptReqChanged();
              }
            }
        }
        private short _RcptReq = 0;
        partial void OnGetRcptReq(ref short value);
        partial void OnRcptReqChanging(ref short value);
        partial void OnRcptReqChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Status
        {
            get
            {
                short value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private short _Status = 1;
        partial void OnGetStatus(ref short value);
        partial void OnStatusChanging(ref short value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// There are no comments for STaxClassKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? STaxClassKey
        {
            get
            {
                int? value = _STaxClassKey;
                OnGetSTaxClassKey(ref value);
                return value;
            }
            set
            {
                if (_STaxClassKey != value)
                {
                  OnSTaxClassKeyChanging(ref value);
                  ReportPropertyChanging("STaxClassKey");
                  _STaxClassKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("STaxClassKey");
                  OnSTaxClassKeyChanged();
              }
            }
        }
        private int? _STaxClassKey;
        partial void OnGetSTaxClassKey(ref int? value);
        partial void OnSTaxClassKeyChanging(ref int? value);
        partial void OnSTaxClassKeyChanged();
    
        /// <summary>
        /// There are no comments for TargetCompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string TargetCompanyID
        {
            get
            {
                string value = _TargetCompanyID;
                OnGetTargetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_TargetCompanyID != value)
                {
                  OnTargetCompanyIDChanging(ref value);
                  ReportPropertyChanging("TargetCompanyID");
                  _TargetCompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TargetCompanyID");
                  OnTargetCompanyIDChanged();
              }
            }
        }
        private string _TargetCompanyID;
        partial void OnGetTargetCompanyID(ref string value);
        partial void OnTargetCompanyIDChanging(ref string value);
        partial void OnTargetCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for UnitCost in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? UnitCost
        {
            get
            {
                decimal? value = _UnitCost;
                OnGetUnitCost(ref value);
                return value;
            }
            set
            {
                if (_UnitCost != value)
                {
                  OnUnitCostChanging(ref value);
                  ReportPropertyChanging("UnitCost");
                  _UnitCost = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UnitCost");
                  OnUnitCostChanged();
              }
            }
        }
        private decimal? _UnitCost = 0m;
        partial void OnGetUnitCost(ref decimal? value);
        partial void OnUnitCostChanging(ref decimal? value);
        partial void OnUnitCostChanged();
    
        /// <summary>
        /// There are no comments for UnitCostExact in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal UnitCostExact
        {
            get
            {
                decimal value = _UnitCostExact;
                OnGetUnitCostExact(ref value);
                return value;
            }
            set
            {
                if (_UnitCostExact != value)
                {
                  OnUnitCostExactChanging(ref value);
                  ReportPropertyChanging("UnitCostExact");
                  _UnitCostExact = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UnitCostExact");
                  OnUnitCostExactChanged();
              }
            }
        }
        private decimal _UnitCostExact = 0m;
        partial void OnGetUnitCostExact(ref decimal value);
        partial void OnUnitCostExactChanging(ref decimal value);
        partial void OnUnitCostExactChanged();
    
        /// <summary>
        /// There are no comments for UnitMeasKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? UnitMeasKey
        {
            get
            {
                int? value = _UnitMeasKey;
                OnGetUnitMeasKey(ref value);
                return value;
            }
            set
            {
                if (_UnitMeasKey != value)
                {
                  OnUnitMeasKeyChanging(ref value);
                  ReportPropertyChanging("UnitMeasKey");
                  _UnitMeasKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UnitMeasKey");
                  OnUnitMeasKeyChanged();
              }
            }
        }
        private int? _UnitMeasKey;
        partial void OnGetUnitMeasKey(ref int? value);
        partial void OnUnitMeasKeyChanging(ref int? value);
        partial void OnUnitMeasKeyChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();
    
        /// <summary>
        /// There are no comments for UserFld1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld1
        {
            get
            {
                string value = _UserFld1;
                OnGetUserFld1(ref value);
                return value;
            }
            set
            {
                if (_UserFld1 != value)
                {
                  OnUserFld1Changing(ref value);
                  ReportPropertyChanging("UserFld1");
                  _UserFld1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld1");
                  OnUserFld1Changed();
              }
            }
        }
        private string _UserFld1;
        partial void OnGetUserFld1(ref string value);
        partial void OnUserFld1Changing(ref string value);
        partial void OnUserFld1Changed();
    
        /// <summary>
        /// There are no comments for UserFld2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld2
        {
            get
            {
                string value = _UserFld2;
                OnGetUserFld2(ref value);
                return value;
            }
            set
            {
                if (_UserFld2 != value)
                {
                  OnUserFld2Changing(ref value);
                  ReportPropertyChanging("UserFld2");
                  _UserFld2 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld2");
                  OnUserFld2Changed();
              }
            }
        }
        private string _UserFld2;
        partial void OnGetUserFld2(ref string value);
        partial void OnUserFld2Changing(ref string value);
        partial void OnUserFld2Changed();
    
        /// <summary>
        /// There are no comments for VendQuoteLineKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? VendQuoteLineKey
        {
            get
            {
                int? value = _VendQuoteLineKey;
                OnGetVendQuoteLineKey(ref value);
                return value;
            }
            set
            {
                if (_VendQuoteLineKey != value)
                {
                  OnVendQuoteLineKeyChanging(ref value);
                  ReportPropertyChanging("VendQuoteLineKey");
                  _VendQuoteLineKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VendQuoteLineKey");
                  OnVendQuoteLineKeyChanged();
              }
            }
        }
        private int? _VendQuoteLineKey;
        partial void OnGetVendQuoteLineKey(ref int? value);
        partial void OnVendQuoteLineKeyChanging(ref int? value);
        partial void OnVendQuoteLineKeyChanged();
    
        /// <summary>
        /// There are no comments for BLKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? BLKey
        {
            get
            {
                int? value = _BLKey;
                OnGetBLKey(ref value);
                return value;
            }
            set
            {
                if (_BLKey != value)
                {
                  OnBLKeyChanging(ref value);
                  ReportPropertyChanging("BLKey");
                  _BLKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BLKey");
                  OnBLKeyChanged();
              }
            }
        }
        private int? _BLKey;
        partial void OnGetBLKey(ref int? value);
        partial void OnBLKeyChanging(ref int? value);
        partial void OnBLKeyChanged();
    
        /// <summary>
        /// There are no comments for Invoicekey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? Invoicekey
        {
            get
            {
                int? value = _Invoicekey;
                OnGetInvoicekey(ref value);
                return value;
            }
            set
            {
                if (_Invoicekey != value)
                {
                  OnInvoicekeyChanging(ref value);
                  ReportPropertyChanging("Invoicekey");
                  _Invoicekey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Invoicekey");
                  OnInvoicekeyChanged();
              }
            }
        }
        private int? _Invoicekey;
        partial void OnGetInvoicekey(ref int? value);
        partial void OnInvoicekeyChanging(ref int? value);
        partial void OnInvoicekeyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for POLineDists in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "POLine_POLineDist", "POLineDists")]
        public virtual EntityCollection<POLineDist> POLineDists
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<POLineDist>("Net4Sage.DataAccessModel.POLine_POLineDist", "POLineDists");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<POLineDist>("Net4Sage.DataAccessModel.POLine_POLineDist", "POLineDists", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for PurchOrder in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "PurchOrder_POLine", "PurchOrder")]
        public virtual PurchOrder PurchOrder
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<PurchOrder>("Net4Sage.DataAccessModel.PurchOrder_POLine", "PurchOrder").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<PurchOrder>("Net4Sage.DataAccessModel.PurchOrder_POLine", "PurchOrder").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for PurchOrder in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PurchOrder> PurchOrderReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<PurchOrder>("Net4Sage.DataAccessModel.PurchOrder_POLine", "PurchOrder");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<PurchOrder>("Net4Sage.DataAccessModel.PurchOrder_POLine", "PurchOrder", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<PurchOrder>("Net4Sage.DataAccessModel.PurchOrder_POLine", "PurchOrder").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.POLineDist in the schema.
    /// </summary>
    /// <KeyProperties>
    /// POLineDistKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="POLineDist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class POLineDist : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new POLineDist object.
        /// </summary>
        /// <param name="pOLineDistKey">Initial value of POLineDistKey.</param>
        /// <param name="amtInvcd">Initial value of AmtInvcd.</param>
        /// <param name="closedForInvc">Initial value of ClosedForInvc.</param>
        /// <param name="closedForRcvg">Initial value of ClosedForRcvg.</param>
        /// <param name="dropShip">Initial value of DropShip.</param>
        /// <param name="exclLeadTime">Initial value of ExclLeadTime.</param>
        /// <param name="expedite">Initial value of Expedite.</param>
        /// <param name="extAmt">Initial value of ExtAmt.</param>
        /// <param name="freightAmt">Initial value of FreightAmt.</param>
        /// <param name="gLAcctKey">Initial value of GLAcctKey.</param>
        /// <param name="origOrdered">Initial value of OrigOrdered.</param>
        /// <param name="pOLineKey">Initial value of POLineKey.</param>
        /// <param name="promiseDate">Initial value of PromiseDate.</param>
        /// <param name="qtyInvcd">Initial value of QtyInvcd.</param>
        /// <param name="qtyOnBO">Initial value of QtyOnBO.</param>
        /// <param name="qtyOpenToRcv">Initial value of QtyOpenToRcv.</param>
        /// <param name="qtyOrd">Initial value of QtyOrd.</param>
        /// <param name="qtyRcvd">Initial value of QtyRcvd.</param>
        /// <param name="qtyRtrnCredit">Initial value of QtyRtrnCredit.</param>
        /// <param name="qtyRtrnReplacement">Initial value of QtyRtrnReplacement.</param>
        /// <param name="requestDate">Initial value of RequestDate.</param>
        /// <param name="status">Initial value of Status.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        public static POLineDist CreatePOLineDist(int pOLineDistKey, decimal amtInvcd, short closedForInvc, short closedForRcvg, short dropShip, short exclLeadTime, short expedite, decimal extAmt, decimal freightAmt, int gLAcctKey, decimal origOrdered, int pOLineKey, global::System.DateTime promiseDate, decimal qtyInvcd, decimal qtyOnBO, decimal qtyOpenToRcv, decimal qtyOrd, decimal qtyRcvd, decimal qtyRtrnCredit, decimal qtyRtrnReplacement, global::System.DateTime requestDate, short status, int updateCounter)
        {
            POLineDist pOLineDist = new POLineDist();
            pOLineDist.POLineDistKey = pOLineDistKey;
            pOLineDist.AmtInvcd = amtInvcd;
            pOLineDist.ClosedForInvc = closedForInvc;
            pOLineDist.ClosedForRcvg = closedForRcvg;
            pOLineDist.DropShip = dropShip;
            pOLineDist.ExclLeadTime = exclLeadTime;
            pOLineDist.Expedite = expedite;
            pOLineDist.ExtAmt = extAmt;
            pOLineDist.FreightAmt = freightAmt;
            pOLineDist.GLAcctKey = gLAcctKey;
            pOLineDist.OrigOrdered = origOrdered;
            pOLineDist.POLineKey = pOLineKey;
            pOLineDist.PromiseDate = promiseDate;
            pOLineDist.QtyInvcd = qtyInvcd;
            pOLineDist.QtyOnBO = qtyOnBO;
            pOLineDist.QtyOpenToRcv = qtyOpenToRcv;
            pOLineDist.QtyOrd = qtyOrd;
            pOLineDist.QtyRcvd = qtyRcvd;
            pOLineDist.QtyRtrnCredit = qtyRtrnCredit;
            pOLineDist.QtyRtrnReplacement = qtyRtrnReplacement;
            pOLineDist.RequestDate = requestDate;
            pOLineDist.Status = status;
            pOLineDist.UpdateCounter = updateCounter;
            return pOLineDist;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for POLineDistKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int POLineDistKey
        {
            get
            {
                int value = _POLineDistKey;
                OnGetPOLineDistKey(ref value);
                return value;
            }
            set
            {
                if (_POLineDistKey != value)
                {
                  OnPOLineDistKeyChanging(ref value);
                  ReportPropertyChanging("POLineDistKey");
                  _POLineDistKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("POLineDistKey");
                  OnPOLineDistKeyChanged();
              }
            }
        }
        private int _POLineDistKey;
        partial void OnGetPOLineDistKey(ref int value);
        partial void OnPOLineDistKeyChanging(ref int value);
        partial void OnPOLineDistKeyChanged();
    
        /// <summary>
        /// There are no comments for AcctRefKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? AcctRefKey
        {
            get
            {
                int? value = _AcctRefKey;
                OnGetAcctRefKey(ref value);
                return value;
            }
            set
            {
                if (_AcctRefKey != value)
                {
                  OnAcctRefKeyChanging(ref value);
                  ReportPropertyChanging("AcctRefKey");
                  _AcctRefKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AcctRefKey");
                  OnAcctRefKeyChanged();
              }
            }
        }
        private int? _AcctRefKey;
        partial void OnGetAcctRefKey(ref int? value);
        partial void OnAcctRefKeyChanging(ref int? value);
        partial void OnAcctRefKeyChanged();
    
        /// <summary>
        /// There are no comments for AmtInvcd in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal AmtInvcd
        {
            get
            {
                decimal value = _AmtInvcd;
                OnGetAmtInvcd(ref value);
                return value;
            }
            set
            {
                if (_AmtInvcd != value)
                {
                  OnAmtInvcdChanging(ref value);
                  ReportPropertyChanging("AmtInvcd");
                  _AmtInvcd = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AmtInvcd");
                  OnAmtInvcdChanged();
              }
            }
        }
        private decimal _AmtInvcd = 0m;
        partial void OnGetAmtInvcd(ref decimal value);
        partial void OnAmtInvcdChanging(ref decimal value);
        partial void OnAmtInvcdChanged();
    
        /// <summary>
        /// There are no comments for BlnktPOLineDistKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? BlnktPOLineDistKey
        {
            get
            {
                int? value = _BlnktPOLineDistKey;
                OnGetBlnktPOLineDistKey(ref value);
                return value;
            }
            set
            {
                if (_BlnktPOLineDistKey != value)
                {
                  OnBlnktPOLineDistKeyChanging(ref value);
                  ReportPropertyChanging("BlnktPOLineDistKey");
                  _BlnktPOLineDistKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BlnktPOLineDistKey");
                  OnBlnktPOLineDistKeyChanged();
              }
            }
        }
        private int? _BlnktPOLineDistKey;
        partial void OnGetBlnktPOLineDistKey(ref int? value);
        partial void OnBlnktPOLineDistKeyChanging(ref int? value);
        partial void OnBlnktPOLineDistKeyChanged();
    
        /// <summary>
        /// There are no comments for ClosedForInvc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ClosedForInvc
        {
            get
            {
                short value = _ClosedForInvc;
                OnGetClosedForInvc(ref value);
                return value;
            }
            set
            {
                if (_ClosedForInvc != value)
                {
                  OnClosedForInvcChanging(ref value);
                  ReportPropertyChanging("ClosedForInvc");
                  _ClosedForInvc = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ClosedForInvc");
                  OnClosedForInvcChanged();
              }
            }
        }
        private short _ClosedForInvc = 0;
        partial void OnGetClosedForInvc(ref short value);
        partial void OnClosedForInvcChanging(ref short value);
        partial void OnClosedForInvcChanged();
    
        /// <summary>
        /// There are no comments for ClosedForRcvg in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ClosedForRcvg
        {
            get
            {
                short value = _ClosedForRcvg;
                OnGetClosedForRcvg(ref value);
                return value;
            }
            set
            {
                if (_ClosedForRcvg != value)
                {
                  OnClosedForRcvgChanging(ref value);
                  ReportPropertyChanging("ClosedForRcvg");
                  _ClosedForRcvg = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ClosedForRcvg");
                  OnClosedForRcvgChanged();
              }
            }
        }
        private short _ClosedForRcvg = 0;
        partial void OnGetClosedForRcvg(ref short value);
        partial void OnClosedForRcvgChanging(ref short value);
        partial void OnClosedForRcvgChanged();
    
        /// <summary>
        /// There are no comments for DropShip in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short DropShip
        {
            get
            {
                short value = _DropShip;
                OnGetDropShip(ref value);
                return value;
            }
            set
            {
                if (_DropShip != value)
                {
                  OnDropShipChanging(ref value);
                  ReportPropertyChanging("DropShip");
                  _DropShip = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DropShip");
                  OnDropShipChanged();
              }
            }
        }
        private short _DropShip = 0;
        partial void OnGetDropShip(ref short value);
        partial void OnDropShipChanging(ref short value);
        partial void OnDropShipChanged();
    
        /// <summary>
        /// There are no comments for ExclLeadTime in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ExclLeadTime
        {
            get
            {
                short value = _ExclLeadTime;
                OnGetExclLeadTime(ref value);
                return value;
            }
            set
            {
                if (_ExclLeadTime != value)
                {
                  OnExclLeadTimeChanging(ref value);
                  ReportPropertyChanging("ExclLeadTime");
                  _ExclLeadTime = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ExclLeadTime");
                  OnExclLeadTimeChanged();
              }
            }
        }
        private short _ExclLeadTime = 0;
        partial void OnGetExclLeadTime(ref short value);
        partial void OnExclLeadTimeChanging(ref short value);
        partial void OnExclLeadTimeChanged();
    
        /// <summary>
        /// There are no comments for ExclLTReasCodeKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ExclLTReasCodeKey
        {
            get
            {
                int? value = _ExclLTReasCodeKey;
                OnGetExclLTReasCodeKey(ref value);
                return value;
            }
            set
            {
                if (_ExclLTReasCodeKey != value)
                {
                  OnExclLTReasCodeKeyChanging(ref value);
                  ReportPropertyChanging("ExclLTReasCodeKey");
                  _ExclLTReasCodeKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ExclLTReasCodeKey");
                  OnExclLTReasCodeKeyChanged();
              }
            }
        }
        private int? _ExclLTReasCodeKey;
        partial void OnGetExclLTReasCodeKey(ref int? value);
        partial void OnExclLTReasCodeKeyChanging(ref int? value);
        partial void OnExclLTReasCodeKeyChanged();
    
        /// <summary>
        /// There are no comments for Expedite in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Expedite
        {
            get
            {
                short value = _Expedite;
                OnGetExpedite(ref value);
                return value;
            }
            set
            {
                if (_Expedite != value)
                {
                  OnExpediteChanging(ref value);
                  ReportPropertyChanging("Expedite");
                  _Expedite = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Expedite");
                  OnExpediteChanged();
              }
            }
        }
        private short _Expedite = 0;
        partial void OnGetExpedite(ref short value);
        partial void OnExpediteChanging(ref short value);
        partial void OnExpediteChanged();
    
        /// <summary>
        /// There are no comments for ExpediteReasonKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ExpediteReasonKey
        {
            get
            {
                int? value = _ExpediteReasonKey;
                OnGetExpediteReasonKey(ref value);
                return value;
            }
            set
            {
                if (_ExpediteReasonKey != value)
                {
                  OnExpediteReasonKeyChanging(ref value);
                  ReportPropertyChanging("ExpediteReasonKey");
                  _ExpediteReasonKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ExpediteReasonKey");
                  OnExpediteReasonKeyChanged();
              }
            }
        }
        private int? _ExpediteReasonKey;
        partial void OnGetExpediteReasonKey(ref int? value);
        partial void OnExpediteReasonKeyChanging(ref int? value);
        partial void OnExpediteReasonKeyChanged();
    
        /// <summary>
        /// There are no comments for ExtAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal ExtAmt
        {
            get
            {
                decimal value = _ExtAmt;
                OnGetExtAmt(ref value);
                return value;
            }
            set
            {
                if (_ExtAmt != value)
                {
                  OnExtAmtChanging(ref value);
                  ReportPropertyChanging("ExtAmt");
                  _ExtAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ExtAmt");
                  OnExtAmtChanged();
              }
            }
        }
        private decimal _ExtAmt = 0m;
        partial void OnGetExtAmt(ref decimal value);
        partial void OnExtAmtChanging(ref decimal value);
        partial void OnExtAmtChanged();
    
        /// <summary>
        /// There are no comments for FASAssetNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string FASAssetNumber
        {
            get
            {
                string value = _FASAssetNumber;
                OnGetFASAssetNumber(ref value);
                return value;
            }
            set
            {
                if (_FASAssetNumber != value)
                {
                  OnFASAssetNumberChanging(ref value);
                  ReportPropertyChanging("FASAssetNumber");
                  _FASAssetNumber = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("FASAssetNumber");
                  OnFASAssetNumberChanged();
              }
            }
        }
        private string _FASAssetNumber;
        partial void OnGetFASAssetNumber(ref string value);
        partial void OnFASAssetNumberChanging(ref string value);
        partial void OnFASAssetNumberChanged();
    
        /// <summary>
        /// There are no comments for FASAssetTemplate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string FASAssetTemplate
        {
            get
            {
                string value = _FASAssetTemplate;
                OnGetFASAssetTemplate(ref value);
                return value;
            }
            set
            {
                if (_FASAssetTemplate != value)
                {
                  OnFASAssetTemplateChanging(ref value);
                  ReportPropertyChanging("FASAssetTemplate");
                  _FASAssetTemplate = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("FASAssetTemplate");
                  OnFASAssetTemplateChanged();
              }
            }
        }
        private string _FASAssetTemplate;
        partial void OnGetFASAssetTemplate(ref string value);
        partial void OnFASAssetTemplateChanging(ref string value);
        partial void OnFASAssetTemplateChanged();
    
        /// <summary>
        /// There are no comments for FOBKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? FOBKey
        {
            get
            {
                int? value = _FOBKey;
                OnGetFOBKey(ref value);
                return value;
            }
            set
            {
                if (_FOBKey != value)
                {
                  OnFOBKeyChanging(ref value);
                  ReportPropertyChanging("FOBKey");
                  _FOBKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FOBKey");
                  OnFOBKeyChanged();
              }
            }
        }
        private int? _FOBKey;
        partial void OnGetFOBKey(ref int? value);
        partial void OnFOBKeyChanging(ref int? value);
        partial void OnFOBKeyChanged();
    
        /// <summary>
        /// There are no comments for FreightAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal FreightAmt
        {
            get
            {
                decimal value = _FreightAmt;
                OnGetFreightAmt(ref value);
                return value;
            }
            set
            {
                if (_FreightAmt != value)
                {
                  OnFreightAmtChanging(ref value);
                  ReportPropertyChanging("FreightAmt");
                  _FreightAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FreightAmt");
                  OnFreightAmtChanged();
              }
            }
        }
        private decimal _FreightAmt = 0m;
        partial void OnGetFreightAmt(ref decimal value);
        partial void OnFreightAmtChanging(ref decimal value);
        partial void OnFreightAmtChanged();
    
        /// <summary>
        /// There are no comments for GLAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int GLAcctKey
        {
            get
            {
                int value = _GLAcctKey;
                OnGetGLAcctKey(ref value);
                return value;
            }
            set
            {
                if (_GLAcctKey != value)
                {
                  OnGLAcctKeyChanging(ref value);
                  ReportPropertyChanging("GLAcctKey");
                  _GLAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("GLAcctKey");
                  OnGLAcctKeyChanged();
              }
            }
        }
        private int _GLAcctKey;
        partial void OnGetGLAcctKey(ref int value);
        partial void OnGLAcctKeyChanging(ref int value);
        partial void OnGLAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for OrigOrdered in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal OrigOrdered
        {
            get
            {
                decimal value = _OrigOrdered;
                OnGetOrigOrdered(ref value);
                return value;
            }
            set
            {
                if (_OrigOrdered != value)
                {
                  OnOrigOrderedChanging(ref value);
                  ReportPropertyChanging("OrigOrdered");
                  _OrigOrdered = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OrigOrdered");
                  OnOrigOrderedChanged();
              }
            }
        }
        private decimal _OrigOrdered = 0m;
        partial void OnGetOrigOrdered(ref decimal value);
        partial void OnOrigOrderedChanging(ref decimal value);
        partial void OnOrigOrderedChanged();
    
        /// <summary>
        /// There are no comments for OrigPromiseDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? OrigPromiseDate
        {
            get
            {
                global::System.DateTime? value = _OrigPromiseDate;
                OnGetOrigPromiseDate(ref value);
                return value;
            }
            set
            {
                if (_OrigPromiseDate != value)
                {
                  OnOrigPromiseDateChanging(ref value);
                  ReportPropertyChanging("OrigPromiseDate");
                  _OrigPromiseDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OrigPromiseDate");
                  OnOrigPromiseDateChanged();
              }
            }
        }
        private global::System.DateTime? _OrigPromiseDate;
        partial void OnGetOrigPromiseDate(ref global::System.DateTime? value);
        partial void OnOrigPromiseDateChanging(ref global::System.DateTime? value);
        partial void OnOrigPromiseDateChanged();
    
        /// <summary>
        /// There are no comments for POLineKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int POLineKey
        {
            get
            {
                int value = _POLineKey;
                OnGetPOLineKey(ref value);
                return value;
            }
            set
            {
                if (_POLineKey != value)
                {
                  OnPOLineKeyChanging(ref value);
                  ReportPropertyChanging("POLineKey");
                  _POLineKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("POLineKey");
                  OnPOLineKeyChanged();
              }
            }
        }
        private int _POLineKey;
        partial void OnGetPOLineKey(ref int value);
        partial void OnPOLineKeyChanging(ref int value);
        partial void OnPOLineKeyChanged();
    
        /// <summary>
        /// There are no comments for PromiseDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime PromiseDate
        {
            get
            {
                global::System.DateTime value = _PromiseDate;
                OnGetPromiseDate(ref value);
                return value;
            }
            set
            {
                if (_PromiseDate != value)
                {
                  OnPromiseDateChanging(ref value);
                  ReportPropertyChanging("PromiseDate");
                  _PromiseDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PromiseDate");
                  OnPromiseDateChanged();
              }
            }
        }
        private global::System.DateTime _PromiseDate;
        partial void OnGetPromiseDate(ref global::System.DateTime value);
        partial void OnPromiseDateChanging(ref global::System.DateTime value);
        partial void OnPromiseDateChanged();
    
        /// <summary>
        /// There are no comments for PurchDeptKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? PurchDeptKey
        {
            get
            {
                int? value = _PurchDeptKey;
                OnGetPurchDeptKey(ref value);
                return value;
            }
            set
            {
                if (_PurchDeptKey != value)
                {
                  OnPurchDeptKeyChanging(ref value);
                  ReportPropertyChanging("PurchDeptKey");
                  _PurchDeptKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PurchDeptKey");
                  OnPurchDeptKeyChanged();
              }
            }
        }
        private int? _PurchDeptKey;
        partial void OnGetPurchDeptKey(ref int? value);
        partial void OnPurchDeptKeyChanging(ref int? value);
        partial void OnPurchDeptKeyChanged();
    
        /// <summary>
        /// There are no comments for QtyInvcd in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal QtyInvcd
        {
            get
            {
                decimal value = _QtyInvcd;
                OnGetQtyInvcd(ref value);
                return value;
            }
            set
            {
                if (_QtyInvcd != value)
                {
                  OnQtyInvcdChanging(ref value);
                  ReportPropertyChanging("QtyInvcd");
                  _QtyInvcd = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QtyInvcd");
                  OnQtyInvcdChanged();
              }
            }
        }
        private decimal _QtyInvcd = 0m;
        partial void OnGetQtyInvcd(ref decimal value);
        partial void OnQtyInvcdChanging(ref decimal value);
        partial void OnQtyInvcdChanged();
    
        /// <summary>
        /// There are no comments for QtyOnBO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal QtyOnBO
        {
            get
            {
                decimal value = _QtyOnBO;
                OnGetQtyOnBO(ref value);
                return value;
            }
            set
            {
                if (_QtyOnBO != value)
                {
                  OnQtyOnBOChanging(ref value);
                  ReportPropertyChanging("QtyOnBO");
                  _QtyOnBO = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QtyOnBO");
                  OnQtyOnBOChanged();
              }
            }
        }
        private decimal _QtyOnBO = 0m;
        partial void OnGetQtyOnBO(ref decimal value);
        partial void OnQtyOnBOChanging(ref decimal value);
        partial void OnQtyOnBOChanged();
    
        /// <summary>
        /// There are no comments for QtyOpenToRcv in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal QtyOpenToRcv
        {
            get
            {
                decimal value = _QtyOpenToRcv;
                OnGetQtyOpenToRcv(ref value);
                return value;
            }
            set
            {
                if (_QtyOpenToRcv != value)
                {
                  OnQtyOpenToRcvChanging(ref value);
                  ReportPropertyChanging("QtyOpenToRcv");
                  _QtyOpenToRcv = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QtyOpenToRcv");
                  OnQtyOpenToRcvChanged();
              }
            }
        }
        private decimal _QtyOpenToRcv = 0m;
        partial void OnGetQtyOpenToRcv(ref decimal value);
        partial void OnQtyOpenToRcvChanging(ref decimal value);
        partial void OnQtyOpenToRcvChanged();
    
        /// <summary>
        /// There are no comments for QtyOrd in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal QtyOrd
        {
            get
            {
                decimal value = _QtyOrd;
                OnGetQtyOrd(ref value);
                return value;
            }
            set
            {
                if (_QtyOrd != value)
                {
                  OnQtyOrdChanging(ref value);
                  ReportPropertyChanging("QtyOrd");
                  _QtyOrd = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QtyOrd");
                  OnQtyOrdChanged();
              }
            }
        }
        private decimal _QtyOrd = 0m;
        partial void OnGetQtyOrd(ref decimal value);
        partial void OnQtyOrdChanging(ref decimal value);
        partial void OnQtyOrdChanged();
    
        /// <summary>
        /// There are no comments for QtyRcvd in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal QtyRcvd
        {
            get
            {
                decimal value = _QtyRcvd;
                OnGetQtyRcvd(ref value);
                return value;
            }
            set
            {
                if (_QtyRcvd != value)
                {
                  OnQtyRcvdChanging(ref value);
                  ReportPropertyChanging("QtyRcvd");
                  _QtyRcvd = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QtyRcvd");
                  OnQtyRcvdChanged();
              }
            }
        }
        private decimal _QtyRcvd = 0m;
        partial void OnGetQtyRcvd(ref decimal value);
        partial void OnQtyRcvdChanging(ref decimal value);
        partial void OnQtyRcvdChanged();
    
        /// <summary>
        /// There are no comments for QtyRtrnCredit in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal QtyRtrnCredit
        {
            get
            {
                decimal value = _QtyRtrnCredit;
                OnGetQtyRtrnCredit(ref value);
                return value;
            }
            set
            {
                if (_QtyRtrnCredit != value)
                {
                  OnQtyRtrnCreditChanging(ref value);
                  ReportPropertyChanging("QtyRtrnCredit");
                  _QtyRtrnCredit = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QtyRtrnCredit");
                  OnQtyRtrnCreditChanged();
              }
            }
        }
        private decimal _QtyRtrnCredit = 0m;
        partial void OnGetQtyRtrnCredit(ref decimal value);
        partial void OnQtyRtrnCreditChanging(ref decimal value);
        partial void OnQtyRtrnCreditChanged();
    
        /// <summary>
        /// There are no comments for QtyRtrnReplacement in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal QtyRtrnReplacement
        {
            get
            {
                decimal value = _QtyRtrnReplacement;
                OnGetQtyRtrnReplacement(ref value);
                return value;
            }
            set
            {
                if (_QtyRtrnReplacement != value)
                {
                  OnQtyRtrnReplacementChanging(ref value);
                  ReportPropertyChanging("QtyRtrnReplacement");
                  _QtyRtrnReplacement = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QtyRtrnReplacement");
                  OnQtyRtrnReplacementChanged();
              }
            }
        }
        private decimal _QtyRtrnReplacement = 0m;
        partial void OnGetQtyRtrnReplacement(ref decimal value);
        partial void OnQtyRtrnReplacementChanging(ref decimal value);
        partial void OnQtyRtrnReplacementChanged();
    
        /// <summary>
        /// There are no comments for RequestDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime RequestDate
        {
            get
            {
                global::System.DateTime value = _RequestDate;
                OnGetRequestDate(ref value);
                return value;
            }
            set
            {
                if (_RequestDate != value)
                {
                  OnRequestDateChanging(ref value);
                  ReportPropertyChanging("RequestDate");
                  _RequestDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RequestDate");
                  OnRequestDateChanged();
              }
            }
        }
        private global::System.DateTime _RequestDate;
        partial void OnGetRequestDate(ref global::System.DateTime value);
        partial void OnRequestDateChanging(ref global::System.DateTime value);
        partial void OnRequestDateChanged();
    
        /// <summary>
        /// There are no comments for ShipMethKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ShipMethKey
        {
            get
            {
                int? value = _ShipMethKey;
                OnGetShipMethKey(ref value);
                return value;
            }
            set
            {
                if (_ShipMethKey != value)
                {
                  OnShipMethKeyChanging(ref value);
                  ReportPropertyChanging("ShipMethKey");
                  _ShipMethKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipMethKey");
                  OnShipMethKeyChanged();
              }
            }
        }
        private int? _ShipMethKey;
        partial void OnGetShipMethKey(ref int? value);
        partial void OnShipMethKeyChanging(ref int? value);
        partial void OnShipMethKeyChanged();
    
        /// <summary>
        /// There are no comments for ShipToAddrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ShipToAddrKey
        {
            get
            {
                int? value = _ShipToAddrKey;
                OnGetShipToAddrKey(ref value);
                return value;
            }
            set
            {
                if (_ShipToAddrKey != value)
                {
                  OnShipToAddrKeyChanging(ref value);
                  ReportPropertyChanging("ShipToAddrKey");
                  _ShipToAddrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipToAddrKey");
                  OnShipToAddrKeyChanged();
              }
            }
        }
        private int? _ShipToAddrKey;
        partial void OnGetShipToAddrKey(ref int? value);
        partial void OnShipToAddrKeyChanging(ref int? value);
        partial void OnShipToAddrKeyChanged();
    
        /// <summary>
        /// There are no comments for ShipToCustAddrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ShipToCustAddrKey
        {
            get
            {
                int? value = _ShipToCustAddrKey;
                OnGetShipToCustAddrKey(ref value);
                return value;
            }
            set
            {
                if (_ShipToCustAddrKey != value)
                {
                  OnShipToCustAddrKeyChanging(ref value);
                  ReportPropertyChanging("ShipToCustAddrKey");
                  _ShipToCustAddrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipToCustAddrKey");
                  OnShipToCustAddrKeyChanged();
              }
            }
        }
        private int? _ShipToCustAddrKey;
        partial void OnGetShipToCustAddrKey(ref int? value);
        partial void OnShipToCustAddrKeyChanging(ref int? value);
        partial void OnShipToCustAddrKeyChanged();
    
        /// <summary>
        /// There are no comments for ShipToCustKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ShipToCustKey
        {
            get
            {
                int? value = _ShipToCustKey;
                OnGetShipToCustKey(ref value);
                return value;
            }
            set
            {
                if (_ShipToCustKey != value)
                {
                  OnShipToCustKeyChanging(ref value);
                  ReportPropertyChanging("ShipToCustKey");
                  _ShipToCustKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipToCustKey");
                  OnShipToCustKeyChanged();
              }
            }
        }
        private int? _ShipToCustKey;
        partial void OnGetShipToCustKey(ref int? value);
        partial void OnShipToCustKeyChanging(ref int? value);
        partial void OnShipToCustKeyChanged();
    
        /// <summary>
        /// There are no comments for ShipToWhseKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ShipToWhseKey
        {
            get
            {
                int? value = _ShipToWhseKey;
                OnGetShipToWhseKey(ref value);
                return value;
            }
            set
            {
                if (_ShipToWhseKey != value)
                {
                  OnShipToWhseKeyChanging(ref value);
                  ReportPropertyChanging("ShipToWhseKey");
                  _ShipToWhseKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipToWhseKey");
                  OnShipToWhseKeyChanged();
              }
            }
        }
        private int? _ShipToWhseKey;
        partial void OnGetShipToWhseKey(ref int? value);
        partial void OnShipToWhseKeyChanging(ref int? value);
        partial void OnShipToWhseKeyChanged();
    
        /// <summary>
        /// There are no comments for ShipZoneKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ShipZoneKey
        {
            get
            {
                int? value = _ShipZoneKey;
                OnGetShipZoneKey(ref value);
                return value;
            }
            set
            {
                if (_ShipZoneKey != value)
                {
                  OnShipZoneKeyChanging(ref value);
                  ReportPropertyChanging("ShipZoneKey");
                  _ShipZoneKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ShipZoneKey");
                  OnShipZoneKeyChanged();
              }
            }
        }
        private int? _ShipZoneKey;
        partial void OnGetShipZoneKey(ref int? value);
        partial void OnShipZoneKeyChanging(ref int? value);
        partial void OnShipZoneKeyChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Status
        {
            get
            {
                short value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private short _Status = 1;
        partial void OnGetStatus(ref short value);
        partial void OnStatusChanging(ref short value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// There are no comments for STaxTranKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? STaxTranKey
        {
            get
            {
                int? value = _STaxTranKey;
                OnGetSTaxTranKey(ref value);
                return value;
            }
            set
            {
                if (_STaxTranKey != value)
                {
                  OnSTaxTranKeyChanging(ref value);
                  ReportPropertyChanging("STaxTranKey");
                  _STaxTranKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("STaxTranKey");
                  OnSTaxTranKeyChanged();
              }
            }
        }
        private int? _STaxTranKey;
        partial void OnGetSTaxTranKey(ref int? value);
        partial void OnSTaxTranKeyChanging(ref int? value);
        partial void OnSTaxTranKeyChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for POLine in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "POLine_POLineDist", "POLine")]
        public virtual POLine POLine
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<POLine>("Net4Sage.DataAccessModel.POLine_POLineDist", "POLine").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<POLine>("Net4Sage.DataAccessModel.POLine_POLineDist", "POLine").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for POLine in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<POLine> POLineReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<POLine>("Net4Sage.DataAccessModel.POLine_POLineDist", "POLine");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<POLine>("Net4Sage.DataAccessModel.POLine_POLineDist", "POLine", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<POLine>("Net4Sage.DataAccessModel.POLine_POLineDist", "POLine").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.PurchOrder in the schema.
    /// </summary>
    /// <KeyProperties>
    /// POKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="PurchOrder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PurchOrder : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new PurchOrder object.
        /// </summary>
        /// <param name="pOKey">Initial value of POKey.</param>
        /// <param name="amtInvcd">Initial value of AmtInvcd.</param>
        /// <param name="approvalStatus">Initial value of ApprovalStatus.</param>
        /// <param name="blnktRelNo">Initial value of BlnktRelNo.</param>
        /// <param name="chngOrdNo">Initial value of ChngOrdNo.</param>
        /// <param name="closedForInvc">Initial value of ClosedForInvc.</param>
        /// <param name="closedForRcvg">Initial value of ClosedForRcvg.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="createType">Initial value of CreateType.</param>
        /// <param name="creditHold">Initial value of CreditHold.</param>
        /// <param name="currExchRate">Initial value of CurrExchRate.</param>
        /// <param name="currID">Initial value of CurrID.</param>
        /// <param name="dfltDropShip">Initial value of DfltDropShip.</param>
        /// <param name="dfltExclLastCost">Initial value of DfltExclLastCost.</param>
        /// <param name="dfltExclLeadTime">Initial value of DfltExclLeadTime.</param>
        /// <param name="dfltExpedite">Initial value of DfltExpedite.</param>
        /// <param name="dfltTargetCompID">Initial value of DfltTargetCompID.</param>
        /// <param name="fixedCurrExchRate">Initial value of FixedCurrExchRate.</param>
        /// <param name="freightAllocMeth">Initial value of FreightAllocMeth.</param>
        /// <param name="freightAmt">Initial value of FreightAmt.</param>
        /// <param name="hold">Initial value of Hold.</param>
        /// <param name="nextLineNo">Initial value of NextLineNo.</param>
        /// <param name="openAmt">Initial value of OpenAmt.</param>
        /// <param name="openAmtHC">Initial value of OpenAmtHC.</param>
        /// <param name="purchAmt">Initial value of PurchAmt.</param>
        /// <param name="purchAmtHC">Initial value of PurchAmtHC.</param>
        /// <param name="purchVendAddrKey">Initial value of PurchVendAddrKey.</param>
        /// <param name="remitToVendAddrKey">Initial value of RemitToVendAddrKey.</param>
        /// <param name="requirePOIssue">Initial value of RequirePOIssue.</param>
        /// <param name="status">Initial value of Status.</param>
        /// <param name="sTaxAmt">Initial value of STaxAmt.</param>
        /// <param name="tranAmt">Initial value of TranAmt.</param>
        /// <param name="tranAmtHC">Initial value of TranAmtHC.</param>
        /// <param name="tranDate">Initial value of TranDate.</param>
        /// <param name="tranID">Initial value of TranID.</param>
        /// <param name="tranNo">Initial value of TranNo.</param>
        /// <param name="tranNoChngOrd">Initial value of TranNoChngOrd.</param>
        /// <param name="tranNoRel">Initial value of TranNoRel.</param>
        /// <param name="tranNoRelChngOrd">Initial value of TranNoRelChngOrd.</param>
        /// <param name="tranType">Initial value of TranType.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        /// <param name="vendKey">Initial value of VendKey.</param>
        public static PurchOrder CreatePurchOrder(int pOKey, decimal amtInvcd, short approvalStatus, short blnktRelNo, short chngOrdNo, short closedForInvc, short closedForRcvg, string companyID, short createType, short creditHold, double currExchRate, string currID, short dfltDropShip, short dfltExclLastCost, short dfltExclLeadTime, short dfltExpedite, string dfltTargetCompID, short fixedCurrExchRate, short freightAllocMeth, decimal freightAmt, short hold, int nextLineNo, decimal openAmt, decimal openAmtHC, decimal purchAmt, decimal purchAmtHC, int purchVendAddrKey, int remitToVendAddrKey, short requirePOIssue, short status, decimal sTaxAmt, decimal tranAmt, decimal tranAmtHC, global::System.DateTime tranDate, string tranID, string tranNo, string tranNoChngOrd, string tranNoRel, string tranNoRelChngOrd, int tranType, int updateCounter, int vendKey)
        {
            PurchOrder purchOrder = new PurchOrder();
            purchOrder.POKey = pOKey;
            purchOrder.AmtInvcd = amtInvcd;
            purchOrder.ApprovalStatus = approvalStatus;
            purchOrder.BlnktRelNo = blnktRelNo;
            purchOrder.ChngOrdNo = chngOrdNo;
            purchOrder.ClosedForInvc = closedForInvc;
            purchOrder.ClosedForRcvg = closedForRcvg;
            purchOrder.CompanyID = companyID;
            purchOrder.CreateType = createType;
            purchOrder.CreditHold = creditHold;
            purchOrder.CurrExchRate = currExchRate;
            purchOrder.CurrID = currID;
            purchOrder.DfltDropShip = dfltDropShip;
            purchOrder.DfltExclLastCost = dfltExclLastCost;
            purchOrder.DfltExclLeadTime = dfltExclLeadTime;
            purchOrder.DfltExpedite = dfltExpedite;
            purchOrder.DfltTargetCompID = dfltTargetCompID;
            purchOrder.FixedCurrExchRate = fixedCurrExchRate;
            purchOrder.FreightAllocMeth = freightAllocMeth;
            purchOrder.FreightAmt = freightAmt;
            purchOrder.Hold = hold;
            purchOrder.NextLineNo = nextLineNo;
            purchOrder.OpenAmt = openAmt;
            purchOrder.OpenAmtHC = openAmtHC;
            purchOrder.PurchAmt = purchAmt;
            purchOrder.PurchAmtHC = purchAmtHC;
            purchOrder.PurchVendAddrKey = purchVendAddrKey;
            purchOrder.RemitToVendAddrKey = remitToVendAddrKey;
            purchOrder.RequirePOIssue = requirePOIssue;
            purchOrder.Status = status;
            purchOrder.STaxAmt = sTaxAmt;
            purchOrder.TranAmt = tranAmt;
            purchOrder.TranAmtHC = tranAmtHC;
            purchOrder.TranDate = tranDate;
            purchOrder.TranID = tranID;
            purchOrder.TranNo = tranNo;
            purchOrder.TranNoChngOrd = tranNoChngOrd;
            purchOrder.TranNoRel = tranNoRel;
            purchOrder.TranNoRelChngOrd = tranNoRelChngOrd;
            purchOrder.TranType = tranType;
            purchOrder.UpdateCounter = updateCounter;
            purchOrder.VendKey = vendKey;
            return purchOrder;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for POKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int POKey
        {
            get
            {
                int value = _POKey;
                OnGetPOKey(ref value);
                return value;
            }
            set
            {
                if (_POKey != value)
                {
                  OnPOKeyChanging(ref value);
                  ReportPropertyChanging("POKey");
                  _POKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("POKey");
                  OnPOKeyChanged();
              }
            }
        }
        private int _POKey;
        partial void OnGetPOKey(ref int value);
        partial void OnPOKeyChanging(ref int value);
        partial void OnPOKeyChanged();
    
        /// <summary>
        /// There are no comments for AmtInvcd in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal AmtInvcd
        {
            get
            {
                decimal value = _AmtInvcd;
                OnGetAmtInvcd(ref value);
                return value;
            }
            set
            {
                if (_AmtInvcd != value)
                {
                  OnAmtInvcdChanging(ref value);
                  ReportPropertyChanging("AmtInvcd");
                  _AmtInvcd = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AmtInvcd");
                  OnAmtInvcdChanged();
              }
            }
        }
        private decimal _AmtInvcd = 0m;
        partial void OnGetAmtInvcd(ref decimal value);
        partial void OnAmtInvcdChanging(ref decimal value);
        partial void OnAmtInvcdChanged();
    
        /// <summary>
        /// There are no comments for ApprovalDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? ApprovalDate
        {
            get
            {
                global::System.DateTime? value = _ApprovalDate;
                OnGetApprovalDate(ref value);
                return value;
            }
            set
            {
                if (_ApprovalDate != value)
                {
                  OnApprovalDateChanging(ref value);
                  ReportPropertyChanging("ApprovalDate");
                  _ApprovalDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ApprovalDate");
                  OnApprovalDateChanged();
              }
            }
        }
        private global::System.DateTime? _ApprovalDate;
        partial void OnGetApprovalDate(ref global::System.DateTime? value);
        partial void OnApprovalDateChanging(ref global::System.DateTime? value);
        partial void OnApprovalDateChanged();
    
        /// <summary>
        /// There are no comments for ApprovalStatus in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ApprovalStatus
        {
            get
            {
                short value = _ApprovalStatus;
                OnGetApprovalStatus(ref value);
                return value;
            }
            set
            {
                if (_ApprovalStatus != value)
                {
                  OnApprovalStatusChanging(ref value);
                  ReportPropertyChanging("ApprovalStatus");
                  _ApprovalStatus = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ApprovalStatus");
                  OnApprovalStatusChanged();
              }
            }
        }
        private short _ApprovalStatus = 0;
        partial void OnGetApprovalStatus(ref short value);
        partial void OnApprovalStatusChanging(ref short value);
        partial void OnApprovalStatusChanged();
    
        /// <summary>
        /// There are no comments for BlnktPOKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? BlnktPOKey
        {
            get
            {
                int? value = _BlnktPOKey;
                OnGetBlnktPOKey(ref value);
                return value;
            }
            set
            {
                if (_BlnktPOKey != value)
                {
                  OnBlnktPOKeyChanging(ref value);
                  ReportPropertyChanging("BlnktPOKey");
                  _BlnktPOKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BlnktPOKey");
                  OnBlnktPOKeyChanged();
              }
            }
        }
        private int? _BlnktPOKey;
        partial void OnGetBlnktPOKey(ref int? value);
        partial void OnBlnktPOKeyChanging(ref int? value);
        partial void OnBlnktPOKeyChanged();
    
        /// <summary>
        /// There are no comments for BlnktRelNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short BlnktRelNo
        {
            get
            {
                short value = _BlnktRelNo;
                OnGetBlnktRelNo(ref value);
                return value;
            }
            set
            {
                if (_BlnktRelNo != value)
                {
                  OnBlnktRelNoChanging(ref value);
                  ReportPropertyChanging("BlnktRelNo");
                  _BlnktRelNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BlnktRelNo");
                  OnBlnktRelNoChanged();
              }
            }
        }
        private short _BlnktRelNo = 0;
        partial void OnGetBlnktRelNo(ref short value);
        partial void OnBlnktRelNoChanging(ref short value);
        partial void OnBlnktRelNoChanged();
    
        /// <summary>
        /// There are no comments for BuyerKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? BuyerKey
        {
            get
            {
                int? value = _BuyerKey;
                OnGetBuyerKey(ref value);
                return value;
            }
            set
            {
                if (_BuyerKey != value)
                {
                  OnBuyerKeyChanging(ref value);
                  ReportPropertyChanging("BuyerKey");
                  _BuyerKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BuyerKey");
                  OnBuyerKeyChanged();
              }
            }
        }
        private int? _BuyerKey;
        partial void OnGetBuyerKey(ref int? value);
        partial void OnBuyerKeyChanging(ref int? value);
        partial void OnBuyerKeyChanged();
    
        /// <summary>
        /// There are no comments for ChngOrdDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? ChngOrdDate
        {
            get
            {
                global::System.DateTime? value = _ChngOrdDate;
                OnGetChngOrdDate(ref value);
                return value;
            }
            set
            {
                if (_ChngOrdDate != value)
                {
                  OnChngOrdDateChanging(ref value);
                  ReportPropertyChanging("ChngOrdDate");
                  _ChngOrdDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ChngOrdDate");
                  OnChngOrdDateChanged();
              }
            }
        }
        private global::System.DateTime? _ChngOrdDate;
        partial void OnGetChngOrdDate(ref global::System.DateTime? value);
        partial void OnChngOrdDateChanging(ref global::System.DateTime? value);
        partial void OnChngOrdDateChanged();
    
        /// <summary>
        /// There are no comments for ChngOrdNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ChngOrdNo
        {
            get
            {
                short value = _ChngOrdNo;
                OnGetChngOrdNo(ref value);
                return value;
            }
            set
            {
                if (_ChngOrdNo != value)
                {
                  OnChngOrdNoChanging(ref value);
                  ReportPropertyChanging("ChngOrdNo");
                  _ChngOrdNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ChngOrdNo");
                  OnChngOrdNoChanged();
              }
            }
        }
        private short _ChngOrdNo = 0;
        partial void OnGetChngOrdNo(ref short value);
        partial void OnChngOrdNoChanging(ref short value);
        partial void OnChngOrdNoChanged();
    
        /// <summary>
        /// There are no comments for ChngReason in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ChngReason
        {
            get
            {
                string value = _ChngReason;
                OnGetChngReason(ref value);
                return value;
            }
            set
            {
                if (_ChngReason != value)
                {
                  OnChngReasonChanging(ref value);
                  ReportPropertyChanging("ChngReason");
                  _ChngReason = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ChngReason");
                  OnChngReasonChanged();
              }
            }
        }
        private string _ChngReason;
        partial void OnGetChngReason(ref string value);
        partial void OnChngReasonChanging(ref string value);
        partial void OnChngReasonChanged();
    
        /// <summary>
        /// There are no comments for ChngUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string ChngUserID
        {
            get
            {
                string value = _ChngUserID;
                OnGetChngUserID(ref value);
                return value;
            }
            set
            {
                if (_ChngUserID != value)
                {
                  OnChngUserIDChanging(ref value);
                  ReportPropertyChanging("ChngUserID");
                  _ChngUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ChngUserID");
                  OnChngUserIDChanged();
              }
            }
        }
        private string _ChngUserID;
        partial void OnGetChngUserID(ref string value);
        partial void OnChngUserIDChanging(ref string value);
        partial void OnChngUserIDChanged();
    
        /// <summary>
        /// There are no comments for CloseDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CloseDate
        {
            get
            {
                global::System.DateTime? value = _CloseDate;
                OnGetCloseDate(ref value);
                return value;
            }
            set
            {
                if (_CloseDate != value)
                {
                  OnCloseDateChanging(ref value);
                  ReportPropertyChanging("CloseDate");
                  _CloseDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CloseDate");
                  OnCloseDateChanged();
              }
            }
        }
        private global::System.DateTime? _CloseDate;
        partial void OnGetCloseDate(ref global::System.DateTime? value);
        partial void OnCloseDateChanging(ref global::System.DateTime? value);
        partial void OnCloseDateChanged();
    
        /// <summary>
        /// There are no comments for ClosedForInvc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ClosedForInvc
        {
            get
            {
                short value = _ClosedForInvc;
                OnGetClosedForInvc(ref value);
                return value;
            }
            set
            {
                if (_ClosedForInvc != value)
                {
                  OnClosedForInvcChanging(ref value);
                  ReportPropertyChanging("ClosedForInvc");
                  _ClosedForInvc = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ClosedForInvc");
                  OnClosedForInvcChanged();
              }
            }
        }
        private short _ClosedForInvc = 0;
        partial void OnGetClosedForInvc(ref short value);
        partial void OnClosedForInvcChanging(ref short value);
        partial void OnClosedForInvcChanged();
    
        /// <summary>
        /// There are no comments for ClosedForRcvg in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ClosedForRcvg
        {
            get
            {
                short value = _ClosedForRcvg;
                OnGetClosedForRcvg(ref value);
                return value;
            }
            set
            {
                if (_ClosedForRcvg != value)
                {
                  OnClosedForRcvgChanging(ref value);
                  ReportPropertyChanging("ClosedForRcvg");
                  _ClosedForRcvg = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ClosedForRcvg");
                  OnClosedForRcvgChanged();
              }
            }
        }
        private short _ClosedForRcvg = 0;
        partial void OnGetClosedForRcvg(ref short value);
        partial void OnClosedForRcvgChanging(ref short value);
        partial void OnClosedForRcvgChanged();
    
        /// <summary>
        /// There are no comments for CntctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CntctKey
        {
            get
            {
                int? value = _CntctKey;
                OnGetCntctKey(ref value);
                return value;
            }
            set
            {
                if (_CntctKey != value)
                {
                  OnCntctKeyChanging(ref value);
                  ReportPropertyChanging("CntctKey");
                  _CntctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CntctKey");
                  OnCntctKeyChanged();
              }
            }
        }
        private int? _CntctKey;
        partial void OnGetCntctKey(ref int? value);
        partial void OnCntctKeyChanging(ref int? value);
        partial void OnCntctKeyChanged();
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for CreateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CreateDate
        {
            get
            {
                global::System.DateTime? value = _CreateDate;
                OnGetCreateDate(ref value);
                return value;
            }
            set
            {
                if (_CreateDate != value)
                {
                  OnCreateDateChanging(ref value);
                  ReportPropertyChanging("CreateDate");
                  _CreateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateDate");
                  OnCreateDateChanged();
              }
            }
        }
        private global::System.DateTime? _CreateDate;
        partial void OnGetCreateDate(ref global::System.DateTime? value);
        partial void OnCreateDateChanging(ref global::System.DateTime? value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// There are no comments for CreateType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CreateType
        {
            get
            {
                short value = _CreateType;
                OnGetCreateType(ref value);
                return value;
            }
            set
            {
                if (_CreateType != value)
                {
                  OnCreateTypeChanging(ref value);
                  ReportPropertyChanging("CreateType");
                  _CreateType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateType");
                  OnCreateTypeChanged();
              }
            }
        }
        private short _CreateType = 0;
        partial void OnGetCreateType(ref short value);
        partial void OnCreateTypeChanging(ref short value);
        partial void OnCreateTypeChanged();
    
        /// <summary>
        /// There are no comments for CreateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CreateUserID
        {
            get
            {
                string value = _CreateUserID;
                OnGetCreateUserID(ref value);
                return value;
            }
            set
            {
                if (_CreateUserID != value)
                {
                  OnCreateUserIDChanging(ref value);
                  ReportPropertyChanging("CreateUserID");
                  _CreateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CreateUserID");
                  OnCreateUserIDChanged();
              }
            }
        }
        private string _CreateUserID;
        partial void OnGetCreateUserID(ref string value);
        partial void OnCreateUserIDChanging(ref string value);
        partial void OnCreateUserIDChanged();
    
        /// <summary>
        /// There are no comments for CreditHold in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CreditHold
        {
            get
            {
                short value = _CreditHold;
                OnGetCreditHold(ref value);
                return value;
            }
            set
            {
                if (_CreditHold != value)
                {
                  OnCreditHoldChanging(ref value);
                  ReportPropertyChanging("CreditHold");
                  _CreditHold = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreditHold");
                  OnCreditHoldChanged();
              }
            }
        }
        private short _CreditHold = 0;
        partial void OnGetCreditHold(ref short value);
        partial void OnCreditHoldChanging(ref short value);
        partial void OnCreditHoldChanged();
    
        /// <summary>
        /// There are no comments for CurrExchRate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual double CurrExchRate
        {
            get
            {
                double value = _CurrExchRate;
                OnGetCurrExchRate(ref value);
                return value;
            }
            set
            {
                if (_CurrExchRate != value)
                {
                  OnCurrExchRateChanging(ref value);
                  ReportPropertyChanging("CurrExchRate");
                  _CurrExchRate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CurrExchRate");
                  OnCurrExchRateChanged();
              }
            }
        }
        private double _CurrExchRate = 1;
        partial void OnGetCurrExchRate(ref double value);
        partial void OnCurrExchRateChanging(ref double value);
        partial void OnCurrExchRateChanged();
    
        /// <summary>
        /// There are no comments for CurrExchSchdKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CurrExchSchdKey
        {
            get
            {
                int? value = _CurrExchSchdKey;
                OnGetCurrExchSchdKey(ref value);
                return value;
            }
            set
            {
                if (_CurrExchSchdKey != value)
                {
                  OnCurrExchSchdKeyChanging(ref value);
                  ReportPropertyChanging("CurrExchSchdKey");
                  _CurrExchSchdKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CurrExchSchdKey");
                  OnCurrExchSchdKeyChanged();
              }
            }
        }
        private int? _CurrExchSchdKey;
        partial void OnGetCurrExchSchdKey(ref int? value);
        partial void OnCurrExchSchdKeyChanging(ref int? value);
        partial void OnCurrExchSchdKeyChanged();
    
        /// <summary>
        /// There are no comments for CurrID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CurrID
        {
            get
            {
                string value = _CurrID;
                OnGetCurrID(ref value);
                return value;
            }
            set
            {
                if (_CurrID != value)
                {
                  OnCurrIDChanging(ref value);
                  ReportPropertyChanging("CurrID");
                  _CurrID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CurrID");
                  OnCurrIDChanged();
              }
            }
        }
        private string _CurrID;
        partial void OnGetCurrID(ref string value);
        partial void OnCurrIDChanging(ref string value);
        partial void OnCurrIDChanged();
    
        /// <summary>
        /// There are no comments for DfltAcctRefKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? DfltAcctRefKey
        {
            get
            {
                int? value = _DfltAcctRefKey;
                OnGetDfltAcctRefKey(ref value);
                return value;
            }
            set
            {
                if (_DfltAcctRefKey != value)
                {
                  OnDfltAcctRefKeyChanging(ref value);
                  ReportPropertyChanging("DfltAcctRefKey");
                  _DfltAcctRefKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltAcctRefKey");
                  OnDfltAcctRefKeyChanged();
              }
            }
        }
        private int? _DfltAcctRefKey;
        partial void OnGetDfltAcctRefKey(ref int? value);
        partial void OnDfltAcctRefKeyChanging(ref int? value);
        partial void OnDfltAcctRefKeyChanged();
    
        /// <summary>
        /// There are no comments for DfltDropShip in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short DfltDropShip
        {
            get
            {
                short value = _DfltDropShip;
                OnGetDfltDropShip(ref value);
                return value;
            }
            set
            {
                if (_DfltDropShip != value)
                {
                  OnDfltDropShipChanging(ref value);
                  ReportPropertyChanging("DfltDropShip");
                  _DfltDropShip = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltDropShip");
                  OnDfltDropShipChanged();
              }
            }
        }
        private short _DfltDropShip = 0;
        partial void OnGetDfltDropShip(ref short value);
        partial void OnDfltDropShipChanging(ref short value);
        partial void OnDfltDropShipChanged();
    
        /// <summary>
        /// There are no comments for DfltExclLastCost in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short DfltExclLastCost
        {
            get
            {
                short value = _DfltExclLastCost;
                OnGetDfltExclLastCost(ref value);
                return value;
            }
            set
            {
                if (_DfltExclLastCost != value)
                {
                  OnDfltExclLastCostChanging(ref value);
                  ReportPropertyChanging("DfltExclLastCost");
                  _DfltExclLastCost = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltExclLastCost");
                  OnDfltExclLastCostChanged();
              }
            }
        }
        private short _DfltExclLastCost = 0;
        partial void OnGetDfltExclLastCost(ref short value);
        partial void OnDfltExclLastCostChanging(ref short value);
        partial void OnDfltExclLastCostChanged();
    
        /// <summary>
        /// There are no comments for DfltExclLeadTime in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short DfltExclLeadTime
        {
            get
            {
                short value = _DfltExclLeadTime;
                OnGetDfltExclLeadTime(ref value);
                return value;
            }
            set
            {
                if (_DfltExclLeadTime != value)
                {
                  OnDfltExclLeadTimeChanging(ref value);
                  ReportPropertyChanging("DfltExclLeadTime");
                  _DfltExclLeadTime = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltExclLeadTime");
                  OnDfltExclLeadTimeChanged();
              }
            }
        }
        private short _DfltExclLeadTime = 0;
        partial void OnGetDfltExclLeadTime(ref short value);
        partial void OnDfltExclLeadTimeChanging(ref short value);
        partial void OnDfltExclLeadTimeChanged();
    
        /// <summary>
        /// There are no comments for DfltExclLTReasKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? DfltExclLTReasKey
        {
            get
            {
                int? value = _DfltExclLTReasKey;
                OnGetDfltExclLTReasKey(ref value);
                return value;
            }
            set
            {
                if (_DfltExclLTReasKey != value)
                {
                  OnDfltExclLTReasKeyChanging(ref value);
                  ReportPropertyChanging("DfltExclLTReasKey");
                  _DfltExclLTReasKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltExclLTReasKey");
                  OnDfltExclLTReasKeyChanged();
              }
            }
        }
        private int? _DfltExclLTReasKey;
        partial void OnGetDfltExclLTReasKey(ref int? value);
        partial void OnDfltExclLTReasKeyChanging(ref int? value);
        partial void OnDfltExclLTReasKeyChanged();
    
        /// <summary>
        /// There are no comments for DfltExpedite in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short DfltExpedite
        {
            get
            {
                short value = _DfltExpedite;
                OnGetDfltExpedite(ref value);
                return value;
            }
            set
            {
                if (_DfltExpedite != value)
                {
                  OnDfltExpediteChanging(ref value);
                  ReportPropertyChanging("DfltExpedite");
                  _DfltExpedite = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltExpedite");
                  OnDfltExpediteChanged();
              }
            }
        }
        private short _DfltExpedite = 0;
        partial void OnGetDfltExpedite(ref short value);
        partial void OnDfltExpediteChanging(ref short value);
        partial void OnDfltExpediteChanged();
    
        /// <summary>
        /// There are no comments for DfltExpediteRsnKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? DfltExpediteRsnKey
        {
            get
            {
                int? value = _DfltExpediteRsnKey;
                OnGetDfltExpediteRsnKey(ref value);
                return value;
            }
            set
            {
                if (_DfltExpediteRsnKey != value)
                {
                  OnDfltExpediteRsnKeyChanging(ref value);
                  ReportPropertyChanging("DfltExpediteRsnKey");
                  _DfltExpediteRsnKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltExpediteRsnKey");
                  OnDfltExpediteRsnKeyChanged();
              }
            }
        }
        private int? _DfltExpediteRsnKey;
        partial void OnGetDfltExpediteRsnKey(ref int? value);
        partial void OnDfltExpediteRsnKeyChanging(ref int? value);
        partial void OnDfltExpediteRsnKeyChanged();
    
        /// <summary>
        /// There are no comments for DfltPurchDeptKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? DfltPurchDeptKey
        {
            get
            {
                int? value = _DfltPurchDeptKey;
                OnGetDfltPurchDeptKey(ref value);
                return value;
            }
            set
            {
                if (_DfltPurchDeptKey != value)
                {
                  OnDfltPurchDeptKeyChanging(ref value);
                  ReportPropertyChanging("DfltPurchDeptKey");
                  _DfltPurchDeptKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltPurchDeptKey");
                  OnDfltPurchDeptKeyChanged();
              }
            }
        }
        private int? _DfltPurchDeptKey;
        partial void OnGetDfltPurchDeptKey(ref int? value);
        partial void OnDfltPurchDeptKeyChanging(ref int? value);
        partial void OnDfltPurchDeptKeyChanged();
    
        /// <summary>
        /// There are no comments for DfltRequestDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? DfltRequestDate
        {
            get
            {
                global::System.DateTime? value = _DfltRequestDate;
                OnGetDfltRequestDate(ref value);
                return value;
            }
            set
            {
                if (_DfltRequestDate != value)
                {
                  OnDfltRequestDateChanging(ref value);
                  ReportPropertyChanging("DfltRequestDate");
                  _DfltRequestDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltRequestDate");
                  OnDfltRequestDateChanged();
              }
            }
        }
        private global::System.DateTime? _DfltRequestDate;
        partial void OnGetDfltRequestDate(ref global::System.DateTime? value);
        partial void OnDfltRequestDateChanging(ref global::System.DateTime? value);
        partial void OnDfltRequestDateChanged();
    
        /// <summary>
        /// There are no comments for DfltShipMethKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? DfltShipMethKey
        {
            get
            {
                int? value = _DfltShipMethKey;
                OnGetDfltShipMethKey(ref value);
                return value;
            }
            set
            {
                if (_DfltShipMethKey != value)
                {
                  OnDfltShipMethKeyChanging(ref value);
                  ReportPropertyChanging("DfltShipMethKey");
                  _DfltShipMethKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltShipMethKey");
                  OnDfltShipMethKeyChanged();
              }
            }
        }
        private int? _DfltShipMethKey;
        partial void OnGetDfltShipMethKey(ref int? value);
        partial void OnDfltShipMethKeyChanging(ref int? value);
        partial void OnDfltShipMethKeyChanged();
    
        /// <summary>
        /// There are no comments for DfltShipToAddrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? DfltShipToAddrKey
        {
            get
            {
                int? value = _DfltShipToAddrKey;
                OnGetDfltShipToAddrKey(ref value);
                return value;
            }
            set
            {
                if (_DfltShipToAddrKey != value)
                {
                  OnDfltShipToAddrKeyChanging(ref value);
                  ReportPropertyChanging("DfltShipToAddrKey");
                  _DfltShipToAddrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltShipToAddrKey");
                  OnDfltShipToAddrKeyChanged();
              }
            }
        }
        private int? _DfltShipToAddrKey;
        partial void OnGetDfltShipToAddrKey(ref int? value);
        partial void OnDfltShipToAddrKeyChanging(ref int? value);
        partial void OnDfltShipToAddrKeyChanged();
    
        /// <summary>
        /// There are no comments for DfltShipToCAddrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? DfltShipToCAddrKey
        {
            get
            {
                int? value = _DfltShipToCAddrKey;
                OnGetDfltShipToCAddrKey(ref value);
                return value;
            }
            set
            {
                if (_DfltShipToCAddrKey != value)
                {
                  OnDfltShipToCAddrKeyChanging(ref value);
                  ReportPropertyChanging("DfltShipToCAddrKey");
                  _DfltShipToCAddrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltShipToCAddrKey");
                  OnDfltShipToCAddrKeyChanged();
              }
            }
        }
        private int? _DfltShipToCAddrKey;
        partial void OnGetDfltShipToCAddrKey(ref int? value);
        partial void OnDfltShipToCAddrKeyChanging(ref int? value);
        partial void OnDfltShipToCAddrKeyChanged();
    
        /// <summary>
        /// There are no comments for DfltShipToCustKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? DfltShipToCustKey
        {
            get
            {
                int? value = _DfltShipToCustKey;
                OnGetDfltShipToCustKey(ref value);
                return value;
            }
            set
            {
                if (_DfltShipToCustKey != value)
                {
                  OnDfltShipToCustKeyChanging(ref value);
                  ReportPropertyChanging("DfltShipToCustKey");
                  _DfltShipToCustKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltShipToCustKey");
                  OnDfltShipToCustKeyChanged();
              }
            }
        }
        private int? _DfltShipToCustKey;
        partial void OnGetDfltShipToCustKey(ref int? value);
        partial void OnDfltShipToCustKeyChanging(ref int? value);
        partial void OnDfltShipToCustKeyChanged();
    
        /// <summary>
        /// There are no comments for DfltShipToWhseKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? DfltShipToWhseKey
        {
            get
            {
                int? value = _DfltShipToWhseKey;
                OnGetDfltShipToWhseKey(ref value);
                return value;
            }
            set
            {
                if (_DfltShipToWhseKey != value)
                {
                  OnDfltShipToWhseKeyChanging(ref value);
                  ReportPropertyChanging("DfltShipToWhseKey");
                  _DfltShipToWhseKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltShipToWhseKey");
                  OnDfltShipToWhseKeyChanged();
              }
            }
        }
        private int? _DfltShipToWhseKey;
        partial void OnGetDfltShipToWhseKey(ref int? value);
        partial void OnDfltShipToWhseKeyChanging(ref int? value);
        partial void OnDfltShipToWhseKeyChanged();
    
        /// <summary>
        /// There are no comments for DfltShipZoneKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? DfltShipZoneKey
        {
            get
            {
                int? value = _DfltShipZoneKey;
                OnGetDfltShipZoneKey(ref value);
                return value;
            }
            set
            {
                if (_DfltShipZoneKey != value)
                {
                  OnDfltShipZoneKeyChanging(ref value);
                  ReportPropertyChanging("DfltShipZoneKey");
                  _DfltShipZoneKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltShipZoneKey");
                  OnDfltShipZoneKeyChanged();
              }
            }
        }
        private int? _DfltShipZoneKey;
        partial void OnGetDfltShipZoneKey(ref int? value);
        partial void OnDfltShipZoneKeyChanging(ref int? value);
        partial void OnDfltShipZoneKeyChanged();
    
        /// <summary>
        /// There are no comments for DfltTargetCompID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string DfltTargetCompID
        {
            get
            {
                string value = _DfltTargetCompID;
                OnGetDfltTargetCompID(ref value);
                return value;
            }
            set
            {
                if (_DfltTargetCompID != value)
                {
                  OnDfltTargetCompIDChanging(ref value);
                  ReportPropertyChanging("DfltTargetCompID");
                  _DfltTargetCompID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("DfltTargetCompID");
                  OnDfltTargetCompIDChanged();
              }
            }
        }
        private string _DfltTargetCompID;
        partial void OnGetDfltTargetCompID(ref string value);
        partial void OnDfltTargetCompIDChanging(ref string value);
        partial void OnDfltTargetCompIDChanged();
    
        /// <summary>
        /// There are no comments for FixedCurrExchRate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short FixedCurrExchRate
        {
            get
            {
                short value = _FixedCurrExchRate;
                OnGetFixedCurrExchRate(ref value);
                return value;
            }
            set
            {
                if (_FixedCurrExchRate != value)
                {
                  OnFixedCurrExchRateChanging(ref value);
                  ReportPropertyChanging("FixedCurrExchRate");
                  _FixedCurrExchRate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FixedCurrExchRate");
                  OnFixedCurrExchRateChanged();
              }
            }
        }
        private short _FixedCurrExchRate = 0;
        partial void OnGetFixedCurrExchRate(ref short value);
        partial void OnFixedCurrExchRateChanging(ref short value);
        partial void OnFixedCurrExchRateChanged();
    
        /// <summary>
        /// There are no comments for FOBKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? FOBKey
        {
            get
            {
                int? value = _FOBKey;
                OnGetFOBKey(ref value);
                return value;
            }
            set
            {
                if (_FOBKey != value)
                {
                  OnFOBKeyChanging(ref value);
                  ReportPropertyChanging("FOBKey");
                  _FOBKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FOBKey");
                  OnFOBKeyChanged();
              }
            }
        }
        private int? _FOBKey;
        partial void OnGetFOBKey(ref int? value);
        partial void OnFOBKeyChanging(ref int? value);
        partial void OnFOBKeyChanged();
    
        /// <summary>
        /// There are no comments for FreightAllocMeth in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short FreightAllocMeth
        {
            get
            {
                short value = _FreightAllocMeth;
                OnGetFreightAllocMeth(ref value);
                return value;
            }
            set
            {
                if (_FreightAllocMeth != value)
                {
                  OnFreightAllocMethChanging(ref value);
                  ReportPropertyChanging("FreightAllocMeth");
                  _FreightAllocMeth = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FreightAllocMeth");
                  OnFreightAllocMethChanged();
              }
            }
        }
        private short _FreightAllocMeth = 0;
        partial void OnGetFreightAllocMeth(ref short value);
        partial void OnFreightAllocMethChanging(ref short value);
        partial void OnFreightAllocMethChanged();
    
        /// <summary>
        /// There are no comments for FreightAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal FreightAmt
        {
            get
            {
                decimal value = _FreightAmt;
                OnGetFreightAmt(ref value);
                return value;
            }
            set
            {
                if (_FreightAmt != value)
                {
                  OnFreightAmtChanging(ref value);
                  ReportPropertyChanging("FreightAmt");
                  _FreightAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FreightAmt");
                  OnFreightAmtChanged();
              }
            }
        }
        private decimal _FreightAmt = 0m;
        partial void OnGetFreightAmt(ref decimal value);
        partial void OnFreightAmtChanging(ref decimal value);
        partial void OnFreightAmtChanged();
    
        /// <summary>
        /// There are no comments for Hold in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Hold
        {
            get
            {
                short value = _Hold;
                OnGetHold(ref value);
                return value;
            }
            set
            {
                if (_Hold != value)
                {
                  OnHoldChanging(ref value);
                  ReportPropertyChanging("Hold");
                  _Hold = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Hold");
                  OnHoldChanged();
              }
            }
        }
        private short _Hold = 0;
        partial void OnGetHold(ref short value);
        partial void OnHoldChanging(ref short value);
        partial void OnHoldChanged();
    
        /// <summary>
        /// There are no comments for HoldReason in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string HoldReason
        {
            get
            {
                string value = _HoldReason;
                OnGetHoldReason(ref value);
                return value;
            }
            set
            {
                if (_HoldReason != value)
                {
                  OnHoldReasonChanging(ref value);
                  ReportPropertyChanging("HoldReason");
                  _HoldReason = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("HoldReason");
                  OnHoldReasonChanged();
              }
            }
        }
        private string _HoldReason;
        partial void OnGetHoldReason(ref string value);
        partial void OnHoldReasonChanging(ref string value);
        partial void OnHoldReasonChanged();
    
        /// <summary>
        /// There are no comments for ImportLogKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ImportLogKey
        {
            get
            {
                int? value = _ImportLogKey;
                OnGetImportLogKey(ref value);
                return value;
            }
            set
            {
                if (_ImportLogKey != value)
                {
                  OnImportLogKeyChanging(ref value);
                  ReportPropertyChanging("ImportLogKey");
                  _ImportLogKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ImportLogKey");
                  OnImportLogKeyChanged();
              }
            }
        }
        private int? _ImportLogKey;
        partial void OnGetImportLogKey(ref int? value);
        partial void OnImportLogKeyChanging(ref int? value);
        partial void OnImportLogKeyChanged();
    
        /// <summary>
        /// There are no comments for IssueDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? IssueDate
        {
            get
            {
                global::System.DateTime? value = _IssueDate;
                OnGetIssueDate(ref value);
                return value;
            }
            set
            {
                if (_IssueDate != value)
                {
                  OnIssueDateChanging(ref value);
                  ReportPropertyChanging("IssueDate");
                  _IssueDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IssueDate");
                  OnIssueDateChanged();
              }
            }
        }
        private global::System.DateTime? _IssueDate;
        partial void OnGetIssueDate(ref global::System.DateTime? value);
        partial void OnIssueDateChanging(ref global::System.DateTime? value);
        partial void OnIssueDateChanged();
    
        /// <summary>
        /// There are no comments for MatchToleranceKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? MatchToleranceKey
        {
            get
            {
                int? value = _MatchToleranceKey;
                OnGetMatchToleranceKey(ref value);
                return value;
            }
            set
            {
                if (_MatchToleranceKey != value)
                {
                  OnMatchToleranceKeyChanging(ref value);
                  ReportPropertyChanging("MatchToleranceKey");
                  _MatchToleranceKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MatchToleranceKey");
                  OnMatchToleranceKeyChanged();
              }
            }
        }
        private int? _MatchToleranceKey;
        partial void OnGetMatchToleranceKey(ref int? value);
        partial void OnMatchToleranceKeyChanging(ref int? value);
        partial void OnMatchToleranceKeyChanged();
    
        /// <summary>
        /// There are no comments for NextLineNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int NextLineNo
        {
            get
            {
                int value = _NextLineNo;
                OnGetNextLineNo(ref value);
                return value;
            }
            set
            {
                if (_NextLineNo != value)
                {
                  OnNextLineNoChanging(ref value);
                  ReportPropertyChanging("NextLineNo");
                  _NextLineNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NextLineNo");
                  OnNextLineNoChanged();
              }
            }
        }
        private int _NextLineNo = 1;
        partial void OnGetNextLineNo(ref int value);
        partial void OnNextLineNoChanging(ref int value);
        partial void OnNextLineNoChanged();
    
        /// <summary>
        /// There are no comments for OpenAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal OpenAmt
        {
            get
            {
                decimal value = _OpenAmt;
                OnGetOpenAmt(ref value);
                return value;
            }
            set
            {
                if (_OpenAmt != value)
                {
                  OnOpenAmtChanging(ref value);
                  ReportPropertyChanging("OpenAmt");
                  _OpenAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OpenAmt");
                  OnOpenAmtChanged();
              }
            }
        }
        private decimal _OpenAmt = 0m;
        partial void OnGetOpenAmt(ref decimal value);
        partial void OnOpenAmtChanging(ref decimal value);
        partial void OnOpenAmtChanged();
    
        /// <summary>
        /// There are no comments for OpenAmtHC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal OpenAmtHC
        {
            get
            {
                decimal value = _OpenAmtHC;
                OnGetOpenAmtHC(ref value);
                return value;
            }
            set
            {
                if (_OpenAmtHC != value)
                {
                  OnOpenAmtHCChanging(ref value);
                  ReportPropertyChanging("OpenAmtHC");
                  _OpenAmtHC = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OpenAmtHC");
                  OnOpenAmtHCChanged();
              }
            }
        }
        private decimal _OpenAmtHC = 0m;
        partial void OnGetOpenAmtHC(ref decimal value);
        partial void OnOpenAmtHCChanging(ref decimal value);
        partial void OnOpenAmtHCChanged();
    
        /// <summary>
        /// There are no comments for OriginationDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? OriginationDate
        {
            get
            {
                global::System.DateTime? value = _OriginationDate;
                OnGetOriginationDate(ref value);
                return value;
            }
            set
            {
                if (_OriginationDate != value)
                {
                  OnOriginationDateChanging(ref value);
                  ReportPropertyChanging("OriginationDate");
                  _OriginationDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OriginationDate");
                  OnOriginationDateChanged();
              }
            }
        }
        private global::System.DateTime? _OriginationDate;
        partial void OnGetOriginationDate(ref global::System.DateTime? value);
        partial void OnOriginationDateChanging(ref global::System.DateTime? value);
        partial void OnOriginationDateChanged();
    
        /// <summary>
        /// There are no comments for PmtTermsKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? PmtTermsKey
        {
            get
            {
                int? value = _PmtTermsKey;
                OnGetPmtTermsKey(ref value);
                return value;
            }
            set
            {
                if (_PmtTermsKey != value)
                {
                  OnPmtTermsKeyChanging(ref value);
                  ReportPropertyChanging("PmtTermsKey");
                  _PmtTermsKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PmtTermsKey");
                  OnPmtTermsKeyChanged();
              }
            }
        }
        private int? _PmtTermsKey;
        partial void OnGetPmtTermsKey(ref int? value);
        partial void OnPmtTermsKeyChanging(ref int? value);
        partial void OnPmtTermsKeyChanged();
    
        /// <summary>
        /// There are no comments for POFormKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? POFormKey
        {
            get
            {
                int? value = _POFormKey;
                OnGetPOFormKey(ref value);
                return value;
            }
            set
            {
                if (_POFormKey != value)
                {
                  OnPOFormKeyChanging(ref value);
                  ReportPropertyChanging("POFormKey");
                  _POFormKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("POFormKey");
                  OnPOFormKeyChanged();
              }
            }
        }
        private int? _POFormKey;
        partial void OnGetPOFormKey(ref int? value);
        partial void OnPOFormKeyChanging(ref int? value);
        partial void OnPOFormKeyChanged();
    
        /// <summary>
        /// There are no comments for PurchAddrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? PurchAddrKey
        {
            get
            {
                int? value = _PurchAddrKey;
                OnGetPurchAddrKey(ref value);
                return value;
            }
            set
            {
                if (_PurchAddrKey != value)
                {
                  OnPurchAddrKeyChanging(ref value);
                  ReportPropertyChanging("PurchAddrKey");
                  _PurchAddrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PurchAddrKey");
                  OnPurchAddrKeyChanged();
              }
            }
        }
        private int? _PurchAddrKey;
        partial void OnGetPurchAddrKey(ref int? value);
        partial void OnPurchAddrKeyChanging(ref int? value);
        partial void OnPurchAddrKeyChanged();
    
        /// <summary>
        /// There are no comments for PurchAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal PurchAmt
        {
            get
            {
                decimal value = _PurchAmt;
                OnGetPurchAmt(ref value);
                return value;
            }
            set
            {
                if (_PurchAmt != value)
                {
                  OnPurchAmtChanging(ref value);
                  ReportPropertyChanging("PurchAmt");
                  _PurchAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PurchAmt");
                  OnPurchAmtChanged();
              }
            }
        }
        private decimal _PurchAmt = 0m;
        partial void OnGetPurchAmt(ref decimal value);
        partial void OnPurchAmtChanging(ref decimal value);
        partial void OnPurchAmtChanged();
    
        /// <summary>
        /// There are no comments for PurchAmtHC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal PurchAmtHC
        {
            get
            {
                decimal value = _PurchAmtHC;
                OnGetPurchAmtHC(ref value);
                return value;
            }
            set
            {
                if (_PurchAmtHC != value)
                {
                  OnPurchAmtHCChanging(ref value);
                  ReportPropertyChanging("PurchAmtHC");
                  _PurchAmtHC = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PurchAmtHC");
                  OnPurchAmtHCChanged();
              }
            }
        }
        private decimal _PurchAmtHC = 0m;
        partial void OnGetPurchAmtHC(ref decimal value);
        partial void OnPurchAmtHCChanging(ref decimal value);
        partial void OnPurchAmtHCChanged();
    
        /// <summary>
        /// There are no comments for PurchVendAddrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int PurchVendAddrKey
        {
            get
            {
                int value = _PurchVendAddrKey;
                OnGetPurchVendAddrKey(ref value);
                return value;
            }
            set
            {
                if (_PurchVendAddrKey != value)
                {
                  OnPurchVendAddrKeyChanging(ref value);
                  ReportPropertyChanging("PurchVendAddrKey");
                  _PurchVendAddrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PurchVendAddrKey");
                  OnPurchVendAddrKeyChanged();
              }
            }
        }
        private int _PurchVendAddrKey;
        partial void OnGetPurchVendAddrKey(ref int value);
        partial void OnPurchVendAddrKeyChanging(ref int value);
        partial void OnPurchVendAddrKeyChanged();
    
        /// <summary>
        /// There are no comments for RecurPOKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? RecurPOKey
        {
            get
            {
                int? value = _RecurPOKey;
                OnGetRecurPOKey(ref value);
                return value;
            }
            set
            {
                if (_RecurPOKey != value)
                {
                  OnRecurPOKeyChanging(ref value);
                  ReportPropertyChanging("RecurPOKey");
                  _RecurPOKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RecurPOKey");
                  OnRecurPOKeyChanged();
              }
            }
        }
        private int? _RecurPOKey;
        partial void OnGetRecurPOKey(ref int? value);
        partial void OnRecurPOKeyChanging(ref int? value);
        partial void OnRecurPOKeyChanged();
    
        /// <summary>
        /// There are no comments for RemitToAddrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? RemitToAddrKey
        {
            get
            {
                int? value = _RemitToAddrKey;
                OnGetRemitToAddrKey(ref value);
                return value;
            }
            set
            {
                if (_RemitToAddrKey != value)
                {
                  OnRemitToAddrKeyChanging(ref value);
                  ReportPropertyChanging("RemitToAddrKey");
                  _RemitToAddrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RemitToAddrKey");
                  OnRemitToAddrKeyChanged();
              }
            }
        }
        private int? _RemitToAddrKey;
        partial void OnGetRemitToAddrKey(ref int? value);
        partial void OnRemitToAddrKeyChanging(ref int? value);
        partial void OnRemitToAddrKeyChanged();
    
        /// <summary>
        /// There are no comments for RemitToVendAddrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int RemitToVendAddrKey
        {
            get
            {
                int value = _RemitToVendAddrKey;
                OnGetRemitToVendAddrKey(ref value);
                return value;
            }
            set
            {
                if (_RemitToVendAddrKey != value)
                {
                  OnRemitToVendAddrKeyChanging(ref value);
                  ReportPropertyChanging("RemitToVendAddrKey");
                  _RemitToVendAddrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RemitToVendAddrKey");
                  OnRemitToVendAddrKeyChanged();
              }
            }
        }
        private int _RemitToVendAddrKey;
        partial void OnGetRemitToVendAddrKey(ref int value);
        partial void OnRemitToVendAddrKeyChanging(ref int value);
        partial void OnRemitToVendAddrKeyChanged();
    
        /// <summary>
        /// There are no comments for RequirePOIssue in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short RequirePOIssue
        {
            get
            {
                short value = _RequirePOIssue;
                OnGetRequirePOIssue(ref value);
                return value;
            }
            set
            {
                if (_RequirePOIssue != value)
                {
                  OnRequirePOIssueChanging(ref value);
                  ReportPropertyChanging("RequirePOIssue");
                  _RequirePOIssue = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RequirePOIssue");
                  OnRequirePOIssueChanged();
              }
            }
        }
        private short _RequirePOIssue = 0;
        partial void OnGetRequirePOIssue(ref short value);
        partial void OnRequirePOIssueChanging(ref short value);
        partial void OnRequirePOIssueChanged();
    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Status
        {
            get
            {
                short value = _Status;
                OnGetStatus(ref value);
                return value;
            }
            set
            {
                if (_Status != value)
                {
                  OnStatusChanging(ref value);
                  ReportPropertyChanging("Status");
                  _Status = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Status");
                  OnStatusChanged();
              }
            }
        }
        private short _Status = 0;
        partial void OnGetStatus(ref short value);
        partial void OnStatusChanging(ref short value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// There are no comments for STaxAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal STaxAmt
        {
            get
            {
                decimal value = _STaxAmt;
                OnGetSTaxAmt(ref value);
                return value;
            }
            set
            {
                if (_STaxAmt != value)
                {
                  OnSTaxAmtChanging(ref value);
                  ReportPropertyChanging("STaxAmt");
                  _STaxAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("STaxAmt");
                  OnSTaxAmtChanged();
              }
            }
        }
        private decimal _STaxAmt = 0m;
        partial void OnGetSTaxAmt(ref decimal value);
        partial void OnSTaxAmtChanging(ref decimal value);
        partial void OnSTaxAmtChanged();
    
        /// <summary>
        /// There are no comments for STaxTranKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? STaxTranKey
        {
            get
            {
                int? value = _STaxTranKey;
                OnGetSTaxTranKey(ref value);
                return value;
            }
            set
            {
                if (_STaxTranKey != value)
                {
                  OnSTaxTranKeyChanging(ref value);
                  ReportPropertyChanging("STaxTranKey");
                  _STaxTranKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("STaxTranKey");
                  OnSTaxTranKeyChanged();
              }
            }
        }
        private int? _STaxTranKey;
        partial void OnGetSTaxTranKey(ref int? value);
        partial void OnSTaxTranKeyChanging(ref int? value);
        partial void OnSTaxTranKeyChanged();
    
        /// <summary>
        /// There are no comments for TranAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal TranAmt
        {
            get
            {
                decimal value = _TranAmt;
                OnGetTranAmt(ref value);
                return value;
            }
            set
            {
                if (_TranAmt != value)
                {
                  OnTranAmtChanging(ref value);
                  ReportPropertyChanging("TranAmt");
                  _TranAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranAmt");
                  OnTranAmtChanged();
              }
            }
        }
        private decimal _TranAmt = 0m;
        partial void OnGetTranAmt(ref decimal value);
        partial void OnTranAmtChanging(ref decimal value);
        partial void OnTranAmtChanged();
    
        /// <summary>
        /// There are no comments for TranAmtHC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal TranAmtHC
        {
            get
            {
                decimal value = _TranAmtHC;
                OnGetTranAmtHC(ref value);
                return value;
            }
            set
            {
                if (_TranAmtHC != value)
                {
                  OnTranAmtHCChanging(ref value);
                  ReportPropertyChanging("TranAmtHC");
                  _TranAmtHC = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranAmtHC");
                  OnTranAmtHCChanged();
              }
            }
        }
        private decimal _TranAmtHC = 0m;
        partial void OnGetTranAmtHC(ref decimal value);
        partial void OnTranAmtHCChanging(ref decimal value);
        partial void OnTranAmtHCChanged();
    
        /// <summary>
        /// There are no comments for TranCmnt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string TranCmnt
        {
            get
            {
                string value = _TranCmnt;
                OnGetTranCmnt(ref value);
                return value;
            }
            set
            {
                if (_TranCmnt != value)
                {
                  OnTranCmntChanging(ref value);
                  ReportPropertyChanging("TranCmnt");
                  _TranCmnt = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TranCmnt");
                  OnTranCmntChanged();
              }
            }
        }
        private string _TranCmnt;
        partial void OnGetTranCmnt(ref string value);
        partial void OnTranCmntChanging(ref string value);
        partial void OnTranCmntChanged();
    
        /// <summary>
        /// There are no comments for TranDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime TranDate
        {
            get
            {
                global::System.DateTime value = _TranDate;
                OnGetTranDate(ref value);
                return value;
            }
            set
            {
                if (_TranDate != value)
                {
                  OnTranDateChanging(ref value);
                  ReportPropertyChanging("TranDate");
                  _TranDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranDate");
                  OnTranDateChanged();
              }
            }
        }
        private global::System.DateTime _TranDate;
        partial void OnGetTranDate(ref global::System.DateTime value);
        partial void OnTranDateChanging(ref global::System.DateTime value);
        partial void OnTranDateChanged();
    
        /// <summary>
        /// There are no comments for TranID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string TranID
        {
            get
            {
                string value = _TranID;
                OnGetTranID(ref value);
                return value;
            }
            set
            {
                if (_TranID != value)
                {
                  OnTranIDChanging(ref value);
                  ReportPropertyChanging("TranID");
                  _TranID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TranID");
                  OnTranIDChanged();
              }
            }
        }
        private string _TranID;
        partial void OnGetTranID(ref string value);
        partial void OnTranIDChanging(ref string value);
        partial void OnTranIDChanged();
    
        /// <summary>
        /// There are no comments for TranNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string TranNo
        {
            get
            {
                string value = _TranNo;
                OnGetTranNo(ref value);
                return value;
            }
            set
            {
                if (_TranNo != value)
                {
                  OnTranNoChanging(ref value);
                  ReportPropertyChanging("TranNo");
                  _TranNo = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TranNo");
                  OnTranNoChanged();
              }
            }
        }
        private string _TranNo;
        partial void OnGetTranNo(ref string value);
        partial void OnTranNoChanging(ref string value);
        partial void OnTranNoChanged();
    
        /// <summary>
        /// There are no comments for TranNoChngOrd in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string TranNoChngOrd
        {
            get
            {
                string value = _TranNoChngOrd;
                OnGetTranNoChngOrd(ref value);
                return value;
            }
            set
            {
                if (_TranNoChngOrd != value)
                {
                  OnTranNoChngOrdChanging(ref value);
                  ReportPropertyChanging("TranNoChngOrd");
                  _TranNoChngOrd = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TranNoChngOrd");
                  OnTranNoChngOrdChanged();
              }
            }
        }
        private string _TranNoChngOrd;
        partial void OnGetTranNoChngOrd(ref string value);
        partial void OnTranNoChngOrdChanging(ref string value);
        partial void OnTranNoChngOrdChanged();
    
        /// <summary>
        /// There are no comments for TranNoRel in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string TranNoRel
        {
            get
            {
                string value = _TranNoRel;
                OnGetTranNoRel(ref value);
                return value;
            }
            set
            {
                if (_TranNoRel != value)
                {
                  OnTranNoRelChanging(ref value);
                  ReportPropertyChanging("TranNoRel");
                  _TranNoRel = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TranNoRel");
                  OnTranNoRelChanged();
              }
            }
        }
        private string _TranNoRel;
        partial void OnGetTranNoRel(ref string value);
        partial void OnTranNoRelChanging(ref string value);
        partial void OnTranNoRelChanged();
    
        /// <summary>
        /// There are no comments for TranNoRelChngOrd in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string TranNoRelChngOrd
        {
            get
            {
                string value = _TranNoRelChngOrd;
                OnGetTranNoRelChngOrd(ref value);
                return value;
            }
            set
            {
                if (_TranNoRelChngOrd != value)
                {
                  OnTranNoRelChngOrdChanging(ref value);
                  ReportPropertyChanging("TranNoRelChngOrd");
                  _TranNoRelChngOrd = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TranNoRelChngOrd");
                  OnTranNoRelChngOrdChanged();
              }
            }
        }
        private string _TranNoRelChngOrd;
        partial void OnGetTranNoRelChngOrd(ref string value);
        partial void OnTranNoRelChngOrdChanging(ref string value);
        partial void OnTranNoRelChngOrdChanged();
    
        /// <summary>
        /// There are no comments for TranType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int TranType
        {
            get
            {
                int value = _TranType;
                OnGetTranType(ref value);
                return value;
            }
            set
            {
                if (_TranType != value)
                {
                  OnTranTypeChanging(ref value);
                  ReportPropertyChanging("TranType");
                  _TranType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranType");
                  OnTranTypeChanged();
              }
            }
        }
        private int _TranType;
        partial void OnGetTranType(ref int value);
        partial void OnTranTypeChanging(ref int value);
        partial void OnTranTypeChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();
    
        /// <summary>
        /// There are no comments for UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? UpdateDate
        {
            get
            {
                global::System.DateTime? value = _UpdateDate;
                OnGetUpdateDate(ref value);
                return value;
            }
            set
            {
                if (_UpdateDate != value)
                {
                  OnUpdateDateChanging(ref value);
                  ReportPropertyChanging("UpdateDate");
                  _UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateDate");
                  OnUpdateDateChanged();
              }
            }
        }
        private global::System.DateTime? _UpdateDate;
        partial void OnGetUpdateDate(ref global::System.DateTime? value);
        partial void OnUpdateDateChanging(ref global::System.DateTime? value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// There are no comments for UpdateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UpdateUserID
        {
            get
            {
                string value = _UpdateUserID;
                OnGetUpdateUserID(ref value);
                return value;
            }
            set
            {
                if (_UpdateUserID != value)
                {
                  OnUpdateUserIDChanging(ref value);
                  ReportPropertyChanging("UpdateUserID");
                  _UpdateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UpdateUserID");
                  OnUpdateUserIDChanged();
              }
            }
        }
        private string _UpdateUserID;
        partial void OnGetUpdateUserID(ref string value);
        partial void OnUpdateUserIDChanging(ref string value);
        partial void OnUpdateUserIDChanged();
    
        /// <summary>
        /// There are no comments for UserFld1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld1
        {
            get
            {
                string value = _UserFld1;
                OnGetUserFld1(ref value);
                return value;
            }
            set
            {
                if (_UserFld1 != value)
                {
                  OnUserFld1Changing(ref value);
                  ReportPropertyChanging("UserFld1");
                  _UserFld1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld1");
                  OnUserFld1Changed();
              }
            }
        }
        private string _UserFld1;
        partial void OnGetUserFld1(ref string value);
        partial void OnUserFld1Changing(ref string value);
        partial void OnUserFld1Changed();
    
        /// <summary>
        /// There are no comments for UserFld2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld2
        {
            get
            {
                string value = _UserFld2;
                OnGetUserFld2(ref value);
                return value;
            }
            set
            {
                if (_UserFld2 != value)
                {
                  OnUserFld2Changing(ref value);
                  ReportPropertyChanging("UserFld2");
                  _UserFld2 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld2");
                  OnUserFld2Changed();
              }
            }
        }
        private string _UserFld2;
        partial void OnGetUserFld2(ref string value);
        partial void OnUserFld2Changing(ref string value);
        partial void OnUserFld2Changed();
    
        /// <summary>
        /// There are no comments for UserFld3 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld3
        {
            get
            {
                string value = _UserFld3;
                OnGetUserFld3(ref value);
                return value;
            }
            set
            {
                if (_UserFld3 != value)
                {
                  OnUserFld3Changing(ref value);
                  ReportPropertyChanging("UserFld3");
                  _UserFld3 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld3");
                  OnUserFld3Changed();
              }
            }
        }
        private string _UserFld3;
        partial void OnGetUserFld3(ref string value);
        partial void OnUserFld3Changing(ref string value);
        partial void OnUserFld3Changed();
    
        /// <summary>
        /// There are no comments for UserFld4 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UserFld4
        {
            get
            {
                string value = _UserFld4;
                OnGetUserFld4(ref value);
                return value;
            }
            set
            {
                if (_UserFld4 != value)
                {
                  OnUserFld4Changing(ref value);
                  ReportPropertyChanging("UserFld4");
                  _UserFld4 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserFld4");
                  OnUserFld4Changed();
              }
            }
        }
        private string _UserFld4;
        partial void OnGetUserFld4(ref string value);
        partial void OnUserFld4Changing(ref string value);
        partial void OnUserFld4Changed();
    
        /// <summary>
        /// There are no comments for V1099Box in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string V1099Box
        {
            get
            {
                string value = _V1099Box;
                OnGetV1099Box(ref value);
                return value;
            }
            set
            {
                if (_V1099Box != value)
                {
                  OnV1099BoxChanging(ref value);
                  ReportPropertyChanging("V1099Box");
                  _V1099Box = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("V1099Box");
                  OnV1099BoxChanged();
              }
            }
        }
        private string _V1099Box;
        partial void OnGetV1099Box(ref string value);
        partial void OnV1099BoxChanging(ref string value);
        partial void OnV1099BoxChanged();
    
        /// <summary>
        /// There are no comments for V1099BoxText in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string V1099BoxText
        {
            get
            {
                string value = _V1099BoxText;
                OnGetV1099BoxText(ref value);
                return value;
            }
            set
            {
                if (_V1099BoxText != value)
                {
                  OnV1099BoxTextChanging(ref value);
                  ReportPropertyChanging("V1099BoxText");
                  _V1099BoxText = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("V1099BoxText");
                  OnV1099BoxTextChanged();
              }
            }
        }
        private string _V1099BoxText;
        partial void OnGetV1099BoxText(ref string value);
        partial void OnV1099BoxTextChanging(ref string value);
        partial void OnV1099BoxTextChanged();
    
        /// <summary>
        /// There are no comments for V1099Form in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual short? V1099Form
        {
            get
            {
                short? value = _V1099Form;
                OnGetV1099Form(ref value);
                return value;
            }
            set
            {
                if (_V1099Form != value)
                {
                  OnV1099FormChanging(ref value);
                  ReportPropertyChanging("V1099Form");
                  _V1099Form = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("V1099Form");
                  OnV1099FormChanged();
              }
            }
        }
        private short? _V1099Form;
        partial void OnGetV1099Form(ref short? value);
        partial void OnV1099FormChanging(ref short? value);
        partial void OnV1099FormChanged();
    
        /// <summary>
        /// There are no comments for VendClassKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? VendClassKey
        {
            get
            {
                int? value = _VendClassKey;
                OnGetVendClassKey(ref value);
                return value;
            }
            set
            {
                if (_VendClassKey != value)
                {
                  OnVendClassKeyChanging(ref value);
                  ReportPropertyChanging("VendClassKey");
                  _VendClassKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VendClassKey");
                  OnVendClassKeyChanged();
              }
            }
        }
        private int? _VendClassKey;
        partial void OnGetVendClassKey(ref int? value);
        partial void OnVendClassKeyChanging(ref int? value);
        partial void OnVendClassKeyChanged();
    
        /// <summary>
        /// There are no comments for VendKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int VendKey
        {
            get
            {
                int value = _VendKey;
                OnGetVendKey(ref value);
                return value;
            }
            set
            {
                if (_VendKey != value)
                {
                  OnVendKeyChanging(ref value);
                  ReportPropertyChanging("VendKey");
                  _VendKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VendKey");
                  OnVendKeyChanged();
              }
            }
        }
        private int _VendKey;
        partial void OnGetVendKey(ref int value);
        partial void OnVendKeyChanging(ref int value);
        partial void OnVendKeyChanged();
    
        /// <summary>
        /// There are no comments for VendQuoteKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? VendQuoteKey
        {
            get
            {
                int? value = _VendQuoteKey;
                OnGetVendQuoteKey(ref value);
                return value;
            }
            set
            {
                if (_VendQuoteKey != value)
                {
                  OnVendQuoteKeyChanging(ref value);
                  ReportPropertyChanging("VendQuoteKey");
                  _VendQuoteKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VendQuoteKey");
                  OnVendQuoteKeyChanged();
              }
            }
        }
        private int? _VendQuoteKey;
        partial void OnGetVendQuoteKey(ref int? value);
        partial void OnVendQuoteKeyChanging(ref int? value);
        partial void OnVendQuoteKeyChanged();
    
        /// <summary>
        /// There are no comments for ContractKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ContractKey
        {
            get
            {
                int? value = _ContractKey;
                OnGetContractKey(ref value);
                return value;
            }
            set
            {
                if (_ContractKey != value)
                {
                  OnContractKeyChanging(ref value);
                  ReportPropertyChanging("ContractKey");
                  _ContractKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ContractKey");
                  OnContractKeyChanged();
              }
            }
        }
        private int? _ContractKey;
        partial void OnGetContractKey(ref int? value);
        partial void OnContractKeyChanging(ref int? value);
        partial void OnContractKeyChanged();
    
        /// <summary>
        /// There are no comments for Type in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? Type
        {
            get
            {
                int? value = _Type;
                OnGetType(ref value);
                return value;
            }
            set
            {
                if (_Type != value)
                {
                  OnTypeChanging(ref value);
                  ReportPropertyChanging("Type");
                  _Type = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Type");
                  OnTypeChanged();
              }
            }
        }
        private int? _Type;
        partial void OnGetType(ref int? value);
        partial void OnTypeChanging(ref int? value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// There are no comments for Invoicekey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? Invoicekey
        {
            get
            {
                int? value = _Invoicekey;
                OnGetInvoicekey(ref value);
                return value;
            }
            set
            {
                if (_Invoicekey != value)
                {
                  OnInvoicekeyChanging(ref value);
                  ReportPropertyChanging("Invoicekey");
                  _Invoicekey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Invoicekey");
                  OnInvoicekeyChanged();
              }
            }
        }
        private int? _Invoicekey;
        partial void OnGetInvoicekey(ref int? value);
        partial void OnInvoicekeyChanging(ref int? value);
        partial void OnInvoicekeyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for PurchOrderLog in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "PurchOrderLog_PurchOrder", "PurchOrderLog")]
        public virtual PurchOrderLog PurchOrderLog
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<PurchOrderLog>("Net4Sage.DataAccessModel.PurchOrderLog_PurchOrder", "PurchOrderLog").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<PurchOrderLog>("Net4Sage.DataAccessModel.PurchOrderLog_PurchOrder", "PurchOrderLog").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for PurchOrderLog in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PurchOrderLog> PurchOrderLogReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<PurchOrderLog>("Net4Sage.DataAccessModel.PurchOrderLog_PurchOrder", "PurchOrderLog");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<PurchOrderLog>("Net4Sage.DataAccessModel.PurchOrderLog_PurchOrder", "PurchOrderLog", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<PurchOrderLog>("Net4Sage.DataAccessModel.PurchOrderLog_PurchOrder", "PurchOrderLog").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for POLines in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "PurchOrder_POLine", "POLines")]
        public virtual EntityCollection<POLine> POLines
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<POLine>("Net4Sage.DataAccessModel.PurchOrder_POLine", "POLines");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<POLine>("Net4Sage.DataAccessModel.PurchOrder_POLine", "POLines", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.PurchOrderLog in the schema.
    /// </summary>
    /// <KeyProperties>
    /// POKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="PurchOrderLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PurchOrderLog : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new PurchOrderLog object.
        /// </summary>
        /// <param name="pOKey">Initial value of POKey.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="tranAmtHC">Initial value of TranAmtHC.</param>
        /// <param name="tranNo">Initial value of TranNo.</param>
        /// <param name="tranNoRel">Initial value of TranNoRel.</param>
        /// <param name="tranStatus">Initial value of TranStatus.</param>
        /// <param name="tranType">Initial value of TranType.</param>
        public static PurchOrderLog CreatePurchOrderLog(int pOKey, string companyID, decimal tranAmtHC, string tranNo, string tranNoRel, short tranStatus, int tranType)
        {
            PurchOrderLog purchOrderLog = new PurchOrderLog();
            purchOrderLog.POKey = pOKey;
            purchOrderLog.CompanyID = companyID;
            purchOrderLog.TranAmtHC = tranAmtHC;
            purchOrderLog.TranNo = tranNo;
            purchOrderLog.TranNoRel = tranNoRel;
            purchOrderLog.TranStatus = tranStatus;
            purchOrderLog.TranType = tranType;
            return purchOrderLog;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for POKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int POKey
        {
            get
            {
                int value = _POKey;
                OnGetPOKey(ref value);
                return value;
            }
            set
            {
                if (_POKey != value)
                {
                  OnPOKeyChanging(ref value);
                  ReportPropertyChanging("POKey");
                  _POKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("POKey");
                  OnPOKeyChanged();
              }
            }
        }
        private int _POKey;
        partial void OnGetPOKey(ref int value);
        partial void OnPOKeyChanging(ref int value);
        partial void OnPOKeyChanged();
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for TranAmtHC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal TranAmtHC
        {
            get
            {
                decimal value = _TranAmtHC;
                OnGetTranAmtHC(ref value);
                return value;
            }
            set
            {
                if (_TranAmtHC != value)
                {
                  OnTranAmtHCChanging(ref value);
                  ReportPropertyChanging("TranAmtHC");
                  _TranAmtHC = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranAmtHC");
                  OnTranAmtHCChanged();
              }
            }
        }
        private decimal _TranAmtHC = 0m;
        partial void OnGetTranAmtHC(ref decimal value);
        partial void OnTranAmtHCChanging(ref decimal value);
        partial void OnTranAmtHCChanged();
    
        /// <summary>
        /// There are no comments for TranDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? TranDate
        {
            get
            {
                global::System.DateTime? value = _TranDate;
                OnGetTranDate(ref value);
                return value;
            }
            set
            {
                if (_TranDate != value)
                {
                  OnTranDateChanging(ref value);
                  ReportPropertyChanging("TranDate");
                  _TranDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranDate");
                  OnTranDateChanged();
              }
            }
        }
        private global::System.DateTime? _TranDate;
        partial void OnGetTranDate(ref global::System.DateTime? value);
        partial void OnTranDateChanging(ref global::System.DateTime? value);
        partial void OnTranDateChanged();
    
        /// <summary>
        /// There are no comments for TranNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string TranNo
        {
            get
            {
                string value = _TranNo;
                OnGetTranNo(ref value);
                return value;
            }
            set
            {
                if (_TranNo != value)
                {
                  OnTranNoChanging(ref value);
                  ReportPropertyChanging("TranNo");
                  _TranNo = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TranNo");
                  OnTranNoChanged();
              }
            }
        }
        private string _TranNo;
        partial void OnGetTranNo(ref string value);
        partial void OnTranNoChanging(ref string value);
        partial void OnTranNoChanged();
    
        /// <summary>
        /// There are no comments for TranNoRel in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string TranNoRel
        {
            get
            {
                string value = _TranNoRel;
                OnGetTranNoRel(ref value);
                return value;
            }
            set
            {
                if (_TranNoRel != value)
                {
                  OnTranNoRelChanging(ref value);
                  ReportPropertyChanging("TranNoRel");
                  _TranNoRel = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TranNoRel");
                  OnTranNoRelChanged();
              }
            }
        }
        private string _TranNoRel;
        partial void OnGetTranNoRel(ref string value);
        partial void OnTranNoRelChanging(ref string value);
        partial void OnTranNoRelChanged();
    
        /// <summary>
        /// There are no comments for TranStatus in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short TranStatus
        {
            get
            {
                short value = _TranStatus;
                OnGetTranStatus(ref value);
                return value;
            }
            set
            {
                if (_TranStatus != value)
                {
                  OnTranStatusChanging(ref value);
                  ReportPropertyChanging("TranStatus");
                  _TranStatus = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranStatus");
                  OnTranStatusChanged();
              }
            }
        }
        private short _TranStatus = 1;
        partial void OnGetTranStatus(ref short value);
        partial void OnTranStatusChanging(ref short value);
        partial void OnTranStatusChanged();
    
        /// <summary>
        /// There are no comments for TranType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int TranType
        {
            get
            {
                int value = _TranType;
                OnGetTranType(ref value);
                return value;
            }
            set
            {
                if (_TranType != value)
                {
                  OnTranTypeChanging(ref value);
                  ReportPropertyChanging("TranType");
                  _TranType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranType");
                  OnTranTypeChanged();
              }
            }
        }
        private int _TranType;
        partial void OnGetTranType(ref int value);
        partial void OnTranTypeChanging(ref int value);
        partial void OnTranTypeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for PurchOrder in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "PurchOrderLog_PurchOrder", "PurchOrder")]
        public virtual PurchOrder PurchOrder
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<PurchOrder>("Net4Sage.DataAccessModel.PurchOrderLog_PurchOrder", "PurchOrder").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<PurchOrder>("Net4Sage.DataAccessModel.PurchOrderLog_PurchOrder", "PurchOrder").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for PurchOrder in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PurchOrder> PurchOrderReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<PurchOrder>("Net4Sage.DataAccessModel.PurchOrderLog_PurchOrder", "PurchOrder");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<PurchOrder>("Net4Sage.DataAccessModel.PurchOrderLog_PurchOrder", "PurchOrder", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<PurchOrder>("Net4Sage.DataAccessModel.PurchOrderLog_PurchOrder", "PurchOrder").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.ReceiverLog in the schema.
    /// </summary>
    /// <KeyProperties>
    /// RcvrKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="ReceiverLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReceiverLog : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ReceiverLog object.
        /// </summary>
        /// <param name="rcvrKey">Initial value of RcvrKey.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="tranAmtHC">Initial value of TranAmtHC.</param>
        /// <param name="tranNo">Initial value of TranNo.</param>
        /// <param name="tranStatus">Initial value of TranStatus.</param>
        /// <param name="tranType">Initial value of TranType.</param>
        public static ReceiverLog CreateReceiverLog(int rcvrKey, string companyID, decimal tranAmtHC, string tranNo, short tranStatus, int tranType)
        {
            ReceiverLog receiverLog = new ReceiverLog();
            receiverLog.RcvrKey = rcvrKey;
            receiverLog.CompanyID = companyID;
            receiverLog.TranAmtHC = tranAmtHC;
            receiverLog.TranNo = tranNo;
            receiverLog.TranStatus = tranStatus;
            receiverLog.TranType = tranType;
            return receiverLog;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for RcvrKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int RcvrKey
        {
            get
            {
                int value = _RcvrKey;
                OnGetRcvrKey(ref value);
                return value;
            }
            set
            {
                if (_RcvrKey != value)
                {
                  OnRcvrKeyChanging(ref value);
                  ReportPropertyChanging("RcvrKey");
                  _RcvrKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RcvrKey");
                  OnRcvrKeyChanged();
              }
            }
        }
        private int _RcvrKey;
        partial void OnGetRcvrKey(ref int value);
        partial void OnRcvrKeyChanging(ref int value);
        partial void OnRcvrKeyChanged();
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for TranAmtHC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal TranAmtHC
        {
            get
            {
                decimal value = _TranAmtHC;
                OnGetTranAmtHC(ref value);
                return value;
            }
            set
            {
                if (_TranAmtHC != value)
                {
                  OnTranAmtHCChanging(ref value);
                  ReportPropertyChanging("TranAmtHC");
                  _TranAmtHC = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranAmtHC");
                  OnTranAmtHCChanged();
              }
            }
        }
        private decimal _TranAmtHC = 0m;
        partial void OnGetTranAmtHC(ref decimal value);
        partial void OnTranAmtHCChanging(ref decimal value);
        partial void OnTranAmtHCChanged();
    
        /// <summary>
        /// There are no comments for TranDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? TranDate
        {
            get
            {
                global::System.DateTime? value = _TranDate;
                OnGetTranDate(ref value);
                return value;
            }
            set
            {
                if (_TranDate != value)
                {
                  OnTranDateChanging(ref value);
                  ReportPropertyChanging("TranDate");
                  _TranDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranDate");
                  OnTranDateChanged();
              }
            }
        }
        private global::System.DateTime? _TranDate;
        partial void OnGetTranDate(ref global::System.DateTime? value);
        partial void OnTranDateChanging(ref global::System.DateTime? value);
        partial void OnTranDateChanged();
    
        /// <summary>
        /// There are no comments for TranNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string TranNo
        {
            get
            {
                string value = _TranNo;
                OnGetTranNo(ref value);
                return value;
            }
            set
            {
                if (_TranNo != value)
                {
                  OnTranNoChanging(ref value);
                  ReportPropertyChanging("TranNo");
                  _TranNo = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TranNo");
                  OnTranNoChanged();
              }
            }
        }
        private string _TranNo;
        partial void OnGetTranNo(ref string value);
        partial void OnTranNoChanging(ref string value);
        partial void OnTranNoChanged();
    
        /// <summary>
        /// There are no comments for TranStatus in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short TranStatus
        {
            get
            {
                short value = _TranStatus;
                OnGetTranStatus(ref value);
                return value;
            }
            set
            {
                if (_TranStatus != value)
                {
                  OnTranStatusChanging(ref value);
                  ReportPropertyChanging("TranStatus");
                  _TranStatus = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranStatus");
                  OnTranStatusChanged();
              }
            }
        }
        private short _TranStatus = 1;
        partial void OnGetTranStatus(ref short value);
        partial void OnTranStatusChanging(ref short value);
        partial void OnTranStatusChanged();
    
        /// <summary>
        /// There are no comments for TranType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int TranType
        {
            get
            {
                int value = _TranType;
                OnGetTranType(ref value);
                return value;
            }
            set
            {
                if (_TranType != value)
                {
                  OnTranTypeChanging(ref value);
                  ReportPropertyChanging("TranType");
                  _TranType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranType");
                  OnTranTypeChanged();
              }
            }
        }
        private int _TranType;
        partial void OnGetTranType(ref int value);
        partial void OnTranTypeChanging(ref int value);
        partial void OnTranTypeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for RcvrLines in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "ReceiverLog_RcvrLine", "RcvrLines")]
        public virtual EntityCollection<RcvrLine> RcvrLines
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<RcvrLine>("Net4Sage.DataAccessModel.ReceiverLog_RcvrLine", "RcvrLines");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<RcvrLine>("Net4Sage.DataAccessModel.ReceiverLog_RcvrLine", "RcvrLines", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Receiver in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "ReceiverLog_Receiver", "Receiver")]
        public virtual Receiver Receiver
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Receiver>("Net4Sage.DataAccessModel.ReceiverLog_Receiver", "Receiver").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Receiver>("Net4Sage.DataAccessModel.ReceiverLog_Receiver", "Receiver").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Receiver in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Receiver> ReceiverReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Receiver>("Net4Sage.DataAccessModel.ReceiverLog_Receiver", "Receiver");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Receiver>("Net4Sage.DataAccessModel.ReceiverLog_Receiver", "Receiver", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Receiver>("Net4Sage.DataAccessModel.ReceiverLog_Receiver", "Receiver").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for PendReceiver in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "ReceiverLog_PendReceiver", "PendReceiver")]
        public virtual PendReceiver PendReceiver
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<PendReceiver>("Net4Sage.DataAccessModel.ReceiverLog_PendReceiver", "PendReceiver").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<PendReceiver>("Net4Sage.DataAccessModel.ReceiverLog_PendReceiver", "PendReceiver").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for PendReceiver in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PendReceiver> PendReceiverReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<PendReceiver>("Net4Sage.DataAccessModel.ReceiverLog_PendReceiver", "PendReceiver");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<PendReceiver>("Net4Sage.DataAccessModel.ReceiverLog_PendReceiver", "PendReceiver", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<PendReceiver>("Net4Sage.DataAccessModel.ReceiverLog_PendReceiver", "PendReceiver").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.ARBatch in the schema.
    /// </summary>
    /// <KeyProperties>
    /// BatchKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="ARBatch")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ARBatch : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ARBatch object.
        /// </summary>
        /// <param name="batchKey">Initial value of BatchKey.</param>
        /// <param name="bankDepAmt">Initial value of BankDepAmt.</param>
        /// <param name="createType">Initial value of CreateType.</param>
        /// <param name="depSlipPrinted">Initial value of DepSlipPrinted.</param>
        /// <param name="hold">Initial value of Hold.</param>
        /// <param name="interCompany">Initial value of InterCompany.</param>
        /// <param name="origUserID">Initial value of OrigUserID.</param>
        /// <param name="postDate">Initial value of PostDate.</param>
        /// <param name="@private">Initial value of Private.</param>
        /// <param name="sourceModule">Initial value of SourceModule.</param>
        /// <param name="tranCtrl">Initial value of TranCtrl.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        public static ARBatch CreateARBatch(int batchKey, decimal bankDepAmt, short createType, short depSlipPrinted, short hold, short interCompany, string origUserID, global::System.DateTime postDate, short @private, short sourceModule, decimal tranCtrl, int updateCounter)
        {
            ARBatch aRBatch = new ARBatch();
            aRBatch.BatchKey = batchKey;
            aRBatch.BankDepAmt = bankDepAmt;
            aRBatch.CreateType = createType;
            aRBatch.DepSlipPrinted = depSlipPrinted;
            aRBatch.Hold = hold;
            aRBatch.InterCompany = interCompany;
            aRBatch.OrigUserID = origUserID;
            aRBatch.PostDate = postDate;
            aRBatch.Private = @private;
            aRBatch.SourceModule = sourceModule;
            aRBatch.TranCtrl = tranCtrl;
            aRBatch.UpdateCounter = updateCounter;
            return aRBatch;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for BatchKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int BatchKey
        {
            get
            {
                int value = _BatchKey;
                OnGetBatchKey(ref value);
                return value;
            }
            set
            {
                if (_BatchKey != value)
                {
                  OnBatchKeyChanging(ref value);
                  ReportPropertyChanging("BatchKey");
                  _BatchKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BatchKey");
                  OnBatchKeyChanged();
              }
            }
        }
        private int _BatchKey;
        partial void OnGetBatchKey(ref int value);
        partial void OnBatchKeyChanging(ref int value);
        partial void OnBatchKeyChanged();
    
        /// <summary>
        /// There are no comments for BankDepAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal BankDepAmt
        {
            get
            {
                decimal value = _BankDepAmt;
                OnGetBankDepAmt(ref value);
                return value;
            }
            set
            {
                if (_BankDepAmt != value)
                {
                  OnBankDepAmtChanging(ref value);
                  ReportPropertyChanging("BankDepAmt");
                  _BankDepAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BankDepAmt");
                  OnBankDepAmtChanged();
              }
            }
        }
        private decimal _BankDepAmt = 0m;
        partial void OnGetBankDepAmt(ref decimal value);
        partial void OnBankDepAmtChanging(ref decimal value);
        partial void OnBankDepAmtChanged();
    
        /// <summary>
        /// There are no comments for BankDepDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? BankDepDate
        {
            get
            {
                global::System.DateTime? value = _BankDepDate;
                OnGetBankDepDate(ref value);
                return value;
            }
            set
            {
                if (_BankDepDate != value)
                {
                  OnBankDepDateChanging(ref value);
                  ReportPropertyChanging("BankDepDate");
                  _BankDepDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BankDepDate");
                  OnBankDepDateChanged();
              }
            }
        }
        private global::System.DateTime? _BankDepDate;
        partial void OnGetBankDepDate(ref global::System.DateTime? value);
        partial void OnBankDepDateChanging(ref global::System.DateTime? value);
        partial void OnBankDepDateChanged();
    
        /// <summary>
        /// There are no comments for BankDepTranNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string BankDepTranNo
        {
            get
            {
                string value = _BankDepTranNo;
                OnGetBankDepTranNo(ref value);
                return value;
            }
            set
            {
                if (_BankDepTranNo != value)
                {
                  OnBankDepTranNoChanging(ref value);
                  ReportPropertyChanging("BankDepTranNo");
                  _BankDepTranNo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("BankDepTranNo");
                  OnBankDepTranNoChanged();
              }
            }
        }
        private string _BankDepTranNo;
        partial void OnGetBankDepTranNo(ref string value);
        partial void OnBankDepTranNoChanging(ref string value);
        partial void OnBankDepTranNoChanged();
    
        /// <summary>
        /// There are no comments for BatchCmnt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string BatchCmnt
        {
            get
            {
                string value = _BatchCmnt;
                OnGetBatchCmnt(ref value);
                return value;
            }
            set
            {
                if (_BatchCmnt != value)
                {
                  OnBatchCmntChanging(ref value);
                  ReportPropertyChanging("BatchCmnt");
                  _BatchCmnt = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("BatchCmnt");
                  OnBatchCmntChanged();
              }
            }
        }
        private string _BatchCmnt;
        partial void OnGetBatchCmnt(ref string value);
        partial void OnBatchCmntChanging(ref string value);
        partial void OnBatchCmntChanged();
    
        /// <summary>
        /// There are no comments for BatchOvrdSegKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? BatchOvrdSegKey
        {
            get
            {
                int? value = _BatchOvrdSegKey;
                OnGetBatchOvrdSegKey(ref value);
                return value;
            }
            set
            {
                if (_BatchOvrdSegKey != value)
                {
                  OnBatchOvrdSegKeyChanging(ref value);
                  ReportPropertyChanging("BatchOvrdSegKey");
                  _BatchOvrdSegKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BatchOvrdSegKey");
                  OnBatchOvrdSegKeyChanged();
              }
            }
        }
        private int? _BatchOvrdSegKey;
        partial void OnGetBatchOvrdSegKey(ref int? value);
        partial void OnBatchOvrdSegKeyChanging(ref int? value);
        partial void OnBatchOvrdSegKeyChanged();
    
        /// <summary>
        /// There are no comments for BatchOvrdSegValue in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string BatchOvrdSegValue
        {
            get
            {
                string value = _BatchOvrdSegValue;
                OnGetBatchOvrdSegValue(ref value);
                return value;
            }
            set
            {
                if (_BatchOvrdSegValue != value)
                {
                  OnBatchOvrdSegValueChanging(ref value);
                  ReportPropertyChanging("BatchOvrdSegValue");
                  _BatchOvrdSegValue = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("BatchOvrdSegValue");
                  OnBatchOvrdSegValueChanged();
              }
            }
        }
        private string _BatchOvrdSegValue;
        partial void OnGetBatchOvrdSegValue(ref string value);
        partial void OnBatchOvrdSegValueChanging(ref string value);
        partial void OnBatchOvrdSegValueChanged();
    
        /// <summary>
        /// There are no comments for CashAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CashAcctKey
        {
            get
            {
                int? value = _CashAcctKey;
                OnGetCashAcctKey(ref value);
                return value;
            }
            set
            {
                if (_CashAcctKey != value)
                {
                  OnCashAcctKeyChanging(ref value);
                  ReportPropertyChanging("CashAcctKey");
                  _CashAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CashAcctKey");
                  OnCashAcctKeyChanged();
              }
            }
        }
        private int? _CashAcctKey;
        partial void OnGetCashAcctKey(ref int? value);
        partial void OnCashAcctKeyChanging(ref int? value);
        partial void OnCashAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for CashTranKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CashTranKey
        {
            get
            {
                int? value = _CashTranKey;
                OnGetCashTranKey(ref value);
                return value;
            }
            set
            {
                if (_CashTranKey != value)
                {
                  OnCashTranKeyChanging(ref value);
                  ReportPropertyChanging("CashTranKey");
                  _CashTranKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CashTranKey");
                  OnCashTranKeyChanged();
              }
            }
        }
        private int? _CashTranKey;
        partial void OnGetCashTranKey(ref int? value);
        partial void OnCashTranKeyChanging(ref int? value);
        partial void OnCashTranKeyChanged();
    
        /// <summary>
        /// There are no comments for CreateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CreateDate
        {
            get
            {
                global::System.DateTime? value = _CreateDate;
                OnGetCreateDate(ref value);
                return value;
            }
            set
            {
                if (_CreateDate != value)
                {
                  OnCreateDateChanging(ref value);
                  ReportPropertyChanging("CreateDate");
                  _CreateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateDate");
                  OnCreateDateChanged();
              }
            }
        }
        private global::System.DateTime? _CreateDate;
        partial void OnGetCreateDate(ref global::System.DateTime? value);
        partial void OnCreateDateChanging(ref global::System.DateTime? value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// There are no comments for CreateType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CreateType
        {
            get
            {
                short value = _CreateType;
                OnGetCreateType(ref value);
                return value;
            }
            set
            {
                if (_CreateType != value)
                {
                  OnCreateTypeChanging(ref value);
                  ReportPropertyChanging("CreateType");
                  _CreateType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateType");
                  OnCreateTypeChanged();
              }
            }
        }
        private short _CreateType = 0;
        partial void OnGetCreateType(ref short value);
        partial void OnCreateTypeChanging(ref short value);
        partial void OnCreateTypeChanged();
    
        /// <summary>
        /// There are no comments for CrHoldCount in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual short? CrHoldCount
        {
            get
            {
                short? value = _CrHoldCount;
                OnGetCrHoldCount(ref value);
                return value;
            }
            set
            {
                if (_CrHoldCount != value)
                {
                  OnCrHoldCountChanging(ref value);
                  ReportPropertyChanging("CrHoldCount");
                  _CrHoldCount = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CrHoldCount");
                  OnCrHoldCountChanged();
              }
            }
        }
        private short? _CrHoldCount = 0;
        partial void OnGetCrHoldCount(ref short? value);
        partial void OnCrHoldCountChanging(ref short? value);
        partial void OnCrHoldCountChanged();
    
        /// <summary>
        /// There are no comments for DepSlipPrinted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short DepSlipPrinted
        {
            get
            {
                short value = _DepSlipPrinted;
                OnGetDepSlipPrinted(ref value);
                return value;
            }
            set
            {
                if (_DepSlipPrinted != value)
                {
                  OnDepSlipPrintedChanging(ref value);
                  ReportPropertyChanging("DepSlipPrinted");
                  _DepSlipPrinted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DepSlipPrinted");
                  OnDepSlipPrintedChanged();
              }
            }
        }
        private short _DepSlipPrinted = 0;
        partial void OnGetDepSlipPrinted(ref short value);
        partial void OnDepSlipPrintedChanging(ref short value);
        partial void OnDepSlipPrintedChanged();
    
        /// <summary>
        /// There are no comments for Hold in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Hold
        {
            get
            {
                short value = _Hold;
                OnGetHold(ref value);
                return value;
            }
            set
            {
                if (_Hold != value)
                {
                  OnHoldChanging(ref value);
                  ReportPropertyChanging("Hold");
                  _Hold = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Hold");
                  OnHoldChanged();
              }
            }
        }
        private short _Hold = 0;
        partial void OnGetHold(ref short value);
        partial void OnHoldChanging(ref short value);
        partial void OnHoldChanged();
    
        /// <summary>
        /// There are no comments for HoldReason in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string HoldReason
        {
            get
            {
                string value = _HoldReason;
                OnGetHoldReason(ref value);
                return value;
            }
            set
            {
                if (_HoldReason != value)
                {
                  OnHoldReasonChanging(ref value);
                  ReportPropertyChanging("HoldReason");
                  _HoldReason = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("HoldReason");
                  OnHoldReasonChanged();
              }
            }
        }
        private string _HoldReason;
        partial void OnGetHoldReason(ref string value);
        partial void OnHoldReasonChanging(ref string value);
        partial void OnHoldReasonChanged();
    
        /// <summary>
        /// There are no comments for InterCompany in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short InterCompany
        {
            get
            {
                short value = _InterCompany;
                OnGetInterCompany(ref value);
                return value;
            }
            set
            {
                if (_InterCompany != value)
                {
                  OnInterCompanyChanging(ref value);
                  ReportPropertyChanging("InterCompany");
                  _InterCompany = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InterCompany");
                  OnInterCompanyChanged();
              }
            }
        }
        private short _InterCompany = 0;
        partial void OnGetInterCompany(ref short value);
        partial void OnInterCompanyChanging(ref short value);
        partial void OnInterCompanyChanged();
    
        /// <summary>
        /// There are no comments for InterCompBatchKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? InterCompBatchKey
        {
            get
            {
                int? value = _InterCompBatchKey;
                OnGetInterCompBatchKey(ref value);
                return value;
            }
            set
            {
                if (_InterCompBatchKey != value)
                {
                  OnInterCompBatchKeyChanging(ref value);
                  ReportPropertyChanging("InterCompBatchKey");
                  _InterCompBatchKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InterCompBatchKey");
                  OnInterCompBatchKeyChanged();
              }
            }
        }
        private int? _InterCompBatchKey;
        partial void OnGetInterCompBatchKey(ref int? value);
        partial void OnInterCompBatchKeyChanging(ref int? value);
        partial void OnInterCompBatchKeyChanged();
    
        /// <summary>
        /// There are no comments for LastUsedInvcKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? LastUsedInvcKey
        {
            get
            {
                int? value = _LastUsedInvcKey;
                OnGetLastUsedInvcKey(ref value);
                return value;
            }
            set
            {
                if (_LastUsedInvcKey != value)
                {
                  OnLastUsedInvcKeyChanging(ref value);
                  ReportPropertyChanging("LastUsedInvcKey");
                  _LastUsedInvcKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LastUsedInvcKey");
                  OnLastUsedInvcKeyChanged();
              }
            }
        }
        private int? _LastUsedInvcKey;
        partial void OnGetLastUsedInvcKey(ref int? value);
        partial void OnLastUsedInvcKeyChanging(ref int? value);
        partial void OnLastUsedInvcKeyChanged();
    
        /// <summary>
        /// There are no comments for OrigUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string OrigUserID
        {
            get
            {
                string value = _OrigUserID;
                OnGetOrigUserID(ref value);
                return value;
            }
            set
            {
                if (_OrigUserID != value)
                {
                  OnOrigUserIDChanging(ref value);
                  ReportPropertyChanging("OrigUserID");
                  _OrigUserID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("OrigUserID");
                  OnOrigUserIDChanged();
              }
            }
        }
        private string _OrigUserID;
        partial void OnGetOrigUserID(ref string value);
        partial void OnOrigUserIDChanging(ref string value);
        partial void OnOrigUserIDChanged();
    
        /// <summary>
        /// There are no comments for PostDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime PostDate
        {
            get
            {
                global::System.DateTime value = _PostDate;
                OnGetPostDate(ref value);
                return value;
            }
            set
            {
                if (_PostDate != value)
                {
                  OnPostDateChanging(ref value);
                  ReportPropertyChanging("PostDate");
                  _PostDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PostDate");
                  OnPostDateChanged();
              }
            }
        }
        private global::System.DateTime _PostDate;
        partial void OnGetPostDate(ref global::System.DateTime value);
        partial void OnPostDateChanging(ref global::System.DateTime value);
        partial void OnPostDateChanged();
    
        /// <summary>
        /// There are no comments for Private in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Private
        {
            get
            {
                short value = _Private;
                OnGetPrivate(ref value);
                return value;
            }
            set
            {
                if (_Private != value)
                {
                  OnPrivateChanging(ref value);
                  ReportPropertyChanging("Private");
                  _Private = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Private");
                  OnPrivateChanged();
              }
            }
        }
        private short _Private = 0;
        partial void OnGetPrivate(ref short value);
        partial void OnPrivateChanging(ref short value);
        partial void OnPrivateChanged();
    
        /// <summary>
        /// There are no comments for SourceModule in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short SourceModule
        {
            get
            {
                short value = _SourceModule;
                OnGetSourceModule(ref value);
                return value;
            }
            set
            {
                if (_SourceModule != value)
                {
                  OnSourceModuleChanging(ref value);
                  ReportPropertyChanging("SourceModule");
                  _SourceModule = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SourceModule");
                  OnSourceModuleChanged();
              }
            }
        }
        private short _SourceModule = 5;
        partial void OnGetSourceModule(ref short value);
        partial void OnSourceModuleChanging(ref short value);
        partial void OnSourceModuleChanged();
    
        /// <summary>
        /// There are no comments for TranCtrl in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal TranCtrl
        {
            get
            {
                decimal value = _TranCtrl;
                OnGetTranCtrl(ref value);
                return value;
            }
            set
            {
                if (_TranCtrl != value)
                {
                  OnTranCtrlChanging(ref value);
                  ReportPropertyChanging("TranCtrl");
                  _TranCtrl = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranCtrl");
                  OnTranCtrlChanged();
              }
            }
        }
        private decimal _TranCtrl = 0m;
        partial void OnGetTranCtrl(ref decimal value);
        partial void OnTranCtrlChanging(ref decimal value);
        partial void OnTranCtrlChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for BatchLog in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "BatchLog_ARBatch", "BatchLog")]
        public virtual BatchLog BatchLog
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<BatchLog>("Net4Sage.DataAccessModel.BatchLog_ARBatch", "BatchLog").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<BatchLog>("Net4Sage.DataAccessModel.BatchLog_ARBatch", "BatchLog").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for BatchLog in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BatchLog> BatchLogReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<BatchLog>("Net4Sage.DataAccessModel.BatchLog_ARBatch", "BatchLog");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<BatchLog>("Net4Sage.DataAccessModel.BatchLog_ARBatch", "BatchLog", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<BatchLog>("Net4Sage.DataAccessModel.BatchLog_ARBatch", "BatchLog").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.CustomerPaymentAppl in the schema.
    /// </summary>
    /// <KeyProperties>
    /// CustPmtKey
    /// EntryNo
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="CustomerPaymentAppl")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustomerPaymentAppl : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CustomerPaymentAppl object.
        /// </summary>
        /// <param name="custPmtKey">Initial value of CustPmtKey.</param>
        /// <param name="entryNo">Initial value of EntryNo.</param>
        /// <param name="applyToTranDate">Initial value of ApplyToTranDate.</param>
        /// <param name="applyToTranID">Initial value of ApplyToTranID.</param>
        /// <param name="currExchRate">Initial value of CurrExchRate.</param>
        /// <param name="discTaken">Initial value of DiscTaken.</param>
        /// <param name="discTakenAmtHC">Initial value of DiscTakenAmtHC.</param>
        /// <param name="pmtAmt">Initial value of PmtAmt.</param>
        /// <param name="pmtAmtHC">Initial value of PmtAmtHC.</param>
        public static CustomerPaymentAppl CreateCustomerPaymentAppl(int custPmtKey, int entryNo, global::System.DateTime applyToTranDate, string applyToTranID, double currExchRate, decimal discTaken, decimal discTakenAmtHC, decimal pmtAmt, decimal pmtAmtHC)
        {
            CustomerPaymentAppl customerPaymentAppl = new CustomerPaymentAppl();
            customerPaymentAppl.CustPmtKey = custPmtKey;
            customerPaymentAppl.EntryNo = entryNo;
            customerPaymentAppl.ApplyToTranDate = applyToTranDate;
            customerPaymentAppl.ApplyToTranID = applyToTranID;
            customerPaymentAppl.CurrExchRate = currExchRate;
            customerPaymentAppl.DiscTaken = discTaken;
            customerPaymentAppl.DiscTakenAmtHC = discTakenAmtHC;
            customerPaymentAppl.PmtAmt = pmtAmt;
            customerPaymentAppl.PmtAmtHC = pmtAmtHC;
            return customerPaymentAppl;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for CustPmtKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustPmtKey
        {
            get
            {
                int value = _CustPmtKey;
                OnGetCustPmtKey(ref value);
                return value;
            }
            set
            {
                if (_CustPmtKey != value)
                {
                  OnCustPmtKeyChanging(ref value);
                  ReportPropertyChanging("CustPmtKey");
                  _CustPmtKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustPmtKey");
                  OnCustPmtKeyChanged();
              }
            }
        }
        private int _CustPmtKey;
        partial void OnGetCustPmtKey(ref int value);
        partial void OnCustPmtKeyChanging(ref int value);
        partial void OnCustPmtKeyChanged();
    
        /// <summary>
        /// There are no comments for EntryNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int EntryNo
        {
            get
            {
                int value = _EntryNo;
                OnGetEntryNo(ref value);
                return value;
            }
            set
            {
                if (_EntryNo != value)
                {
                  OnEntryNoChanging(ref value);
                  ReportPropertyChanging("EntryNo");
                  _EntryNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EntryNo");
                  OnEntryNoChanged();
              }
            }
        }
        private int _EntryNo;
        partial void OnGetEntryNo(ref int value);
        partial void OnEntryNoChanging(ref int value);
        partial void OnEntryNoChanged();
    
        /// <summary>
        /// There are no comments for ApplyToInvcKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ApplyToInvcKey
        {
            get
            {
                int? value = _ApplyToInvcKey;
                OnGetApplyToInvcKey(ref value);
                return value;
            }
            set
            {
                if (_ApplyToInvcKey != value)
                {
                  OnApplyToInvcKeyChanging(ref value);
                  ReportPropertyChanging("ApplyToInvcKey");
                  _ApplyToInvcKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ApplyToInvcKey");
                  OnApplyToInvcKeyChanged();
              }
            }
        }
        private int? _ApplyToInvcKey;
        partial void OnGetApplyToInvcKey(ref int? value);
        partial void OnApplyToInvcKeyChanging(ref int? value);
        partial void OnApplyToInvcKeyChanged();
    
        /// <summary>
        /// There are no comments for ApplyToPmtKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ApplyToPmtKey
        {
            get
            {
                int? value = _ApplyToPmtKey;
                OnGetApplyToPmtKey(ref value);
                return value;
            }
            set
            {
                if (_ApplyToPmtKey != value)
                {
                  OnApplyToPmtKeyChanging(ref value);
                  ReportPropertyChanging("ApplyToPmtKey");
                  _ApplyToPmtKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ApplyToPmtKey");
                  OnApplyToPmtKeyChanged();
              }
            }
        }
        private int? _ApplyToPmtKey;
        partial void OnGetApplyToPmtKey(ref int? value);
        partial void OnApplyToPmtKeyChanging(ref int? value);
        partial void OnApplyToPmtKeyChanged();
    
        /// <summary>
        /// There are no comments for ApplyToTranDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime ApplyToTranDate
        {
            get
            {
                global::System.DateTime value = _ApplyToTranDate;
                OnGetApplyToTranDate(ref value);
                return value;
            }
            set
            {
                if (_ApplyToTranDate != value)
                {
                  OnApplyToTranDateChanging(ref value);
                  ReportPropertyChanging("ApplyToTranDate");
                  _ApplyToTranDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ApplyToTranDate");
                  OnApplyToTranDateChanged();
              }
            }
        }
        private global::System.DateTime _ApplyToTranDate;
        partial void OnGetApplyToTranDate(ref global::System.DateTime value);
        partial void OnApplyToTranDateChanging(ref global::System.DateTime value);
        partial void OnApplyToTranDateChanged();
    
        /// <summary>
        /// There are no comments for ApplyToTranID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string ApplyToTranID
        {
            get
            {
                string value = _ApplyToTranID;
                OnGetApplyToTranID(ref value);
                return value;
            }
            set
            {
                if (_ApplyToTranID != value)
                {
                  OnApplyToTranIDChanging(ref value);
                  ReportPropertyChanging("ApplyToTranID");
                  _ApplyToTranID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ApplyToTranID");
                  OnApplyToTranIDChanged();
              }
            }
        }
        private string _ApplyToTranID;
        partial void OnGetApplyToTranID(ref string value);
        partial void OnApplyToTranIDChanging(ref string value);
        partial void OnApplyToTranIDChanged();
    
        /// <summary>
        /// There are no comments for BatchKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? BatchKey
        {
            get
            {
                int? value = _BatchKey;
                OnGetBatchKey(ref value);
                return value;
            }
            set
            {
                if (_BatchKey != value)
                {
                  OnBatchKeyChanging(ref value);
                  ReportPropertyChanging("BatchKey");
                  _BatchKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BatchKey");
                  OnBatchKeyChanged();
              }
            }
        }
        private int? _BatchKey;
        partial void OnGetBatchKey(ref int? value);
        partial void OnBatchKeyChanging(ref int? value);
        partial void OnBatchKeyChanged();
    
        /// <summary>
        /// There are no comments for CreateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CreateDate
        {
            get
            {
                global::System.DateTime? value = _CreateDate;
                OnGetCreateDate(ref value);
                return value;
            }
            set
            {
                if (_CreateDate != value)
                {
                  OnCreateDateChanging(ref value);
                  ReportPropertyChanging("CreateDate");
                  _CreateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateDate");
                  OnCreateDateChanged();
              }
            }
        }
        private global::System.DateTime? _CreateDate;
        partial void OnGetCreateDate(ref global::System.DateTime? value);
        partial void OnCreateDateChanging(ref global::System.DateTime? value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// There are no comments for CreateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CreateUserID
        {
            get
            {
                string value = _CreateUserID;
                OnGetCreateUserID(ref value);
                return value;
            }
            set
            {
                if (_CreateUserID != value)
                {
                  OnCreateUserIDChanging(ref value);
                  ReportPropertyChanging("CreateUserID");
                  _CreateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CreateUserID");
                  OnCreateUserIDChanged();
              }
            }
        }
        private string _CreateUserID;
        partial void OnGetCreateUserID(ref string value);
        partial void OnCreateUserIDChanging(ref string value);
        partial void OnCreateUserIDChanged();
    
        /// <summary>
        /// There are no comments for CurrExchRate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual double CurrExchRate
        {
            get
            {
                double value = _CurrExchRate;
                OnGetCurrExchRate(ref value);
                return value;
            }
            set
            {
                if (_CurrExchRate != value)
                {
                  OnCurrExchRateChanging(ref value);
                  ReportPropertyChanging("CurrExchRate");
                  _CurrExchRate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CurrExchRate");
                  OnCurrExchRateChanged();
              }
            }
        }
        private double _CurrExchRate = 1;
        partial void OnGetCurrExchRate(ref double value);
        partial void OnCurrExchRateChanging(ref double value);
        partial void OnCurrExchRateChanged();
    
        /// <summary>
        /// There are no comments for DiscTaken in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal DiscTaken
        {
            get
            {
                decimal value = _DiscTaken;
                OnGetDiscTaken(ref value);
                return value;
            }
            set
            {
                if (_DiscTaken != value)
                {
                  OnDiscTakenChanging(ref value);
                  ReportPropertyChanging("DiscTaken");
                  _DiscTaken = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DiscTaken");
                  OnDiscTakenChanged();
              }
            }
        }
        private decimal _DiscTaken = 0m;
        partial void OnGetDiscTaken(ref decimal value);
        partial void OnDiscTakenChanging(ref decimal value);
        partial void OnDiscTakenChanged();
    
        /// <summary>
        /// There are no comments for DiscTakenAmtHC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal DiscTakenAmtHC
        {
            get
            {
                decimal value = _DiscTakenAmtHC;
                OnGetDiscTakenAmtHC(ref value);
                return value;
            }
            set
            {
                if (_DiscTakenAmtHC != value)
                {
                  OnDiscTakenAmtHCChanging(ref value);
                  ReportPropertyChanging("DiscTakenAmtHC");
                  _DiscTakenAmtHC = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DiscTakenAmtHC");
                  OnDiscTakenAmtHCChanged();
              }
            }
        }
        private decimal _DiscTakenAmtHC = 0m;
        partial void OnGetDiscTakenAmtHC(ref decimal value);
        partial void OnDiscTakenAmtHCChanging(ref decimal value);
        partial void OnDiscTakenAmtHCChanged();
    
        /// <summary>
        /// There are no comments for PmtAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal PmtAmt
        {
            get
            {
                decimal value = _PmtAmt;
                OnGetPmtAmt(ref value);
                return value;
            }
            set
            {
                if (_PmtAmt != value)
                {
                  OnPmtAmtChanging(ref value);
                  ReportPropertyChanging("PmtAmt");
                  _PmtAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PmtAmt");
                  OnPmtAmtChanged();
              }
            }
        }
        private decimal _PmtAmt = 0m;
        partial void OnGetPmtAmt(ref decimal value);
        partial void OnPmtAmtChanging(ref decimal value);
        partial void OnPmtAmtChanged();
    
        /// <summary>
        /// There are no comments for PmtAmtHC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal PmtAmtHC
        {
            get
            {
                decimal value = _PmtAmtHC;
                OnGetPmtAmtHC(ref value);
                return value;
            }
            set
            {
                if (_PmtAmtHC != value)
                {
                  OnPmtAmtHCChanging(ref value);
                  ReportPropertyChanging("PmtAmtHC");
                  _PmtAmtHC = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PmtAmtHC");
                  OnPmtAmtHCChanged();
              }
            }
        }
        private decimal _PmtAmtHC = 0m;
        partial void OnGetPmtAmtHC(ref decimal value);
        partial void OnPmtAmtHCChanging(ref decimal value);
        partial void OnPmtAmtHCChanged();
    
        /// <summary>
        /// There are no comments for RevrsApplBatchKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? RevrsApplBatchKey
        {
            get
            {
                int? value = _RevrsApplBatchKey;
                OnGetRevrsApplBatchKey(ref value);
                return value;
            }
            set
            {
                if (_RevrsApplBatchKey != value)
                {
                  OnRevrsApplBatchKeyChanging(ref value);
                  ReportPropertyChanging("RevrsApplBatchKey");
                  _RevrsApplBatchKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RevrsApplBatchKey");
                  OnRevrsApplBatchKeyChanged();
              }
            }
        }
        private int? _RevrsApplBatchKey;
        partial void OnGetRevrsApplBatchKey(ref int? value);
        partial void OnRevrsApplBatchKeyChanging(ref int? value);
        partial void OnRevrsApplBatchKeyChanged();
    
        /// <summary>
        /// There are no comments for RevrsApplEntryNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? RevrsApplEntryNo
        {
            get
            {
                int? value = _RevrsApplEntryNo;
                OnGetRevrsApplEntryNo(ref value);
                return value;
            }
            set
            {
                if (_RevrsApplEntryNo != value)
                {
                  OnRevrsApplEntryNoChanging(ref value);
                  ReportPropertyChanging("RevrsApplEntryNo");
                  _RevrsApplEntryNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RevrsApplEntryNo");
                  OnRevrsApplEntryNoChanged();
              }
            }
        }
        private int? _RevrsApplEntryNo;
        partial void OnGetRevrsApplEntryNo(ref int? value);
        partial void OnRevrsApplEntryNoChanging(ref int? value);
        partial void OnRevrsApplEntryNoChanged();
    
        /// <summary>
        /// There are no comments for UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? UpdateDate
        {
            get
            {
                global::System.DateTime? value = _UpdateDate;
                OnGetUpdateDate(ref value);
                return value;
            }
            set
            {
                if (_UpdateDate != value)
                {
                  OnUpdateDateChanging(ref value);
                  ReportPropertyChanging("UpdateDate");
                  _UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateDate");
                  OnUpdateDateChanged();
              }
            }
        }
        private global::System.DateTime? _UpdateDate;
        partial void OnGetUpdateDate(ref global::System.DateTime? value);
        partial void OnUpdateDateChanging(ref global::System.DateTime? value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// There are no comments for UpdateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UpdateUserID
        {
            get
            {
                string value = _UpdateUserID;
                OnGetUpdateUserID(ref value);
                return value;
            }
            set
            {
                if (_UpdateUserID != value)
                {
                  OnUpdateUserIDChanging(ref value);
                  ReportPropertyChanging("UpdateUserID");
                  _UpdateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UpdateUserID");
                  OnUpdateUserIDChanged();
              }
            }
        }
        private string _UpdateUserID;
        partial void OnGetUpdateUserID(ref string value);
        partial void OnUpdateUserIDChanging(ref string value);
        partial void OnUpdateUserIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CustomerPaymentLog in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "CustomerPaymentLog_CustomerPaymentAppl", "CustomerPaymentLog")]
        public virtual CustomerPaymentLog CustomerPaymentLog
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustomerPaymentLog>("Net4Sage.DataAccessModel.CustomerPaymentLog_CustomerPaymentAppl", "CustomerPaymentLog").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustomerPaymentLog>("Net4Sage.DataAccessModel.CustomerPaymentLog_CustomerPaymentAppl", "CustomerPaymentLog").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for CustomerPaymentLog in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustomerPaymentLog> CustomerPaymentLogReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustomerPaymentLog>("Net4Sage.DataAccessModel.CustomerPaymentLog_CustomerPaymentAppl", "CustomerPaymentLog");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CustomerPaymentLog>("Net4Sage.DataAccessModel.CustomerPaymentLog_CustomerPaymentAppl", "CustomerPaymentLog", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustomerPaymentLog>("Net4Sage.DataAccessModel.CustomerPaymentLog_CustomerPaymentAppl", "CustomerPaymentLog").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ARBatch in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "ARBatch_CustomerPaymentAppl", "ARBatch")]
        public virtual ARBatch ARBatch
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ARBatch>("Net4Sage.DataAccessModel.ARBatch_CustomerPaymentAppl", "ARBatch").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ARBatch>("Net4Sage.DataAccessModel.ARBatch_CustomerPaymentAppl", "ARBatch").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for ARBatch in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ARBatch> ARBatchReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ARBatch>("Net4Sage.DataAccessModel.ARBatch_CustomerPaymentAppl", "ARBatch");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<ARBatch>("Net4Sage.DataAccessModel.ARBatch_CustomerPaymentAppl", "ARBatch", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ARBatch>("Net4Sage.DataAccessModel.ARBatch_CustomerPaymentAppl", "ARBatch").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.CustomerPaymentLog in the schema.
    /// </summary>
    /// <KeyProperties>
    /// CustPmtKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="CustomerPaymentLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [Net4Sage.Controls.Lookup.LookupAutoShowColumns(false)]
    [Net4Sage.Controls.Lookup.LookupFormTitle(@"Buscar Pago de Cliente")]
    public partial class CustomerPaymentLog : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CustomerPaymentLog object.
        /// </summary>
        /// <param name="custPmtKey">Initial value of CustPmtKey.</param>
        /// <param name="tranDate">Initial value of TranDate.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="tranAmtHC">Initial value of TranAmtHC.</param>
        /// <param name="tranStatus">Initial value of TranStatus.</param>
        public static CustomerPaymentLog CreateCustomerPaymentLog(int custPmtKey, global::System.DateTime tranDate, string companyID, decimal tranAmtHC, short tranStatus)
        {
            CustomerPaymentLog customerPaymentLog = new CustomerPaymentLog();
            customerPaymentLog.CustPmtKey = custPmtKey;
            customerPaymentLog.TranDate = tranDate;
            customerPaymentLog.CompanyID = companyID;
            customerPaymentLog.TranAmtHC = tranAmtHC;
            customerPaymentLog.TranStatus = tranStatus;
            return customerPaymentLog;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for CustPmtKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupKeyReturn]
        public virtual int CustPmtKey
        {
            get
            {
                int value = _CustPmtKey;
                OnGetCustPmtKey(ref value);
                return value;
            }
            set
            {
                if (_CustPmtKey != value)
                {
                  OnCustPmtKeyChanging(ref value);
                  ReportPropertyChanging("CustPmtKey");
                  _CustPmtKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustPmtKey");
                  OnCustPmtKeyChanged();
              }
            }
        }
        private int _CustPmtKey;
        partial void OnGetCustPmtKey(ref int value);
        partial void OnCustPmtKeyChanging(ref int value);
        partial void OnCustPmtKeyChanged();
    
        /// <summary>
        /// There are no comments for TranNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupTextReturn]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"No Transacción")]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"No Transacción")]
        public virtual string TranNo
        {
            get
            {
                string value = _TranNo;
                OnGetTranNo(ref value);
                return value;
            }
            set
            {
                if (_TranNo != value)
                {
                  OnTranNoChanging(ref value);
                  ReportPropertyChanging("TranNo");
                  _TranNo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TranNo");
                  OnTranNoChanged();
              }
            }
        }
        private string _TranNo;
        partial void OnGetTranNo(ref string value);
        partial void OnTranNoChanging(ref string value);
        partial void OnTranNoChanged();
    
        /// <summary>
        /// There are no comments for TranID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Transacción")]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"Transacción")]
        public virtual string TranID
        {
            get
            {
                string value = _TranID;
                OnGetTranID(ref value);
                return value;
            }
            set
            {
                if (_TranID != value)
                {
                  OnTranIDChanging(ref value);
                  ReportPropertyChanging("TranID");
                  _TranID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TranID");
                  OnTranIDChanged();
              }
            }
        }
        private string _TranID;
        partial void OnGetTranID(ref string value);
        partial void OnTranIDChanging(ref string value);
        partial void OnTranIDChanged();
    
        /// <summary>
        /// There are no comments for TranDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Fecha")]
        [Net4Sage.Controls.Lookup.LookupColumnFilter(@"Fecha")]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        public virtual global::System.DateTime TranDate
        {
            get
            {
                global::System.DateTime value = _TranDate;
                OnGetTranDate(ref value);
                return value;
            }
            set
            {
                if (_TranDate != value)
                {
                  OnTranDateChanging(ref value);
                  ReportPropertyChanging("TranDate");
                  _TranDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranDate");
                  OnTranDateChanged();
              }
            }
        }
        private global::System.DateTime _TranDate;
        partial void OnGetTranDate(ref global::System.DateTime value);
        partial void OnTranDateChanging(ref global::System.DateTime value);
        partial void OnTranDateChanged();
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for TranAmtHC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [Net4Sage.Controls.Lookup.LookupShowColumn]
        [Net4Sage.Controls.Lookup.LookupColumnHeader(@"Importe ML")]
        public virtual decimal TranAmtHC
        {
            get
            {
                decimal value = _TranAmtHC;
                OnGetTranAmtHC(ref value);
                return value;
            }
            set
            {
                if (_TranAmtHC != value)
                {
                  OnTranAmtHCChanging(ref value);
                  ReportPropertyChanging("TranAmtHC");
                  _TranAmtHC = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranAmtHC");
                  OnTranAmtHCChanged();
              }
            }
        }
        private decimal _TranAmtHC = 0m;
        partial void OnGetTranAmtHC(ref decimal value);
        partial void OnTranAmtHCChanging(ref decimal value);
        partial void OnTranAmtHCChanged();
    
        /// <summary>
        /// There are no comments for TranStatus in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short TranStatus
        {
            get
            {
                short value = _TranStatus;
                OnGetTranStatus(ref value);
                return value;
            }
            set
            {
                if (_TranStatus != value)
                {
                  OnTranStatusChanging(ref value);
                  ReportPropertyChanging("TranStatus");
                  _TranStatus = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranStatus");
                  OnTranStatusChanged();
              }
            }
        }
        private short _TranStatus = 1;
        partial void OnGetTranStatus(ref short value);
        partial void OnTranStatusChanging(ref short value);
        partial void OnTranStatusChanged();
    
        /// <summary>
        /// There are no comments for TranType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? TranType
        {
            get
            {
                int? value = _TranType;
                OnGetTranType(ref value);
                return value;
            }
            set
            {
                if (_TranType != value)
                {
                  OnTranTypeChanging(ref value);
                  ReportPropertyChanging("TranType");
                  _TranType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranType");
                  OnTranTypeChanged();
              }
            }
        }
        private int? _TranType;
        partial void OnGetTranType(ref int? value);
        partial void OnTranTypeChanging(ref int? value);
        partial void OnTranTypeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for PendingCustomerPayment in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "CustomerPaymentLog_PendingCustomerPayment", "PendingCustomerPayment")]
        public virtual PendingCustomerPayment PendingCustomerPayment
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<PendingCustomerPayment>("Net4Sage.DataAccessModel.CustomerPaymentLog_PendingCustomerPayment", "PendingCustomerPayment").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<PendingCustomerPayment>("Net4Sage.DataAccessModel.CustomerPaymentLog_PendingCustomerPayment", "PendingCustomerPayment").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for PendingCustomerPayment in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PendingCustomerPayment> PendingCustomerPaymentReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<PendingCustomerPayment>("Net4Sage.DataAccessModel.CustomerPaymentLog_PendingCustomerPayment", "PendingCustomerPayment");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<PendingCustomerPayment>("Net4Sage.DataAccessModel.CustomerPaymentLog_PendingCustomerPayment", "PendingCustomerPayment", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<PendingCustomerPayment>("Net4Sage.DataAccessModel.CustomerPaymentLog_PendingCustomerPayment", "PendingCustomerPayment").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CustomerPayment in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "CustomerPaymentLog_CustomerPayment", "CustomerPayment")]
        public virtual CustomerPayment CustomerPayment
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustomerPayment>("Net4Sage.DataAccessModel.CustomerPaymentLog_CustomerPayment", "CustomerPayment").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustomerPayment>("Net4Sage.DataAccessModel.CustomerPaymentLog_CustomerPayment", "CustomerPayment").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for CustomerPayment in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustomerPayment> CustomerPaymentReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustomerPayment>("Net4Sage.DataAccessModel.CustomerPaymentLog_CustomerPayment", "CustomerPayment");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CustomerPayment>("Net4Sage.DataAccessModel.CustomerPaymentLog_CustomerPayment", "CustomerPayment", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustomerPayment>("Net4Sage.DataAccessModel.CustomerPaymentLog_CustomerPayment", "CustomerPayment").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CustomerPaymentAppls in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "CustomerPaymentLog_CustomerPaymentAppl", "CustomerPaymentAppls")]
        public virtual EntityCollection<CustomerPaymentAppl> CustomerPaymentAppls
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CustomerPaymentAppl>("Net4Sage.DataAccessModel.CustomerPaymentLog_CustomerPaymentAppl", "CustomerPaymentAppls");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CustomerPaymentAppl>("Net4Sage.DataAccessModel.CustomerPaymentLog_CustomerPaymentAppl", "CustomerPaymentAppls", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.PendingCustomerPayment in the schema.
    /// </summary>
    /// <KeyProperties>
    /// CustPmtKey
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="PendingCustomerPayment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PendingCustomerPayment : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new PendingCustomerPayment object.
        /// </summary>
        /// <param name="custPmtKey">Initial value of CustPmtKey.</param>
        /// <param name="batchKey">Initial value of BatchKey.</param>
        /// <param name="createType">Initial value of CreateType.</param>
        /// <param name="currExchRate">Initial value of CurrExchRate.</param>
        /// <param name="currID">Initial value of CurrID.</param>
        /// <param name="discTakenAmt">Initial value of DiscTakenAmt.</param>
        /// <param name="guarntdExchRate">Initial value of GuarntdExchRate.</param>
        /// <param name="manualChk">Initial value of ManualChk.</param>
        /// <param name="printed">Initial value of Printed.</param>
        /// <param name="seqNo">Initial value of SeqNo.</param>
        /// <param name="tranAmt">Initial value of TranAmt.</param>
        /// <param name="tranAmtHC">Initial value of TranAmtHC.</param>
        /// <param name="tranDate">Initial value of TranDate.</param>
        /// <param name="tranID">Initial value of TranID.</param>
        /// <param name="tranNo">Initial value of TranNo.</param>
        /// <param name="tranType">Initial value of TranType.</param>
        /// <param name="unappliedAmt">Initial value of UnappliedAmt.</param>
        /// <param name="unappliedAmtHC">Initial value of UnappliedAmtHC.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        /// <param name="voidedChk">Initial value of VoidedChk.</param>
        public static PendingCustomerPayment CreatePendingCustomerPayment(int custPmtKey, int batchKey, short createType, double currExchRate, string currID, decimal discTakenAmt, short guarntdExchRate, short manualChk, short printed, int seqNo, decimal tranAmt, decimal tranAmtHC, global::System.DateTime tranDate, string tranID, string tranNo, int tranType, decimal unappliedAmt, decimal unappliedAmtHC, int updateCounter, short voidedChk)
        {
            PendingCustomerPayment pendingCustomerPayment = new PendingCustomerPayment();
            pendingCustomerPayment.CustPmtKey = custPmtKey;
            pendingCustomerPayment.BatchKey = batchKey;
            pendingCustomerPayment.CreateType = createType;
            pendingCustomerPayment.CurrExchRate = currExchRate;
            pendingCustomerPayment.CurrID = currID;
            pendingCustomerPayment.DiscTakenAmt = discTakenAmt;
            pendingCustomerPayment.GuarntdExchRate = guarntdExchRate;
            pendingCustomerPayment.ManualChk = manualChk;
            pendingCustomerPayment.Printed = printed;
            pendingCustomerPayment.SeqNo = seqNo;
            pendingCustomerPayment.TranAmt = tranAmt;
            pendingCustomerPayment.TranAmtHC = tranAmtHC;
            pendingCustomerPayment.TranDate = tranDate;
            pendingCustomerPayment.TranID = tranID;
            pendingCustomerPayment.TranNo = tranNo;
            pendingCustomerPayment.TranType = tranType;
            pendingCustomerPayment.UnappliedAmt = unappliedAmt;
            pendingCustomerPayment.UnappliedAmtHC = unappliedAmtHC;
            pendingCustomerPayment.UpdateCounter = updateCounter;
            pendingCustomerPayment.VoidedChk = voidedChk;
            return pendingCustomerPayment;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for CustPmtKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int CustPmtKey
        {
            get
            {
                int value = _CustPmtKey;
                OnGetCustPmtKey(ref value);
                return value;
            }
            set
            {
                if (_CustPmtKey != value)
                {
                  OnCustPmtKeyChanging(ref value);
                  ReportPropertyChanging("CustPmtKey");
                  _CustPmtKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustPmtKey");
                  OnCustPmtKeyChanged();
              }
            }
        }
        private int _CustPmtKey;
        partial void OnGetCustPmtKey(ref int value);
        partial void OnCustPmtKeyChanging(ref int value);
        partial void OnCustPmtKeyChanged();
    
        /// <summary>
        /// There are no comments for BatchKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int BatchKey
        {
            get
            {
                int value = _BatchKey;
                OnGetBatchKey(ref value);
                return value;
            }
            set
            {
                if (_BatchKey != value)
                {
                  OnBatchKeyChanging(ref value);
                  ReportPropertyChanging("BatchKey");
                  _BatchKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BatchKey");
                  OnBatchKeyChanged();
              }
            }
        }
        private int _BatchKey;
        partial void OnGetBatchKey(ref int value);
        partial void OnBatchKeyChanging(ref int value);
        partial void OnBatchKeyChanged();
    
        /// <summary>
        /// There are no comments for CreateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CreateDate
        {
            get
            {
                global::System.DateTime? value = _CreateDate;
                OnGetCreateDate(ref value);
                return value;
            }
            set
            {
                if (_CreateDate != value)
                {
                  OnCreateDateChanging(ref value);
                  ReportPropertyChanging("CreateDate");
                  _CreateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateDate");
                  OnCreateDateChanged();
              }
            }
        }
        private global::System.DateTime? _CreateDate;
        partial void OnGetCreateDate(ref global::System.DateTime? value);
        partial void OnCreateDateChanging(ref global::System.DateTime? value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// There are no comments for CreateType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CreateType
        {
            get
            {
                short value = _CreateType;
                OnGetCreateType(ref value);
                return value;
            }
            set
            {
                if (_CreateType != value)
                {
                  OnCreateTypeChanging(ref value);
                  ReportPropertyChanging("CreateType");
                  _CreateType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateType");
                  OnCreateTypeChanged();
              }
            }
        }
        private short _CreateType = 0;
        partial void OnGetCreateType(ref short value);
        partial void OnCreateTypeChanging(ref short value);
        partial void OnCreateTypeChanged();
    
        /// <summary>
        /// There are no comments for CreateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CreateUserID
        {
            get
            {
                string value = _CreateUserID;
                OnGetCreateUserID(ref value);
                return value;
            }
            set
            {
                if (_CreateUserID != value)
                {
                  OnCreateUserIDChanging(ref value);
                  ReportPropertyChanging("CreateUserID");
                  _CreateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CreateUserID");
                  OnCreateUserIDChanged();
              }
            }
        }
        private string _CreateUserID;
        partial void OnGetCreateUserID(ref string value);
        partial void OnCreateUserIDChanging(ref string value);
        partial void OnCreateUserIDChanged();
    
        /// <summary>
        /// There are no comments for CurrExchRate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual double CurrExchRate
        {
            get
            {
                double value = _CurrExchRate;
                OnGetCurrExchRate(ref value);
                return value;
            }
            set
            {
                if (_CurrExchRate != value)
                {
                  OnCurrExchRateChanging(ref value);
                  ReportPropertyChanging("CurrExchRate");
                  _CurrExchRate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CurrExchRate");
                  OnCurrExchRateChanged();
              }
            }
        }
        private double _CurrExchRate = 1;
        partial void OnGetCurrExchRate(ref double value);
        partial void OnCurrExchRateChanging(ref double value);
        partial void OnCurrExchRateChanged();
    
        /// <summary>
        /// There are no comments for CurrExchSchdKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CurrExchSchdKey
        {
            get
            {
                int? value = _CurrExchSchdKey;
                OnGetCurrExchSchdKey(ref value);
                return value;
            }
            set
            {
                if (_CurrExchSchdKey != value)
                {
                  OnCurrExchSchdKeyChanging(ref value);
                  ReportPropertyChanging("CurrExchSchdKey");
                  _CurrExchSchdKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CurrExchSchdKey");
                  OnCurrExchSchdKeyChanged();
              }
            }
        }
        private int? _CurrExchSchdKey;
        partial void OnGetCurrExchSchdKey(ref int? value);
        partial void OnCurrExchSchdKeyChanging(ref int? value);
        partial void OnCurrExchSchdKeyChanged();
    
        /// <summary>
        /// There are no comments for CurrID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CurrID
        {
            get
            {
                string value = _CurrID;
                OnGetCurrID(ref value);
                return value;
            }
            set
            {
                if (_CurrID != value)
                {
                  OnCurrIDChanging(ref value);
                  ReportPropertyChanging("CurrID");
                  _CurrID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CurrID");
                  OnCurrIDChanged();
              }
            }
        }
        private string _CurrID;
        partial void OnGetCurrID(ref string value);
        partial void OnCurrIDChanging(ref string value);
        partial void OnCurrIDChanged();
    
        /// <summary>
        /// There are no comments for CustClassKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CustClassKey
        {
            get
            {
                int? value = _CustClassKey;
                OnGetCustClassKey(ref value);
                return value;
            }
            set
            {
                if (_CustClassKey != value)
                {
                  OnCustClassKeyChanging(ref value);
                  ReportPropertyChanging("CustClassKey");
                  _CustClassKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustClassKey");
                  OnCustClassKeyChanged();
              }
            }
        }
        private int? _CustClassKey;
        partial void OnGetCustClassKey(ref int? value);
        partial void OnCustClassKeyChanging(ref int? value);
        partial void OnCustClassKeyChanged();
    
        /// <summary>
        /// There are no comments for CustKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? CustKey
        {
            get
            {
                int? value = _CustKey;
                OnGetCustKey(ref value);
                return value;
            }
            set
            {
                if (_CustKey != value)
                {
                  OnCustKeyChanging(ref value);
                  ReportPropertyChanging("CustKey");
                  _CustKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustKey");
                  OnCustKeyChanged();
              }
            }
        }
        private int? _CustKey;
        partial void OnGetCustKey(ref int? value);
        partial void OnCustKeyChanging(ref int? value);
        partial void OnCustKeyChanged();
    
        /// <summary>
        /// There are no comments for DiscTakenAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal DiscTakenAmt
        {
            get
            {
                decimal value = _DiscTakenAmt;
                OnGetDiscTakenAmt(ref value);
                return value;
            }
            set
            {
                if (_DiscTakenAmt != value)
                {
                  OnDiscTakenAmtChanging(ref value);
                  ReportPropertyChanging("DiscTakenAmt");
                  _DiscTakenAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DiscTakenAmt");
                  OnDiscTakenAmtChanged();
              }
            }
        }
        private decimal _DiscTakenAmt = 0m;
        partial void OnGetDiscTakenAmt(ref decimal value);
        partial void OnDiscTakenAmtChanging(ref decimal value);
        partial void OnDiscTakenAmtChanged();
    
        /// <summary>
        /// There are no comments for GuarntdExchRate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short GuarntdExchRate
        {
            get
            {
                short value = _GuarntdExchRate;
                OnGetGuarntdExchRate(ref value);
                return value;
            }
            set
            {
                if (_GuarntdExchRate != value)
                {
                  OnGuarntdExchRateChanging(ref value);
                  ReportPropertyChanging("GuarntdExchRate");
                  _GuarntdExchRate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("GuarntdExchRate");
                  OnGuarntdExchRateChanged();
              }
            }
        }
        private short _GuarntdExchRate = 0;
        partial void OnGetGuarntdExchRate(ref short value);
        partial void OnGuarntdExchRateChanging(ref short value);
        partial void OnGuarntdExchRateChanged();
    
        /// <summary>
        /// There are no comments for ManualChk in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ManualChk
        {
            get
            {
                short value = _ManualChk;
                OnGetManualChk(ref value);
                return value;
            }
            set
            {
                if (_ManualChk != value)
                {
                  OnManualChkChanging(ref value);
                  ReportPropertyChanging("ManualChk");
                  _ManualChk = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ManualChk");
                  OnManualChkChanged();
              }
            }
        }
        private short _ManualChk = 0;
        partial void OnGetManualChk(ref short value);
        partial void OnManualChkChanging(ref short value);
        partial void OnManualChkChanged();
    
        /// <summary>
        /// There are no comments for PmtRcptDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? PmtRcptDate
        {
            get
            {
                global::System.DateTime? value = _PmtRcptDate;
                OnGetPmtRcptDate(ref value);
                return value;
            }
            set
            {
                if (_PmtRcptDate != value)
                {
                  OnPmtRcptDateChanging(ref value);
                  ReportPropertyChanging("PmtRcptDate");
                  _PmtRcptDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PmtRcptDate");
                  OnPmtRcptDateChanged();
              }
            }
        }
        private global::System.DateTime? _PmtRcptDate;
        partial void OnGetPmtRcptDate(ref global::System.DateTime? value);
        partial void OnPmtRcptDateChanging(ref global::System.DateTime? value);
        partial void OnPmtRcptDateChanged();
    
        /// <summary>
        /// There are no comments for PrepaidCustInvcNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string PrepaidCustInvcNo
        {
            get
            {
                string value = _PrepaidCustInvcNo;
                OnGetPrepaidCustInvcNo(ref value);
                return value;
            }
            set
            {
                if (_PrepaidCustInvcNo != value)
                {
                  OnPrepaidCustInvcNoChanging(ref value);
                  ReportPropertyChanging("PrepaidCustInvcNo");
                  _PrepaidCustInvcNo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PrepaidCustInvcNo");
                  OnPrepaidCustInvcNoChanged();
              }
            }
        }
        private string _PrepaidCustInvcNo;
        partial void OnGetPrepaidCustInvcNo(ref string value);
        partial void OnPrepaidCustInvcNoChanging(ref string value);
        partial void OnPrepaidCustInvcNoChanged();
    
        /// <summary>
        /// There are no comments for Printed in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short Printed
        {
            get
            {
                short value = _Printed;
                OnGetPrinted(ref value);
                return value;
            }
            set
            {
                if (_Printed != value)
                {
                  OnPrintedChanging(ref value);
                  ReportPropertyChanging("Printed");
                  _Printed = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Printed");
                  OnPrintedChanged();
              }
            }
        }
        private short _Printed = 0;
        partial void OnGetPrinted(ref short value);
        partial void OnPrintedChanging(ref short value);
        partial void OnPrintedChanged();
    
        /// <summary>
        /// There are no comments for RefundCustPmtKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? RefundCustPmtKey
        {
            get
            {
                int? value = _RefundCustPmtKey;
                OnGetRefundCustPmtKey(ref value);
                return value;
            }
            set
            {
                if (_RefundCustPmtKey != value)
                {
                  OnRefundCustPmtKeyChanging(ref value);
                  ReportPropertyChanging("RefundCustPmtKey");
                  _RefundCustPmtKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RefundCustPmtKey");
                  OnRefundCustPmtKeyChanged();
              }
            }
        }
        private int? _RefundCustPmtKey;
        partial void OnGetRefundCustPmtKey(ref int? value);
        partial void OnRefundCustPmtKeyChanging(ref int? value);
        partial void OnRefundCustPmtKeyChanged();
    
        /// <summary>
        /// There are no comments for RevrsCustPmtKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? RevrsCustPmtKey
        {
            get
            {
                int? value = _RevrsCustPmtKey;
                OnGetRevrsCustPmtKey(ref value);
                return value;
            }
            set
            {
                if (_RevrsCustPmtKey != value)
                {
                  OnRevrsCustPmtKeyChanging(ref value);
                  ReportPropertyChanging("RevrsCustPmtKey");
                  _RevrsCustPmtKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RevrsCustPmtKey");
                  OnRevrsCustPmtKeyChanged();
              }
            }
        }
        private int? _RevrsCustPmtKey;
        partial void OnGetRevrsCustPmtKey(ref int? value);
        partial void OnRevrsCustPmtKeyChanging(ref int? value);
        partial void OnRevrsCustPmtKeyChanged();
    
        /// <summary>
        /// There are no comments for SeqNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SeqNo
        {
            get
            {
                int value = _SeqNo;
                OnGetSeqNo(ref value);
                return value;
            }
            set
            {
                if (_SeqNo != value)
                {
                  OnSeqNoChanging(ref value);
                  ReportPropertyChanging("SeqNo");
                  _SeqNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SeqNo");
                  OnSeqNoChanged();
              }
            }
        }
        private int _SeqNo;
        partial void OnGetSeqNo(ref int value);
        partial void OnSeqNoChanging(ref int value);
        partial void OnSeqNoChanged();
    
        /// <summary>
        /// There are no comments for TranAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal TranAmt
        {
            get
            {
                decimal value = _TranAmt;
                OnGetTranAmt(ref value);
                return value;
            }
            set
            {
                if (_TranAmt != value)
                {
                  OnTranAmtChanging(ref value);
                  ReportPropertyChanging("TranAmt");
                  _TranAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranAmt");
                  OnTranAmtChanged();
              }
            }
        }
        private decimal _TranAmt = 0m;
        partial void OnGetTranAmt(ref decimal value);
        partial void OnTranAmtChanging(ref decimal value);
        partial void OnTranAmtChanged();
    
        /// <summary>
        /// There are no comments for TranAmtHC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal TranAmtHC
        {
            get
            {
                decimal value = _TranAmtHC;
                OnGetTranAmtHC(ref value);
                return value;
            }
            set
            {
                if (_TranAmtHC != value)
                {
                  OnTranAmtHCChanging(ref value);
                  ReportPropertyChanging("TranAmtHC");
                  _TranAmtHC = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranAmtHC");
                  OnTranAmtHCChanged();
              }
            }
        }
        private decimal _TranAmtHC = 0m;
        partial void OnGetTranAmtHC(ref decimal value);
        partial void OnTranAmtHCChanging(ref decimal value);
        partial void OnTranAmtHCChanged();
    
        /// <summary>
        /// There are no comments for TranCmnt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string TranCmnt
        {
            get
            {
                string value = _TranCmnt;
                OnGetTranCmnt(ref value);
                return value;
            }
            set
            {
                if (_TranCmnt != value)
                {
                  OnTranCmntChanging(ref value);
                  ReportPropertyChanging("TranCmnt");
                  _TranCmnt = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TranCmnt");
                  OnTranCmntChanged();
              }
            }
        }
        private string _TranCmnt;
        partial void OnGetTranCmnt(ref string value);
        partial void OnTranCmntChanging(ref string value);
        partial void OnTranCmntChanged();
    
        /// <summary>
        /// There are no comments for TranDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime TranDate
        {
            get
            {
                global::System.DateTime value = _TranDate;
                OnGetTranDate(ref value);
                return value;
            }
            set
            {
                if (_TranDate != value)
                {
                  OnTranDateChanging(ref value);
                  ReportPropertyChanging("TranDate");
                  _TranDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranDate");
                  OnTranDateChanged();
              }
            }
        }
        private global::System.DateTime _TranDate;
        partial void OnGetTranDate(ref global::System.DateTime value);
        partial void OnTranDateChanging(ref global::System.DateTime value);
        partial void OnTranDateChanged();
    
        /// <summary>
        /// There are no comments for TranID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string TranID
        {
            get
            {
                string value = _TranID;
                OnGetTranID(ref value);
                return value;
            }
            set
            {
                if (_TranID != value)
                {
                  OnTranIDChanging(ref value);
                  ReportPropertyChanging("TranID");
                  _TranID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TranID");
                  OnTranIDChanged();
              }
            }
        }
        private string _TranID;
        partial void OnGetTranID(ref string value);
        partial void OnTranIDChanging(ref string value);
        partial void OnTranIDChanged();
    
        /// <summary>
        /// There are no comments for TranNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string TranNo
        {
            get
            {
                string value = _TranNo;
                OnGetTranNo(ref value);
                return value;
            }
            set
            {
                if (_TranNo != value)
                {
                  OnTranNoChanging(ref value);
                  ReportPropertyChanging("TranNo");
                  _TranNo = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TranNo");
                  OnTranNoChanged();
              }
            }
        }
        private string _TranNo;
        partial void OnGetTranNo(ref string value);
        partial void OnTranNoChanging(ref string value);
        partial void OnTranNoChanged();
    
        /// <summary>
        /// There are no comments for TranType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int TranType
        {
            get
            {
                int value = _TranType;
                OnGetTranType(ref value);
                return value;
            }
            set
            {
                if (_TranType != value)
                {
                  OnTranTypeChanging(ref value);
                  ReportPropertyChanging("TranType");
                  _TranType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TranType");
                  OnTranTypeChanged();
              }
            }
        }
        private int _TranType;
        partial void OnGetTranType(ref int value);
        partial void OnTranTypeChanging(ref int value);
        partial void OnTranTypeChanged();
    
        /// <summary>
        /// There are no comments for UnappliedAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal UnappliedAmt
        {
            get
            {
                decimal value = _UnappliedAmt;
                OnGetUnappliedAmt(ref value);
                return value;
            }
            set
            {
                if (_UnappliedAmt != value)
                {
                  OnUnappliedAmtChanging(ref value);
                  ReportPropertyChanging("UnappliedAmt");
                  _UnappliedAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UnappliedAmt");
                  OnUnappliedAmtChanged();
              }
            }
        }
        private decimal _UnappliedAmt = 0m;
        partial void OnGetUnappliedAmt(ref decimal value);
        partial void OnUnappliedAmtChanging(ref decimal value);
        partial void OnUnappliedAmtChanged();
    
        /// <summary>
        /// There are no comments for UnappliedAmtHC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal UnappliedAmtHC
        {
            get
            {
                decimal value = _UnappliedAmtHC;
                OnGetUnappliedAmtHC(ref value);
                return value;
            }
            set
            {
                if (_UnappliedAmtHC != value)
                {
                  OnUnappliedAmtHCChanging(ref value);
                  ReportPropertyChanging("UnappliedAmtHC");
                  _UnappliedAmtHC = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UnappliedAmtHC");
                  OnUnappliedAmtHCChanged();
              }
            }
        }
        private decimal _UnappliedAmtHC = 0m;
        partial void OnGetUnappliedAmtHC(ref decimal value);
        partial void OnUnappliedAmtHCChanging(ref decimal value);
        partial void OnUnappliedAmtHCChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();
    
        /// <summary>
        /// There are no comments for UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? UpdateDate
        {
            get
            {
                global::System.DateTime? value = _UpdateDate;
                OnGetUpdateDate(ref value);
                return value;
            }
            set
            {
                if (_UpdateDate != value)
                {
                  OnUpdateDateChanging(ref value);
                  ReportPropertyChanging("UpdateDate");
                  _UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateDate");
                  OnUpdateDateChanged();
              }
            }
        }
        private global::System.DateTime? _UpdateDate;
        partial void OnGetUpdateDate(ref global::System.DateTime? value);
        partial void OnUpdateDateChanging(ref global::System.DateTime? value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// There are no comments for UpdateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UpdateUserID
        {
            get
            {
                string value = _UpdateUserID;
                OnGetUpdateUserID(ref value);
                return value;
            }
            set
            {
                if (_UpdateUserID != value)
                {
                  OnUpdateUserIDChanging(ref value);
                  ReportPropertyChanging("UpdateUserID");
                  _UpdateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UpdateUserID");
                  OnUpdateUserIDChanged();
              }
            }
        }
        private string _UpdateUserID;
        partial void OnGetUpdateUserID(ref string value);
        partial void OnUpdateUserIDChanging(ref string value);
        partial void OnUpdateUserIDChanged();
    
        /// <summary>
        /// There are no comments for VoidedChk in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short VoidedChk
        {
            get
            {
                short value = _VoidedChk;
                OnGetVoidedChk(ref value);
                return value;
            }
            set
            {
                if (_VoidedChk != value)
                {
                  OnVoidedChkChanging(ref value);
                  ReportPropertyChanging("VoidedChk");
                  _VoidedChk = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VoidedChk");
                  OnVoidedChkChanged();
              }
            }
        }
        private short _VoidedChk = 0;
        partial void OnGetVoidedChk(ref short value);
        partial void OnVoidedChkChanging(ref short value);
        partial void OnVoidedChkChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for CustomerPaymentLog in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Net4Sage.DataAccessModel", "CustomerPaymentLog_PendingCustomerPayment", "CustomerPaymentLog")]
        public virtual CustomerPaymentLog CustomerPaymentLog
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustomerPaymentLog>("Net4Sage.DataAccessModel.CustomerPaymentLog_PendingCustomerPayment", "CustomerPaymentLog").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustomerPaymentLog>("Net4Sage.DataAccessModel.CustomerPaymentLog_PendingCustomerPayment", "CustomerPaymentLog").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for CustomerPaymentLog in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustomerPaymentLog> CustomerPaymentLogReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustomerPaymentLog>("Net4Sage.DataAccessModel.CustomerPaymentLog_PendingCustomerPayment", "CustomerPaymentLog");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<CustomerPaymentLog>("Net4Sage.DataAccessModel.CustomerPaymentLog_PendingCustomerPayment", "CustomerPaymentLog", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<CustomerPaymentLog>("Net4Sage.DataAccessModel.CustomerPaymentLog_PendingCustomerPayment", "CustomerPaymentLog").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.PendingCustomerPaymentAppl in the schema.
    /// </summary>
    /// <KeyProperties>
    /// BatchKey
    /// SeqNo
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="PendingCustomerPaymentAppl")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PendingCustomerPaymentAppl : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new PendingCustomerPaymentAppl object.
        /// </summary>
        /// <param name="batchKey">Initial value of BatchKey.</param>
        /// <param name="seqNo">Initial value of SeqNo.</param>
        /// <param name="appliedAtCreation">Initial value of AppliedAtCreation.</param>
        /// <param name="applyFromTranDate">Initial value of ApplyFromTranDate.</param>
        /// <param name="applyFromTranID">Initial value of ApplyFromTranID.</param>
        /// <param name="applyToTranDate">Initial value of ApplyToTranDate.</param>
        /// <param name="applyToTranID">Initial value of ApplyToTranID.</param>
        /// <param name="currExchRate">Initial value of CurrExchRate.</param>
        /// <param name="discTakenAmt">Initial value of DiscTakenAmt.</param>
        /// <param name="discTakenAmtIC">Initial value of DiscTakenAmtIC.</param>
        /// <param name="pmtAmt">Initial value of PmtAmt.</param>
        /// <param name="pmtAmtIC">Initial value of PmtAmtIC.</param>
        /// <param name="realGainLossAmt">Initial value of RealGainLossAmt.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        /// <param name="writeOffAmt">Initial value of WriteOffAmt.</param>
        /// <param name="writeOffAmtIC">Initial value of WriteOffAmtIC.</param>
        public static PendingCustomerPaymentAppl CreatePendingCustomerPaymentAppl(int batchKey, int seqNo, short appliedAtCreation, global::System.DateTime applyFromTranDate, string applyFromTranID, global::System.DateTime applyToTranDate, string applyToTranID, double currExchRate, decimal discTakenAmt, decimal discTakenAmtIC, decimal pmtAmt, decimal pmtAmtIC, decimal realGainLossAmt, int updateCounter, decimal writeOffAmt, decimal writeOffAmtIC)
        {
            PendingCustomerPaymentAppl pendingCustomerPaymentAppl = new PendingCustomerPaymentAppl();
            pendingCustomerPaymentAppl.BatchKey = batchKey;
            pendingCustomerPaymentAppl.SeqNo = seqNo;
            pendingCustomerPaymentAppl.AppliedAtCreation = appliedAtCreation;
            pendingCustomerPaymentAppl.ApplyFromTranDate = applyFromTranDate;
            pendingCustomerPaymentAppl.ApplyFromTranID = applyFromTranID;
            pendingCustomerPaymentAppl.ApplyToTranDate = applyToTranDate;
            pendingCustomerPaymentAppl.ApplyToTranID = applyToTranID;
            pendingCustomerPaymentAppl.CurrExchRate = currExchRate;
            pendingCustomerPaymentAppl.DiscTakenAmt = discTakenAmt;
            pendingCustomerPaymentAppl.DiscTakenAmtIC = discTakenAmtIC;
            pendingCustomerPaymentAppl.PmtAmt = pmtAmt;
            pendingCustomerPaymentAppl.PmtAmtIC = pmtAmtIC;
            pendingCustomerPaymentAppl.RealGainLossAmt = realGainLossAmt;
            pendingCustomerPaymentAppl.UpdateCounter = updateCounter;
            pendingCustomerPaymentAppl.WriteOffAmt = writeOffAmt;
            pendingCustomerPaymentAppl.WriteOffAmtIC = writeOffAmtIC;
            return pendingCustomerPaymentAppl;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for BatchKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int BatchKey
        {
            get
            {
                int value = _BatchKey;
                OnGetBatchKey(ref value);
                return value;
            }
            set
            {
                if (_BatchKey != value)
                {
                  OnBatchKeyChanging(ref value);
                  ReportPropertyChanging("BatchKey");
                  _BatchKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BatchKey");
                  OnBatchKeyChanged();
              }
            }
        }
        private int _BatchKey;
        partial void OnGetBatchKey(ref int value);
        partial void OnBatchKeyChanging(ref int value);
        partial void OnBatchKeyChanged();
    
        /// <summary>
        /// There are no comments for SeqNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SeqNo
        {
            get
            {
                int value = _SeqNo;
                OnGetSeqNo(ref value);
                return value;
            }
            set
            {
                if (_SeqNo != value)
                {
                  OnSeqNoChanging(ref value);
                  ReportPropertyChanging("SeqNo");
                  _SeqNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SeqNo");
                  OnSeqNoChanged();
              }
            }
        }
        private int _SeqNo;
        partial void OnGetSeqNo(ref int value);
        partial void OnSeqNoChanging(ref int value);
        partial void OnSeqNoChanged();
    
        /// <summary>
        /// There are no comments for AppliedAtCreation in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short AppliedAtCreation
        {
            get
            {
                short value = _AppliedAtCreation;
                OnGetAppliedAtCreation(ref value);
                return value;
            }
            set
            {
                if (_AppliedAtCreation != value)
                {
                  OnAppliedAtCreationChanging(ref value);
                  ReportPropertyChanging("AppliedAtCreation");
                  _AppliedAtCreation = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AppliedAtCreation");
                  OnAppliedAtCreationChanged();
              }
            }
        }
        private short _AppliedAtCreation = 0;
        partial void OnGetAppliedAtCreation(ref short value);
        partial void OnAppliedAtCreationChanging(ref short value);
        partial void OnAppliedAtCreationChanged();
    
        /// <summary>
        /// There are no comments for ApplyFromInvcKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ApplyFromInvcKey
        {
            get
            {
                int? value = _ApplyFromInvcKey;
                OnGetApplyFromInvcKey(ref value);
                return value;
            }
            set
            {
                if (_ApplyFromInvcKey != value)
                {
                  OnApplyFromInvcKeyChanging(ref value);
                  ReportPropertyChanging("ApplyFromInvcKey");
                  _ApplyFromInvcKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ApplyFromInvcKey");
                  OnApplyFromInvcKeyChanged();
              }
            }
        }
        private int? _ApplyFromInvcKey;
        partial void OnGetApplyFromInvcKey(ref int? value);
        partial void OnApplyFromInvcKeyChanging(ref int? value);
        partial void OnApplyFromInvcKeyChanged();
    
        /// <summary>
        /// There are no comments for ApplyFromPmtKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ApplyFromPmtKey
        {
            get
            {
                int? value = _ApplyFromPmtKey;
                OnGetApplyFromPmtKey(ref value);
                return value;
            }
            set
            {
                if (_ApplyFromPmtKey != value)
                {
                  OnApplyFromPmtKeyChanging(ref value);
                  ReportPropertyChanging("ApplyFromPmtKey");
                  _ApplyFromPmtKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ApplyFromPmtKey");
                  OnApplyFromPmtKeyChanged();
              }
            }
        }
        private int? _ApplyFromPmtKey;
        partial void OnGetApplyFromPmtKey(ref int? value);
        partial void OnApplyFromPmtKeyChanging(ref int? value);
        partial void OnApplyFromPmtKeyChanged();
    
        /// <summary>
        /// There are no comments for ApplyFromTranDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime ApplyFromTranDate
        {
            get
            {
                global::System.DateTime value = _ApplyFromTranDate;
                OnGetApplyFromTranDate(ref value);
                return value;
            }
            set
            {
                if (_ApplyFromTranDate != value)
                {
                  OnApplyFromTranDateChanging(ref value);
                  ReportPropertyChanging("ApplyFromTranDate");
                  _ApplyFromTranDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ApplyFromTranDate");
                  OnApplyFromTranDateChanged();
              }
            }
        }
        private global::System.DateTime _ApplyFromTranDate;
        partial void OnGetApplyFromTranDate(ref global::System.DateTime value);
        partial void OnApplyFromTranDateChanging(ref global::System.DateTime value);
        partial void OnApplyFromTranDateChanged();
    
        /// <summary>
        /// There are no comments for ApplyFromTranID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string ApplyFromTranID
        {
            get
            {
                string value = _ApplyFromTranID;
                OnGetApplyFromTranID(ref value);
                return value;
            }
            set
            {
                if (_ApplyFromTranID != value)
                {
                  OnApplyFromTranIDChanging(ref value);
                  ReportPropertyChanging("ApplyFromTranID");
                  _ApplyFromTranID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ApplyFromTranID");
                  OnApplyFromTranIDChanged();
              }
            }
        }
        private string _ApplyFromTranID;
        partial void OnGetApplyFromTranID(ref string value);
        partial void OnApplyFromTranIDChanging(ref string value);
        partial void OnApplyFromTranIDChanged();
    
        /// <summary>
        /// There are no comments for ApplyToInvcKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ApplyToInvcKey
        {
            get
            {
                int? value = _ApplyToInvcKey;
                OnGetApplyToInvcKey(ref value);
                return value;
            }
            set
            {
                if (_ApplyToInvcKey != value)
                {
                  OnApplyToInvcKeyChanging(ref value);
                  ReportPropertyChanging("ApplyToInvcKey");
                  _ApplyToInvcKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ApplyToInvcKey");
                  OnApplyToInvcKeyChanged();
              }
            }
        }
        private int? _ApplyToInvcKey;
        partial void OnGetApplyToInvcKey(ref int? value);
        partial void OnApplyToInvcKeyChanging(ref int? value);
        partial void OnApplyToInvcKeyChanged();
    
        /// <summary>
        /// There are no comments for ApplyToPmtKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ApplyToPmtKey
        {
            get
            {
                int? value = _ApplyToPmtKey;
                OnGetApplyToPmtKey(ref value);
                return value;
            }
            set
            {
                if (_ApplyToPmtKey != value)
                {
                  OnApplyToPmtKeyChanging(ref value);
                  ReportPropertyChanging("ApplyToPmtKey");
                  _ApplyToPmtKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ApplyToPmtKey");
                  OnApplyToPmtKeyChanged();
              }
            }
        }
        private int? _ApplyToPmtKey;
        partial void OnGetApplyToPmtKey(ref int? value);
        partial void OnApplyToPmtKeyChanging(ref int? value);
        partial void OnApplyToPmtKeyChanged();
    
        /// <summary>
        /// There are no comments for ApplyToTranDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime ApplyToTranDate
        {
            get
            {
                global::System.DateTime value = _ApplyToTranDate;
                OnGetApplyToTranDate(ref value);
                return value;
            }
            set
            {
                if (_ApplyToTranDate != value)
                {
                  OnApplyToTranDateChanging(ref value);
                  ReportPropertyChanging("ApplyToTranDate");
                  _ApplyToTranDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ApplyToTranDate");
                  OnApplyToTranDateChanged();
              }
            }
        }
        private global::System.DateTime _ApplyToTranDate;
        partial void OnGetApplyToTranDate(ref global::System.DateTime value);
        partial void OnApplyToTranDateChanging(ref global::System.DateTime value);
        partial void OnApplyToTranDateChanged();
    
        /// <summary>
        /// There are no comments for ApplyToTranID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string ApplyToTranID
        {
            get
            {
                string value = _ApplyToTranID;
                OnGetApplyToTranID(ref value);
                return value;
            }
            set
            {
                if (_ApplyToTranID != value)
                {
                  OnApplyToTranIDChanging(ref value);
                  ReportPropertyChanging("ApplyToTranID");
                  _ApplyToTranID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ApplyToTranID");
                  OnApplyToTranIDChanged();
              }
            }
        }
        private string _ApplyToTranID;
        partial void OnGetApplyToTranID(ref string value);
        partial void OnApplyToTranIDChanging(ref string value);
        partial void OnApplyToTranIDChanged();
    
        /// <summary>
        /// There are no comments for CreateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? CreateDate
        {
            get
            {
                global::System.DateTime? value = _CreateDate;
                OnGetCreateDate(ref value);
                return value;
            }
            set
            {
                if (_CreateDate != value)
                {
                  OnCreateDateChanging(ref value);
                  ReportPropertyChanging("CreateDate");
                  _CreateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateDate");
                  OnCreateDateChanged();
              }
            }
        }
        private global::System.DateTime? _CreateDate;
        partial void OnGetCreateDate(ref global::System.DateTime? value);
        partial void OnCreateDateChanging(ref global::System.DateTime? value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// There are no comments for CreateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CreateUserID
        {
            get
            {
                string value = _CreateUserID;
                OnGetCreateUserID(ref value);
                return value;
            }
            set
            {
                if (_CreateUserID != value)
                {
                  OnCreateUserIDChanging(ref value);
                  ReportPropertyChanging("CreateUserID");
                  _CreateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CreateUserID");
                  OnCreateUserIDChanged();
              }
            }
        }
        private string _CreateUserID;
        partial void OnGetCreateUserID(ref string value);
        partial void OnCreateUserIDChanging(ref string value);
        partial void OnCreateUserIDChanged();
    
        /// <summary>
        /// There are no comments for CurrExchRate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual double CurrExchRate
        {
            get
            {
                double value = _CurrExchRate;
                OnGetCurrExchRate(ref value);
                return value;
            }
            set
            {
                if (_CurrExchRate != value)
                {
                  OnCurrExchRateChanging(ref value);
                  ReportPropertyChanging("CurrExchRate");
                  _CurrExchRate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CurrExchRate");
                  OnCurrExchRateChanged();
              }
            }
        }
        private double _CurrExchRate = 1;
        partial void OnGetCurrExchRate(ref double value);
        partial void OnCurrExchRateChanging(ref double value);
        partial void OnCurrExchRateChanged();
    
        /// <summary>
        /// There are no comments for DiscTakenAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal DiscTakenAmt
        {
            get
            {
                decimal value = _DiscTakenAmt;
                OnGetDiscTakenAmt(ref value);
                return value;
            }
            set
            {
                if (_DiscTakenAmt != value)
                {
                  OnDiscTakenAmtChanging(ref value);
                  ReportPropertyChanging("DiscTakenAmt");
                  _DiscTakenAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DiscTakenAmt");
                  OnDiscTakenAmtChanged();
              }
            }
        }
        private decimal _DiscTakenAmt = 0m;
        partial void OnGetDiscTakenAmt(ref decimal value);
        partial void OnDiscTakenAmtChanging(ref decimal value);
        partial void OnDiscTakenAmtChanged();
    
        /// <summary>
        /// There are no comments for DiscTakenAmtIC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal DiscTakenAmtIC
        {
            get
            {
                decimal value = _DiscTakenAmtIC;
                OnGetDiscTakenAmtIC(ref value);
                return value;
            }
            set
            {
                if (_DiscTakenAmtIC != value)
                {
                  OnDiscTakenAmtICChanging(ref value);
                  ReportPropertyChanging("DiscTakenAmtIC");
                  _DiscTakenAmtIC = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DiscTakenAmtIC");
                  OnDiscTakenAmtICChanged();
              }
            }
        }
        private decimal _DiscTakenAmtIC = 0m;
        partial void OnGetDiscTakenAmtIC(ref decimal value);
        partial void OnDiscTakenAmtICChanging(ref decimal value);
        partial void OnDiscTakenAmtICChanged();
    
        /// <summary>
        /// There are no comments for PmtAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal PmtAmt
        {
            get
            {
                decimal value = _PmtAmt;
                OnGetPmtAmt(ref value);
                return value;
            }
            set
            {
                if (_PmtAmt != value)
                {
                  OnPmtAmtChanging(ref value);
                  ReportPropertyChanging("PmtAmt");
                  _PmtAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PmtAmt");
                  OnPmtAmtChanged();
              }
            }
        }
        private decimal _PmtAmt = 0m;
        partial void OnGetPmtAmt(ref decimal value);
        partial void OnPmtAmtChanging(ref decimal value);
        partial void OnPmtAmtChanged();
    
        /// <summary>
        /// There are no comments for PmtAmtIC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal PmtAmtIC
        {
            get
            {
                decimal value = _PmtAmtIC;
                OnGetPmtAmtIC(ref value);
                return value;
            }
            set
            {
                if (_PmtAmtIC != value)
                {
                  OnPmtAmtICChanging(ref value);
                  ReportPropertyChanging("PmtAmtIC");
                  _PmtAmtIC = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PmtAmtIC");
                  OnPmtAmtICChanged();
              }
            }
        }
        private decimal _PmtAmtIC = 0m;
        partial void OnGetPmtAmtIC(ref decimal value);
        partial void OnPmtAmtICChanging(ref decimal value);
        partial void OnPmtAmtICChanged();
    
        /// <summary>
        /// There are no comments for RealGainLossAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal RealGainLossAmt
        {
            get
            {
                decimal value = _RealGainLossAmt;
                OnGetRealGainLossAmt(ref value);
                return value;
            }
            set
            {
                if (_RealGainLossAmt != value)
                {
                  OnRealGainLossAmtChanging(ref value);
                  ReportPropertyChanging("RealGainLossAmt");
                  _RealGainLossAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RealGainLossAmt");
                  OnRealGainLossAmtChanged();
              }
            }
        }
        private decimal _RealGainLossAmt = 0m;
        partial void OnGetRealGainLossAmt(ref decimal value);
        partial void OnRealGainLossAmtChanging(ref decimal value);
        partial void OnRealGainLossAmtChanged();
    
        /// <summary>
        /// There are no comments for RevrsApplBatchKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? RevrsApplBatchKey
        {
            get
            {
                int? value = _RevrsApplBatchKey;
                OnGetRevrsApplBatchKey(ref value);
                return value;
            }
            set
            {
                if (_RevrsApplBatchKey != value)
                {
                  OnRevrsApplBatchKeyChanging(ref value);
                  ReportPropertyChanging("RevrsApplBatchKey");
                  _RevrsApplBatchKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RevrsApplBatchKey");
                  OnRevrsApplBatchKeyChanged();
              }
            }
        }
        private int? _RevrsApplBatchKey;
        partial void OnGetRevrsApplBatchKey(ref int? value);
        partial void OnRevrsApplBatchKeyChanging(ref int? value);
        partial void OnRevrsApplBatchKeyChanged();
    
        /// <summary>
        /// There are no comments for RevrsApplEntryNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? RevrsApplEntryNo
        {
            get
            {
                int? value = _RevrsApplEntryNo;
                OnGetRevrsApplEntryNo(ref value);
                return value;
            }
            set
            {
                if (_RevrsApplEntryNo != value)
                {
                  OnRevrsApplEntryNoChanging(ref value);
                  ReportPropertyChanging("RevrsApplEntryNo");
                  _RevrsApplEntryNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RevrsApplEntryNo");
                  OnRevrsApplEntryNoChanged();
              }
            }
        }
        private int? _RevrsApplEntryNo;
        partial void OnGetRevrsApplEntryNo(ref int? value);
        partial void OnRevrsApplEntryNoChanging(ref int? value);
        partial void OnRevrsApplEntryNoChanged();
    
        /// <summary>
        /// There are no comments for SalesOrderPmtKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? SalesOrderPmtKey
        {
            get
            {
                int? value = _SalesOrderPmtKey;
                OnGetSalesOrderPmtKey(ref value);
                return value;
            }
            set
            {
                if (_SalesOrderPmtKey != value)
                {
                  OnSalesOrderPmtKeyChanging(ref value);
                  ReportPropertyChanging("SalesOrderPmtKey");
                  _SalesOrderPmtKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesOrderPmtKey");
                  OnSalesOrderPmtKeyChanged();
              }
            }
        }
        private int? _SalesOrderPmtKey;
        partial void OnGetSalesOrderPmtKey(ref int? value);
        partial void OnSalesOrderPmtKeyChanging(ref int? value);
        partial void OnSalesOrderPmtKeyChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();
    
        /// <summary>
        /// There are no comments for UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? UpdateDate
        {
            get
            {
                global::System.DateTime? value = _UpdateDate;
                OnGetUpdateDate(ref value);
                return value;
            }
            set
            {
                if (_UpdateDate != value)
                {
                  OnUpdateDateChanging(ref value);
                  ReportPropertyChanging("UpdateDate");
                  _UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateDate");
                  OnUpdateDateChanged();
              }
            }
        }
        private global::System.DateTime? _UpdateDate;
        partial void OnGetUpdateDate(ref global::System.DateTime? value);
        partial void OnUpdateDateChanging(ref global::System.DateTime? value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// There are no comments for UpdateUserID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string UpdateUserID
        {
            get
            {
                string value = _UpdateUserID;
                OnGetUpdateUserID(ref value);
                return value;
            }
            set
            {
                if (_UpdateUserID != value)
                {
                  OnUpdateUserIDChanging(ref value);
                  ReportPropertyChanging("UpdateUserID");
                  _UpdateUserID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UpdateUserID");
                  OnUpdateUserIDChanged();
              }
            }
        }
        private string _UpdateUserID;
        partial void OnGetUpdateUserID(ref string value);
        partial void OnUpdateUserIDChanging(ref string value);
        partial void OnUpdateUserIDChanged();
    
        /// <summary>
        /// There are no comments for WriteOffAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal WriteOffAmt
        {
            get
            {
                decimal value = _WriteOffAmt;
                OnGetWriteOffAmt(ref value);
                return value;
            }
            set
            {
                if (_WriteOffAmt != value)
                {
                  OnWriteOffAmtChanging(ref value);
                  ReportPropertyChanging("WriteOffAmt");
                  _WriteOffAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WriteOffAmt");
                  OnWriteOffAmtChanged();
              }
            }
        }
        private decimal _WriteOffAmt = 0m;
        partial void OnGetWriteOffAmt(ref decimal value);
        partial void OnWriteOffAmtChanging(ref decimal value);
        partial void OnWriteOffAmtChanged();
    
        /// <summary>
        /// There are no comments for WriteOffAmtIC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal WriteOffAmtIC
        {
            get
            {
                decimal value = _WriteOffAmtIC;
                OnGetWriteOffAmtIC(ref value);
                return value;
            }
            set
            {
                if (_WriteOffAmtIC != value)
                {
                  OnWriteOffAmtICChanging(ref value);
                  ReportPropertyChanging("WriteOffAmtIC");
                  _WriteOffAmtIC = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WriteOffAmtIC");
                  OnWriteOffAmtICChanged();
              }
            }
        }
        private decimal _WriteOffAmtIC = 0m;
        partial void OnGetWriteOffAmtIC(ref decimal value);
        partial void OnWriteOffAmtICChanging(ref decimal value);
        partial void OnWriteOffAmtICChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.AROption in the schema.
    /// </summary>
    /// <KeyProperties>
    /// CompanyID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="AROption")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AROption : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new AROption object.
        /// </summary>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="ageCat1Amt">Initial value of AgeCat1Amt.</param>
        /// <param name="ageCat2Amt">Initial value of AgeCat2Amt.</param>
        /// <param name="ageCat3Amt">Initial value of AgeCat3Amt.</param>
        /// <param name="ageCat4Amt">Initial value of AgeCat4Amt.</param>
        /// <param name="ageCurntAmt">Initial value of AgeCurntAmt.</param>
        /// <param name="ageFutureAmt">Initial value of AgeFutureAmt.</param>
        /// <param name="ageFromOpt">Initial value of AgeFromOpt.</param>
        /// <param name="ageUnapplTrans">Initial value of AgeUnapplTrans.</param>
        /// <param name="ageUnit">Initial value of AgeUnit.</param>
        /// <param name="allowDuplicateChecks">Initial value of AllowDuplicateChecks.</param>
        /// <param name="allowFuturePerPost">Initial value of AllowFuturePerPost.</param>
        /// <param name="allowInvOverpayment">Initial value of AllowInvOverpayment.</param>
        /// <param name="allowPriorPerPost">Initial value of AllowPriorPerPost.</param>
        /// <param name="allowPrivateBatch">Initial value of AllowPrivateBatch.</param>
        /// <param name="autoCustNo">Initial value of AutoCustNo.</param>
        /// <param name="autoSperNo">Initial value of AutoSperNo.</param>
        /// <param name="batchOvrdCommExp">Initial value of BatchOvrdCommExp.</param>
        /// <param name="batchOvrdCOS">Initial value of BatchOvrdCOS.</param>
        /// <param name="batchOvrdDiscTaken">Initial value of BatchOvrdDiscTaken.</param>
        /// <param name="batchOvrdFinChg">Initial value of BatchOvrdFinChg.</param>
        /// <param name="batchOvrdReturns">Initial value of BatchOvrdReturns.</param>
        /// <param name="batchOvrdSales">Initial value of BatchOvrdSales.</param>
        /// <param name="batchOvrdShip">Initial value of BatchOvrdShip.</param>
        /// <param name="batchOvrdSTax">Initial value of BatchOvrdSTax.</param>
        /// <param name="batchOvrdTradeDisc">Initial value of BatchOvrdTradeDisc.</param>
        /// <param name="batchOvrdWriteOff">Initial value of BatchOvrdWriteOff.</param>
        /// <param name="billingTypeOpt">Initial value of BillingTypeOpt.</param>
        /// <param name="chkCreditLimit">Initial value of ChkCreditLimit.</param>
        /// <param name="classOvrdCOS">Initial value of ClassOvrdCOS.</param>
        /// <param name="classOvrdReturns">Initial value of ClassOvrdReturns.</param>
        /// <param name="classOvrdSales">Initial value of ClassOvrdSales.</param>
        /// <param name="classOvrdShip">Initial value of ClassOvrdShip.</param>
        /// <param name="classOvrdSTax">Initial value of ClassOvrdSTax.</param>
        /// <param name="classOvrdTradeDisc">Initial value of ClassOvrdTradeDisc.</param>
        /// <param name="commDetlRetnt">Initial value of CommDetlRetnt.</param>
        /// <param name="commOnPaidOnly">Initial value of CommOnPaidOnly.</param>
        /// <param name="commPmtRetnt">Initial value of CommPmtRetnt.</param>
        /// <param name="curntFiscPer">Initial value of CurntFiscPer.</param>
        /// <param name="curntFiscYear">Initial value of CurntFiscYear.</param>
        /// <param name="finChgDfltFlatAmt">Initial value of FinChgDfltFlatAmt.</param>
        /// <param name="finChgMinAmt">Initial value of FinChgMinAmt.</param>
        /// <param name="finChgExclFinChg">Initial value of FinChgExclFinChg.</param>
        /// <param name="finChgMinBal">Initial value of FinChgMinBal.</param>
        /// <param name="gLPostRgstrFormat">Initial value of GLPostRgstrFormat.</param>
        /// <param name="inactiveCustRetnt">Initial value of InactiveCustRetnt.</param>
        /// <param name="inclTradeDiscInSls">Initial value of InclTradeDiscInSls.</param>
        /// <param name="integrateWithAP">Initial value of IntegrateWithAP.</param>
        /// <param name="integrateWithCM">Initial value of IntegrateWithCM.</param>
        /// <param name="integrateWithEDI">Initial value of IntegrateWithEDI.</param>
        /// <param name="integrateWithGL">Initial value of IntegrateWithGL.</param>
        /// <param name="integrateWithPR">Initial value of IntegrateWithPR.</param>
        /// <param name="invcDetlRetnt">Initial value of InvcDetlRetnt.</param>
        /// <param name="invcHdrRetnt">Initial value of InvcHdrRetnt.</param>
        /// <param name="invcNoSize">Initial value of InvcNoSize.</param>
        /// <param name="invcsInAvg">Initial value of InvcsInAvg.</param>
        /// <param name="maintAuditAdd">Initial value of MaintAuditAdd.</param>
        /// <param name="maintAuditChange">Initial value of MaintAuditChange.</param>
        /// <param name="maintAuditDelete">Initial value of MaintAuditDelete.</param>
        /// <param name="maintAuditRetnt">Initial value of MaintAuditRetnt.</param>
        /// <param name="maxRefundAmt">Initial value of MaxRefundAmt.</param>
        /// <param name="maxWriteOffLimit">Initial value of MaxWriteOffLimit.</param>
        /// <param name="nextCustID">Initial value of NextCustID.</param>
        /// <param name="nextSperID">Initial value of NextSperID.</param>
        /// <param name="noOfFuturePer">Initial value of NoOfFuturePer.</param>
        /// <param name="pmtRetnt">Initial value of PmtRetnt.</param>
        /// <param name="postCOStoGL">Initial value of PostCOStoGL.</param>
        /// <param name="postInDetlAcctRec">Initial value of PostInDetlAcctRec.</param>
        /// <param name="postInDetlBadDebt">Initial value of PostInDetlBadDebt.</param>
        /// <param name="postInDetlCash">Initial value of PostInDetlCash.</param>
        /// <param name="postInDetlCommExp">Initial value of PostInDetlCommExp.</param>
        /// <param name="postInDetlCommPay">Initial value of PostInDetlCommPay.</param>
        /// <param name="postInDetlCOS">Initial value of PostInDetlCOS.</param>
        /// <param name="postInDetlDiscTkn">Initial value of PostInDetlDiscTkn.</param>
        /// <param name="postInDetlDropShip">Initial value of PostInDetlDropShip.</param>
        /// <param name="postInDetlFinChg">Initial value of PostInDetlFinChg.</param>
        /// <param name="postInDetlSales">Initial value of PostInDetlSales.</param>
        /// <param name="postInDetlSalesClr">Initial value of PostInDetlSalesClr.</param>
        /// <param name="postInDetlShip">Initial value of PostInDetlShip.</param>
        /// <param name="postInDetlSTax">Initial value of PostInDetlSTax.</param>
        /// <param name="postInDetlTradeDsc">Initial value of PostInDetlTradeDsc.</param>
        /// <param name="postInDetlWritOff">Initial value of PostInDetlWritOff.</param>
        /// <param name="postQtyToGL">Initial value of PostQtyToGL.</param>
        /// <param name="printInvcs">Initial value of PrintInvcs.</param>
        /// <param name="printStmts">Initial value of PrintStmts.</param>
        /// <param name="recentPmtDays">Initial value of RecentPmtDays.</param>
        /// <param name="salesAcctDfltPrecedence">Initial value of SalesAcctDfltPrecedence.</param>
        /// <param name="sameNoRangeForMemo">Initial value of SameNoRangeForMemo.</param>
        /// <param name="trackDelInvc">Initial value of TrackDelInvc.</param>
        /// <param name="trackRetntRecvbl">Initial value of TrackRetntRecvbl.</param>
        /// <param name="trackSTaxOnSales">Initial value of TrackSTaxOnSales.</param>
        /// <param name="unlockAllFuturePer">Initial value of UnlockAllFuturePer.</param>
        /// <param name="updateCounter">Initial value of UpdateCounter.</param>
        /// <param name="useMultCurr">Initial value of UseMultCurr.</param>
        /// <param name="useNationalAccts">Initial value of UseNationalAccts.</param>
        /// <param name="useSper">Initial value of UseSper.</param>
        /// <param name="warnForUnapplPmt">Initial value of WarnForUnapplPmt.</param>
        public static AROption CreateAROption(string companyID, decimal ageCat1Amt, decimal ageCat2Amt, decimal ageCat3Amt, decimal ageCat4Amt, decimal ageCurntAmt, decimal ageFutureAmt, short ageFromOpt, short ageUnapplTrans, short ageUnit, short allowDuplicateChecks, short allowFuturePerPost, short allowInvOverpayment, short allowPriorPerPost, short allowPrivateBatch, short autoCustNo, short autoSperNo, short batchOvrdCommExp, short batchOvrdCOS, short batchOvrdDiscTaken, short batchOvrdFinChg, short batchOvrdReturns, short batchOvrdSales, short batchOvrdShip, short batchOvrdSTax, short batchOvrdTradeDisc, short batchOvrdWriteOff, short billingTypeOpt, short chkCreditLimit, short classOvrdCOS, short classOvrdReturns, short classOvrdSales, short classOvrdShip, short classOvrdSTax, short classOvrdTradeDisc, short commDetlRetnt, short commOnPaidOnly, short commPmtRetnt, short curntFiscPer, string curntFiscYear, decimal finChgDfltFlatAmt, decimal finChgMinAmt, short finChgExclFinChg, decimal finChgMinBal, short gLPostRgstrFormat, short inactiveCustRetnt, short inclTradeDiscInSls, short integrateWithAP, short integrateWithCM, short integrateWithEDI, short integrateWithGL, short integrateWithPR, short invcDetlRetnt, short invcHdrRetnt, short invcNoSize, short invcsInAvg, short maintAuditAdd, short maintAuditChange, short maintAuditDelete, short maintAuditRetnt, decimal maxRefundAmt, decimal maxWriteOffLimit, int nextCustID, int nextSperID, short noOfFuturePer, short pmtRetnt, short postCOStoGL, short postInDetlAcctRec, short postInDetlBadDebt, short postInDetlCash, short postInDetlCommExp, short postInDetlCommPay, short postInDetlCOS, short postInDetlDiscTkn, short postInDetlDropShip, short postInDetlFinChg, short postInDetlSales, short postInDetlSalesClr, short postInDetlShip, short postInDetlSTax, short postInDetlTradeDsc, short postInDetlWritOff, short postQtyToGL, short printInvcs, short printStmts, short recentPmtDays, short salesAcctDfltPrecedence, short sameNoRangeForMemo, short trackDelInvc, short trackRetntRecvbl, short trackSTaxOnSales, short unlockAllFuturePer, int updateCounter, short useMultCurr, short useNationalAccts, short useSper, short warnForUnapplPmt)
        {
            AROption aROption = new AROption();
            aROption.CompanyID = companyID;
            aROption.AgeCat1Amt = ageCat1Amt;
            aROption.AgeCat2Amt = ageCat2Amt;
            aROption.AgeCat3Amt = ageCat3Amt;
            aROption.AgeCat4Amt = ageCat4Amt;
            aROption.AgeCurntAmt = ageCurntAmt;
            aROption.AgeFutureAmt = ageFutureAmt;
            aROption.AgeFromOpt = ageFromOpt;
            aROption.AgeUnapplTrans = ageUnapplTrans;
            aROption.AgeUnit = ageUnit;
            aROption.AllowDuplicateChecks = allowDuplicateChecks;
            aROption.AllowFuturePerPost = allowFuturePerPost;
            aROption.AllowInvOverpayment = allowInvOverpayment;
            aROption.AllowPriorPerPost = allowPriorPerPost;
            aROption.AllowPrivateBatch = allowPrivateBatch;
            aROption.AutoCustNo = autoCustNo;
            aROption.AutoSperNo = autoSperNo;
            aROption.BatchOvrdCommExp = batchOvrdCommExp;
            aROption.BatchOvrdCOS = batchOvrdCOS;
            aROption.BatchOvrdDiscTaken = batchOvrdDiscTaken;
            aROption.BatchOvrdFinChg = batchOvrdFinChg;
            aROption.BatchOvrdReturns = batchOvrdReturns;
            aROption.BatchOvrdSales = batchOvrdSales;
            aROption.BatchOvrdShip = batchOvrdShip;
            aROption.BatchOvrdSTax = batchOvrdSTax;
            aROption.BatchOvrdTradeDisc = batchOvrdTradeDisc;
            aROption.BatchOvrdWriteOff = batchOvrdWriteOff;
            aROption.BillingTypeOpt = billingTypeOpt;
            aROption.ChkCreditLimit = chkCreditLimit;
            aROption.ClassOvrdCOS = classOvrdCOS;
            aROption.ClassOvrdReturns = classOvrdReturns;
            aROption.ClassOvrdSales = classOvrdSales;
            aROption.ClassOvrdShip = classOvrdShip;
            aROption.ClassOvrdSTax = classOvrdSTax;
            aROption.ClassOvrdTradeDisc = classOvrdTradeDisc;
            aROption.CommDetlRetnt = commDetlRetnt;
            aROption.CommOnPaidOnly = commOnPaidOnly;
            aROption.CommPmtRetnt = commPmtRetnt;
            aROption.CurntFiscPer = curntFiscPer;
            aROption.CurntFiscYear = curntFiscYear;
            aROption.FinChgDfltFlatAmt = finChgDfltFlatAmt;
            aROption.FinChgMinAmt = finChgMinAmt;
            aROption.FinChgExclFinChg = finChgExclFinChg;
            aROption.FinChgMinBal = finChgMinBal;
            aROption.GLPostRgstrFormat = gLPostRgstrFormat;
            aROption.InactiveCustRetnt = inactiveCustRetnt;
            aROption.InclTradeDiscInSls = inclTradeDiscInSls;
            aROption.IntegrateWithAP = integrateWithAP;
            aROption.IntegrateWithCM = integrateWithCM;
            aROption.IntegrateWithEDI = integrateWithEDI;
            aROption.IntegrateWithGL = integrateWithGL;
            aROption.IntegrateWithPR = integrateWithPR;
            aROption.InvcDetlRetnt = invcDetlRetnt;
            aROption.InvcHdrRetnt = invcHdrRetnt;
            aROption.InvcNoSize = invcNoSize;
            aROption.InvcsInAvg = invcsInAvg;
            aROption.MaintAuditAdd = maintAuditAdd;
            aROption.MaintAuditChange = maintAuditChange;
            aROption.MaintAuditDelete = maintAuditDelete;
            aROption.MaintAuditRetnt = maintAuditRetnt;
            aROption.MaxRefundAmt = maxRefundAmt;
            aROption.MaxWriteOffLimit = maxWriteOffLimit;
            aROption.NextCustID = nextCustID;
            aROption.NextSperID = nextSperID;
            aROption.NoOfFuturePer = noOfFuturePer;
            aROption.PmtRetnt = pmtRetnt;
            aROption.PostCOStoGL = postCOStoGL;
            aROption.PostInDetlAcctRec = postInDetlAcctRec;
            aROption.PostInDetlBadDebt = postInDetlBadDebt;
            aROption.PostInDetlCash = postInDetlCash;
            aROption.PostInDetlCommExp = postInDetlCommExp;
            aROption.PostInDetlCommPay = postInDetlCommPay;
            aROption.PostInDetlCOS = postInDetlCOS;
            aROption.PostInDetlDiscTkn = postInDetlDiscTkn;
            aROption.PostInDetlDropShip = postInDetlDropShip;
            aROption.PostInDetlFinChg = postInDetlFinChg;
            aROption.PostInDetlSales = postInDetlSales;
            aROption.PostInDetlSalesClr = postInDetlSalesClr;
            aROption.PostInDetlShip = postInDetlShip;
            aROption.PostInDetlSTax = postInDetlSTax;
            aROption.PostInDetlTradeDsc = postInDetlTradeDsc;
            aROption.PostInDetlWritOff = postInDetlWritOff;
            aROption.PostQtyToGL = postQtyToGL;
            aROption.PrintInvcs = printInvcs;
            aROption.PrintStmts = printStmts;
            aROption.RecentPmtDays = recentPmtDays;
            aROption.SalesAcctDfltPrecedence = salesAcctDfltPrecedence;
            aROption.SameNoRangeForMemo = sameNoRangeForMemo;
            aROption.TrackDelInvc = trackDelInvc;
            aROption.TrackRetntRecvbl = trackRetntRecvbl;
            aROption.TrackSTaxOnSales = trackSTaxOnSales;
            aROption.UnlockAllFuturePer = unlockAllFuturePer;
            aROption.UpdateCounter = updateCounter;
            aROption.UseMultCurr = useMultCurr;
            aROption.UseNationalAccts = useNationalAccts;
            aROption.UseSper = useSper;
            aROption.WarnForUnapplPmt = warnForUnapplPmt;
            return aROption;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for CompanyID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CompanyID
        {
            get
            {
                string value = _CompanyID;
                OnGetCompanyID(ref value);
                return value;
            }
            set
            {
                if (_CompanyID != value)
                {
                  OnCompanyIDChanging(ref value);
                  ReportPropertyChanging("CompanyID");
                  _CompanyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyID");
                  OnCompanyIDChanged();
              }
            }
        }
        private string _CompanyID;
        partial void OnGetCompanyID(ref string value);
        partial void OnCompanyIDChanging(ref string value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// There are no comments for AgeCat1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual short? AgeCat1
        {
            get
            {
                short? value = _AgeCat1;
                OnGetAgeCat1(ref value);
                return value;
            }
            set
            {
                if (_AgeCat1 != value)
                {
                  OnAgeCat1Changing(ref value);
                  ReportPropertyChanging("AgeCat1");
                  _AgeCat1 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AgeCat1");
                  OnAgeCat1Changed();
              }
            }
        }
        private short? _AgeCat1 = 30;
        partial void OnGetAgeCat1(ref short? value);
        partial void OnAgeCat1Changing(ref short? value);
        partial void OnAgeCat1Changed();
    
        /// <summary>
        /// There are no comments for AgeCat1Amt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal AgeCat1Amt
        {
            get
            {
                decimal value = _AgeCat1Amt;
                OnGetAgeCat1Amt(ref value);
                return value;
            }
            set
            {
                if (_AgeCat1Amt != value)
                {
                  OnAgeCat1AmtChanging(ref value);
                  ReportPropertyChanging("AgeCat1Amt");
                  _AgeCat1Amt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AgeCat1Amt");
                  OnAgeCat1AmtChanged();
              }
            }
        }
        private decimal _AgeCat1Amt = 0m;
        partial void OnGetAgeCat1Amt(ref decimal value);
        partial void OnAgeCat1AmtChanging(ref decimal value);
        partial void OnAgeCat1AmtChanged();
    
        /// <summary>
        /// There are no comments for AgeCat2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual short? AgeCat2
        {
            get
            {
                short? value = _AgeCat2;
                OnGetAgeCat2(ref value);
                return value;
            }
            set
            {
                if (_AgeCat2 != value)
                {
                  OnAgeCat2Changing(ref value);
                  ReportPropertyChanging("AgeCat2");
                  _AgeCat2 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AgeCat2");
                  OnAgeCat2Changed();
              }
            }
        }
        private short? _AgeCat2 = 60;
        partial void OnGetAgeCat2(ref short? value);
        partial void OnAgeCat2Changing(ref short? value);
        partial void OnAgeCat2Changed();
    
        /// <summary>
        /// There are no comments for AgeCat2Amt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal AgeCat2Amt
        {
            get
            {
                decimal value = _AgeCat2Amt;
                OnGetAgeCat2Amt(ref value);
                return value;
            }
            set
            {
                if (_AgeCat2Amt != value)
                {
                  OnAgeCat2AmtChanging(ref value);
                  ReportPropertyChanging("AgeCat2Amt");
                  _AgeCat2Amt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AgeCat2Amt");
                  OnAgeCat2AmtChanged();
              }
            }
        }
        private decimal _AgeCat2Amt = 0m;
        partial void OnGetAgeCat2Amt(ref decimal value);
        partial void OnAgeCat2AmtChanging(ref decimal value);
        partial void OnAgeCat2AmtChanged();
    
        /// <summary>
        /// There are no comments for AgeCat3 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual short? AgeCat3
        {
            get
            {
                short? value = _AgeCat3;
                OnGetAgeCat3(ref value);
                return value;
            }
            set
            {
                if (_AgeCat3 != value)
                {
                  OnAgeCat3Changing(ref value);
                  ReportPropertyChanging("AgeCat3");
                  _AgeCat3 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AgeCat3");
                  OnAgeCat3Changed();
              }
            }
        }
        private short? _AgeCat3 = 90;
        partial void OnGetAgeCat3(ref short? value);
        partial void OnAgeCat3Changing(ref short? value);
        partial void OnAgeCat3Changed();
    
        /// <summary>
        /// There are no comments for AgeCat3Amt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal AgeCat3Amt
        {
            get
            {
                decimal value = _AgeCat3Amt;
                OnGetAgeCat3Amt(ref value);
                return value;
            }
            set
            {
                if (_AgeCat3Amt != value)
                {
                  OnAgeCat3AmtChanging(ref value);
                  ReportPropertyChanging("AgeCat3Amt");
                  _AgeCat3Amt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AgeCat3Amt");
                  OnAgeCat3AmtChanged();
              }
            }
        }
        private decimal _AgeCat3Amt = 0m;
        partial void OnGetAgeCat3Amt(ref decimal value);
        partial void OnAgeCat3AmtChanging(ref decimal value);
        partial void OnAgeCat3AmtChanged();
    
        /// <summary>
        /// There are no comments for AgeCat4 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual short? AgeCat4
        {
            get
            {
                short? value = _AgeCat4;
                OnGetAgeCat4(ref value);
                return value;
            }
            set
            {
                if (_AgeCat4 != value)
                {
                  OnAgeCat4Changing(ref value);
                  ReportPropertyChanging("AgeCat4");
                  _AgeCat4 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AgeCat4");
                  OnAgeCat4Changed();
              }
            }
        }
        private short? _AgeCat4 = 120;
        partial void OnGetAgeCat4(ref short? value);
        partial void OnAgeCat4Changing(ref short? value);
        partial void OnAgeCat4Changed();
    
        /// <summary>
        /// There are no comments for AgeCat4Amt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal AgeCat4Amt
        {
            get
            {
                decimal value = _AgeCat4Amt;
                OnGetAgeCat4Amt(ref value);
                return value;
            }
            set
            {
                if (_AgeCat4Amt != value)
                {
                  OnAgeCat4AmtChanging(ref value);
                  ReportPropertyChanging("AgeCat4Amt");
                  _AgeCat4Amt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AgeCat4Amt");
                  OnAgeCat4AmtChanged();
              }
            }
        }
        private decimal _AgeCat4Amt = 0m;
        partial void OnGetAgeCat4Amt(ref decimal value);
        partial void OnAgeCat4AmtChanging(ref decimal value);
        partial void OnAgeCat4AmtChanged();
    
        /// <summary>
        /// There are no comments for AgeCurntAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal AgeCurntAmt
        {
            get
            {
                decimal value = _AgeCurntAmt;
                OnGetAgeCurntAmt(ref value);
                return value;
            }
            set
            {
                if (_AgeCurntAmt != value)
                {
                  OnAgeCurntAmtChanging(ref value);
                  ReportPropertyChanging("AgeCurntAmt");
                  _AgeCurntAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AgeCurntAmt");
                  OnAgeCurntAmtChanged();
              }
            }
        }
        private decimal _AgeCurntAmt = 0m;
        partial void OnGetAgeCurntAmt(ref decimal value);
        partial void OnAgeCurntAmtChanging(ref decimal value);
        partial void OnAgeCurntAmtChanged();
    
        /// <summary>
        /// There are no comments for AgeDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? AgeDate
        {
            get
            {
                global::System.DateTime? value = _AgeDate;
                OnGetAgeDate(ref value);
                return value;
            }
            set
            {
                if (_AgeDate != value)
                {
                  OnAgeDateChanging(ref value);
                  ReportPropertyChanging("AgeDate");
                  _AgeDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AgeDate");
                  OnAgeDateChanged();
              }
            }
        }
        private global::System.DateTime? _AgeDate;
        partial void OnGetAgeDate(ref global::System.DateTime? value);
        partial void OnAgeDateChanging(ref global::System.DateTime? value);
        partial void OnAgeDateChanged();
    
        /// <summary>
        /// There are no comments for AgeFutureAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal AgeFutureAmt
        {
            get
            {
                decimal value = _AgeFutureAmt;
                OnGetAgeFutureAmt(ref value);
                return value;
            }
            set
            {
                if (_AgeFutureAmt != value)
                {
                  OnAgeFutureAmtChanging(ref value);
                  ReportPropertyChanging("AgeFutureAmt");
                  _AgeFutureAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AgeFutureAmt");
                  OnAgeFutureAmtChanged();
              }
            }
        }
        private decimal _AgeFutureAmt = 0m;
        partial void OnGetAgeFutureAmt(ref decimal value);
        partial void OnAgeFutureAmtChanging(ref decimal value);
        partial void OnAgeFutureAmtChanged();
    
        /// <summary>
        /// There are no comments for AgeFromOpt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short AgeFromOpt
        {
            get
            {
                short value = _AgeFromOpt;
                OnGetAgeFromOpt(ref value);
                return value;
            }
            set
            {
                if (_AgeFromOpt != value)
                {
                  OnAgeFromOptChanging(ref value);
                  ReportPropertyChanging("AgeFromOpt");
                  _AgeFromOpt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AgeFromOpt");
                  OnAgeFromOptChanged();
              }
            }
        }
        private short _AgeFromOpt = 2;
        partial void OnGetAgeFromOpt(ref short value);
        partial void OnAgeFromOptChanging(ref short value);
        partial void OnAgeFromOptChanged();
    
        /// <summary>
        /// There are no comments for AgeUnapplTrans in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short AgeUnapplTrans
        {
            get
            {
                short value = _AgeUnapplTrans;
                OnGetAgeUnapplTrans(ref value);
                return value;
            }
            set
            {
                if (_AgeUnapplTrans != value)
                {
                  OnAgeUnapplTransChanging(ref value);
                  ReportPropertyChanging("AgeUnapplTrans");
                  _AgeUnapplTrans = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AgeUnapplTrans");
                  OnAgeUnapplTransChanged();
              }
            }
        }
        private short _AgeUnapplTrans = 1;
        partial void OnGetAgeUnapplTrans(ref short value);
        partial void OnAgeUnapplTransChanging(ref short value);
        partial void OnAgeUnapplTransChanged();
    
        /// <summary>
        /// There are no comments for AgeUnit in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short AgeUnit
        {
            get
            {
                short value = _AgeUnit;
                OnGetAgeUnit(ref value);
                return value;
            }
            set
            {
                if (_AgeUnit != value)
                {
                  OnAgeUnitChanging(ref value);
                  ReportPropertyChanging("AgeUnit");
                  _AgeUnit = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AgeUnit");
                  OnAgeUnitChanged();
              }
            }
        }
        private short _AgeUnit = 1;
        partial void OnGetAgeUnit(ref short value);
        partial void OnAgeUnitChanging(ref short value);
        partial void OnAgeUnitChanged();
    
        /// <summary>
        /// There are no comments for AllowDuplicateChecks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short AllowDuplicateChecks
        {
            get
            {
                short value = _AllowDuplicateChecks;
                OnGetAllowDuplicateChecks(ref value);
                return value;
            }
            set
            {
                if (_AllowDuplicateChecks != value)
                {
                  OnAllowDuplicateChecksChanging(ref value);
                  ReportPropertyChanging("AllowDuplicateChecks");
                  _AllowDuplicateChecks = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AllowDuplicateChecks");
                  OnAllowDuplicateChecksChanged();
              }
            }
        }
        private short _AllowDuplicateChecks = 0;
        partial void OnGetAllowDuplicateChecks(ref short value);
        partial void OnAllowDuplicateChecksChanging(ref short value);
        partial void OnAllowDuplicateChecksChanged();
    
        /// <summary>
        /// There are no comments for AllowFuturePerPost in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short AllowFuturePerPost
        {
            get
            {
                short value = _AllowFuturePerPost;
                OnGetAllowFuturePerPost(ref value);
                return value;
            }
            set
            {
                if (_AllowFuturePerPost != value)
                {
                  OnAllowFuturePerPostChanging(ref value);
                  ReportPropertyChanging("AllowFuturePerPost");
                  _AllowFuturePerPost = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AllowFuturePerPost");
                  OnAllowFuturePerPostChanged();
              }
            }
        }
        private short _AllowFuturePerPost = 1;
        partial void OnGetAllowFuturePerPost(ref short value);
        partial void OnAllowFuturePerPostChanging(ref short value);
        partial void OnAllowFuturePerPostChanged();
    
        /// <summary>
        /// There are no comments for AllowInvOverpayment in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short AllowInvOverpayment
        {
            get
            {
                short value = _AllowInvOverpayment;
                OnGetAllowInvOverpayment(ref value);
                return value;
            }
            set
            {
                if (_AllowInvOverpayment != value)
                {
                  OnAllowInvOverpaymentChanging(ref value);
                  ReportPropertyChanging("AllowInvOverpayment");
                  _AllowInvOverpayment = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AllowInvOverpayment");
                  OnAllowInvOverpaymentChanged();
              }
            }
        }
        private short _AllowInvOverpayment = 0;
        partial void OnGetAllowInvOverpayment(ref short value);
        partial void OnAllowInvOverpaymentChanging(ref short value);
        partial void OnAllowInvOverpaymentChanged();
    
        /// <summary>
        /// There are no comments for AllowPriorPerPost in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short AllowPriorPerPost
        {
            get
            {
                short value = _AllowPriorPerPost;
                OnGetAllowPriorPerPost(ref value);
                return value;
            }
            set
            {
                if (_AllowPriorPerPost != value)
                {
                  OnAllowPriorPerPostChanging(ref value);
                  ReportPropertyChanging("AllowPriorPerPost");
                  _AllowPriorPerPost = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AllowPriorPerPost");
                  OnAllowPriorPerPostChanged();
              }
            }
        }
        private short _AllowPriorPerPost = 1;
        partial void OnGetAllowPriorPerPost(ref short value);
        partial void OnAllowPriorPerPostChanging(ref short value);
        partial void OnAllowPriorPerPostChanged();
    
        /// <summary>
        /// There are no comments for AllowPrivateBatch in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short AllowPrivateBatch
        {
            get
            {
                short value = _AllowPrivateBatch;
                OnGetAllowPrivateBatch(ref value);
                return value;
            }
            set
            {
                if (_AllowPrivateBatch != value)
                {
                  OnAllowPrivateBatchChanging(ref value);
                  ReportPropertyChanging("AllowPrivateBatch");
                  _AllowPrivateBatch = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AllowPrivateBatch");
                  OnAllowPrivateBatchChanged();
              }
            }
        }
        private short _AllowPrivateBatch = 1;
        partial void OnGetAllowPrivateBatch(ref short value);
        partial void OnAllowPrivateBatchChanging(ref short value);
        partial void OnAllowPrivateBatchChanged();
    
        /// <summary>
        /// There are no comments for AutoCustNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short AutoCustNo
        {
            get
            {
                short value = _AutoCustNo;
                OnGetAutoCustNo(ref value);
                return value;
            }
            set
            {
                if (_AutoCustNo != value)
                {
                  OnAutoCustNoChanging(ref value);
                  ReportPropertyChanging("AutoCustNo");
                  _AutoCustNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AutoCustNo");
                  OnAutoCustNoChanged();
              }
            }
        }
        private short _AutoCustNo = 0;
        partial void OnGetAutoCustNo(ref short value);
        partial void OnAutoCustNoChanging(ref short value);
        partial void OnAutoCustNoChanged();
    
        /// <summary>
        /// There are no comments for AutoCustNoStep in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? AutoCustNoStep
        {
            get
            {
                int? value = _AutoCustNoStep;
                OnGetAutoCustNoStep(ref value);
                return value;
            }
            set
            {
                if (_AutoCustNoStep != value)
                {
                  OnAutoCustNoStepChanging(ref value);
                  ReportPropertyChanging("AutoCustNoStep");
                  _AutoCustNoStep = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AutoCustNoStep");
                  OnAutoCustNoStepChanged();
              }
            }
        }
        private int? _AutoCustNoStep = 1;
        partial void OnGetAutoCustNoStep(ref int? value);
        partial void OnAutoCustNoStepChanging(ref int? value);
        partial void OnAutoCustNoStepChanged();
    
        /// <summary>
        /// There are no comments for AutoSperNo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short AutoSperNo
        {
            get
            {
                short value = _AutoSperNo;
                OnGetAutoSperNo(ref value);
                return value;
            }
            set
            {
                if (_AutoSperNo != value)
                {
                  OnAutoSperNoChanging(ref value);
                  ReportPropertyChanging("AutoSperNo");
                  _AutoSperNo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AutoSperNo");
                  OnAutoSperNoChanged();
              }
            }
        }
        private short _AutoSperNo = 0;
        partial void OnGetAutoSperNo(ref short value);
        partial void OnAutoSperNoChanging(ref short value);
        partial void OnAutoSperNoChanged();
    
        /// <summary>
        /// There are no comments for AutoSperNoStep in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? AutoSperNoStep
        {
            get
            {
                int? value = _AutoSperNoStep;
                OnGetAutoSperNoStep(ref value);
                return value;
            }
            set
            {
                if (_AutoSperNoStep != value)
                {
                  OnAutoSperNoStepChanging(ref value);
                  ReportPropertyChanging("AutoSperNoStep");
                  _AutoSperNoStep = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AutoSperNoStep");
                  OnAutoSperNoStepChanged();
              }
            }
        }
        private int? _AutoSperNoStep = 1;
        partial void OnGetAutoSperNoStep(ref int? value);
        partial void OnAutoSperNoStepChanging(ref int? value);
        partial void OnAutoSperNoStepChanged();
    
        /// <summary>
        /// There are no comments for BatchOvrdCommExp in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short BatchOvrdCommExp
        {
            get
            {
                short value = _BatchOvrdCommExp;
                OnGetBatchOvrdCommExp(ref value);
                return value;
            }
            set
            {
                if (_BatchOvrdCommExp != value)
                {
                  OnBatchOvrdCommExpChanging(ref value);
                  ReportPropertyChanging("BatchOvrdCommExp");
                  _BatchOvrdCommExp = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BatchOvrdCommExp");
                  OnBatchOvrdCommExpChanged();
              }
            }
        }
        private short _BatchOvrdCommExp = 0;
        partial void OnGetBatchOvrdCommExp(ref short value);
        partial void OnBatchOvrdCommExpChanging(ref short value);
        partial void OnBatchOvrdCommExpChanged();
    
        /// <summary>
        /// There are no comments for BatchOvrdCOS in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short BatchOvrdCOS
        {
            get
            {
                short value = _BatchOvrdCOS;
                OnGetBatchOvrdCOS(ref value);
                return value;
            }
            set
            {
                if (_BatchOvrdCOS != value)
                {
                  OnBatchOvrdCOSChanging(ref value);
                  ReportPropertyChanging("BatchOvrdCOS");
                  _BatchOvrdCOS = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BatchOvrdCOS");
                  OnBatchOvrdCOSChanged();
              }
            }
        }
        private short _BatchOvrdCOS = 0;
        partial void OnGetBatchOvrdCOS(ref short value);
        partial void OnBatchOvrdCOSChanging(ref short value);
        partial void OnBatchOvrdCOSChanged();
    
        /// <summary>
        /// There are no comments for BatchOvrdDiscTaken in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short BatchOvrdDiscTaken
        {
            get
            {
                short value = _BatchOvrdDiscTaken;
                OnGetBatchOvrdDiscTaken(ref value);
                return value;
            }
            set
            {
                if (_BatchOvrdDiscTaken != value)
                {
                  OnBatchOvrdDiscTakenChanging(ref value);
                  ReportPropertyChanging("BatchOvrdDiscTaken");
                  _BatchOvrdDiscTaken = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BatchOvrdDiscTaken");
                  OnBatchOvrdDiscTakenChanged();
              }
            }
        }
        private short _BatchOvrdDiscTaken = 0;
        partial void OnGetBatchOvrdDiscTaken(ref short value);
        partial void OnBatchOvrdDiscTakenChanging(ref short value);
        partial void OnBatchOvrdDiscTakenChanged();
    
        /// <summary>
        /// There are no comments for BatchOvrdFinChg in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short BatchOvrdFinChg
        {
            get
            {
                short value = _BatchOvrdFinChg;
                OnGetBatchOvrdFinChg(ref value);
                return value;
            }
            set
            {
                if (_BatchOvrdFinChg != value)
                {
                  OnBatchOvrdFinChgChanging(ref value);
                  ReportPropertyChanging("BatchOvrdFinChg");
                  _BatchOvrdFinChg = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BatchOvrdFinChg");
                  OnBatchOvrdFinChgChanged();
              }
            }
        }
        private short _BatchOvrdFinChg = 0;
        partial void OnGetBatchOvrdFinChg(ref short value);
        partial void OnBatchOvrdFinChgChanging(ref short value);
        partial void OnBatchOvrdFinChgChanged();
    
        /// <summary>
        /// There are no comments for BatchOvrdReturns in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short BatchOvrdReturns
        {
            get
            {
                short value = _BatchOvrdReturns;
                OnGetBatchOvrdReturns(ref value);
                return value;
            }
            set
            {
                if (_BatchOvrdReturns != value)
                {
                  OnBatchOvrdReturnsChanging(ref value);
                  ReportPropertyChanging("BatchOvrdReturns");
                  _BatchOvrdReturns = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BatchOvrdReturns");
                  OnBatchOvrdReturnsChanged();
              }
            }
        }
        private short _BatchOvrdReturns = 0;
        partial void OnGetBatchOvrdReturns(ref short value);
        partial void OnBatchOvrdReturnsChanging(ref short value);
        partial void OnBatchOvrdReturnsChanged();
    
        /// <summary>
        /// There are no comments for BatchOvrdSales in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short BatchOvrdSales
        {
            get
            {
                short value = _BatchOvrdSales;
                OnGetBatchOvrdSales(ref value);
                return value;
            }
            set
            {
                if (_BatchOvrdSales != value)
                {
                  OnBatchOvrdSalesChanging(ref value);
                  ReportPropertyChanging("BatchOvrdSales");
                  _BatchOvrdSales = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BatchOvrdSales");
                  OnBatchOvrdSalesChanged();
              }
            }
        }
        private short _BatchOvrdSales = 0;
        partial void OnGetBatchOvrdSales(ref short value);
        partial void OnBatchOvrdSalesChanging(ref short value);
        partial void OnBatchOvrdSalesChanged();
    
        /// <summary>
        /// There are no comments for BatchOvrdSegKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? BatchOvrdSegKey
        {
            get
            {
                int? value = _BatchOvrdSegKey;
                OnGetBatchOvrdSegKey(ref value);
                return value;
            }
            set
            {
                if (_BatchOvrdSegKey != value)
                {
                  OnBatchOvrdSegKeyChanging(ref value);
                  ReportPropertyChanging("BatchOvrdSegKey");
                  _BatchOvrdSegKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BatchOvrdSegKey");
                  OnBatchOvrdSegKeyChanged();
              }
            }
        }
        private int? _BatchOvrdSegKey;
        partial void OnGetBatchOvrdSegKey(ref int? value);
        partial void OnBatchOvrdSegKeyChanging(ref int? value);
        partial void OnBatchOvrdSegKeyChanged();
    
        /// <summary>
        /// There are no comments for BatchOvrdShip in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short BatchOvrdShip
        {
            get
            {
                short value = _BatchOvrdShip;
                OnGetBatchOvrdShip(ref value);
                return value;
            }
            set
            {
                if (_BatchOvrdShip != value)
                {
                  OnBatchOvrdShipChanging(ref value);
                  ReportPropertyChanging("BatchOvrdShip");
                  _BatchOvrdShip = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BatchOvrdShip");
                  OnBatchOvrdShipChanged();
              }
            }
        }
        private short _BatchOvrdShip = 0;
        partial void OnGetBatchOvrdShip(ref short value);
        partial void OnBatchOvrdShipChanging(ref short value);
        partial void OnBatchOvrdShipChanged();
    
        /// <summary>
        /// There are no comments for BatchOvrdSTax in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short BatchOvrdSTax
        {
            get
            {
                short value = _BatchOvrdSTax;
                OnGetBatchOvrdSTax(ref value);
                return value;
            }
            set
            {
                if (_BatchOvrdSTax != value)
                {
                  OnBatchOvrdSTaxChanging(ref value);
                  ReportPropertyChanging("BatchOvrdSTax");
                  _BatchOvrdSTax = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BatchOvrdSTax");
                  OnBatchOvrdSTaxChanged();
              }
            }
        }
        private short _BatchOvrdSTax = 0;
        partial void OnGetBatchOvrdSTax(ref short value);
        partial void OnBatchOvrdSTaxChanging(ref short value);
        partial void OnBatchOvrdSTaxChanged();
    
        /// <summary>
        /// There are no comments for BatchOvrdTradeDisc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short BatchOvrdTradeDisc
        {
            get
            {
                short value = _BatchOvrdTradeDisc;
                OnGetBatchOvrdTradeDisc(ref value);
                return value;
            }
            set
            {
                if (_BatchOvrdTradeDisc != value)
                {
                  OnBatchOvrdTradeDiscChanging(ref value);
                  ReportPropertyChanging("BatchOvrdTradeDisc");
                  _BatchOvrdTradeDisc = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BatchOvrdTradeDisc");
                  OnBatchOvrdTradeDiscChanged();
              }
            }
        }
        private short _BatchOvrdTradeDisc = 0;
        partial void OnGetBatchOvrdTradeDisc(ref short value);
        partial void OnBatchOvrdTradeDiscChanging(ref short value);
        partial void OnBatchOvrdTradeDiscChanged();
    
        /// <summary>
        /// There are no comments for BatchOvrdWriteOff in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short BatchOvrdWriteOff
        {
            get
            {
                short value = _BatchOvrdWriteOff;
                OnGetBatchOvrdWriteOff(ref value);
                return value;
            }
            set
            {
                if (_BatchOvrdWriteOff != value)
                {
                  OnBatchOvrdWriteOffChanging(ref value);
                  ReportPropertyChanging("BatchOvrdWriteOff");
                  _BatchOvrdWriteOff = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BatchOvrdWriteOff");
                  OnBatchOvrdWriteOffChanged();
              }
            }
        }
        private short _BatchOvrdWriteOff = 0;
        partial void OnGetBatchOvrdWriteOff(ref short value);
        partial void OnBatchOvrdWriteOffChanging(ref short value);
        partial void OnBatchOvrdWriteOffChanged();
    
        /// <summary>
        /// There are no comments for BillingTypeOpt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short BillingTypeOpt
        {
            get
            {
                short value = _BillingTypeOpt;
                OnGetBillingTypeOpt(ref value);
                return value;
            }
            set
            {
                if (_BillingTypeOpt != value)
                {
                  OnBillingTypeOptChanging(ref value);
                  ReportPropertyChanging("BillingTypeOpt");
                  _BillingTypeOpt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BillingTypeOpt");
                  OnBillingTypeOptChanged();
              }
            }
        }
        private short _BillingTypeOpt = 1;
        partial void OnGetBillingTypeOpt(ref short value);
        partial void OnBillingTypeOptChanging(ref short value);
        partial void OnBillingTypeOptChanged();
    
        /// <summary>
        /// There are no comments for ChkCreditLimit in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ChkCreditLimit
        {
            get
            {
                short value = _ChkCreditLimit;
                OnGetChkCreditLimit(ref value);
                return value;
            }
            set
            {
                if (_ChkCreditLimit != value)
                {
                  OnChkCreditLimitChanging(ref value);
                  ReportPropertyChanging("ChkCreditLimit");
                  _ChkCreditLimit = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ChkCreditLimit");
                  OnChkCreditLimitChanged();
              }
            }
        }
        private short _ChkCreditLimit = 0;
        partial void OnGetChkCreditLimit(ref short value);
        partial void OnChkCreditLimitChanging(ref short value);
        partial void OnChkCreditLimitChanged();
    
        /// <summary>
        /// There are no comments for ClassOvrdCOS in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ClassOvrdCOS
        {
            get
            {
                short value = _ClassOvrdCOS;
                OnGetClassOvrdCOS(ref value);
                return value;
            }
            set
            {
                if (_ClassOvrdCOS != value)
                {
                  OnClassOvrdCOSChanging(ref value);
                  ReportPropertyChanging("ClassOvrdCOS");
                  _ClassOvrdCOS = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ClassOvrdCOS");
                  OnClassOvrdCOSChanged();
              }
            }
        }
        private short _ClassOvrdCOS = 0;
        partial void OnGetClassOvrdCOS(ref short value);
        partial void OnClassOvrdCOSChanging(ref short value);
        partial void OnClassOvrdCOSChanged();
    
        /// <summary>
        /// There are no comments for ClassOvrdReturns in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ClassOvrdReturns
        {
            get
            {
                short value = _ClassOvrdReturns;
                OnGetClassOvrdReturns(ref value);
                return value;
            }
            set
            {
                if (_ClassOvrdReturns != value)
                {
                  OnClassOvrdReturnsChanging(ref value);
                  ReportPropertyChanging("ClassOvrdReturns");
                  _ClassOvrdReturns = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ClassOvrdReturns");
                  OnClassOvrdReturnsChanged();
              }
            }
        }
        private short _ClassOvrdReturns = 0;
        partial void OnGetClassOvrdReturns(ref short value);
        partial void OnClassOvrdReturnsChanging(ref short value);
        partial void OnClassOvrdReturnsChanged();
    
        /// <summary>
        /// There are no comments for ClassOvrdSales in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ClassOvrdSales
        {
            get
            {
                short value = _ClassOvrdSales;
                OnGetClassOvrdSales(ref value);
                return value;
            }
            set
            {
                if (_ClassOvrdSales != value)
                {
                  OnClassOvrdSalesChanging(ref value);
                  ReportPropertyChanging("ClassOvrdSales");
                  _ClassOvrdSales = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ClassOvrdSales");
                  OnClassOvrdSalesChanged();
              }
            }
        }
        private short _ClassOvrdSales = 0;
        partial void OnGetClassOvrdSales(ref short value);
        partial void OnClassOvrdSalesChanging(ref short value);
        partial void OnClassOvrdSalesChanged();
    
        /// <summary>
        /// There are no comments for ClassOvrdSegKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? ClassOvrdSegKey
        {
            get
            {
                int? value = _ClassOvrdSegKey;
                OnGetClassOvrdSegKey(ref value);
                return value;
            }
            set
            {
                if (_ClassOvrdSegKey != value)
                {
                  OnClassOvrdSegKeyChanging(ref value);
                  ReportPropertyChanging("ClassOvrdSegKey");
                  _ClassOvrdSegKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ClassOvrdSegKey");
                  OnClassOvrdSegKeyChanged();
              }
            }
        }
        private int? _ClassOvrdSegKey;
        partial void OnGetClassOvrdSegKey(ref int? value);
        partial void OnClassOvrdSegKeyChanging(ref int? value);
        partial void OnClassOvrdSegKeyChanged();
    
        /// <summary>
        /// There are no comments for ClassOvrdShip in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ClassOvrdShip
        {
            get
            {
                short value = _ClassOvrdShip;
                OnGetClassOvrdShip(ref value);
                return value;
            }
            set
            {
                if (_ClassOvrdShip != value)
                {
                  OnClassOvrdShipChanging(ref value);
                  ReportPropertyChanging("ClassOvrdShip");
                  _ClassOvrdShip = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ClassOvrdShip");
                  OnClassOvrdShipChanged();
              }
            }
        }
        private short _ClassOvrdShip = 0;
        partial void OnGetClassOvrdShip(ref short value);
        partial void OnClassOvrdShipChanging(ref short value);
        partial void OnClassOvrdShipChanged();
    
        /// <summary>
        /// There are no comments for ClassOvrdSTax in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ClassOvrdSTax
        {
            get
            {
                short value = _ClassOvrdSTax;
                OnGetClassOvrdSTax(ref value);
                return value;
            }
            set
            {
                if (_ClassOvrdSTax != value)
                {
                  OnClassOvrdSTaxChanging(ref value);
                  ReportPropertyChanging("ClassOvrdSTax");
                  _ClassOvrdSTax = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ClassOvrdSTax");
                  OnClassOvrdSTaxChanged();
              }
            }
        }
        private short _ClassOvrdSTax = 0;
        partial void OnGetClassOvrdSTax(ref short value);
        partial void OnClassOvrdSTaxChanging(ref short value);
        partial void OnClassOvrdSTaxChanged();
    
        /// <summary>
        /// There are no comments for ClassOvrdTradeDisc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short ClassOvrdTradeDisc
        {
            get
            {
                short value = _ClassOvrdTradeDisc;
                OnGetClassOvrdTradeDisc(ref value);
                return value;
            }
            set
            {
                if (_ClassOvrdTradeDisc != value)
                {
                  OnClassOvrdTradeDiscChanging(ref value);
                  ReportPropertyChanging("ClassOvrdTradeDisc");
                  _ClassOvrdTradeDisc = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ClassOvrdTradeDisc");
                  OnClassOvrdTradeDiscChanged();
              }
            }
        }
        private short _ClassOvrdTradeDisc = 0;
        partial void OnGetClassOvrdTradeDisc(ref short value);
        partial void OnClassOvrdTradeDiscChanging(ref short value);
        partial void OnClassOvrdTradeDiscChanged();
    
        /// <summary>
        /// There are no comments for CommDetlRetnt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CommDetlRetnt
        {
            get
            {
                short value = _CommDetlRetnt;
                OnGetCommDetlRetnt(ref value);
                return value;
            }
            set
            {
                if (_CommDetlRetnt != value)
                {
                  OnCommDetlRetntChanging(ref value);
                  ReportPropertyChanging("CommDetlRetnt");
                  _CommDetlRetnt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CommDetlRetnt");
                  OnCommDetlRetntChanged();
              }
            }
        }
        private short _CommDetlRetnt = 24;
        partial void OnGetCommDetlRetnt(ref short value);
        partial void OnCommDetlRetntChanging(ref short value);
        partial void OnCommDetlRetntChanged();
    
        /// <summary>
        /// There are no comments for CommExpOpt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual short? CommExpOpt
        {
            get
            {
                short? value = _CommExpOpt;
                OnGetCommExpOpt(ref value);
                return value;
            }
            set
            {
                if (_CommExpOpt != value)
                {
                  OnCommExpOptChanging(ref value);
                  ReportPropertyChanging("CommExpOpt");
                  _CommExpOpt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CommExpOpt");
                  OnCommExpOptChanged();
              }
            }
        }
        private short? _CommExpOpt = 1;
        partial void OnGetCommExpOpt(ref short? value);
        partial void OnCommExpOptChanging(ref short? value);
        partial void OnCommExpOptChanged();
    
        /// <summary>
        /// There are no comments for CommOnPaidOnly in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CommOnPaidOnly
        {
            get
            {
                short value = _CommOnPaidOnly;
                OnGetCommOnPaidOnly(ref value);
                return value;
            }
            set
            {
                if (_CommOnPaidOnly != value)
                {
                  OnCommOnPaidOnlyChanging(ref value);
                  ReportPropertyChanging("CommOnPaidOnly");
                  _CommOnPaidOnly = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CommOnPaidOnly");
                  OnCommOnPaidOnlyChanged();
              }
            }
        }
        private short _CommOnPaidOnly = 0;
        partial void OnGetCommOnPaidOnly(ref short value);
        partial void OnCommOnPaidOnlyChanging(ref short value);
        partial void OnCommOnPaidOnlyChanged();
    
        /// <summary>
        /// There are no comments for CommPmtRetnt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CommPmtRetnt
        {
            get
            {
                short value = _CommPmtRetnt;
                OnGetCommPmtRetnt(ref value);
                return value;
            }
            set
            {
                if (_CommPmtRetnt != value)
                {
                  OnCommPmtRetntChanging(ref value);
                  ReportPropertyChanging("CommPmtRetnt");
                  _CommPmtRetnt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CommPmtRetnt");
                  OnCommPmtRetntChanged();
              }
            }
        }
        private short _CommPmtRetnt = 24;
        partial void OnGetCommPmtRetnt(ref short value);
        partial void OnCommPmtRetntChanging(ref short value);
        partial void OnCommPmtRetntChanged();
    
        /// <summary>
        /// There are no comments for CreditMgrEMailAddr in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CreditMgrEMailAddr
        {
            get
            {
                string value = _CreditMgrEMailAddr;
                OnGetCreditMgrEMailAddr(ref value);
                return value;
            }
            set
            {
                if (_CreditMgrEMailAddr != value)
                {
                  OnCreditMgrEMailAddrChanging(ref value);
                  ReportPropertyChanging("CreditMgrEMailAddr");
                  _CreditMgrEMailAddr = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CreditMgrEMailAddr");
                  OnCreditMgrEMailAddrChanged();
              }
            }
        }
        private string _CreditMgrEMailAddr;
        partial void OnGetCreditMgrEMailAddr(ref string value);
        partial void OnCreditMgrEMailAddrChanging(ref string value);
        partial void OnCreditMgrEMailAddrChanged();
    
        /// <summary>
        /// There are no comments for CreditMgrMailbox in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string CreditMgrMailbox
        {
            get
            {
                string value = _CreditMgrMailbox;
                OnGetCreditMgrMailbox(ref value);
                return value;
            }
            set
            {
                if (_CreditMgrMailbox != value)
                {
                  OnCreditMgrMailboxChanging(ref value);
                  ReportPropertyChanging("CreditMgrMailbox");
                  _CreditMgrMailbox = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CreditMgrMailbox");
                  OnCreditMgrMailboxChanged();
              }
            }
        }
        private string _CreditMgrMailbox;
        partial void OnGetCreditMgrMailbox(ref string value);
        partial void OnCreditMgrMailboxChanging(ref string value);
        partial void OnCreditMgrMailboxChanged();
    
        /// <summary>
        /// There are no comments for CurntFiscPer in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short CurntFiscPer
        {
            get
            {
                short value = _CurntFiscPer;
                OnGetCurntFiscPer(ref value);
                return value;
            }
            set
            {
                if (_CurntFiscPer != value)
                {
                  OnCurntFiscPerChanging(ref value);
                  ReportPropertyChanging("CurntFiscPer");
                  _CurntFiscPer = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CurntFiscPer");
                  OnCurntFiscPerChanged();
              }
            }
        }
        private short _CurntFiscPer = 0;
        partial void OnGetCurntFiscPer(ref short value);
        partial void OnCurntFiscPerChanging(ref short value);
        partial void OnCurntFiscPerChanged();
    
        /// <summary>
        /// There are no comments for CurntFiscYear in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual string CurntFiscYear
        {
            get
            {
                string value = _CurntFiscYear;
                OnGetCurntFiscYear(ref value);
                return value;
            }
            set
            {
                if (_CurntFiscYear != value)
                {
                  OnCurntFiscYearChanging(ref value);
                  ReportPropertyChanging("CurntFiscYear");
                  _CurntFiscYear = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CurntFiscYear");
                  OnCurntFiscYearChanged();
              }
            }
        }
        private string _CurntFiscYear;
        partial void OnGetCurntFiscYear(ref string value);
        partial void OnCurntFiscYearChanging(ref string value);
        partial void OnCurntFiscYearChanged();
    
        /// <summary>
        /// There are no comments for CustHistRetnt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual short? CustHistRetnt
        {
            get
            {
                short? value = _CustHistRetnt;
                OnGetCustHistRetnt(ref value);
                return value;
            }
            set
            {
                if (_CustHistRetnt != value)
                {
                  OnCustHistRetntChanging(ref value);
                  ReportPropertyChanging("CustHistRetnt");
                  _CustHistRetnt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CustHistRetnt");
                  OnCustHistRetntChanged();
              }
            }
        }
        private short? _CustHistRetnt = 5;
        partial void OnGetCustHistRetnt(ref short? value);
        partial void OnCustHistRetntChanging(ref short? value);
        partial void OnCustHistRetntChanged();
    
        /// <summary>
        /// There are no comments for DfltCashAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? DfltCashAcctKey
        {
            get
            {
                int? value = _DfltCashAcctKey;
                OnGetDfltCashAcctKey(ref value);
                return value;
            }
            set
            {
                if (_DfltCashAcctKey != value)
                {
                  OnDfltCashAcctKeyChanging(ref value);
                  ReportPropertyChanging("DfltCashAcctKey");
                  _DfltCashAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltCashAcctKey");
                  OnDfltCashAcctKeyChanged();
              }
            }
        }
        private int? _DfltCashAcctKey;
        partial void OnGetDfltCashAcctKey(ref int? value);
        partial void OnDfltCashAcctKeyChanging(ref int? value);
        partial void OnDfltCashAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for DfltCustClassKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? DfltCustClassKey
        {
            get
            {
                int? value = _DfltCustClassKey;
                OnGetDfltCustClassKey(ref value);
                return value;
            }
            set
            {
                if (_DfltCustClassKey != value)
                {
                  OnDfltCustClassKeyChanging(ref value);
                  ReportPropertyChanging("DfltCustClassKey");
                  _DfltCustClassKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DfltCustClassKey");
                  OnDfltCustClassKeyChanged();
              }
            }
        }
        private int? _DfltCustClassKey;
        partial void OnGetDfltCustClassKey(ref int? value);
        partial void OnDfltCustClassKeyChanging(ref int? value);
        partial void OnDfltCustClassKeyChanged();
    
        /// <summary>
        /// There are no comments for DunnMsg1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string DunnMsg1
        {
            get
            {
                string value = _DunnMsg1;
                OnGetDunnMsg1(ref value);
                return value;
            }
            set
            {
                if (_DunnMsg1 != value)
                {
                  OnDunnMsg1Changing(ref value);
                  ReportPropertyChanging("DunnMsg1");
                  _DunnMsg1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DunnMsg1");
                  OnDunnMsg1Changed();
              }
            }
        }
        private string _DunnMsg1;
        partial void OnGetDunnMsg1(ref string value);
        partial void OnDunnMsg1Changing(ref string value);
        partial void OnDunnMsg1Changed();
    
        /// <summary>
        /// There are no comments for DunnMsg2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string DunnMsg2
        {
            get
            {
                string value = _DunnMsg2;
                OnGetDunnMsg2(ref value);
                return value;
            }
            set
            {
                if (_DunnMsg2 != value)
                {
                  OnDunnMsg2Changing(ref value);
                  ReportPropertyChanging("DunnMsg2");
                  _DunnMsg2 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DunnMsg2");
                  OnDunnMsg2Changed();
              }
            }
        }
        private string _DunnMsg2;
        partial void OnGetDunnMsg2(ref string value);
        partial void OnDunnMsg2Changing(ref string value);
        partial void OnDunnMsg2Changed();
    
        /// <summary>
        /// There are no comments for DunnMsg3 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string DunnMsg3
        {
            get
            {
                string value = _DunnMsg3;
                OnGetDunnMsg3(ref value);
                return value;
            }
            set
            {
                if (_DunnMsg3 != value)
                {
                  OnDunnMsg3Changing(ref value);
                  ReportPropertyChanging("DunnMsg3");
                  _DunnMsg3 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DunnMsg3");
                  OnDunnMsg3Changed();
              }
            }
        }
        private string _DunnMsg3;
        partial void OnGetDunnMsg3(ref string value);
        partial void OnDunnMsg3Changing(ref string value);
        partial void OnDunnMsg3Changed();
    
        /// <summary>
        /// There are no comments for DunnMsg4 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string DunnMsg4
        {
            get
            {
                string value = _DunnMsg4;
                OnGetDunnMsg4(ref value);
                return value;
            }
            set
            {
                if (_DunnMsg4 != value)
                {
                  OnDunnMsg4Changing(ref value);
                  ReportPropertyChanging("DunnMsg4");
                  _DunnMsg4 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DunnMsg4");
                  OnDunnMsg4Changed();
              }
            }
        }
        private string _DunnMsg4;
        partial void OnGetDunnMsg4(ref string value);
        partial void OnDunnMsg4Changing(ref string value);
        partial void OnDunnMsg4Changed();
    
        /// <summary>
        /// There are no comments for FinChgDfltFlatAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal FinChgDfltFlatAmt
        {
            get
            {
                decimal value = _FinChgDfltFlatAmt;
                OnGetFinChgDfltFlatAmt(ref value);
                return value;
            }
            set
            {
                if (_FinChgDfltFlatAmt != value)
                {
                  OnFinChgDfltFlatAmtChanging(ref value);
                  ReportPropertyChanging("FinChgDfltFlatAmt");
                  _FinChgDfltFlatAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FinChgDfltFlatAmt");
                  OnFinChgDfltFlatAmtChanged();
              }
            }
        }
        private decimal _FinChgDfltFlatAmt = 0m;
        partial void OnGetFinChgDfltFlatAmt(ref decimal value);
        partial void OnFinChgDfltFlatAmtChanging(ref decimal value);
        partial void OnFinChgDfltFlatAmtChanged();
    
        /// <summary>
        /// There are no comments for FinChgDfltPct in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual decimal? FinChgDfltPct
        {
            get
            {
                decimal? value = _FinChgDfltPct;
                OnGetFinChgDfltPct(ref value);
                return value;
            }
            set
            {
                if (_FinChgDfltPct != value)
                {
                  OnFinChgDfltPctChanging(ref value);
                  ReportPropertyChanging("FinChgDfltPct");
                  _FinChgDfltPct = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FinChgDfltPct");
                  OnFinChgDfltPctChanged();
              }
            }
        }
        private decimal? _FinChgDfltPct = 0m;
        partial void OnGetFinChgDfltPct(ref decimal? value);
        partial void OnFinChgDfltPctChanging(ref decimal? value);
        partial void OnFinChgDfltPctChanged();
    
        /// <summary>
        /// There are no comments for FinChgMinAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal FinChgMinAmt
        {
            get
            {
                decimal value = _FinChgMinAmt;
                OnGetFinChgMinAmt(ref value);
                return value;
            }
            set
            {
                if (_FinChgMinAmt != value)
                {
                  OnFinChgMinAmtChanging(ref value);
                  ReportPropertyChanging("FinChgMinAmt");
                  _FinChgMinAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FinChgMinAmt");
                  OnFinChgMinAmtChanged();
              }
            }
        }
        private decimal _FinChgMinAmt = 0m;
        partial void OnGetFinChgMinAmt(ref decimal value);
        partial void OnFinChgMinAmtChanging(ref decimal value);
        partial void OnFinChgMinAmtChanged();
    
        /// <summary>
        /// There are no comments for FinChgGracePer in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual short? FinChgGracePer
        {
            get
            {
                short? value = _FinChgGracePer;
                OnGetFinChgGracePer(ref value);
                return value;
            }
            set
            {
                if (_FinChgGracePer != value)
                {
                  OnFinChgGracePerChanging(ref value);
                  ReportPropertyChanging("FinChgGracePer");
                  _FinChgGracePer = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FinChgGracePer");
                  OnFinChgGracePerChanged();
              }
            }
        }
        private short? _FinChgGracePer = 0;
        partial void OnGetFinChgGracePer(ref short? value);
        partial void OnFinChgGracePerChanging(ref short? value);
        partial void OnFinChgGracePerChanged();
    
        /// <summary>
        /// There are no comments for FinChgExclFinChg in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short FinChgExclFinChg
        {
            get
            {
                short value = _FinChgExclFinChg;
                OnGetFinChgExclFinChg(ref value);
                return value;
            }
            set
            {
                if (_FinChgExclFinChg != value)
                {
                  OnFinChgExclFinChgChanging(ref value);
                  ReportPropertyChanging("FinChgExclFinChg");
                  _FinChgExclFinChg = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FinChgExclFinChg");
                  OnFinChgExclFinChgChanged();
              }
            }
        }
        private short _FinChgExclFinChg = 1;
        partial void OnGetFinChgExclFinChg(ref short value);
        partial void OnFinChgExclFinChgChanging(ref short value);
        partial void OnFinChgExclFinChgChanged();
    
        /// <summary>
        /// There are no comments for FinChgMinBal in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal FinChgMinBal
        {
            get
            {
                decimal value = _FinChgMinBal;
                OnGetFinChgMinBal(ref value);
                return value;
            }
            set
            {
                if (_FinChgMinBal != value)
                {
                  OnFinChgMinBalChanging(ref value);
                  ReportPropertyChanging("FinChgMinBal");
                  _FinChgMinBal = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FinChgMinBal");
                  OnFinChgMinBalChanged();
              }
            }
        }
        private decimal _FinChgMinBal = 0m;
        partial void OnGetFinChgMinBal(ref decimal value);
        partial void OnFinChgMinBalChanging(ref decimal value);
        partial void OnFinChgMinBalChanged();
    
        /// <summary>
        /// There are no comments for GLPostRgstrFormat in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short GLPostRgstrFormat
        {
            get
            {
                short value = _GLPostRgstrFormat;
                OnGetGLPostRgstrFormat(ref value);
                return value;
            }
            set
            {
                if (_GLPostRgstrFormat != value)
                {
                  OnGLPostRgstrFormatChanging(ref value);
                  ReportPropertyChanging("GLPostRgstrFormat");
                  _GLPostRgstrFormat = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("GLPostRgstrFormat");
                  OnGLPostRgstrFormatChanged();
              }
            }
        }
        private short _GLPostRgstrFormat = 2;
        partial void OnGetGLPostRgstrFormat(ref short value);
        partial void OnGLPostRgstrFormatChanging(ref short value);
        partial void OnGLPostRgstrFormatChanged();
    
        /// <summary>
        /// There are no comments for InactiveCustRetnt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short InactiveCustRetnt
        {
            get
            {
                short value = _InactiveCustRetnt;
                OnGetInactiveCustRetnt(ref value);
                return value;
            }
            set
            {
                if (_InactiveCustRetnt != value)
                {
                  OnInactiveCustRetntChanging(ref value);
                  ReportPropertyChanging("InactiveCustRetnt");
                  _InactiveCustRetnt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InactiveCustRetnt");
                  OnInactiveCustRetntChanged();
              }
            }
        }
        private short _InactiveCustRetnt = 24;
        partial void OnGetInactiveCustRetnt(ref short value);
        partial void OnInactiveCustRetntChanging(ref short value);
        partial void OnInactiveCustRetntChanged();
    
        /// <summary>
        /// There are no comments for InclTradeDiscInSls in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short InclTradeDiscInSls
        {
            get
            {
                short value = _InclTradeDiscInSls;
                OnGetInclTradeDiscInSls(ref value);
                return value;
            }
            set
            {
                if (_InclTradeDiscInSls != value)
                {
                  OnInclTradeDiscInSlsChanging(ref value);
                  ReportPropertyChanging("InclTradeDiscInSls");
                  _InclTradeDiscInSls = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InclTradeDiscInSls");
                  OnInclTradeDiscInSlsChanged();
              }
            }
        }
        private short _InclTradeDiscInSls = 0;
        partial void OnGetInclTradeDiscInSls(ref short value);
        partial void OnInclTradeDiscInSlsChanging(ref short value);
        partial void OnInclTradeDiscInSlsChanged();
    
        /// <summary>
        /// There are no comments for IntegrateWithAP in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short IntegrateWithAP
        {
            get
            {
                short value = _IntegrateWithAP;
                OnGetIntegrateWithAP(ref value);
                return value;
            }
            set
            {
                if (_IntegrateWithAP != value)
                {
                  OnIntegrateWithAPChanging(ref value);
                  ReportPropertyChanging("IntegrateWithAP");
                  _IntegrateWithAP = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IntegrateWithAP");
                  OnIntegrateWithAPChanged();
              }
            }
        }
        private short _IntegrateWithAP = 0;
        partial void OnGetIntegrateWithAP(ref short value);
        partial void OnIntegrateWithAPChanging(ref short value);
        partial void OnIntegrateWithAPChanged();
    
        /// <summary>
        /// There are no comments for IntegrateWithCM in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short IntegrateWithCM
        {
            get
            {
                short value = _IntegrateWithCM;
                OnGetIntegrateWithCM(ref value);
                return value;
            }
            set
            {
                if (_IntegrateWithCM != value)
                {
                  OnIntegrateWithCMChanging(ref value);
                  ReportPropertyChanging("IntegrateWithCM");
                  _IntegrateWithCM = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IntegrateWithCM");
                  OnIntegrateWithCMChanged();
              }
            }
        }
        private short _IntegrateWithCM = 0;
        partial void OnGetIntegrateWithCM(ref short value);
        partial void OnIntegrateWithCMChanging(ref short value);
        partial void OnIntegrateWithCMChanged();
    
        /// <summary>
        /// There are no comments for IntegrateWithEDI in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short IntegrateWithEDI
        {
            get
            {
                short value = _IntegrateWithEDI;
                OnGetIntegrateWithEDI(ref value);
                return value;
            }
            set
            {
                if (_IntegrateWithEDI != value)
                {
                  OnIntegrateWithEDIChanging(ref value);
                  ReportPropertyChanging("IntegrateWithEDI");
                  _IntegrateWithEDI = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IntegrateWithEDI");
                  OnIntegrateWithEDIChanged();
              }
            }
        }
        private short _IntegrateWithEDI = 0;
        partial void OnGetIntegrateWithEDI(ref short value);
        partial void OnIntegrateWithEDIChanging(ref short value);
        partial void OnIntegrateWithEDIChanged();
    
        /// <summary>
        /// There are no comments for IntegrateWithGL in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short IntegrateWithGL
        {
            get
            {
                short value = _IntegrateWithGL;
                OnGetIntegrateWithGL(ref value);
                return value;
            }
            set
            {
                if (_IntegrateWithGL != value)
                {
                  OnIntegrateWithGLChanging(ref value);
                  ReportPropertyChanging("IntegrateWithGL");
                  _IntegrateWithGL = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IntegrateWithGL");
                  OnIntegrateWithGLChanged();
              }
            }
        }
        private short _IntegrateWithGL = 0;
        partial void OnGetIntegrateWithGL(ref short value);
        partial void OnIntegrateWithGLChanging(ref short value);
        partial void OnIntegrateWithGLChanged();
    
        /// <summary>
        /// There are no comments for IntegrateWithPR in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short IntegrateWithPR
        {
            get
            {
                short value = _IntegrateWithPR;
                OnGetIntegrateWithPR(ref value);
                return value;
            }
            set
            {
                if (_IntegrateWithPR != value)
                {
                  OnIntegrateWithPRChanging(ref value);
                  ReportPropertyChanging("IntegrateWithPR");
                  _IntegrateWithPR = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IntegrateWithPR");
                  OnIntegrateWithPRChanged();
              }
            }
        }
        private short _IntegrateWithPR = 0;
        partial void OnGetIntegrateWithPR(ref short value);
        partial void OnIntegrateWithPRChanging(ref short value);
        partial void OnIntegrateWithPRChanged();
    
        /// <summary>
        /// There are no comments for InvcDetlRetnt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short InvcDetlRetnt
        {
            get
            {
                short value = _InvcDetlRetnt;
                OnGetInvcDetlRetnt(ref value);
                return value;
            }
            set
            {
                if (_InvcDetlRetnt != value)
                {
                  OnInvcDetlRetntChanging(ref value);
                  ReportPropertyChanging("InvcDetlRetnt");
                  _InvcDetlRetnt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvcDetlRetnt");
                  OnInvcDetlRetntChanged();
              }
            }
        }
        private short _InvcDetlRetnt = 24;
        partial void OnGetInvcDetlRetnt(ref short value);
        partial void OnInvcDetlRetntChanging(ref short value);
        partial void OnInvcDetlRetntChanged();
    
        /// <summary>
        /// There are no comments for InvcHdrRetnt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short InvcHdrRetnt
        {
            get
            {
                short value = _InvcHdrRetnt;
                OnGetInvcHdrRetnt(ref value);
                return value;
            }
            set
            {
                if (_InvcHdrRetnt != value)
                {
                  OnInvcHdrRetntChanging(ref value);
                  ReportPropertyChanging("InvcHdrRetnt");
                  _InvcHdrRetnt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvcHdrRetnt");
                  OnInvcHdrRetntChanged();
              }
            }
        }
        private short _InvcHdrRetnt = 24;
        partial void OnGetInvcHdrRetnt(ref short value);
        partial void OnInvcHdrRetntChanging(ref short value);
        partial void OnInvcHdrRetntChanged();
    
        /// <summary>
        /// There are no comments for InvcNoSize in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short InvcNoSize
        {
            get
            {
                short value = _InvcNoSize;
                OnGetInvcNoSize(ref value);
                return value;
            }
            set
            {
                if (_InvcNoSize != value)
                {
                  OnInvcNoSizeChanging(ref value);
                  ReportPropertyChanging("InvcNoSize");
                  _InvcNoSize = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvcNoSize");
                  OnInvcNoSizeChanged();
              }
            }
        }
        private short _InvcNoSize = 10;
        partial void OnGetInvcNoSize(ref short value);
        partial void OnInvcNoSizeChanging(ref short value);
        partial void OnInvcNoSizeChanged();
    
        /// <summary>
        /// There are no comments for InvcsInAvg in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short InvcsInAvg
        {
            get
            {
                short value = _InvcsInAvg;
                OnGetInvcsInAvg(ref value);
                return value;
            }
            set
            {
                if (_InvcsInAvg != value)
                {
                  OnInvcsInAvgChanging(ref value);
                  ReportPropertyChanging("InvcsInAvg");
                  _InvcsInAvg = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("InvcsInAvg");
                  OnInvcsInAvgChanged();
              }
            }
        }
        private short _InvcsInAvg = 30;
        partial void OnGetInvcsInAvg(ref short value);
        partial void OnInvcsInAvgChanging(ref short value);
        partial void OnInvcsInAvgChanged();
    
        /// <summary>
        /// There are no comments for LastCommDetlPurge in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? LastCommDetlPurge
        {
            get
            {
                global::System.DateTime? value = _LastCommDetlPurge;
                OnGetLastCommDetlPurge(ref value);
                return value;
            }
            set
            {
                if (_LastCommDetlPurge != value)
                {
                  OnLastCommDetlPurgeChanging(ref value);
                  ReportPropertyChanging("LastCommDetlPurge");
                  _LastCommDetlPurge = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LastCommDetlPurge");
                  OnLastCommDetlPurgeChanged();
              }
            }
        }
        private global::System.DateTime? _LastCommDetlPurge;
        partial void OnGetLastCommDetlPurge(ref global::System.DateTime? value);
        partial void OnLastCommDetlPurgeChanging(ref global::System.DateTime? value);
        partial void OnLastCommDetlPurgeChanged();
    
        /// <summary>
        /// There are no comments for LastCommPmtPurge in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? LastCommPmtPurge
        {
            get
            {
                global::System.DateTime? value = _LastCommPmtPurge;
                OnGetLastCommPmtPurge(ref value);
                return value;
            }
            set
            {
                if (_LastCommPmtPurge != value)
                {
                  OnLastCommPmtPurgeChanging(ref value);
                  ReportPropertyChanging("LastCommPmtPurge");
                  _LastCommPmtPurge = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LastCommPmtPurge");
                  OnLastCommPmtPurgeChanged();
              }
            }
        }
        private global::System.DateTime? _LastCommPmtPurge;
        partial void OnGetLastCommPmtPurge(ref global::System.DateTime? value);
        partial void OnLastCommPmtPurgeChanging(ref global::System.DateTime? value);
        partial void OnLastCommPmtPurgeChanged();
    
        /// <summary>
        /// There are no comments for LastCustHistPurge in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? LastCustHistPurge
        {
            get
            {
                global::System.DateTime? value = _LastCustHistPurge;
                OnGetLastCustHistPurge(ref value);
                return value;
            }
            set
            {
                if (_LastCustHistPurge != value)
                {
                  OnLastCustHistPurgeChanging(ref value);
                  ReportPropertyChanging("LastCustHistPurge");
                  _LastCustHistPurge = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LastCustHistPurge");
                  OnLastCustHistPurgeChanged();
              }
            }
        }
        private global::System.DateTime? _LastCustHistPurge;
        partial void OnGetLastCustHistPurge(ref global::System.DateTime? value);
        partial void OnLastCustHistPurgeChanging(ref global::System.DateTime? value);
        partial void OnLastCustHistPurgeChanged();
    
        /// <summary>
        /// There are no comments for LastCustPmtPurge in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? LastCustPmtPurge
        {
            get
            {
                global::System.DateTime? value = _LastCustPmtPurge;
                OnGetLastCustPmtPurge(ref value);
                return value;
            }
            set
            {
                if (_LastCustPmtPurge != value)
                {
                  OnLastCustPmtPurgeChanging(ref value);
                  ReportPropertyChanging("LastCustPmtPurge");
                  _LastCustPmtPurge = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LastCustPmtPurge");
                  OnLastCustPmtPurgeChanged();
              }
            }
        }
        private global::System.DateTime? _LastCustPmtPurge;
        partial void OnGetLastCustPmtPurge(ref global::System.DateTime? value);
        partial void OnLastCustPmtPurgeChanging(ref global::System.DateTime? value);
        partial void OnLastCustPmtPurgeChanged();
    
        /// <summary>
        /// There are no comments for LastInvcDetlPurge in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? LastInvcDetlPurge
        {
            get
            {
                global::System.DateTime? value = _LastInvcDetlPurge;
                OnGetLastInvcDetlPurge(ref value);
                return value;
            }
            set
            {
                if (_LastInvcDetlPurge != value)
                {
                  OnLastInvcDetlPurgeChanging(ref value);
                  ReportPropertyChanging("LastInvcDetlPurge");
                  _LastInvcDetlPurge = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LastInvcDetlPurge");
                  OnLastInvcDetlPurgeChanged();
              }
            }
        }
        private global::System.DateTime? _LastInvcDetlPurge;
        partial void OnGetLastInvcDetlPurge(ref global::System.DateTime? value);
        partial void OnLastInvcDetlPurgeChanging(ref global::System.DateTime? value);
        partial void OnLastInvcDetlPurgeChanged();
    
        /// <summary>
        /// There are no comments for LastInvcHdrPurge in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? LastInvcHdrPurge
        {
            get
            {
                global::System.DateTime? value = _LastInvcHdrPurge;
                OnGetLastInvcHdrPurge(ref value);
                return value;
            }
            set
            {
                if (_LastInvcHdrPurge != value)
                {
                  OnLastInvcHdrPurgeChanging(ref value);
                  ReportPropertyChanging("LastInvcHdrPurge");
                  _LastInvcHdrPurge = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LastInvcHdrPurge");
                  OnLastInvcHdrPurgeChanged();
              }
            }
        }
        private global::System.DateTime? _LastInvcHdrPurge;
        partial void OnGetLastInvcHdrPurge(ref global::System.DateTime? value);
        partial void OnLastInvcHdrPurgeChanging(ref global::System.DateTime? value);
        partial void OnLastInvcHdrPurgeChanged();
    
        /// <summary>
        /// There are no comments for LastSPerHistPurge in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.DateTime? LastSPerHistPurge
        {
            get
            {
                global::System.DateTime? value = _LastSPerHistPurge;
                OnGetLastSPerHistPurge(ref value);
                return value;
            }
            set
            {
                if (_LastSPerHistPurge != value)
                {
                  OnLastSPerHistPurgeChanging(ref value);
                  ReportPropertyChanging("LastSPerHistPurge");
                  _LastSPerHistPurge = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LastSPerHistPurge");
                  OnLastSPerHistPurgeChanged();
              }
            }
        }
        private global::System.DateTime? _LastSPerHistPurge;
        partial void OnGetLastSPerHistPurge(ref global::System.DateTime? value);
        partial void OnLastSPerHistPurgeChanging(ref global::System.DateTime? value);
        partial void OnLastSPerHistPurgeChanged();
    
        /// <summary>
        /// There are no comments for MaintAuditAdd in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short MaintAuditAdd
        {
            get
            {
                short value = _MaintAuditAdd;
                OnGetMaintAuditAdd(ref value);
                return value;
            }
            set
            {
                if (_MaintAuditAdd != value)
                {
                  OnMaintAuditAddChanging(ref value);
                  ReportPropertyChanging("MaintAuditAdd");
                  _MaintAuditAdd = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MaintAuditAdd");
                  OnMaintAuditAddChanged();
              }
            }
        }
        private short _MaintAuditAdd = 1;
        partial void OnGetMaintAuditAdd(ref short value);
        partial void OnMaintAuditAddChanging(ref short value);
        partial void OnMaintAuditAddChanged();
    
        /// <summary>
        /// There are no comments for MaintAuditChange in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short MaintAuditChange
        {
            get
            {
                short value = _MaintAuditChange;
                OnGetMaintAuditChange(ref value);
                return value;
            }
            set
            {
                if (_MaintAuditChange != value)
                {
                  OnMaintAuditChangeChanging(ref value);
                  ReportPropertyChanging("MaintAuditChange");
                  _MaintAuditChange = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MaintAuditChange");
                  OnMaintAuditChangeChanged();
              }
            }
        }
        private short _MaintAuditChange = 2;
        partial void OnGetMaintAuditChange(ref short value);
        partial void OnMaintAuditChangeChanging(ref short value);
        partial void OnMaintAuditChangeChanged();
    
        /// <summary>
        /// There are no comments for MaintAuditDelete in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short MaintAuditDelete
        {
            get
            {
                short value = _MaintAuditDelete;
                OnGetMaintAuditDelete(ref value);
                return value;
            }
            set
            {
                if (_MaintAuditDelete != value)
                {
                  OnMaintAuditDeleteChanging(ref value);
                  ReportPropertyChanging("MaintAuditDelete");
                  _MaintAuditDelete = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MaintAuditDelete");
                  OnMaintAuditDeleteChanged();
              }
            }
        }
        private short _MaintAuditDelete = 1;
        partial void OnGetMaintAuditDelete(ref short value);
        partial void OnMaintAuditDeleteChanging(ref short value);
        partial void OnMaintAuditDeleteChanged();
    
        /// <summary>
        /// There are no comments for MaintAuditRetnt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short MaintAuditRetnt
        {
            get
            {
                short value = _MaintAuditRetnt;
                OnGetMaintAuditRetnt(ref value);
                return value;
            }
            set
            {
                if (_MaintAuditRetnt != value)
                {
                  OnMaintAuditRetntChanging(ref value);
                  ReportPropertyChanging("MaintAuditRetnt");
                  _MaintAuditRetnt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MaintAuditRetnt");
                  OnMaintAuditRetntChanged();
              }
            }
        }
        private short _MaintAuditRetnt = 24;
        partial void OnGetMaintAuditRetnt(ref short value);
        partial void OnMaintAuditRetntChanging(ref short value);
        partial void OnMaintAuditRetntChanged();
    
        /// <summary>
        /// There are no comments for MaxRefundAmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal MaxRefundAmt
        {
            get
            {
                decimal value = _MaxRefundAmt;
                OnGetMaxRefundAmt(ref value);
                return value;
            }
            set
            {
                if (_MaxRefundAmt != value)
                {
                  OnMaxRefundAmtChanging(ref value);
                  ReportPropertyChanging("MaxRefundAmt");
                  _MaxRefundAmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MaxRefundAmt");
                  OnMaxRefundAmtChanged();
              }
            }
        }
        private decimal _MaxRefundAmt = 0m;
        partial void OnGetMaxRefundAmt(ref decimal value);
        partial void OnMaxRefundAmtChanging(ref decimal value);
        partial void OnMaxRefundAmtChanged();
    
        /// <summary>
        /// There are no comments for MaxWriteOffLimit in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual decimal MaxWriteOffLimit
        {
            get
            {
                decimal value = _MaxWriteOffLimit;
                OnGetMaxWriteOffLimit(ref value);
                return value;
            }
            set
            {
                if (_MaxWriteOffLimit != value)
                {
                  OnMaxWriteOffLimitChanging(ref value);
                  ReportPropertyChanging("MaxWriteOffLimit");
                  _MaxWriteOffLimit = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MaxWriteOffLimit");
                  OnMaxWriteOffLimitChanged();
              }
            }
        }
        private decimal _MaxWriteOffLimit = 0m;
        partial void OnGetMaxWriteOffLimit(ref decimal value);
        partial void OnMaxWriteOffLimitChanging(ref decimal value);
        partial void OnMaxWriteOffLimitChanged();
    
        /// <summary>
        /// There are no comments for NextCustID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int NextCustID
        {
            get
            {
                int value = _NextCustID;
                OnGetNextCustID(ref value);
                return value;
            }
            set
            {
                if (_NextCustID != value)
                {
                  OnNextCustIDChanging(ref value);
                  ReportPropertyChanging("NextCustID");
                  _NextCustID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NextCustID");
                  OnNextCustIDChanged();
              }
            }
        }
        private int _NextCustID = 1;
        partial void OnGetNextCustID(ref int value);
        partial void OnNextCustIDChanging(ref int value);
        partial void OnNextCustIDChanged();
    
        /// <summary>
        /// There are no comments for NextSperID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int NextSperID
        {
            get
            {
                int value = _NextSperID;
                OnGetNextSperID(ref value);
                return value;
            }
            set
            {
                if (_NextSperID != value)
                {
                  OnNextSperIDChanging(ref value);
                  ReportPropertyChanging("NextSperID");
                  _NextSperID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NextSperID");
                  OnNextSperIDChanged();
              }
            }
        }
        private int _NextSperID = 1;
        partial void OnGetNextSperID(ref int value);
        partial void OnNextSperIDChanging(ref int value);
        partial void OnNextSperIDChanged();
    
        /// <summary>
        /// There are no comments for NoOfFuturePer in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short NoOfFuturePer
        {
            get
            {
                short value = _NoOfFuturePer;
                OnGetNoOfFuturePer(ref value);
                return value;
            }
            set
            {
                if (_NoOfFuturePer != value)
                {
                  OnNoOfFuturePerChanging(ref value);
                  ReportPropertyChanging("NoOfFuturePer");
                  _NoOfFuturePer = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NoOfFuturePer");
                  OnNoOfFuturePerChanged();
              }
            }
        }
        private short _NoOfFuturePer = 0;
        partial void OnGetNoOfFuturePer(ref short value);
        partial void OnNoOfFuturePerChanging(ref short value);
        partial void OnNoOfFuturePerChanged();
    
        /// <summary>
        /// There are no comments for PmtRetnt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PmtRetnt
        {
            get
            {
                short value = _PmtRetnt;
                OnGetPmtRetnt(ref value);
                return value;
            }
            set
            {
                if (_PmtRetnt != value)
                {
                  OnPmtRetntChanging(ref value);
                  ReportPropertyChanging("PmtRetnt");
                  _PmtRetnt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PmtRetnt");
                  OnPmtRetntChanged();
              }
            }
        }
        private short _PmtRetnt = 24;
        partial void OnGetPmtRetnt(ref short value);
        partial void OnPmtRetntChanging(ref short value);
        partial void OnPmtRetntChanged();
    
        /// <summary>
        /// There are no comments for PostCOStoGL in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PostCOStoGL
        {
            get
            {
                short value = _PostCOStoGL;
                OnGetPostCOStoGL(ref value);
                return value;
            }
            set
            {
                if (_PostCOStoGL != value)
                {
                  OnPostCOStoGLChanging(ref value);
                  ReportPropertyChanging("PostCOStoGL");
                  _PostCOStoGL = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PostCOStoGL");
                  OnPostCOStoGLChanged();
              }
            }
        }
        private short _PostCOStoGL = 1;
        partial void OnGetPostCOStoGL(ref short value);
        partial void OnPostCOStoGLChanging(ref short value);
        partial void OnPostCOStoGLChanged();
    
        /// <summary>
        /// There are no comments for PostInDetlAcctRec in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PostInDetlAcctRec
        {
            get
            {
                short value = _PostInDetlAcctRec;
                OnGetPostInDetlAcctRec(ref value);
                return value;
            }
            set
            {
                if (_PostInDetlAcctRec != value)
                {
                  OnPostInDetlAcctRecChanging(ref value);
                  ReportPropertyChanging("PostInDetlAcctRec");
                  _PostInDetlAcctRec = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PostInDetlAcctRec");
                  OnPostInDetlAcctRecChanged();
              }
            }
        }
        private short _PostInDetlAcctRec = 0;
        partial void OnGetPostInDetlAcctRec(ref short value);
        partial void OnPostInDetlAcctRecChanging(ref short value);
        partial void OnPostInDetlAcctRecChanged();
    
        /// <summary>
        /// There are no comments for PostInDetlBadDebt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PostInDetlBadDebt
        {
            get
            {
                short value = _PostInDetlBadDebt;
                OnGetPostInDetlBadDebt(ref value);
                return value;
            }
            set
            {
                if (_PostInDetlBadDebt != value)
                {
                  OnPostInDetlBadDebtChanging(ref value);
                  ReportPropertyChanging("PostInDetlBadDebt");
                  _PostInDetlBadDebt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PostInDetlBadDebt");
                  OnPostInDetlBadDebtChanged();
              }
            }
        }
        private short _PostInDetlBadDebt = 0;
        partial void OnGetPostInDetlBadDebt(ref short value);
        partial void OnPostInDetlBadDebtChanging(ref short value);
        partial void OnPostInDetlBadDebtChanged();
    
        /// <summary>
        /// There are no comments for PostInDetlCash in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PostInDetlCash
        {
            get
            {
                short value = _PostInDetlCash;
                OnGetPostInDetlCash(ref value);
                return value;
            }
            set
            {
                if (_PostInDetlCash != value)
                {
                  OnPostInDetlCashChanging(ref value);
                  ReportPropertyChanging("PostInDetlCash");
                  _PostInDetlCash = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PostInDetlCash");
                  OnPostInDetlCashChanged();
              }
            }
        }
        private short _PostInDetlCash = 0;
        partial void OnGetPostInDetlCash(ref short value);
        partial void OnPostInDetlCashChanging(ref short value);
        partial void OnPostInDetlCashChanged();
    
        /// <summary>
        /// There are no comments for PostInDetlCommExp in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PostInDetlCommExp
        {
            get
            {
                short value = _PostInDetlCommExp;
                OnGetPostInDetlCommExp(ref value);
                return value;
            }
            set
            {
                if (_PostInDetlCommExp != value)
                {
                  OnPostInDetlCommExpChanging(ref value);
                  ReportPropertyChanging("PostInDetlCommExp");
                  _PostInDetlCommExp = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PostInDetlCommExp");
                  OnPostInDetlCommExpChanged();
              }
            }
        }
        private short _PostInDetlCommExp = 0;
        partial void OnGetPostInDetlCommExp(ref short value);
        partial void OnPostInDetlCommExpChanging(ref short value);
        partial void OnPostInDetlCommExpChanged();
    
        /// <summary>
        /// There are no comments for PostInDetlCommPay in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PostInDetlCommPay
        {
            get
            {
                short value = _PostInDetlCommPay;
                OnGetPostInDetlCommPay(ref value);
                return value;
            }
            set
            {
                if (_PostInDetlCommPay != value)
                {
                  OnPostInDetlCommPayChanging(ref value);
                  ReportPropertyChanging("PostInDetlCommPay");
                  _PostInDetlCommPay = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PostInDetlCommPay");
                  OnPostInDetlCommPayChanged();
              }
            }
        }
        private short _PostInDetlCommPay = 0;
        partial void OnGetPostInDetlCommPay(ref short value);
        partial void OnPostInDetlCommPayChanging(ref short value);
        partial void OnPostInDetlCommPayChanged();
    
        /// <summary>
        /// There are no comments for PostInDetlCOS in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PostInDetlCOS
        {
            get
            {
                short value = _PostInDetlCOS;
                OnGetPostInDetlCOS(ref value);
                return value;
            }
            set
            {
                if (_PostInDetlCOS != value)
                {
                  OnPostInDetlCOSChanging(ref value);
                  ReportPropertyChanging("PostInDetlCOS");
                  _PostInDetlCOS = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PostInDetlCOS");
                  OnPostInDetlCOSChanged();
              }
            }
        }
        private short _PostInDetlCOS = 0;
        partial void OnGetPostInDetlCOS(ref short value);
        partial void OnPostInDetlCOSChanging(ref short value);
        partial void OnPostInDetlCOSChanged();
    
        /// <summary>
        /// There are no comments for PostInDetlDiscTkn in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PostInDetlDiscTkn
        {
            get
            {
                short value = _PostInDetlDiscTkn;
                OnGetPostInDetlDiscTkn(ref value);
                return value;
            }
            set
            {
                if (_PostInDetlDiscTkn != value)
                {
                  OnPostInDetlDiscTknChanging(ref value);
                  ReportPropertyChanging("PostInDetlDiscTkn");
                  _PostInDetlDiscTkn = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PostInDetlDiscTkn");
                  OnPostInDetlDiscTknChanged();
              }
            }
        }
        private short _PostInDetlDiscTkn = 0;
        partial void OnGetPostInDetlDiscTkn(ref short value);
        partial void OnPostInDetlDiscTknChanging(ref short value);
        partial void OnPostInDetlDiscTknChanged();
    
        /// <summary>
        /// There are no comments for PostInDetlDropShip in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PostInDetlDropShip
        {
            get
            {
                short value = _PostInDetlDropShip;
                OnGetPostInDetlDropShip(ref value);
                return value;
            }
            set
            {
                if (_PostInDetlDropShip != value)
                {
                  OnPostInDetlDropShipChanging(ref value);
                  ReportPropertyChanging("PostInDetlDropShip");
                  _PostInDetlDropShip = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PostInDetlDropShip");
                  OnPostInDetlDropShipChanged();
              }
            }
        }
        private short _PostInDetlDropShip = 0;
        partial void OnGetPostInDetlDropShip(ref short value);
        partial void OnPostInDetlDropShipChanging(ref short value);
        partial void OnPostInDetlDropShipChanged();
    
        /// <summary>
        /// There are no comments for PostInDetlFinChg in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PostInDetlFinChg
        {
            get
            {
                short value = _PostInDetlFinChg;
                OnGetPostInDetlFinChg(ref value);
                return value;
            }
            set
            {
                if (_PostInDetlFinChg != value)
                {
                  OnPostInDetlFinChgChanging(ref value);
                  ReportPropertyChanging("PostInDetlFinChg");
                  _PostInDetlFinChg = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PostInDetlFinChg");
                  OnPostInDetlFinChgChanged();
              }
            }
        }
        private short _PostInDetlFinChg = 0;
        partial void OnGetPostInDetlFinChg(ref short value);
        partial void OnPostInDetlFinChgChanging(ref short value);
        partial void OnPostInDetlFinChgChanged();
    
        /// <summary>
        /// There are no comments for PostInDetlSales in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PostInDetlSales
        {
            get
            {
                short value = _PostInDetlSales;
                OnGetPostInDetlSales(ref value);
                return value;
            }
            set
            {
                if (_PostInDetlSales != value)
                {
                  OnPostInDetlSalesChanging(ref value);
                  ReportPropertyChanging("PostInDetlSales");
                  _PostInDetlSales = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PostInDetlSales");
                  OnPostInDetlSalesChanged();
              }
            }
        }
        private short _PostInDetlSales = 1;
        partial void OnGetPostInDetlSales(ref short value);
        partial void OnPostInDetlSalesChanging(ref short value);
        partial void OnPostInDetlSalesChanged();
    
        /// <summary>
        /// There are no comments for PostInDetlSalesClr in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PostInDetlSalesClr
        {
            get
            {
                short value = _PostInDetlSalesClr;
                OnGetPostInDetlSalesClr(ref value);
                return value;
            }
            set
            {
                if (_PostInDetlSalesClr != value)
                {
                  OnPostInDetlSalesClrChanging(ref value);
                  ReportPropertyChanging("PostInDetlSalesClr");
                  _PostInDetlSalesClr = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PostInDetlSalesClr");
                  OnPostInDetlSalesClrChanged();
              }
            }
        }
        private short _PostInDetlSalesClr = 0;
        partial void OnGetPostInDetlSalesClr(ref short value);
        partial void OnPostInDetlSalesClrChanging(ref short value);
        partial void OnPostInDetlSalesClrChanged();
    
        /// <summary>
        /// There are no comments for PostInDetlShip in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PostInDetlShip
        {
            get
            {
                short value = _PostInDetlShip;
                OnGetPostInDetlShip(ref value);
                return value;
            }
            set
            {
                if (_PostInDetlShip != value)
                {
                  OnPostInDetlShipChanging(ref value);
                  ReportPropertyChanging("PostInDetlShip");
                  _PostInDetlShip = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PostInDetlShip");
                  OnPostInDetlShipChanged();
              }
            }
        }
        private short _PostInDetlShip = 0;
        partial void OnGetPostInDetlShip(ref short value);
        partial void OnPostInDetlShipChanging(ref short value);
        partial void OnPostInDetlShipChanged();
    
        /// <summary>
        /// There are no comments for PostInDetlSTax in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PostInDetlSTax
        {
            get
            {
                short value = _PostInDetlSTax;
                OnGetPostInDetlSTax(ref value);
                return value;
            }
            set
            {
                if (_PostInDetlSTax != value)
                {
                  OnPostInDetlSTaxChanging(ref value);
                  ReportPropertyChanging("PostInDetlSTax");
                  _PostInDetlSTax = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PostInDetlSTax");
                  OnPostInDetlSTaxChanged();
              }
            }
        }
        private short _PostInDetlSTax = 0;
        partial void OnGetPostInDetlSTax(ref short value);
        partial void OnPostInDetlSTaxChanging(ref short value);
        partial void OnPostInDetlSTaxChanged();
    
        /// <summary>
        /// There are no comments for PostInDetlTradeDsc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PostInDetlTradeDsc
        {
            get
            {
                short value = _PostInDetlTradeDsc;
                OnGetPostInDetlTradeDsc(ref value);
                return value;
            }
            set
            {
                if (_PostInDetlTradeDsc != value)
                {
                  OnPostInDetlTradeDscChanging(ref value);
                  ReportPropertyChanging("PostInDetlTradeDsc");
                  _PostInDetlTradeDsc = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PostInDetlTradeDsc");
                  OnPostInDetlTradeDscChanged();
              }
            }
        }
        private short _PostInDetlTradeDsc = 0;
        partial void OnGetPostInDetlTradeDsc(ref short value);
        partial void OnPostInDetlTradeDscChanging(ref short value);
        partial void OnPostInDetlTradeDscChanged();
    
        /// <summary>
        /// There are no comments for PostInDetlWritOff in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PostInDetlWritOff
        {
            get
            {
                short value = _PostInDetlWritOff;
                OnGetPostInDetlWritOff(ref value);
                return value;
            }
            set
            {
                if (_PostInDetlWritOff != value)
                {
                  OnPostInDetlWritOffChanging(ref value);
                  ReportPropertyChanging("PostInDetlWritOff");
                  _PostInDetlWritOff = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PostInDetlWritOff");
                  OnPostInDetlWritOffChanged();
              }
            }
        }
        private short _PostInDetlWritOff = 1;
        partial void OnGetPostInDetlWritOff(ref short value);
        partial void OnPostInDetlWritOffChanging(ref short value);
        partial void OnPostInDetlWritOffChanged();
    
        /// <summary>
        /// There are no comments for PostQtyToGL in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PostQtyToGL
        {
            get
            {
                short value = _PostQtyToGL;
                OnGetPostQtyToGL(ref value);
                return value;
            }
            set
            {
                if (_PostQtyToGL != value)
                {
                  OnPostQtyToGLChanging(ref value);
                  ReportPropertyChanging("PostQtyToGL");
                  _PostQtyToGL = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PostQtyToGL");
                  OnPostQtyToGLChanged();
              }
            }
        }
        private short _PostQtyToGL = 1;
        partial void OnGetPostQtyToGL(ref short value);
        partial void OnPostQtyToGLChanging(ref short value);
        partial void OnPostQtyToGLChanged();
    
        /// <summary>
        /// There are no comments for PrintInvcs in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PrintInvcs
        {
            get
            {
                short value = _PrintInvcs;
                OnGetPrintInvcs(ref value);
                return value;
            }
            set
            {
                if (_PrintInvcs != value)
                {
                  OnPrintInvcsChanging(ref value);
                  ReportPropertyChanging("PrintInvcs");
                  _PrintInvcs = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PrintInvcs");
                  OnPrintInvcsChanged();
              }
            }
        }
        private short _PrintInvcs = 1;
        partial void OnGetPrintInvcs(ref short value);
        partial void OnPrintInvcsChanging(ref short value);
        partial void OnPrintInvcsChanged();
    
        /// <summary>
        /// There are no comments for PrintStmts in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short PrintStmts
        {
            get
            {
                short value = _PrintStmts;
                OnGetPrintStmts(ref value);
                return value;
            }
            set
            {
                if (_PrintStmts != value)
                {
                  OnPrintStmtsChanging(ref value);
                  ReportPropertyChanging("PrintStmts");
                  _PrintStmts = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PrintStmts");
                  OnPrintStmtsChanged();
              }
            }
        }
        private short _PrintStmts = 0;
        partial void OnGetPrintStmts(ref short value);
        partial void OnPrintStmtsChanging(ref short value);
        partial void OnPrintStmtsChanged();
    
        /// <summary>
        /// There are no comments for RecentPmtDays in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short RecentPmtDays
        {
            get
            {
                short value = _RecentPmtDays;
                OnGetRecentPmtDays(ref value);
                return value;
            }
            set
            {
                if (_RecentPmtDays != value)
                {
                  OnRecentPmtDaysChanging(ref value);
                  ReportPropertyChanging("RecentPmtDays");
                  _RecentPmtDays = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RecentPmtDays");
                  OnRecentPmtDaysChanged();
              }
            }
        }
        private short _RecentPmtDays = 120;
        partial void OnGetRecentPmtDays(ref short value);
        partial void OnRecentPmtDaysChanging(ref short value);
        partial void OnRecentPmtDaysChanged();
    
        /// <summary>
        /// There are no comments for SalesAcctDfltPrecedence in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short SalesAcctDfltPrecedence
        {
            get
            {
                short value = _SalesAcctDfltPrecedence;
                OnGetSalesAcctDfltPrecedence(ref value);
                return value;
            }
            set
            {
                if (_SalesAcctDfltPrecedence != value)
                {
                  OnSalesAcctDfltPrecedenceChanging(ref value);
                  ReportPropertyChanging("SalesAcctDfltPrecedence");
                  _SalesAcctDfltPrecedence = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SalesAcctDfltPrecedence");
                  OnSalesAcctDfltPrecedenceChanged();
              }
            }
        }
        private short _SalesAcctDfltPrecedence = 1;
        partial void OnGetSalesAcctDfltPrecedence(ref short value);
        partial void OnSalesAcctDfltPrecedenceChanging(ref short value);
        partial void OnSalesAcctDfltPrecedenceChanged();
    
        /// <summary>
        /// There are no comments for SameNoRangeForMemo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short SameNoRangeForMemo
        {
            get
            {
                short value = _SameNoRangeForMemo;
                OnGetSameNoRangeForMemo(ref value);
                return value;
            }
            set
            {
                if (_SameNoRangeForMemo != value)
                {
                  OnSameNoRangeForMemoChanging(ref value);
                  ReportPropertyChanging("SameNoRangeForMemo");
                  _SameNoRangeForMemo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SameNoRangeForMemo");
                  OnSameNoRangeForMemoChanged();
              }
            }
        }
        private short _SameNoRangeForMemo = 0;
        partial void OnGetSameNoRangeForMemo(ref short value);
        partial void OnSameNoRangeForMemoChanging(ref short value);
        partial void OnSameNoRangeForMemoChanged();
    
        /// <summary>
        /// There are no comments for SettlementClearingAcctKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? SettlementClearingAcctKey
        {
            get
            {
                int? value = _SettlementClearingAcctKey;
                OnGetSettlementClearingAcctKey(ref value);
                return value;
            }
            set
            {
                if (_SettlementClearingAcctKey != value)
                {
                  OnSettlementClearingAcctKeyChanging(ref value);
                  ReportPropertyChanging("SettlementClearingAcctKey");
                  _SettlementClearingAcctKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SettlementClearingAcctKey");
                  OnSettlementClearingAcctKeyChanged();
              }
            }
        }
        private int? _SettlementClearingAcctKey;
        partial void OnGetSettlementClearingAcctKey(ref int? value);
        partial void OnSettlementClearingAcctKeyChanging(ref int? value);
        partial void OnSettlementClearingAcctKeyChanged();
    
        /// <summary>
        /// There are no comments for SPerHistRetnt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual short? SPerHistRetnt
        {
            get
            {
                short? value = _SPerHistRetnt;
                OnGetSPerHistRetnt(ref value);
                return value;
            }
            set
            {
                if (_SPerHistRetnt != value)
                {
                  OnSPerHistRetntChanging(ref value);
                  ReportPropertyChanging("SPerHistRetnt");
                  _SPerHistRetnt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SPerHistRetnt");
                  OnSPerHistRetntChanged();
              }
            }
        }
        private short? _SPerHistRetnt = 5;
        partial void OnGetSPerHistRetnt(ref short? value);
        partial void OnSPerHistRetntChanging(ref short? value);
        partial void OnSPerHistRetntChanged();
    
        /// <summary>
        /// There are no comments for STaxSchdKey in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual int? STaxSchdKey
        {
            get
            {
                int? value = _STaxSchdKey;
                OnGetSTaxSchdKey(ref value);
                return value;
            }
            set
            {
                if (_STaxSchdKey != value)
                {
                  OnSTaxSchdKeyChanging(ref value);
                  ReportPropertyChanging("STaxSchdKey");
                  _STaxSchdKey = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("STaxSchdKey");
                  OnSTaxSchdKeyChanged();
              }
            }
        }
        private int? _STaxSchdKey;
        partial void OnGetSTaxSchdKey(ref int? value);
        partial void OnSTaxSchdKeyChanging(ref int? value);
        partial void OnSTaxSchdKeyChanged();
    
        /// <summary>
        /// There are no comments for StmtMsg in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string StmtMsg
        {
            get
            {
                string value = _StmtMsg;
                OnGetStmtMsg(ref value);
                return value;
            }
            set
            {
                if (_StmtMsg != value)
                {
                  OnStmtMsgChanging(ref value);
                  ReportPropertyChanging("StmtMsg");
                  _StmtMsg = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("StmtMsg");
                  OnStmtMsgChanged();
              }
            }
        }
        private string _StmtMsg;
        partial void OnGetStmtMsg(ref string value);
        partial void OnStmtMsgChanging(ref string value);
        partial void OnStmtMsgChanged();
    
        /// <summary>
        /// There are no comments for TrackDelInvc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short TrackDelInvc
        {
            get
            {
                short value = _TrackDelInvc;
                OnGetTrackDelInvc(ref value);
                return value;
            }
            set
            {
                if (_TrackDelInvc != value)
                {
                  OnTrackDelInvcChanging(ref value);
                  ReportPropertyChanging("TrackDelInvc");
                  _TrackDelInvc = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TrackDelInvc");
                  OnTrackDelInvcChanged();
              }
            }
        }
        private short _TrackDelInvc = 0;
        partial void OnGetTrackDelInvc(ref short value);
        partial void OnTrackDelInvcChanging(ref short value);
        partial void OnTrackDelInvcChanged();
    
        /// <summary>
        /// There are no comments for TrackRetntRecvbl in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short TrackRetntRecvbl
        {
            get
            {
                short value = _TrackRetntRecvbl;
                OnGetTrackRetntRecvbl(ref value);
                return value;
            }
            set
            {
                if (_TrackRetntRecvbl != value)
                {
                  OnTrackRetntRecvblChanging(ref value);
                  ReportPropertyChanging("TrackRetntRecvbl");
                  _TrackRetntRecvbl = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TrackRetntRecvbl");
                  OnTrackRetntRecvblChanged();
              }
            }
        }
        private short _TrackRetntRecvbl = 0;
        partial void OnGetTrackRetntRecvbl(ref short value);
        partial void OnTrackRetntRecvblChanging(ref short value);
        partial void OnTrackRetntRecvblChanged();
    
        /// <summary>
        /// There are no comments for TrackSTaxOnSales in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short TrackSTaxOnSales
        {
            get
            {
                short value = _TrackSTaxOnSales;
                OnGetTrackSTaxOnSales(ref value);
                return value;
            }
            set
            {
                if (_TrackSTaxOnSales != value)
                {
                  OnTrackSTaxOnSalesChanging(ref value);
                  ReportPropertyChanging("TrackSTaxOnSales");
                  _TrackSTaxOnSales = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TrackSTaxOnSales");
                  OnTrackSTaxOnSalesChanged();
              }
            }
        }
        private short _TrackSTaxOnSales = 1;
        partial void OnGetTrackSTaxOnSales(ref short value);
        partial void OnTrackSTaxOnSalesChanging(ref short value);
        partial void OnTrackSTaxOnSalesChanged();
    
        /// <summary>
        /// There are no comments for UnlockAllFuturePer in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short UnlockAllFuturePer
        {
            get
            {
                short value = _UnlockAllFuturePer;
                OnGetUnlockAllFuturePer(ref value);
                return value;
            }
            set
            {
                if (_UnlockAllFuturePer != value)
                {
                  OnUnlockAllFuturePerChanging(ref value);
                  ReportPropertyChanging("UnlockAllFuturePer");
                  _UnlockAllFuturePer = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UnlockAllFuturePer");
                  OnUnlockAllFuturePerChanged();
              }
            }
        }
        private short _UnlockAllFuturePer = 0;
        partial void OnGetUnlockAllFuturePer(ref short value);
        partial void OnUnlockAllFuturePerChanging(ref short value);
        partial void OnUnlockAllFuturePerChanged();
    
        /// <summary>
        /// There are no comments for UpdateCounter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int UpdateCounter
        {
            get
            {
                int value = _UpdateCounter;
                OnGetUpdateCounter(ref value);
                return value;
            }
            set
            {
                if (_UpdateCounter != value)
                {
                  OnUpdateCounterChanging(ref value);
                  ReportPropertyChanging("UpdateCounter");
                  _UpdateCounter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UpdateCounter");
                  OnUpdateCounterChanged();
              }
            }
        }
        private int _UpdateCounter = 0;
        partial void OnGetUpdateCounter(ref int value);
        partial void OnUpdateCounterChanging(ref int value);
        partial void OnUpdateCounterChanged();
    
        /// <summary>
        /// There are no comments for UseMultCurr in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short UseMultCurr
        {
            get
            {
                short value = _UseMultCurr;
                OnGetUseMultCurr(ref value);
                return value;
            }
            set
            {
                if (_UseMultCurr != value)
                {
                  OnUseMultCurrChanging(ref value);
                  ReportPropertyChanging("UseMultCurr");
                  _UseMultCurr = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UseMultCurr");
                  OnUseMultCurrChanged();
              }
            }
        }
        private short _UseMultCurr = 0;
        partial void OnGetUseMultCurr(ref short value);
        partial void OnUseMultCurrChanging(ref short value);
        partial void OnUseMultCurrChanged();
    
        /// <summary>
        /// There are no comments for UseNationalAccts in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short UseNationalAccts
        {
            get
            {
                short value = _UseNationalAccts;
                OnGetUseNationalAccts(ref value);
                return value;
            }
            set
            {
                if (_UseNationalAccts != value)
                {
                  OnUseNationalAcctsChanging(ref value);
                  ReportPropertyChanging("UseNationalAccts");
                  _UseNationalAccts = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UseNationalAccts");
                  OnUseNationalAcctsChanged();
              }
            }
        }
        private short _UseNationalAccts = 0;
        partial void OnGetUseNationalAccts(ref short value);
        partial void OnUseNationalAcctsChanging(ref short value);
        partial void OnUseNationalAcctsChanged();
    
        /// <summary>
        /// There are no comments for UseSper in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short UseSper
        {
            get
            {
                short value = _UseSper;
                OnGetUseSper(ref value);
                return value;
            }
            set
            {
                if (_UseSper != value)
                {
                  OnUseSperChanging(ref value);
                  ReportPropertyChanging("UseSper");
                  _UseSper = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UseSper");
                  OnUseSperChanged();
              }
            }
        }
        private short _UseSper = 0;
        partial void OnGetUseSper(ref short value);
        partial void OnUseSperChanging(ref short value);
        partial void OnUseSperChanged();
    
        /// <summary>
        /// There are no comments for WarnForUnapplPmt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual short WarnForUnapplPmt
        {
            get
            {
                short value = _WarnForUnapplPmt;
                OnGetWarnForUnapplPmt(ref value);
                return value;
            }
            set
            {
                if (_WarnForUnapplPmt != value)
                {
                  OnWarnForUnapplPmtChanging(ref value);
                  ReportPropertyChanging("WarnForUnapplPmt");
                  _WarnForUnapplPmt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("WarnForUnapplPmt");
                  OnWarnForUnapplPmtChanged();
              }
            }
        }
        private short _WarnForUnapplPmt = 0;
        partial void OnGetWarnForUnapplPmt(ref short value);
        partial void OnWarnForUnapplPmtChanging(ref short value);
        partial void OnWarnForUnapplPmtChanged();

        #endregion
    }

}

namespace Net4Sage.DataAccessModel
{

    #region ItemTrackMeth

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.ItemTrackMeth in the schema.
    /// </summary>
    [EdmEnumTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="ItemTrackMeth")]
    [DataContract]
    public enum ItemTrackMeth : short
    {
    
        /// <summary>
        /// There are no comments for ItemTrackMeth.None in the schema.
        /// </summary>
        [EnumMember]
        None = 0,    
        /// <summary>
        /// There are no comments for ItemTrackMeth.Lot in the schema.
        /// </summary>
        [EnumMember]
        Lot = 1,    
        /// <summary>
        /// There are no comments for ItemTrackMeth.Serial in the schema.
        /// </summary>
        [EnumMember]
        Serial = 2,    
        /// <summary>
        /// There are no comments for ItemTrackMeth.Both in the schema.
        /// </summary>
        [EnumMember]
        Both = 3
    }
    #endregion

    #region BatchTypes

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.BatchTypes in the schema.
    /// </summary>
    [EdmEnumTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="BatchTypes")]
    [DataContract]
    public enum BatchTypes : int
    {
    
        /// <summary>
        /// There are no comments for BatchTypes.GeneralJournals in the schema.
        /// </summary>
        [EnumMember]
        GeneralJournals = 301,    
        /// <summary>
        /// There are no comments for BatchTypes.PaymentInvoiceAppls in the schema.
        /// </summary>
        [EnumMember]
        PaymentInvoiceAppls = 504,    
        /// <summary>
        /// There are no comments for BatchTypes.Invoices in the schema.
        /// </summary>
        [EnumMember]
        Invoices = 501
    }
    #endregion

    #region GLAcctStatus

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.GLAcctStatus in the schema.
    /// </summary>
    [EdmEnumTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="GLAcctStatus")]
    [DataContract]
    public enum GLAcctStatus : short
    {
    
        /// <summary>
        /// There are no comments for GLAcctStatus.Active in the schema.
        /// </summary>
        [EnumMember]
        Active = 1,    
        /// <summary>
        /// There are no comments for GLAcctStatus.Inactive in the schema.
        /// </summary>
        [EnumMember]
        Inactive = 2,    
        /// <summary>
        /// There are no comments for GLAcctStatus.Erased in the schema.
        /// </summary>
        [EnumMember]
        Erased = 3
    }
    #endregion

    #region GLAcctPostingType

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.GLAcctPostingType in the schema.
    /// </summary>
    [EdmEnumTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="GLAcctPostingType")]
    [DataContract]
    public enum GLAcctPostingType : short
    {
    
        /// <summary>
        /// There are no comments for GLAcctPostingType.Financial in the schema.
        /// </summary>
        [EnumMember]
        Financial = 1,    
        /// <summary>
        /// There are no comments for GLAcctPostingType.Stadistic in the schema.
        /// </summary>
        [EnumMember]
        Stadistic = 2,    
        /// <summary>
        /// There are no comments for GLAcctPostingType.Both in the schema.
        /// </summary>
        [EnumMember]
        Both = 3
    }
    #endregion

    #region GLAcctCurrRestriction

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.GLAcctCurrRestriction in the schema.
    /// </summary>
    [EdmEnumTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="GLAcctCurrRestriction")]
    [DataContract]
    public enum GLAcctCurrRestriction : short
    {
    
        /// <summary>
        /// There are no comments for GLAcctCurrRestriction.OnlyLocal in the schema.
        /// </summary>
        [EnumMember]
        OnlyLocal = 1,    
        /// <summary>
        /// There are no comments for GLAcctCurrRestriction.ExpForain in the schema.
        /// </summary>
        [EnumMember]
        ExpForain = 2,    
        /// <summary>
        /// There are no comments for GLAcctCurrRestriction.Any in the schema.
        /// </summary>
        [EnumMember]
        Any = 3
    }
    #endregion

    #region JournalOffsetPostType

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.JournalOffsetPostType in the schema.
    /// </summary>
    [EdmEnumTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="JournalOffsetPostType")]
    [DataContract]
    public enum JournalOffsetPostType : short
    {
    
        /// <summary>
        /// There are no comments for JournalOffsetPostType.Debit in the schema.
        /// </summary>
        [EnumMember]
        Debit = 1,    
        /// <summary>
        /// There are no comments for JournalOffsetPostType.Credit in the schema.
        /// </summary>
        [EnumMember]
        Credit = 2
    }
    #endregion

    #region GeneralJournalType

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.GeneralJournalType in the schema.
    /// </summary>
    [EdmEnumTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="GeneralJournalType")]
    [DataContract]
    public enum GeneralJournalType : short
    {
    
        /// <summary>
        /// There are no comments for GeneralJournalType.Standard in the schema.
        /// </summary>
        [EnumMember]
        Standard = 1,    
        /// <summary>
        /// There are no comments for GeneralJournalType.Transaction in the schema.
        /// </summary>
        [EnumMember]
        Transaction = 2
    }
    #endregion

    #region JournalStatus

    /// <summary>
    /// There are no comments for Net4Sage.DataAccessModel.JournalStatus in the schema.
    /// </summary>
    [EdmEnumTypeAttribute(NamespaceName="Net4Sage.DataAccessModel", Name="JournalStatus")]
    [DataContract]
    public enum JournalStatus : short
    {
    
        /// <summary>
        /// There are no comments for JournalStatus.Balance in the schema.
        /// </summary>
        [EnumMember]
        Balance = 1,    
        /// <summary>
        /// There are no comments for JournalStatus.Desbalance in the schema.
        /// </summary>
        [EnumMember]
        Desbalance = 2
    }
    #endregion

}
